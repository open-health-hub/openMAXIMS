//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.painreviewdialog;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbDepthLookup();
	abstract protected void defaultcmbDepthLookupValue();
	abstract protected void bindcmbProgressionLookup();
	abstract protected void defaultcmbProgressionLookupValue();
	abstract protected void bindcmbOnsetLookup();
	abstract protected void defaultcmbOnsetLookupValue();
	abstract protected void bindcmbTypeLookup();
	abstract protected void defaultcmbTypeLookupValue();
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb10Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb8Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb7Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb6Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb5Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb4Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb3Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb2Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb1Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb9Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImb11Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbDepthValueSet(Object value);
	abstract protected void oncmbProgressionValueSet(Object value);
	abstract protected void oncmbOnsetValueSet(Object value);
	abstract protected void oncmbTypeValueSet(Object value);
	abstract protected void onBCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBSaveClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.imb10().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb10Click();
			}
		});
		this.form.imb8().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb8Click();
			}
		});
		this.form.imb7().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb7Click();
			}
		});
		this.form.imb6().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb6Click();
			}
		});
		this.form.imb5().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb5Click();
			}
		});
		this.form.imb4().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb4Click();
			}
		});
		this.form.imb3().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb3Click();
			}
		});
		this.form.imb2().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb2Click();
			}
		});
		this.form.imb1().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb1Click();
			}
		});
		this.form.imb9().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb9Click();
			}
		});
		this.form.imb11().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImb11Click();
			}
		});
		this.form.cmbDepth().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDepthValueSet(value);
			}
		});
		this.form.cmbProgression().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbProgressionValueSet(value);
			}
		});
		this.form.cmbOnset().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOnsetValueSet(value);
			}
		});
		this.form.cmbType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTypeValueSet(value);
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBSaveClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbDepthLookup();
		bindcmbProgressionLookup();
		bindcmbOnsetLookup();
		bindcmbTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbDepthLookup();
		bindcmbProgressionLookup();
		bindcmbOnsetLookup();
		bindcmbTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbDepthLookupValue();
		defaultcmbProgressionLookupValue();
		defaultcmbOnsetLookupValue();
		defaultcmbTypeLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
