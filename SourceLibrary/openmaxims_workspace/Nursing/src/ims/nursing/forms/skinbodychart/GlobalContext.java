//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.skinbodychart;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		COE = new COEContext(context);
		Nursing = new NursingContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getYesNoDialogMessageIsNotNull()
		{
			return !cx_CoreYesNoDialogMessage.getValueIsNull(context);
		}
		public String getYesNoDialogMessage()
		{
			return (String)cx_CoreYesNoDialogMessage.getValue(context);
		}
		public void setYesNoDialogMessage(String value)
		{
			cx_CoreYesNoDialogMessage.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreYesNoDialogMessage = new ims.framework.ContextVariable("Core.YesNoDialogMessage", "_cv_Core.YesNoDialogMessage");
		public boolean getCurrentClinicalContactIsNotNull()
		{
			return !cx_CoreCurrentClinicalContact.getValueIsNull(context);
		}
		public ims.core.vo.ClinicalContactShortVo getCurrentClinicalContact()
		{
			return (ims.core.vo.ClinicalContactShortVo)cx_CoreCurrentClinicalContact.getValue(context);
		}
		public void setCurrentClinicalContact(ims.core.vo.ClinicalContactShortVo value)
		{
			cx_CoreCurrentClinicalContact.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentClinicalContact = new ims.framework.ContextVariable("Core.CurrentClinicalContact", "_cvp_Core.CurrentClinicalContact");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getAssessmentIsReadOnlyIsNotNull()
		{
			return !cx_CoreAssessmentIsReadOnly.getValueIsNull(context);
		}
		public Boolean getAssessmentIsReadOnly()
		{
			return (Boolean)cx_CoreAssessmentIsReadOnly.getValue(context);
		}
		public void setAssessmentIsReadOnly(Boolean value)
		{
			cx_CoreAssessmentIsReadOnly.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreAssessmentIsReadOnly = new ims.framework.ContextVariable("Core.AssessmentIsReadOnly", "_cv_Core.AssessmentIsReadOnly");

		private ims.framework.Context context;
	}
	public final class COEContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private COEContext(ims.framework.Context context)
		{
			this.context = context;

			SkinBodyChart = new SkinBodyChartContext(context);
		}
		public final class SkinBodyChartContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private SkinBodyChartContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getGroupsIsNotNull()
			{
				return !cx_COESkinBodyChartGroups.getValueIsNull(context);
			}
			public ims.framework.controls.DrawingControlGroupCollection getGroups()
			{
				return (ims.framework.controls.DrawingControlGroupCollection)cx_COESkinBodyChartGroups.getValue(context);
			}
		public void setGroups(ims.framework.controls.DrawingControlGroupCollection value)
		{
				cx_COESkinBodyChartGroups.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COESkinBodyChartGroups = new ims.framework.ContextVariable("COE.SkinBodyChart.Groups", "_cv_COE.SkinBodyChart.Groups");
			public boolean getReadOnlyAssessmentIsNotNull()
			{
				return !cx_COESkinBodyChartReadOnlyAssessment.getValueIsNull(context);
			}
			public ims.nursing.vo.SkinAssessment getReadOnlyAssessment()
			{
				return (ims.nursing.vo.SkinAssessment)cx_COESkinBodyChartReadOnlyAssessment.getValue(context);
			}
		public void setReadOnlyAssessment(ims.nursing.vo.SkinAssessment value)
		{
				cx_COESkinBodyChartReadOnlyAssessment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COESkinBodyChartReadOnlyAssessment = new ims.framework.ContextVariable("COE.SkinBodyChart.ReadOnlyAssessment", "_cv_COE.SkinBodyChart.ReadOnlyAssessment");
			public boolean getSelectedSkinAssessmentIsNotNull()
			{
				return !cx_COESkinBodyChartSelectedSkinAssessment.getValueIsNull(context);
			}
			public ims.nursing.vo.SkinAssessment getSelectedSkinAssessment()
			{
				return (ims.nursing.vo.SkinAssessment)cx_COESkinBodyChartSelectedSkinAssessment.getValue(context);
			}
		public void setSelectedSkinAssessment(ims.nursing.vo.SkinAssessment value)
		{
				cx_COESkinBodyChartSelectedSkinAssessment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COESkinBodyChartSelectedSkinAssessment = new ims.framework.ContextVariable("COE.SkinBodyChart.SelectedSkinAssessment", "_cv_COE.SkinBodyChart.SelectedSkinAssessment");
			public boolean getSkinAssessmentVOIsNotNull()
			{
				return !cx_COESkinBodyChartSkinAssessmentVO.getValueIsNull(context);
			}
			public ims.nursing.vo.SkinAssessment getSkinAssessmentVO()
			{
				return (ims.nursing.vo.SkinAssessment)cx_COESkinBodyChartSkinAssessmentVO.getValue(context);
			}
		public void setSkinAssessmentVO(ims.nursing.vo.SkinAssessment value)
		{
				cx_COESkinBodyChartSkinAssessmentVO.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COESkinBodyChartSkinAssessmentVO = new ims.framework.ContextVariable("COE.SkinBodyChart.SkinAssessmentVO", "_cv_COE.SkinBodyChart.SkinAssessmentVO");
			public boolean getAreasIsNotNull()
			{
				return !cx_COESkinBodyChartAreas.getValueIsNull(context);
			}
			public ims.framework.controls.DrawingControlAreaCollection getAreas()
			{
				return (ims.framework.controls.DrawingControlAreaCollection)cx_COESkinBodyChartAreas.getValue(context);
			}
		public void setAreas(ims.framework.controls.DrawingControlAreaCollection value)
		{
				cx_COESkinBodyChartAreas.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COESkinBodyChartAreas = new ims.framework.ContextVariable("COE.SkinBodyChart.Areas", "_cv_COE.SkinBodyChart.Areas");
			public boolean getFindingsVOIsNotNull()
			{
				return !cx_COESkinBodyChartFindingsVO.getValueIsNull(context);
			}
			public ims.nursing.vo.SkinAssessmentFindings getFindingsVO()
			{
				return (ims.nursing.vo.SkinAssessmentFindings)cx_COESkinBodyChartFindingsVO.getValue(context);
			}
		public void setFindingsVO(ims.nursing.vo.SkinAssessmentFindings value)
		{
				cx_COESkinBodyChartFindingsVO.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COESkinBodyChartFindingsVO = new ims.framework.ContextVariable("COE.SkinBodyChart.FindingsVO", "_cv_COE.SkinBodyChart.FindingsVO");
			private ims.framework.Context context;
		}

		public boolean getAssessmentScoreIsNotNull()
		{
			return !cx_COEAssessmentScore.getValueIsNull(context);
		}
		public Float getAssessmentScore()
		{
			return (Float)cx_COEAssessmentScore.getValue(context);
		}
		public void setAssessmentScore(Float value)
		{
			cx_COEAssessmentScore.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COEAssessmentScore = new ims.framework.ContextVariable("COE.AssessmentScore", "_cv_COE.AssessmentScore");

		public SkinBodyChartContext SkinBodyChart;
		private ims.framework.Context context;
	}
	public final class NursingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private NursingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getAssessmentComponentIsNotNull()
		{
			return !cx_NursingAssessmentComponent.getValueIsNull(context);
		}
		public ims.nursing.vo.AssessmentComponent getAssessmentComponent()
		{
			return (ims.nursing.vo.AssessmentComponent)cx_NursingAssessmentComponent.getValue(context);
		}

		private ims.framework.ContextVariable cx_NursingAssessmentComponent = new ims.framework.ContextVariable("Nursing.AssessmentComponent", "_cv_Nursing.AssessmentComponent");
		public boolean getAssessmentHeaderInfoIsNotNull()
		{
			return !cx_NursingAssessmentHeaderInfo.getValueIsNull(context);
		}
		public ims.nursing.vo.AssessmentHeaderInfo getAssessmentHeaderInfo()
		{
			return (ims.nursing.vo.AssessmentHeaderInfo)cx_NursingAssessmentHeaderInfo.getValue(context);
		}
		public void setAssessmentHeaderInfo(ims.nursing.vo.AssessmentHeaderInfo value)
		{
			cx_NursingAssessmentHeaderInfo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingAssessmentHeaderInfo = new ims.framework.ContextVariable("Nursing.AssessmentHeaderInfo", "_cv_Nursing.AssessmentHeaderInfo");
		public boolean getAssessmentScoreIsNotNull()
		{
			return !cx_NursingAssessmentScore.getValueIsNull(context);
		}
		public Float getAssessmentScore()
		{
			return (Float)cx_NursingAssessmentScore.getValue(context);
		}
		public void setAssessmentScore(Float value)
		{
			cx_NursingAssessmentScore.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingAssessmentScore = new ims.framework.ContextVariable("Nursing.AssessmentScore", "_cv_Nursing.AssessmentScore");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public COEContext COE;
	public NursingContext Nursing;
}
