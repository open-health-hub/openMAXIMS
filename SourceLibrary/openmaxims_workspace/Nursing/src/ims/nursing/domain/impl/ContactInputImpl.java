//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by John MacEnri using IMS Development Environment (version 1.22 build 41021.1630)
// Copyright (C) 1995-2004 IMS MAXIMS plc. All rights reserved.

package ims.nursing.domain.impl;

import ims.core.clinical.domain.objects.ClinicalNotes;
import ims.core.vo.ClinicalNotesVo;
import ims.core.vo.HcpCollection;
import ims.core.vo.HcpFilter;
import ims.core.vo.HcpLiteVoCollection;
import ims.core.vo.domain.ClinicalNotesVoAssembler;
import ims.core.vo.lookups.HcpDisType;
import ims.domain.exceptions.DomainException;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.impl.DomainImpl;
import ims.admin.domain.HcpAdmin;
import ims.admin.domain.impl.HcpAdminImpl;

public class ContactInputImpl extends DomainImpl implements ims.nursing.domain.ContactInput, ims.domain.impl.Transactional
{
	/**
	* Gets the Clinical Notes Details for the given Clinical Note ID
	*/
	public ims.core.vo.ClinicalNotesVo getClinicalNotes(ims.core.vo.ClinicalNotesVo clinicalNote)
	{
		DomainFactory factory = getDomainFactory();
		ClinicalNotes notes = (ClinicalNotes)factory.getDomainObject(ClinicalNotes.class, clinicalNote.getID_ClinicalNotes());	
		ClinicalNotesVo voNote = ClinicalNotesVoAssembler.create(notes);
		
		return voNote;
	}
	
	/**
	* Saves Clinical Note Details
	*/
	public ClinicalNotesVo saveClinicalNotes(ClinicalNotesVo clinicalNotesVo) throws StaleObjectException 
	{
		if (!clinicalNotesVo.isValidated())
			throw new DomainRuntimeException("This Clinical Note has not been validated");
			
		DomainFactory factory = getDomainFactory();
				
		ClinicalNotes domNotes = ClinicalNotesVoAssembler.extractClinicalNotes(factory, clinicalNotesVo);				
					
		factory.save(domNotes);
				
		return ClinicalNotesVoAssembler.create(domNotes);
				
	}

	public HcpLiteVoCollection listHcpLiteByNameAndDisciplineType(
			String name, HcpDisType discType)
	{
		HcpAdmin hcpAdmin = (HcpAdmin)getDomainImpl(HcpAdminImpl.class);
		return hcpAdmin.listHcpLiteByNameAndDisciplineType(name, discType);
	}

	public HcpCollection listHcps(HcpFilter filter) {
		// TODO Auto-generated method stub
		return null;
	}

}
