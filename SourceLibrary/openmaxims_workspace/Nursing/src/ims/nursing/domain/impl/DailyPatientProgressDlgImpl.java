//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.45 build 2438.15660)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.nursing.domain.impl;

import ims.admin.vo.AppUserVo;
import ims.admin.vo.domain.AppUserVoAssembler;
import ims.assessment.configuration.vo.UserAssessmentRefVo;
import ims.assessment.domain.DPPGroupingsConfig;
import ims.assessment.domain.impl.DPPGroupingsConfigImpl;
import ims.assessment.vo.DPPQuestionGroupShortVoCollection;
import ims.core.configuration.domain.objects.AppUser;
import ims.core.configuration.vo.AppUserRefVo;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;
import ims.nursing.domain.base.impl.BaseDailyPatientProgressDlgImpl;

public class DailyPatientProgressDlgImpl extends BaseDailyPatientProgressDlgImpl
{
	public DPPQuestionGroupShortVoCollection listDPPGroupings(UserAssessmentRefVo userAssessmentRefVo, Boolean status)
	{
		DPPGroupingsConfig implDPPGrouping = (DPPGroupingsConfig) getDomainImpl(DPPGroupingsConfigImpl.class);
		return implDPPGrouping.listDPPGroupings(userAssessmentRefVo, status);
	}

	public AppUserVo getAppUser(AppUserRefVo appUserRefVo)
	{
		if (appUserRefVo == null || appUserRefVo.getID_AppUserIsNotNull())
			throw new CodingRuntimeException("Cannot get AppUserVo for null AppUserRefVo");

		DomainFactory factory = getDomainFactory();
		AppUser doAppUser = (AppUser) factory.getDomainObject(AppUser.class, appUserRefVo.getID_AppUser().intValue());
		return AppUserVoAssembler.create(doAppUser);
	}
}
