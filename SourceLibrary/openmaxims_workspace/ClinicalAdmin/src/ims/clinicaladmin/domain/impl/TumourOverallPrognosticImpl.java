//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 4076.22135)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.clinicaladmin.domain.impl;

import ims.clinicaladmin.domain.base.impl.BaseTumourOverallPrognosticImpl;
import ims.clinicaladmin.vo.TumourGroupVo;
import ims.clinicaladmin.vo.domain.TumourGroupVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.oncology.configuration.domain.objects.TumourGroup;
import ims.oncology.configuration.vo.TumourGroupRefVo;

public class TumourOverallPrognosticImpl extends BaseTumourOverallPrognosticImpl
{

	private static final long serialVersionUID = 1L;

	public TumourGroupVo getGroupForOverallStaging(TumourGroupRefVo voRef)
	{
		if(voRef == null || voRef.getID_TumourGroup()== null)
			throw new DomainRuntimeException("Invalid group");

	    DomainFactory factory = getDomainFactory();
	    TumourGroup domainObject = (TumourGroup) factory.getDomainObject(voRef);
	    return TumourGroupVoAssembler.create(domainObject);
	}

}
