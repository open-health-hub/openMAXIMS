//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Catalin Tomozei using IMS Development Environment (version 1.55 build 2763.22113)
// Copyright (C) 1995-2007 IMS MAXIMS plc. All rights reserved.

package ims.clinicaladmin.domain.impl;

import java.util.List;
import ims.clinicaladmin.domain.base.impl.BaseTumourOtherClassificationImpl;
import ims.clinicaladmin.vo.StagingClassificationVoCollection;
import ims.clinicaladmin.vo.domain.StagingClassificationVoAssembler;
import ims.domain.DomainFactory;

public class TumourOtherClassificationImpl extends BaseTumourOtherClassificationImpl
{

	private static final long serialVersionUID = 1L;

	public StagingClassificationVoCollection listOtherClassification() 
	{
		DomainFactory factory = getDomainFactory();
		String hqlString = "from StagingClassification as sc where sc.isActive is true";
		List collection = factory.find(hqlString);
		return StagingClassificationVoAssembler.createStagingClassificationVoCollectionFromStagingClassification(collection);
	}

}
