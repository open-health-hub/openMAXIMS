//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinicaladmin.forms.specialtyhotlistconfiguration;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Clinical = new ClinicalContext(context);
	}
	public final class ClinicalContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ClinicalContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSpecialtyHotlistConfigurationVoIsNotNull()
		{
			return !cx_ClinicalSpecialtyHotlistConfigurationVo.getValueIsNull(context);
		}
		public ims.vo.ValueObject getSpecialtyHotlistConfigurationVo()
		{
			return (ims.vo.ValueObject)cx_ClinicalSpecialtyHotlistConfigurationVo.getValue(context);
		}
		public void setSpecialtyHotlistConfigurationVo(ims.vo.ValueObject value)
		{
			cx_ClinicalSpecialtyHotlistConfigurationVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalSpecialtyHotlistConfigurationVo = new ims.framework.ContextVariable("Clinical.SpecialtyHotlistConfigurationVo", "_cv_Clinical.SpecialtyHotlistConfigurationVo");
		public boolean getSelectedProceduresIsNotNull()
		{
			return !cx_ClinicalSelectedProcedures.getValueIsNull(context);
		}
		public ims.core.vo.ProcedureLiteVoCollection getSelectedProcedures()
		{
			return (ims.core.vo.ProcedureLiteVoCollection)cx_ClinicalSelectedProcedures.getValue(context);
		}
		public void setSelectedProcedures(ims.core.vo.ProcedureLiteVoCollection value)
		{
			cx_ClinicalSelectedProcedures.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalSelectedProcedures = new ims.framework.ContextVariable("Clinical.SelectedProcedures", "_cv_Clinical.SelectedProcedures");
		public boolean getPMHConfigSearchTypeIsNotNull()
		{
			return !cx_ClinicalPMHConfigSearchType.getValueIsNull(context);
		}
		public String getPMHConfigSearchType()
		{
			return (String)cx_ClinicalPMHConfigSearchType.getValue(context);
		}
		public void setPMHConfigSearchType(String value)
		{
			cx_ClinicalPMHConfigSearchType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalPMHConfigSearchType = new ims.framework.ContextVariable("Clinical.PMHConfigSearchType", "_cv_Clinical.PMHConfigSearchType");

		private ims.framework.Context context;
	}

	public ClinicalContext Clinical;
}
