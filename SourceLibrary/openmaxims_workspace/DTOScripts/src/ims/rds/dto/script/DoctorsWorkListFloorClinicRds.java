//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
//This code is generated, please do not modify it.
//DoctorsWorkListFloorClinicRds.java : Generated by aursache on 27 Aug 2007 09:44.
//Java DTO script

package ims.rds.dto.script;

import java.util.ArrayList;
import ims.rds.dto.*;
import ims.dto.client.Sd_appt_dts;

public final class DoctorsWorkListFloorClinicRds extends IMSReportDataSourceDTO
{
  public DoctorsWorkListFloorClinicRds(ims.dto.DTODomain domain, String seed1, String seed2)
  {
      super(domain);
      SEED_VALUE[0] = seed1;
      SEED_VALUE[1] = seed2;
  }

  //Seeds
  private String[] SEED = new String[] {"SD_APPT_DTS.APPT_ID", "SD_APPT_DTS.APPT_HEAD_ID"};
  private String[] SEED_VALUE = new String[2];

  //User variables declaration
  private String[] IMS_USERVAR = new String[] {"_PKEY_", "_HOSPNUM_", "_EPISODE_"};
  private String[] IMS_USERVAR_ALIAS = new String[] {"_PKEY_", "_HOSPNUM_", "_EPISODE_"};
  private String[] IMS_USERVAR_DESC = new String[] {"__", "__", "__"};
  private ArrayList IMS_USERVAR_VALUE = new ArrayList();

  //Services declarations
  private String[] SD_APPT_DTS = new String[] {"APPT_ID", "APPT_HEAD_ID", "PRFILE_SESS_ID", "PRFILED_SESS_ID", "CONTRACT_ID", "RECIPIENT1", "RECIPIENT2", "RECIPIENT3", "RECIPIENT4", "RECIPIENT5", "RECIPIENT6", "RECIPIENT7", "ATT_STAT", "ATT_STAT_REAS", "PKEY", "SNM", "FNM1", "TITL", "DOB", "HOSPNUM", "SEX", "STM", "ETM", "HCP_SEEN", "APPT_DT", "APPT_STAT", "APPT_STAT_REAS", "PRTY", "MC_ID", "MCMODALITY_ID", "MODID", "MODIDTXT", "MODENRGY", "MODENRGYUNIT", "MODENRGYUNITTXT", "TREATPL_ACT_ID", "ATTND_ASID", "PAT_STAT", "TXCATTYPE", "ATTND_ASTXT", "TXCATTYPETXT", "ATT_TM", "LO_ID", "LO_IDTXT", "REL_APPT_HEAD_ID", "APPT_STATTXT", "ATT_STATTXT", "APPT_CMTS", "ACTIV_ID", "SPEC_CD", "CONT_LOC", "GRP_ID", "SESS_DT", "PRTYTXT", "ACTION_ID", "ACTION_IDTXT", "ACTIVITYTXT", "TRANS_TYP", "FIRST_APPT_ID", "LAST_APPT_ID", "TRANS_TYPTXT", "CLINICFLAG", "PRFILE_SESS_IDTXT", "ARR_TME", "ACT_COMP_FLG", "MC_NM", "CONFIRM_STAT", "CONFIRM_STATTXT", "ACT_CONSULT", "ACT_CONSULTTXT", "REL_APPT_TM", "REL_APPT_STATTXT", "REL_APPT_SESSTXT", "SESS_LCNM", "SESS_INT_LOC", "MOD_ID", "ENERGY_VAL", "UNIT_ID", "CR_ID", "ACTIVITY_ID", "CCS_EPID", "PLOC", "PAT_LOC", "APPINPATSTAT"};
  private String[] SD_APPT_DTS_ALIAS = new String[] {"SD_APPT_DTS.APPT_ID", "SD_APPT_DTS.APPT_HEAD_ID", "SD_APPT_DTS.PRFILE_SESS_ID", "SD_APPT_DTS.PRFILED_SESS_ID", "SD_APPT_DTS.CONTRACT_ID", "SD_APPT_DTS.RECIPIENT1", "SD_APPT_DTS.RECIPIENT2", "SD_APPT_DTS.RECIPIENT3", "SD_APPT_DTS.RECIPIENT4", "SD_APPT_DTS.RECIPIENT5", "SD_APPT_DTS.RECIPIENT6", "SD_APPT_DTS.RECIPIENT7", "SD_APPT_DTS.ATT_STAT", "SD_APPT_DTS.ATT_STAT_REAS", "SD_APPT_DTS.PKEY", "SD_APPT_DTS.SNM", "SD_APPT_DTS.FNM1", "SD_APPT_DTS.TITL", "SD_APPT_DTS.DOB", "SD_APPT_DTS.HOSPNUM", "SD_APPT_DTS.SEX", "SD_APPT_DTS.STM", "SD_APPT_DTS.ETM", "SD_APPT_DTS.HCP_SEEN", "SD_APPT_DTS.APPT_DT", "SD_APPT_DTS.APPT_STAT", "SD_APPT_DTS.APPT_STAT_REAS", "SD_APPT_DTS.PRTY", "SD_APPT_DTS.MC_ID", "SD_APPT_DTS.MCMODALITY_ID", "SD_APPT_DTS.MODID", "SD_APPT_DTS.MODIDTXT", "SD_APPT_DTS.MODENRGY", "SD_APPT_DTS.MODENRGYUNIT", "SD_APPT_DTS.MODENRGYUNITTXT", "SD_APPT_DTS.TREATPL_ACT_ID", "SD_APPT_DTS.ATTND_ASID", "SD_APPT_DTS.PAT_STAT", "SD_APPT_DTS.TXCATTYPE", "SD_APPT_DTS.ATTND_ASTXT", "SD_APPT_DTS.TXCATTYPETXT", "SD_APPT_DTS.ATT_TM", "SD_APPT_DTS.LO_ID", "SD_APPT_DTS.LO_IDTXT", "SD_APPT_DTS.REL_APPT_HEAD_ID", "SD_APPT_DTS.APPT_STATTXT", "SD_APPT_DTS.ATT_STATTXT", "SD_APPT_DTS.APPT_CMTS", "SD_APPT_DTS.ACTIV_ID", "SD_APPT_DTS.SPEC_CD", "SD_APPT_DTS.CONT_LOC", "SD_APPT_DTS.GRP_ID", "SD_APPT_DTS.SESS_DT", "SD_APPT_DTS.PRTYTXT", "SD_APPT_DTS.ACTION_ID", "SD_APPT_DTS.ACTION_IDTXT", "SD_APPT_DTS.ACTIVITYTXT", "SD_APPT_DTS.TRANS_TYP", "SD_APPT_DTS.FIRST_APPT_ID", "SD_APPT_DTS.LAST_APPT_ID", "SD_APPT_DTS.TRANS_TYPTXT", "SD_APPT_DTS.CLINICFLAG", "SD_APPT_DTS.PRFILE_SESS_IDTXT", "SD_APPT_DTS.ARR_TME", "SD_APPT_DTS.ACT_COMP_FLG", "SD_APPT_DTS.MC_NM", "SD_APPT_DTS.CONFIRM_STAT", "SD_APPT_DTS.CONFIRM_STATTXT", "SD_APPT_DTS.ACT_CONSULT", "SD_APPT_DTS.ACT_CONSULTTXT", "SD_APPT_DTS.REL_APPT_TM", "SD_APPT_DTS.REL_APPT_STATTXT", "SD_APPT_DTS.REL_APPT_SESSTXT", "SD_APPT_DTS.SESS_LCNM", "SD_APPT_DTS.SESS_INT_LOC", "SD_APPT_DTS.MOD_ID", "SD_APPT_DTS.ENERGY_VAL", "SD_APPT_DTS.UNIT_ID", "SD_APPT_DTS.CR_ID", "SD_APPT_DTS.ACTIVITY_ID", "SD_APPT_DTS.CCS_EPID", "SD_APPT_DTS.PLOC", "SD_APPT_DTS.PAT_LOC", "SD_APPT_DTS.APPINPATSTAT"};
  private String[] SD_APPT_DTS_ATTR_DESC = new String[] {};
  private ArrayList SD_APPT_DTS_VALUE = new ArrayList();
  private ArrayList SD_APPT_DTS_FILTERS = new ArrayList();
  private ims.dto.client.Sd_appt_dts sd_appt_dtsRds = null;

  //Init default values
  private void InitDefaultValues()
  {
      int i;

      sd_appt_dtsRds = (Sd_appt_dts)domain.getDTOInstance(Sd_appt_dts.class);

      //init user variables
      IMS_USERVAR_VALUE.clear();
      for(i = 0; i < 3; i++)
      {
          IMS_USERVAR_VALUE.add(new ArrayList());

          for(int j = 0; j < SEED.length; j++)
          {
              if(SEED[j].equalsIgnoreCase(IMS_USERVAR[i]) == true)
              {
                  ArrayList al = (ArrayList)IMS_USERVAR_VALUE.get(i);
                  al.add(SEED_VALUE[j]);
                  IMS_USERVAR_VALUE.set(i,al);
                  break;
              }
          }
      }

      //init variables
      SD_APPT_DTS_VALUE.clear();
      for(i = 0; i < 84; i++)
          SD_APPT_DTS_VALUE.add(new ArrayList());

      int ix = 0;
      ix = GetIndexByName("SD_APPT_DTS.APPT_ID", SD_APPT_DTS);
      ArrayList al = (ArrayList)SD_APPT_DTS_VALUE.get(ix);
      al.add(SEED_VALUE[GetIndexByName("SD_APPT_DTS.APPT_ID", SEED)]);
      SD_APPT_DTS_VALUE.set(ix,al);
      ix = GetIndexByName("SD_APPT_DTS.APPT_HEAD_ID", SD_APPT_DTS);
      al = (ArrayList)SD_APPT_DTS_VALUE.get(ix);
      al.add(SEED_VALUE[GetIndexByName("SD_APPT_DTS.APPT_HEAD_ID", SEED)]);
      SD_APPT_DTS_VALUE.set(ix,al);
  }

  public void SetSeeds(String seed1, String seed2)
  {
      SEED_VALUE[0] = seed1;
      SEED_VALUE[1] = seed2;
  }

  private boolean _internalGetData()
  {
      boolean bRet = true;

      //clear internal collections
      Clear();

      //init the default values first
      InitDefaultValues();

      //GET SD_APPT_DTS
      SD_APPT_DTS_FILTERS.clear();
      SD_APPT_DTS_FILTERS.add("APPT_ID");
      SD_APPT_DTS_FILTERS.add("APPT_HEAD_ID");
      bRet = CallService(sd_appt_dtsRds, "SD_APPT_DTS", "GET", SD_APPT_DTS, SD_APPT_DTS_ATTR_DESC, SD_APPT_DTS_VALUE, SD_APPT_DTS_FILTERS, false);

      return bRet;
  }

  public String GetData()
  {
      boolean bRet = _internalGetData();

      //build results
      BuildResult(SD_APPT_DTS_ALIAS, SD_APPT_DTS_ATTR_DESC, SD_APPT_DTS_VALUE);
      BuildResult(IMS_USERVAR_ALIAS, IMS_USERVAR_DESC, IMS_USERVAR_VALUE);

      return Serialize();
  }

  public String GetStructuredData(String sName)
  {
      boolean bRet = _internalGetData();

      //build results
      BuildStructuredResult("SD_APPT_DTS", SD_APPT_DTS_ALIAS, SD_APPT_DTS_ATTR_DESC, SD_APPT_DTS_VALUE);
      BuildStructuredResult("IMS_USERVAR", IMS_USERVAR_ALIAS, IMS_USERVAR_DESC, IMS_USERVAR_VALUE);

      return SerializeStructuredData(sName);
  }
}
