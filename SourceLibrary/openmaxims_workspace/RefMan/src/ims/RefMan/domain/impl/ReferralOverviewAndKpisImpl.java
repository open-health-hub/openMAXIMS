// This code was generated by Cristian Belciug using IMS Development Environment (version 1.65 build 3201.21898)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.domain.impl;

import ims.RefMan.domain.base.impl.BaseReferralOverviewAndKpisImpl;
import ims.RefMan.domain.objects.CatsReferral;
import ims.RefMan.vo.CatsReferralListVo;
import ims.RefMan.vo.CatsReferralRefVo;
import ims.RefMan.vo.domain.CatsReferralListVoAssembler;
import ims.core.admin.vo.CareContextRefVo;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.icp.vo.PatientICPFullVo;
import ims.icp.vo.domain.PatientICPFullVoAssembler;
import ims.icps.instantiation.domain.objects.PatientICP;

import java.util.ArrayList;
import java.util.List;

public class ReferralOverviewAndKpisImpl extends BaseReferralOverviewAndKpisImpl
{

	private static final long serialVersionUID = 1L;

	public CatsReferralListVo getCatsReferral(CatsReferralRefVo catsReferralRef) 
	{
		if(catsReferralRef == null && catsReferralRef.getID_CatsReferral() == null)
			throw new DomainRuntimeException("CatsReferralRefVo not provided for get call. ");
		
		DomainFactory factory = getDomainFactory();
		
		CatsReferral doCatsReferral = (CatsReferral) factory.getDomainObject(CatsReferral.class, catsReferralRef.getID_CatsReferral());
		
		return CatsReferralListVoAssembler.create(doCatsReferral);
	}

	public PatientICPFullVo getAssociatedICP(CareContextRefVo careContextRefVo) 
	{
		if(careContextRefVo == null && careContextRefVo.getID_CareContext() == null)
			throw new DomainRuntimeException("careContextRefVo not provided for get call. ");
		
		DomainFactory factory = getDomainFactory();

		ArrayList markers = new ArrayList();
		ArrayList values = new ArrayList();
		StringBuffer condStr = new StringBuffer();
		String hql = " from PatientICP picp "; 
		String andStr = " ";
		
		condStr.append(andStr + " picp.careContext.id = :ccID" );
		markers.add("ccID");
		values.add(careContextRefVo.getID_CareContext());		
		andStr = " and ";
		
		if(andStr.equals(" and "))
			hql += " where ";
		
		hql += condStr.toString();
		List icpList = factory.find(hql,markers,values);
		if (icpList.size() > 0)
			return PatientICPFullVoAssembler.create((PatientICP)icpList.get(0));
		else
			return null;
	}
}
