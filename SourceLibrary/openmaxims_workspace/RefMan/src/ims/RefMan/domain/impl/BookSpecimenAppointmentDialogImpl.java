// This code was generated by Daniel Laffan using IMS Development Environment (version 1.65 build 3225.30788)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.domain.impl;

import ims.RefMan.domain.base.impl.BaseBookSpecimenAppointmentDialogImpl;
import ims.RefMan.vo.CatsReferralRefVo;
import ims.domain.DomainFactory;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;
import ims.ocrr.orderingresults.domain.objects.SpecimenWorkListItem;
import ims.ocrr.vo.SpecimenWorkListItemLiteVoCollection;
import ims.ocrr.vo.domain.SpecimenWorkListItemLiteVoAssembler;
import ims.scheduling.domain.DirectoryOfServiceAdmin;
import ims.scheduling.domain.SessionAdmin;
import ims.scheduling.domain.impl.DirectoryOfServiceAdminImpl;
import ims.scheduling.domain.impl.SessionAdminImpl;

import java.util.Iterator;
import java.util.List;

public class BookSpecimenAppointmentDialogImpl extends BaseBookSpecimenAppointmentDialogImpl
{
	private static final long serialVersionUID = 1L;

	/**
	* listLocationLite
	*/
	public ims.core.vo.LocationLiteVoCollection listLocationLite()
	{
		DirectoryOfServiceAdmin impl = (DirectoryOfServiceAdmin) getDomainImpl(DirectoryOfServiceAdminImpl.class);
		return impl.listLocationLiteByName(null);
	}

	public void saveWorkListItems(SpecimenWorkListItemLiteVoCollection workListItems) throws StaleObjectException
	{
		if(workListItems == null)
			throw new CodingRuntimeException("workListItems is null in method saveWorkListItems");
		
		DomainFactory factory = getDomainFactory();
		
		List doWorkListItems = SpecimenWorkListItemLiteVoAssembler.extractSpecimenWorkListItemList(factory, workListItems);
		if(doWorkListItems != null && doWorkListItems.size() > 0)
		{
			Iterator it = doWorkListItems.iterator();
			while(it.hasNext())
			{
				SpecimenWorkListItem doWorkListItem =   (SpecimenWorkListItem)it.next();
				factory.save(doWorkListItem);
			}
		}
	}

	public void updateCatsReferralAdditionalInvStatus(CatsReferralRefVo catsReferral) throws StaleObjectException
	{
		SessionAdmin impl = (SessionAdmin) getDomainImpl(SessionAdminImpl.class);
		impl.updateCatsReferralAdditionalInvStatus(catsReferral);
	}
}
