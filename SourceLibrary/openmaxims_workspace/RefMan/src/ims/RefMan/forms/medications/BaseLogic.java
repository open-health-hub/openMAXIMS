// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.medications;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.RefMan.domain.Medications.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.RefMan.domain.Medications domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void oncmbCommencedByValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.cmbCommencedBy().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.MedciationCommencedDiscontinuedType existingInstance = (ims.core.vo.lookups.MedciationCommencedDiscontinuedType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbCommencedByLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.MedciationCommencedDiscontinuedType)
		{
			ims.core.vo.lookups.MedciationCommencedDiscontinuedType instance = (ims.core.vo.lookups.MedciationCommencedDiscontinuedType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbCommencedByLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.MedciationCommencedDiscontinuedType existingInstance = (ims.core.vo.lookups.MedciationCommencedDiscontinuedType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.cmbCommencedBy().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbCommencedByLookup()
	{
		this.form.cmbCommencedBy().clear();
		ims.core.vo.lookups.MedciationCommencedDiscontinuedTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getMedciationCommencedDiscontinuedType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.cmbCommencedBy().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbCommencedByLookupValue(int id)
	{
		ims.core.vo.lookups.MedciationCommencedDiscontinuedType instance = ims.core.vo.lookups.LookupHelper.getMedciationCommencedDiscontinuedTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.cmbCommencedBy().setValue(instance);
	}
	protected final void defaultcmbCommencedByLookupValue()
	{
		this.form.cmbCommencedBy().setValue((ims.core.vo.lookups.MedciationCommencedDiscontinuedType)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.MedciationCommencedDiscontinuedType.class, engine.getFormName().getID(), ims.core.vo.lookups.MedciationCommencedDiscontinuedType.TYPE_ID));
	}
	protected final void oncmbFrequencyValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.cmbFrequency().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.MedicationFrequency existingInstance = (ims.core.vo.lookups.MedicationFrequency)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbFrequencyLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.MedicationFrequency)
		{
			ims.core.vo.lookups.MedicationFrequency instance = (ims.core.vo.lookups.MedicationFrequency)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbFrequencyLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.MedicationFrequency existingInstance = (ims.core.vo.lookups.MedicationFrequency)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.cmbFrequency().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbFrequencyLookup()
	{
		this.form.cmbFrequency().clear();
		ims.core.vo.lookups.MedicationFrequencyCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getMedicationFrequency(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.cmbFrequency().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbFrequencyLookupValue(int id)
	{
		ims.core.vo.lookups.MedicationFrequency instance = ims.core.vo.lookups.LookupHelper.getMedicationFrequencyInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.cmbFrequency().setValue(instance);
	}
	protected final void defaultcmbFrequencyLookupValue()
	{
		this.form.cmbFrequency().setValue((ims.core.vo.lookups.MedicationFrequency)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.MedicationFrequency.class, engine.getFormName().getID(), ims.core.vo.lookups.MedicationFrequency.TYPE_ID));
	}
	protected final void oncmbSourceValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.cmbSource().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.SourceofInformation existingInstance = (ims.core.vo.lookups.SourceofInformation)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbSourceLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.SourceofInformation)
		{
			ims.core.vo.lookups.SourceofInformation instance = (ims.core.vo.lookups.SourceofInformation)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbSourceLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.SourceofInformation existingInstance = (ims.core.vo.lookups.SourceofInformation)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.cmbSource().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbSourceLookup()
	{
		this.form.cmbSource().clear();
		ims.core.vo.lookups.SourceofInformationCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getSourceofInformation(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.cmbSource().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbSourceLookupValue(int id)
	{
		ims.core.vo.lookups.SourceofInformation instance = ims.core.vo.lookups.LookupHelper.getSourceofInformationInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.cmbSource().setValue(instance);
	}
	protected final void defaultcmbSourceLookupValue()
	{
		this.form.cmbSource().setValue((ims.core.vo.lookups.SourceofInformation)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.SourceofInformation.class, engine.getFormName().getID(), ims.core.vo.lookups.SourceofInformation.TYPE_ID));
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.RefMan.domain.Medications domain;
}
