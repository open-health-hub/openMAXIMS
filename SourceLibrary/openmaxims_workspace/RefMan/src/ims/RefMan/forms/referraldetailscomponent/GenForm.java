// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referraldetailscomponent;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbUrgencyComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.lookups.ReferralUrgency value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.lookups.ReferralUrgency getValue()
		{
			return (ims.RefMan.vo.lookups.ReferralUrgency)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.lookups.ReferralUrgency value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbCategoryComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.lookups.CatsReferralCategory value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.lookups.CatsReferralCategory value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.lookups.CatsReferralCategory value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.lookups.CatsReferralCategory value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.lookups.CatsReferralCategory value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.lookups.CatsReferralCategory getValue()
		{
			return (ims.RefMan.vo.lookups.CatsReferralCategory)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.lookups.CatsReferralCategory value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbSORComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.SourceOfReferral value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.SourceOfReferral getValue()
		{
			return (ims.core.vo.lookups.SourceOfReferral)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.SourceOfReferral value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbLanguageComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.Language value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.Language value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.Language value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.Language value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.Language value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.Language getValue()
		{
			return (ims.core.vo.lookups.Language)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.Language value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.scheduling.vo.lookups.ApptTransportType value)
		{
			return super.control.removeRow(value);
		}
		public ims.scheduling.vo.lookups.ApptTransportType getValue()
		{
			return (ims.scheduling.vo.lookups.ApptTransportType)super.control.getValue();
		}
		public void setValue(ims.scheduling.vo.lookups.ApptTransportType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbNearestTreatmentCentreLocationComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.admin.vo.ConfigLocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.admin.vo.ConfigLocationLiteVo getValue()
		{
			return (ims.admin.vo.ConfigLocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.admin.vo.ConfigLocationLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbContractComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo getValue()
		{
			return (ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbLocationComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.LocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.LocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.LocationLiteVo getValue()
		{
			return (ims.core.vo.LocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.LocationLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbServiceComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ServiceLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ServiceLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ServiceLiteVo getValue()
		{
			return (ims.core.vo.ServiceLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ServiceLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbClinicTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ServiceFunctionLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ServiceFunctionLiteVo getValue()
		{
			return (ims.core.vo.ServiceFunctionLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ServiceFunctionLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class qmbProcedureComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ProcedureLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ProcedureLiteVo getValue()
		{
			return (ims.core.vo.ProcedureLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ProcedureLiteVo value)
		{
			super.control.setValue(value);
		}
		public void setEditedText(String text)
		{
			super.control.setEditedText(text);
		}
		public String getEditedText()
		{
			return super.control.getEditedText();
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.RefMan.vo.CatsReferralRefVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.RefMan.vo.CatsReferralRefVo' of the global context variable 'RefMan.CatsReferral' is not supported.");
		if(!context.isValidContextType(Boolean.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'Boolean' of the global context variable 'RefMan.IsProviderCancellation' is not supported.");
		if(!context.isValidContextType(ims.core.vo.EpisodeofCareShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.EpisodeofCareShortVo' of the global context variable 'Core.EpisodeofCareShort' is not supported.");
		if(!context.isValidContextType(ims.core.vo.lookups.ReferralManagementContractType.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.lookups.ReferralManagementContractType' of the global context variable 'RefMan.ReferralContractTypeForPatient' is not supported.");
		if(!context.isValidContextType(Boolean.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'Boolean' of the global context variable 'RefMan.DiagnosticReferralForApplication' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(824, 576);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Panel Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 400, 143, 416, 124, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,"", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 400, 5, 416, 136, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,"", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 8, 269, 808, 168, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Referrer", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 5, 384, 262, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Service Details", new Integer(2), ""}));

		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 160, 488, 240, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ims.framework.FormUiLogic m_authoringControlForm = loader.loadComponent(102256, appForm, startControlID * 10 + 1000, anchoringHelper5.getSize(), instance1, startTabIndex.intValue() + 2066, skipContextValidation);
		//ims.framework.Control m_authoringControlControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(160), new Integer(488), new Integer(240), new Integer(20), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 2066), m_authoringControlForm, instance1 } );
		ims.framework.Control m_authoringControlControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1005),  new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 2066), m_authoringControlForm, instance1, Boolean.FALSE } );
		super.addControl(m_authoringControlControl);
		Menu[] menus1 = m_authoringControlForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}
		ims.framework.CustomComponent instance2 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 160, 288, 232, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ims.framework.FormUiLogic m_ccReferringConsultantForm = loader.loadComponent(102256, appForm, startControlID * 10 + 2000, anchoringHelper6.getSize(), instance2, startTabIndex.intValue() + 1038, skipContextValidation);
		//ims.framework.Control m_ccReferringConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(160), new Integer(288), new Integer(232), new Integer(20), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 1038), m_ccReferringConsultantForm, instance2 } );
		ims.framework.Control m_ccReferringConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1007),  new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 1038), m_ccReferringConsultantForm, instance2, Boolean.FALSE } );
		super.addControl(m_ccReferringConsultantControl);
		Menu[] menus2 = m_ccReferringConsultantForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus2.length; x++)
		{
			form.registerMenu(menus2[x]);
		}
		ims.framework.CustomComponent instance3 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 136, 126, 240, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ims.framework.FormUiLogic m_ccConsultantForm = loader.loadComponent(102256, appForm, startControlID * 10 + 3000, anchoringHelper7.getSize(), instance3, startTabIndex.intValue() + 4, skipContextValidation);
		//ims.framework.Control m_ccConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(136), new Integer(126), new Integer(240), new Integer(20), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 4), m_ccConsultantForm, instance3 } );
		ims.framework.Control m_ccConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1009),  new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 4), m_ccConsultantForm, instance3, Boolean.FALSE } );
		super.addControl(m_ccConsultantControl);
		Menu[] menus3 = m_ccConsultantForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus3.length; x++)
		{
			form.registerMenu(menus3[x]);
		}

		// Label Controls
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 408, 181, 152, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Consultant Upgrade Date:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 408, 157, 55, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Urgency:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 408, 228, 60, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Category:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 408, 206, 85, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Referral Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 408, 514, 132, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Special Requirements:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 8, 514, 124, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Recording DateTime:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 8, 490, 95, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Recording User:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 408, 20, 133, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Original Referral Date:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 416, 141, 121, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "End X Day Email KPI", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 416, 165, 122, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "End X Day Paper KPI", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 408, 46, 139, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Date Referral Received:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 408, 119, 89, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "End X day KPI:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 408, 95, 103, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), ControlState.ENABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "RTT Breach Date:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 408, 71, 177, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Date Referral Letter Received:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 46, 375, 110, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Is the Referrer the", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 46, 394, 73, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Patient's GP", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 385, 296, 10, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "*", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 380, 315, 10, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "*", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 24, 290, 41, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Name:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 24, 317, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Location:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 24, 341, 54, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Address:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 408, 362, 85, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Mobile Phone:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 408, 386, 77, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Fax Number:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 408, 410, 93, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "E-mail Address:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 408, 338, 78, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Work Phone:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 408, 290, 113, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Referral CCG Code:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 408, 314, 141, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Referring Practice code:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 24, 128, 104, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Responsible HCP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 24, 33, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Contract:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 24, 65, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Location:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 24, 194, 66, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Procedure:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 24, 97, 50, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Service:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 24, 227, 70, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Clinic Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 24, 154, 111, 26, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Nearest Treatment \nCentre:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 512, 203, 48, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 1027), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "...", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 230, 462, 152, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 2064), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "View Clinical Information", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 128, 313, 24, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 2043), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "...", Boolean.FALSE, "Practice Search", Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 128, 286, 24, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 1036), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "...", Boolean.FALSE, "GP Search", Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 634, 536, 88, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 3078), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Save", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 728, 536, 88, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 3080), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Cancel", Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 8, 536, 88, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 3076), ControlState.UNKNOWN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Edit", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 568, 512, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1051), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 3074), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(250), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 568, 464, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1052), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 3071), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(250), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 160, 291, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1053), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 2041), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(150), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper52 = new RuntimeAnchoring(designSize, runtimeSize, 160, 315, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1054), new Integer(anchoringHelper52.getX()), new Integer(anchoringHelper52.getY()), new Integer(anchoringHelper52.getWidth()), new Integer(anchoringHelper52.getHeight()), new Integer(startTabIndex.intValue() + 2045), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper53 = new RuntimeAnchoring(designSize, runtimeSize, 160, 341, 216, 85, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1055), new Integer(anchoringHelper53.getX()), new Integer(anchoringHelper53.getY()), new Integer(anchoringHelper53.getWidth()), new Integer(anchoringHelper53.getHeight()), new Integer(startTabIndex.intValue() + 2047), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper54 = new RuntimeAnchoring(designSize, runtimeSize, 568, 336, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1056), new Integer(anchoringHelper54.getX()), new Integer(anchoringHelper54.getY()), new Integer(anchoringHelper54.getWidth()), new Integer(anchoringHelper54.getHeight()), new Integer(startTabIndex.intValue() + 2054), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper55 = new RuntimeAnchoring(designSize, runtimeSize, 568, 360, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1057), new Integer(anchoringHelper55.getX()), new Integer(anchoringHelper55.getY()), new Integer(anchoringHelper55.getWidth()), new Integer(anchoringHelper55.getHeight()), new Integer(startTabIndex.intValue() + 2056), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper56 = new RuntimeAnchoring(designSize, runtimeSize, 568, 384, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1058), new Integer(anchoringHelper56.getX()), new Integer(anchoringHelper56.getY()), new Integer(anchoringHelper56.getWidth()), new Integer(anchoringHelper56.getHeight()), new Integer(startTabIndex.intValue() + 2058), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper57 = new RuntimeAnchoring(designSize, runtimeSize, 568, 408, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1059), new Integer(anchoringHelper57.getX()), new Integer(anchoringHelper57.getY()), new Integer(anchoringHelper57.getWidth()), new Integer(anchoringHelper57.getHeight()), new Integer(startTabIndex.intValue() + 2059), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper58 = new RuntimeAnchoring(designSize, runtimeSize, 568, 288, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1060), new Integer(anchoringHelper58.getX()), new Integer(anchoringHelper58.getY()), new Integer(anchoringHelper58.getWidth()), new Integer(anchoringHelper58.getHeight()), new Integer(startTabIndex.intValue() + 2051), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(25), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper59 = new RuntimeAnchoring(designSize, runtimeSize, 568, 312, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1061), new Integer(anchoringHelper59.getX()), new Integer(anchoringHelper59.getY()), new Integer(anchoringHelper59.getWidth()), new Integer(anchoringHelper59.getHeight()), new Integer(startTabIndex.intValue() + 2053), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Controls
		RuntimeAnchoring anchoringHelper60 = new RuntimeAnchoring(designSize, runtimeSize, 568, 179, 184, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1062), new Integer(anchoringHelper60.getX()), new Integer(anchoringHelper60.getY()), new Integer(anchoringHelper60.getWidth()), new Integer(anchoringHelper60.getHeight()), new Integer(startTabIndex.intValue() + 1025), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper61 = new RuntimeAnchoring(designSize, runtimeSize, 624, 17, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1063), new Integer(anchoringHelper61.getX()), new Integer(anchoringHelper61.getY()), new Integer(anchoringHelper61.getWidth()), new Integer(anchoringHelper61.getHeight()), new Integer(startTabIndex.intValue() + 1011), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper62 = new RuntimeAnchoring(designSize, runtimeSize, 624, 117, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1064), new Integer(anchoringHelper62.getX()), new Integer(anchoringHelper62.getY()), new Integer(anchoringHelper62.getWidth()), new Integer(anchoringHelper62.getHeight()), new Integer(startTabIndex.intValue() + 1019), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper63 = new RuntimeAnchoring(designSize, runtimeSize, 616, 163, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1065), new Integer(anchoringHelper63.getX()), new Integer(anchoringHelper63.getY()), new Integer(anchoringHelper63.getWidth()), new Integer(anchoringHelper63.getHeight()), new Integer(startTabIndex.intValue() + 1022), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper64 = new RuntimeAnchoring(designSize, runtimeSize, 624, 69, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1066), new Integer(anchoringHelper64.getX()), new Integer(anchoringHelper64.getY()), new Integer(anchoringHelper64.getWidth()), new Integer(anchoringHelper64.getHeight()), new Integer(startTabIndex.intValue() + 1015), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper65 = new RuntimeAnchoring(designSize, runtimeSize, 624, 44, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1067), new Integer(anchoringHelper65.getX()), new Integer(anchoringHelper65.getY()), new Integer(anchoringHelper65.getWidth()), new Integer(anchoringHelper65.getHeight()), new Integer(startTabIndex.intValue() + 1013), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper66 = new RuntimeAnchoring(designSize, runtimeSize, 624, 93, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1068), new Integer(anchoringHelper66.getX()), new Integer(anchoringHelper66.getY()), new Integer(anchoringHelper66.getWidth()), new Integer(anchoringHelper66.getHeight()), new Integer(startTabIndex.intValue() + 1017), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper67 = new RuntimeAnchoring(designSize, runtimeSize, 624, 117, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1069), new Integer(anchoringHelper67.getX()), new Integer(anchoringHelper67.getY()), new Integer(anchoringHelper67.getWidth()), new Integer(anchoringHelper67.getHeight()), new Integer(startTabIndex.intValue() + 1021), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper68 = new RuntimeAnchoring(designSize, runtimeSize, 160, 512, 224, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1070), new Integer(anchoringHelper68.getX()), new Integer(anchoringHelper68.getY()), new Integer(anchoringHelper68.getWidth()), new Integer(anchoringHelper68.getHeight()), new Integer(startTabIndex.intValue() + 3068), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.TRUE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper69 = new RuntimeAnchoring(designSize, runtimeSize, 568, 155, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbUrgencyTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1071), new Integer(anchoringHelper69.getX()), new Integer(anchoringHelper69.getY()), new Integer(anchoringHelper69.getWidth()), new Integer(anchoringHelper69.getHeight()), new Integer(startTabIndex.intValue() + 1023), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbUrgencyTemp);
		cmbUrgencyComboBox cmbUrgency = (cmbUrgencyComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUrgencyComboBox.class, m_cmbUrgencyTemp);
		super.addComboBox(cmbUrgency);
		RuntimeAnchoring anchoringHelper70 = new RuntimeAnchoring(designSize, runtimeSize, 568, 226, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbCategoryTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1072), new Integer(anchoringHelper70.getX()), new Integer(anchoringHelper70.getY()), new Integer(anchoringHelper70.getWidth()), new Integer(anchoringHelper70.getHeight()), new Integer(startTabIndex.intValue() + 1032), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbCategoryTemp);
		cmbCategoryComboBox cmbCategory = (cmbCategoryComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbCategoryComboBox.class, m_cmbCategoryTemp);
		super.addComboBox(cmbCategory);
		RuntimeAnchoring anchoringHelper71 = new RuntimeAnchoring(designSize, runtimeSize, 568, 204, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbSORTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1073), new Integer(anchoringHelper71.getX()), new Integer(anchoringHelper71.getY()), new Integer(anchoringHelper71.getWidth()), new Integer(anchoringHelper71.getHeight()), new Integer(startTabIndex.intValue() + 1030), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbSORTemp);
		cmbSORComboBox cmbSOR = (cmbSORComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSORComboBox.class, m_cmbSORTemp);
		super.addComboBox(cmbSOR);
		RuntimeAnchoring anchoringHelper72 = new RuntimeAnchoring(designSize, runtimeSize, 568, 442, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbLanguageTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1074), new Integer(anchoringHelper72.getX()), new Integer(anchoringHelper72.getY()), new Integer(anchoringHelper72.getWidth()), new Integer(anchoringHelper72.getHeight()), new Integer(startTabIndex.intValue() + 3070), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbLanguageTemp);
		cmbLanguageComboBox cmbLanguage = (cmbLanguageComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbLanguageComboBox.class, m_cmbLanguageTemp);
		super.addComboBox(cmbLanguage);
		RuntimeAnchoring anchoringHelper73 = new RuntimeAnchoring(designSize, runtimeSize, 568, 488, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1075), new Integer(anchoringHelper73.getX()), new Integer(anchoringHelper73.getY()), new Integer(anchoringHelper73.getWidth()), new Integer(anchoringHelper73.getHeight()), new Integer(startTabIndex.intValue() + 3073), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbTypeTemp);
		cmbTypeComboBox cmbType = (cmbTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbTypeComboBox.class, m_cmbTypeTemp);
		super.addComboBox(cmbType);
		RuntimeAnchoring anchoringHelper74 = new RuntimeAnchoring(designSize, runtimeSize, 136, 160, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbNearestTreatmentCentreLocationTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1076), new Integer(anchoringHelper74.getX()), new Integer(anchoringHelper74.getY()), new Integer(anchoringHelper74.getWidth()), new Integer(anchoringHelper74.getHeight()), new Integer(startTabIndex.intValue() + 1006), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbNearestTreatmentCentreLocationTemp);
		cmbNearestTreatmentCentreLocationComboBox cmbNearestTreatmentCentreLocation = (cmbNearestTreatmentCentreLocationComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbNearestTreatmentCentreLocationComboBox.class, m_cmbNearestTreatmentCentreLocationTemp);
		super.addComboBox(cmbNearestTreatmentCentreLocation);
		RuntimeAnchoring anchoringHelper75 = new RuntimeAnchoring(designSize, runtimeSize, 136, 31, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbContractTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1077), new Integer(anchoringHelper75.getX()), new Integer(anchoringHelper75.getY()), new Integer(anchoringHelper75.getWidth()), new Integer(anchoringHelper75.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbContractTemp);
		cmbContractComboBox cmbContract = (cmbContractComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbContractComboBox.class, m_cmbContractTemp);
		super.addComboBox(cmbContract);
		RuntimeAnchoring anchoringHelper76 = new RuntimeAnchoring(designSize, runtimeSize, 136, 63, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbLocationTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1078), new Integer(anchoringHelper76.getX()), new Integer(anchoringHelper76.getY()), new Integer(anchoringHelper76.getWidth()), new Integer(anchoringHelper76.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbLocationTemp);
		cmbLocationComboBox cmbLocation = (cmbLocationComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbLocationComboBox.class, m_cmbLocationTemp);
		super.addComboBox(cmbLocation);
		RuntimeAnchoring anchoringHelper77 = new RuntimeAnchoring(designSize, runtimeSize, 136, 95, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbServiceTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1079), new Integer(anchoringHelper77.getX()), new Integer(anchoringHelper77.getY()), new Integer(anchoringHelper77.getWidth()), new Integer(anchoringHelper77.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbServiceTemp);
		cmbServiceComboBox cmbService = (cmbServiceComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbServiceComboBox.class, m_cmbServiceTemp);
		super.addComboBox(cmbService);
		RuntimeAnchoring anchoringHelper78 = new RuntimeAnchoring(designSize, runtimeSize, 136, 225, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbClinicTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1080), new Integer(anchoringHelper78.getX()), new Integer(anchoringHelper78.getY()), new Integer(anchoringHelper78.getWidth()), new Integer(anchoringHelper78.getHeight()), new Integer(startTabIndex.intValue() + 1010), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbClinicTypeTemp);
		cmbClinicTypeComboBox cmbClinicType = (cmbClinicTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbClinicTypeComboBox.class, m_cmbClinicTypeTemp);
		super.addComboBox(cmbClinicType);

		// Query ComboBox Controls
		RuntimeAnchoring anchoringHelper79 = new RuntimeAnchoring(designSize, runtimeSize, 136, 192, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_qmbProcedureTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1081), new Integer(anchoringHelper79.getX()), new Integer(anchoringHelper79.getY()), new Integer(anchoringHelper79.getWidth()), new Integer(anchoringHelper79.getHeight()), new Integer(startTabIndex.intValue() + 1008), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.FALSE, new Integer(-1), Boolean.FALSE});
		addControl(m_qmbProcedureTemp);
		qmbProcedureComboBox qmbProcedure = (qmbProcedureComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbProcedureComboBox.class, m_qmbProcedureTemp);
		super.addComboBox(qmbProcedure);

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper80 = new RuntimeAnchoring(designSize, runtimeSize, 568, 248, 160, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1082), new Integer(anchoringHelper80.getX()), new Integer(anchoringHelper80.getY()), new Integer(anchoringHelper80.getWidth()), new Integer(anchoringHelper80.getHeight()), new Integer(startTabIndex.intValue() + 1034), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Activity subject to RTT Clock", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper81 = new RuntimeAnchoring(designSize, runtimeSize, 8, 466, 160, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1083), new Integer(anchoringHelper81.getX()), new Integer(anchoringHelper81.getY()), new Integer(anchoringHelper81.getWidth()), new Integer(anchoringHelper81.getHeight()), new Integer(startTabIndex.intValue() + 2062), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Awaiting Clinical Information", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper82 = new RuntimeAnchoring(designSize, runtimeSize, 8, 444, 232, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1084), new Integer(anchoringHelper82.getX()), new Integer(anchoringHelper82.getY()), new Integer(anchoringHelper82.getWidth()), new Integer(anchoringHelper82.getHeight()), new Integer(startTabIndex.intValue() + 2060), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Copy Discharge Summary To Patient", Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper83 = new RuntimeAnchoring(designSize, runtimeSize, 408, 444, 144, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1085), new Integer(anchoringHelper83.getX()), new Integer(anchoringHelper83.getY()), new Integer(anchoringHelper83.getWidth()), new Integer(anchoringHelper83.getHeight()), new Integer(startTabIndex.intValue() + 3069), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"Interpreter Required:", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper84 = new RuntimeAnchoring(designSize, runtimeSize, 408, 490, 136, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1086), new Integer(anchoringHelper84.getX()), new Integer(anchoringHelper84.getY()), new Integer(anchoringHelper84.getWidth()), new Integer(anchoringHelper84.getHeight()), new Integer(startTabIndex.intValue() + 3072), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"Transport Required:", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper85 = new RuntimeAnchoring(designSize, runtimeSize, 24, 386, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1087), new Integer(anchoringHelper85.getX()), new Integer(anchoringHelper85.getY()), new Integer(anchoringHelper85.getWidth()), new Integer(anchoringHelper85.getHeight()), new Integer(startTabIndex.intValue() + 2049), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"", Boolean.TRUE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public ims.core.forms.mosquery.IComponent authoringControl()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(4)).getLogic();
	}
	public void setauthoringControlValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(4)).setValueChangedEvent(delegate);
	}
	public void setauthoringControlVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(4)).setVisible(value);
	}
	public boolean isauthoringControlVisible()
	{
		return ((ims.framework.Control)super.getControl(4)).isVisible();
	}
	public void setauthoringControlEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(4)).setEnabled(value);
	}
	public boolean isauthoringControlEnabled()
	{
		return ((ims.framework.Control)super.getControl(4)).isEnabled();
	}
	public ims.core.forms.mosquery.IComponent ccReferringConsultant()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(5)).getLogic();
	}
	public void setccReferringConsultantValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(5)).setValueChangedEvent(delegate);
	}
	public void setccReferringConsultantVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(5)).setVisible(value);
	}
	public boolean isccReferringConsultantVisible()
	{
		return ((ims.framework.Control)super.getControl(5)).isVisible();
	}
	public void setccReferringConsultantEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(5)).setEnabled(value);
	}
	public boolean isccReferringConsultantEnabled()
	{
		return ((ims.framework.Control)super.getControl(5)).isEnabled();
	}
	public ims.core.forms.mosquery.IComponent ccConsultant()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(6)).getLogic();
	}
	public void setccConsultantValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(6)).setValueChangedEvent(delegate);
	}
	public void setccConsultantVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(6)).setVisible(value);
	}
	public boolean isccConsultantVisible()
	{
		return ((ims.framework.Control)super.getControl(6)).isVisible();
	}
	public void setccConsultantEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(6)).setEnabled(value);
	}
	public boolean isccConsultantEnabled()
	{
		return ((ims.framework.Control)super.getControl(6)).isEnabled();
	}
	public Label lblEDEKPI()
	{
		return (Label)super.getControl(15);
	}
	public Label lblEDPKPI()
	{
		return (Label)super.getControl(16);
	}
	public Label lblEKPI()
	{
		return (Label)super.getControl(18);
	}
	public Label lbl18ww()
	{
		return (Label)super.getControl(19);
	}
	public Label lbl8()
	{
		return (Label)super.getControl(23);
	}
	public Label lbl7()
	{
		return (Label)super.getControl(24);
	}
	public Label lblContract()
	{
		return (Label)super.getControl(35);
	}
	public Label lblLocation()
	{
		return (Label)super.getControl(36);
	}
	public Label lblProcedure()
	{
		return (Label)super.getControl(37);
	}
	public Label lblNearestTreatment()
	{
		return (Label)super.getControl(40);
	}
	public Button btnTransferDetails()
	{
		return (Button)super.getControl(41);
	}
	public Button btnClinicalInfo()
	{
		return (Button)super.getControl(42);
	}
	public Button AHPSearch()
	{
		return (Button)super.getControl(43);
	}
	public Button GPSearch()
	{
		return (Button)super.getControl(44);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(45);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(46);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(47);
	}
	public TextBox txtSpecialRequirements()
	{
		return (TextBox)super.getControl(48);
	}
	public TextBox OtherLanguage()
	{
		return (TextBox)super.getControl(49);
	}
	public TextBox txtGPName()
	{
		return (TextBox)super.getControl(50);
	}
	public TextBox txtLocation()
	{
		return (TextBox)super.getControl(51);
	}
	public TextBox txtGPAddress()
	{
		return (TextBox)super.getControl(52);
	}
	public TextBox txtWorkPhone()
	{
		return (TextBox)super.getControl(53);
	}
	public TextBox txtMobilePhone()
	{
		return (TextBox)super.getControl(54);
	}
	public TextBox txtFaxNumber()
	{
		return (TextBox)super.getControl(55);
	}
	public TextBox txtEmail()
	{
		return (TextBox)super.getControl(56);
	}
	public TextBox RefPCTCode()
	{
		return (TextBox)super.getControl(57);
	}
	public TextBox txtRefPracticeCode()
	{
		return (TextBox)super.getControl(58);
	}
	public DateControl dteConsUpgradeDate()
	{
		return (DateControl)super.getControl(59);
	}
	public DateControl dteOriginalReferralDate()
	{
		return (DateControl)super.getControl(60);
	}
	public DateControl dteDEKPI()
	{
		return (DateControl)super.getControl(61);
	}
	public DateControl dteDPKPI()
	{
		return (DateControl)super.getControl(62);
	}
	public DateControl dteReferralReceived()
	{
		return (DateControl)super.getControl(63);
	}
	public DateControl dteReferral()
	{
		return (DateControl)super.getControl(64);
	}
	public DateControl dtimWW()
	{
		return (DateControl)super.getControl(65);
	}
	public DateControl dtimKPI()
	{
		return (DateControl)super.getControl(66);
	}
	public DateTimeControl dtimAuthoringDT()
	{
		return (DateTimeControl)super.getControl(67);
	}
	public cmbUrgencyComboBox cmbUrgency()
	{
		return (cmbUrgencyComboBox)super.getComboBox(0);
	}
	public cmbCategoryComboBox cmbCategory()
	{
		return (cmbCategoryComboBox)super.getComboBox(1);
	}
	public cmbSORComboBox cmbSOR()
	{
		return (cmbSORComboBox)super.getComboBox(2);
	}
	public cmbLanguageComboBox cmbLanguage()
	{
		return (cmbLanguageComboBox)super.getComboBox(3);
	}
	public cmbTypeComboBox cmbType()
	{
		return (cmbTypeComboBox)super.getComboBox(4);
	}
	public cmbNearestTreatmentCentreLocationComboBox cmbNearestTreatmentCentreLocation()
	{
		return (cmbNearestTreatmentCentreLocationComboBox)super.getComboBox(5);
	}
	public cmbContractComboBox cmbContract()
	{
		return (cmbContractComboBox)super.getComboBox(6);
	}
	public cmbLocationComboBox cmbLocation()
	{
		return (cmbLocationComboBox)super.getComboBox(7);
	}
	public cmbServiceComboBox cmbService()
	{
		return (cmbServiceComboBox)super.getComboBox(8);
	}
	public cmbClinicTypeComboBox cmbClinicType()
	{
		return (cmbClinicTypeComboBox)super.getComboBox(9);
	}
	public qmbProcedureComboBox qmbProcedure()
	{
		return (qmbProcedureComboBox)super.getComboBox(10);
	}
	public CheckBox chkActivityRTTClock()
	{
		return (CheckBox)super.getControl(79);
	}
	public CheckBox chkAwaitingInfo()
	{
		return (CheckBox)super.getControl(80);
	}
	public CheckBox chkCopyToPatient()
	{
		return (CheckBox)super.getControl(81);
	}
	public CheckBox chkIntrepreter()
	{
		return (CheckBox)super.getControl(82);
	}
	public CheckBox chkTransport()
	{
		return (CheckBox)super.getControl(83);
	}
	public CheckBox chkPatientsGp()
	{
		return (CheckBox)super.getControl(84);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
			Admin = new AdminForms();
			RefMan = new RefManForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				GpSelectionOnly = new LocalFormName(102251);
			}
			public final FormName GpSelectionOnly;
		}
		public final class AdminForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private AdminForms()
			{
				GPPracticeSelect = new LocalFormName(103112);
			}
			public final FormName GPPracticeSelect;
		}
		public final class RefManForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private RefManForms()
			{
				ChangeServiceDialog = new LocalFormName(134122);
				AwaitingClinicalInformationDialog = new LocalFormName(134189);
				ReferralTransferDialog = new LocalFormName(134232);
			}
			public final FormName ChangeServiceDialog;
			public final FormName AwaitingClinicalInformationDialog;
			public final FormName ReferralTransferDialog;
		}

		public CoreForms Core;
		public AdminForms Admin;
		public RefManForms RefMan;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				ZoomInDisabled16 = new ImageHelper(102159, "Images/Core/zoom_disabled.png", new Integer(16), new Integer(16));
				ZoomInEnabled16 = new ImageHelper(102158, "Images/Core/zoom.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image ZoomInDisabled16;
			public final ims.framework.utils.Image ZoomInEnabled16;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_GPInfo = new ims.framework.ContextVariable("GPInfo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__GPInfo_" + componentIdentifier + "");
			cxl_AHPInfo = new ims.framework.ContextVariable("AHPInfo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier + "");
			cxl_referralVo = new ims.framework.ContextVariable("referralVo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier + "");
			cxl_bReferralDetailsInitialized = new ims.framework.ContextVariable("bReferralDetailsInitialized", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__bReferralDetailsInitialized_" + componentIdentifier + "");
			cxl_callingForm = new ims.framework.ContextVariable("callingForm", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__callingForm_" + componentIdentifier + "");
			cxl_bReferralAccepted = new ims.framework.ContextVariable("bReferralAccepted", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__bReferralAccepted_" + componentIdentifier + "");
			cxl_patientsGp = new ims.framework.ContextVariable("patientsGp", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__patientsGp_" + componentIdentifier + "");
			cxl_componentEvent = new ims.framework.ContextVariable("componentEvent", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__componentEvent_" + componentIdentifier + "");
			cxl_hasCatsReferralReferralLetter = new ims.framework.ContextVariable("hasCatsReferralReferralLetter", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__hasCatsReferralReferralLetter_" + componentIdentifier + "");
			cxl_activeDetailsButton = new ims.framework.ContextVariable("activeDetailsButton", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__activeDetailsButton_" + componentIdentifier + "");
			cxl_CurrentAwaitingClinicalInformationVo = new ims.framework.ContextVariable("CurrentAwaitingClinicalInformationVo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier + "");
			cxl_CatsReferralWizardVo = new ims.framework.ContextVariable("CatsReferralWizardVo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier + "");
			cxl_IsInCreationMode = new ims.framework.ContextVariable("IsInCreationMode", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__IsInCreationMode_" + componentIdentifier + "");
			cxl_TriageFromButton = new ims.framework.ContextVariable("TriageFromButton", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TriageFromButton_" + componentIdentifier + "");
			cxl_distanceMAP = new ims.framework.ContextVariable("distanceMAP", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__distanceMAP_" + componentIdentifier + "");
			cxl_TransferInfo = new ims.framework.ContextVariable("TransferInfo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier + "");
		}
		
		public boolean getGPInfoIsNotNull()
		{
			return !cxl_GPInfo.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getGPInfo()
		{
			return (ims.core.vo.GpShortVo)cxl_GPInfo.getValue(context);
		}
		public void setGPInfo(ims.core.vo.GpShortVo value)
		{
			cxl_GPInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_GPInfo = null;
		public boolean getAHPInfoIsNotNull()
		{
			return !cxl_AHPInfo.getValueIsNull(context);
		}
		public ims.core.vo.OrganisationWithSitesVo getAHPInfo()
		{
			return (ims.core.vo.OrganisationWithSitesVo)cxl_AHPInfo.getValue(context);
		}
		public void setAHPInfo(ims.core.vo.OrganisationWithSitesVo value)
		{
			cxl_AHPInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AHPInfo = null;
		public boolean getreferralVoIsNotNull()
		{
			return !cxl_referralVo.getValueIsNull(context);
		}
		public ims.clinical.vo.ReferralLetterDetailsVo getreferralVo()
		{
			return (ims.clinical.vo.ReferralLetterDetailsVo)cxl_referralVo.getValue(context);
		}
		public void setreferralVo(ims.clinical.vo.ReferralLetterDetailsVo value)
		{
			cxl_referralVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_referralVo = null;
		public boolean getbReferralDetailsInitializedIsNotNull()
		{
			return !cxl_bReferralDetailsInitialized.getValueIsNull(context);
		}
		public Boolean getbReferralDetailsInitialized()
		{
			return (Boolean)cxl_bReferralDetailsInitialized.getValue(context);
		}
		public void setbReferralDetailsInitialized(Boolean value)
		{
			cxl_bReferralDetailsInitialized.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bReferralDetailsInitialized = null;
		public boolean getcallingFormIsNotNull()
		{
			return !cxl_callingForm.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.CALLINGFORM getcallingForm()
		{
			return (ims.RefMan.vo.enums.CALLINGFORM)cxl_callingForm.getValue(context);
		}
		public void setcallingForm(ims.RefMan.vo.enums.CALLINGFORM value)
		{
			cxl_callingForm.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_callingForm = null;
		public boolean getbReferralAcceptedIsNotNull()
		{
			return !cxl_bReferralAccepted.getValueIsNull(context);
		}
		public Boolean getbReferralAccepted()
		{
			return (Boolean)cxl_bReferralAccepted.getValue(context);
		}
		public void setbReferralAccepted(Boolean value)
		{
			cxl_bReferralAccepted.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bReferralAccepted = null;
		public boolean getpatientsGpIsNotNull()
		{
			return !cxl_patientsGp.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getpatientsGp()
		{
			return (ims.core.vo.GpShortVo)cxl_patientsGp.getValue(context);
		}
		public void setpatientsGp(ims.core.vo.GpShortVo value)
		{
			cxl_patientsGp.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_patientsGp = null;
		public boolean getcomponentEventIsNotNull()
		{
			return !cxl_componentEvent.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked getcomponentEvent()
		{
			return (ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked)cxl_componentEvent.getValue(context);
		}
		public void setcomponentEvent(ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked value)
		{
			cxl_componentEvent.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_componentEvent = null;
		public boolean gethasCatsReferralReferralLetterIsNotNull()
		{
			return !cxl_hasCatsReferralReferralLetter.getValueIsNull(context);
		}
		public Boolean gethasCatsReferralReferralLetter()
		{
			return (Boolean)cxl_hasCatsReferralReferralLetter.getValue(context);
		}
		public void sethasCatsReferralReferralLetter(Boolean value)
		{
			cxl_hasCatsReferralReferralLetter.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_hasCatsReferralReferralLetter = null;
		public boolean getactiveDetailsButtonIsNotNull()
		{
			return !cxl_activeDetailsButton.getValueIsNull(context);
		}
		public Boolean getactiveDetailsButton()
		{
			return (Boolean)cxl_activeDetailsButton.getValue(context);
		}
		public void setactiveDetailsButton(Boolean value)
		{
			cxl_activeDetailsButton.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_activeDetailsButton = null;
		public boolean getCurrentAwaitingClinicalInformationVoIsNotNull()
		{
			return !cxl_CurrentAwaitingClinicalInformationVo.getValueIsNull(context);
		}
		public ims.RefMan.vo.AwaitingClinicalInfoVo getCurrentAwaitingClinicalInformationVo()
		{
			return (ims.RefMan.vo.AwaitingClinicalInfoVo)cxl_CurrentAwaitingClinicalInformationVo.getValue(context);
		}
		public void setCurrentAwaitingClinicalInformationVo(ims.RefMan.vo.AwaitingClinicalInfoVo value)
		{
			cxl_CurrentAwaitingClinicalInformationVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentAwaitingClinicalInformationVo = null;
		public boolean getCatsReferralWizardVoIsNotNull()
		{
			return !cxl_CatsReferralWizardVo.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralWizardVo getCatsReferralWizardVo()
		{
			return (ims.RefMan.vo.CatsReferralWizardVo)cxl_CatsReferralWizardVo.getValue(context);
		}
		public void setCatsReferralWizardVo(ims.RefMan.vo.CatsReferralWizardVo value)
		{
			cxl_CatsReferralWizardVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CatsReferralWizardVo = null;
		public boolean getIsInCreationModeIsNotNull()
		{
			return !cxl_IsInCreationMode.getValueIsNull(context);
		}
		public Boolean getIsInCreationMode()
		{
			return (Boolean)cxl_IsInCreationMode.getValue(context);
		}
		public void setIsInCreationMode(Boolean value)
		{
			cxl_IsInCreationMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsInCreationMode = null;
		public boolean getTriageFromButtonIsNotNull()
		{
			return !cxl_TriageFromButton.getValueIsNull(context);
		}
		public Boolean getTriageFromButton()
		{
			return (Boolean)cxl_TriageFromButton.getValue(context);
		}
		public void setTriageFromButton(Boolean value)
		{
			cxl_TriageFromButton.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_TriageFromButton = null;
		public boolean getdistanceMAPIsNotNull()
		{
			return !cxl_distanceMAP.getValueIsNull(context);
		}
		public java.util.Map getdistanceMAP()
		{
			return (java.util.Map)cxl_distanceMAP.getValue(context);
		}
		public void setdistanceMAP(java.util.Map value)
		{
			cxl_distanceMAP.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_distanceMAP = null;
		public boolean getTransferInfoIsNotNull()
		{
			return !cxl_TransferInfo.getValueIsNull(context);
		}
		public ims.RefMan.vo.ReferralTransferVo getTransferInfo()
		{
			return (ims.RefMan.vo.ReferralTransferVo)cxl_TransferInfo.getValue(context);
		}
		public void setTransferInfo(ims.RefMan.vo.ReferralTransferVo value)
		{
			cxl_TransferInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_TransferInfo = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[219];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-ID", "ID_Organisation");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-NAME", "Name");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-TYPE", "Type");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-ISACTIVE", "IsActive");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-COMMENT", "Comment");
			fields[76] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-PCTCODE", "PctCode");
			fields[77] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-ID", "ID_Gp");
			fields[78] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-STATUS", "Status");
			fields[79] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-ID", "ID_Service");
			fields[80] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-SERVICENAME", "ServiceName");
			fields[81] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-SERVICECATEGORY", "ServiceCategory");
			fields[82] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-CANBESCHEDULED", "CanBeScheduled");
			fields[83] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-SPECIALTY", "Specialty");
			fields[84] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-EXPECTEDTURNAROUND", "ExpectedTurnaround");
			fields[85] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-TURNAROUNDMEASURE", "TurnaroundMeasure");
			fields[86] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-MATERNITYINDICATOR", "MaternityIndicator");
			fields[87] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ID", "ID_CatsReferral");
			fields[88] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CARECONTEXT", "CareContext");
			fields[89] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ADDITIONALINVAPPTSSTATUS", "AdditionalInvApptsStatus");
			fields[90] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASINVESTIGATIONS", "HasInvestigations");
			fields[91] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASAPPOINTMENTS", "HasAppointments");
			fields[92] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[93] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASREFERRALLETTER", "HasReferralLetter");
			fields[94] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISCAB", "IsCAB");
			fields[95] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			fields[96] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ONWARDREFERRALSTATUS", "OnwardReferralStatus");
			fields[97] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PROVIDERCANCELLATION", "ProviderCancellation");
			fields[98] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASCONSULTATIONDETAILS", "HasConsultationDetails");
			fields[99] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-DISCHARGEDATE", "DischargeDate");
			fields[100] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISFINALREPORTREQUIRED", "IsFinalReportRequired");
			fields[101] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-TRIAGEDATETIME", "TriageDateTime");
			fields[102] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-LASTAPPTARRIVEDDATE", "LastApptArrivedDate");
			fields[103] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISACCEPTEDONCAB", "IsAcceptedOnCAB");
			fields[104] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISREFERRALREJECTEDONCAB", "IsReferralRejectedOnCAB");
			fields[105] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASPATIENTREJECTIONLETTERSENT", "WasPatientRejectionLetterSent");
			fields[106] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASPATIENTPROVIDERCANCELLATIONLETTERSENT", "WasPatientProviderCancellationLetterSent");
			fields[107] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-REQUIRESDISCHARGEREP", "RequiresDischargeRep");
			fields[108] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASDNAAPPTSFORREVIEW", "HasDNAApptsForReview");
			fields[109] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASCANCELLEDAPPTSFORREVIEW", "HasCancelledApptsForReview");
			fields[110] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISSECONDARYREPORTREQUIRED", "IsSecondaryReportRequired");
			fields[111] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASFURTHERMANAGEMENTDETAILSREVIEWED", "WasFurtherManagementDetailsReviewed");
			fields[112] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ONWARDREFERRALREASON", "OnwardReferralReason");
			fields[113] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-DISCHARGETOGPDETAILSREVIEWSTATUS", "DischargeToGPDetailsReviewStatus");
			fields[114] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[115] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[116] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[117] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISACTIVEMONITORAPPTREQUIRED", "IsActiveMonitorApptRequired");
			fields[118] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CATSREPORTSENTDATE", "CATSReportSentDate");
			fields[119] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ENDOFCAREDATE", "EndOfCareDate");
			fields[120] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PROCEDUREFORPOSTOPREVIEW", "ProcedureForPostOpReview");
			fields[121] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-REFERRALCATEGORY", "ReferralCategory");
			fields[122] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISONWARDREFERRALTRIAGE", "IsOnwardReferralTriage");
			fields[123] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-URGENCY", "Urgency");
			fields[124] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PATHWAYID", "PathwayID");
			fields[125] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[126] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CONSUPGRADEDATE", "ConsUpgradeDate");
			fields[127] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-ID", "ID_AwaitingClinicalInfo");
			fields[128] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-OTHERCLINICALINFORMATION", "OtherClinicalInformation");
			fields[129] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-DATEAWAITINGCLINICALINFO", "DateAwaitingClinicalInfo");
			fields[130] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-DATECLINICALINFORECEIVED", "DateClinicalInfoReceived");
			fields[131] = new ims.framework.ReportField(this.context, "_cv_RefMan.PatientsGP", "BO-1006100001-ID", "ID_Gp");
			fields[132] = new ims.framework.ReportField(this.context, "_cv_RefMan.PatientsGP", "BO-1006100001-STATUS", "Status");
			fields[133] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-ID", "ID_ReferralTransfer");
			fields[134] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-RTTSTATUSDATE", "RTTStatusDate");
			fields[135] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-OTHERPATIENTNUMBER", "OtherPatientNumber");
			fields[136] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-OTHERORGANISATIONCODE", "OTherOrganisationCode");
			fields[137] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__GPInfo_" + componentIdentifier, "BO-1006100001-ID", "ID_Gp");
			fields[138] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__GPInfo_" + componentIdentifier, "BO-1006100001-STATUS", "Status");
			fields[139] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-ID", "ID_Organisation");
			fields[140] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-NAME", "Name");
			fields[141] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-TYPE", "Type");
			fields[142] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-ISACTIVE", "IsActive");
			fields[143] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-COMMENT", "Comment");
			fields[144] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-PCTCODE", "PctCode");
			fields[145] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ID", "ID_ReferralLetterDetails");
			fields[146] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-REFERRERTYPE", "ReferrerType");
			fields[147] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ALLIEDHEALTHPROFNAME", "AlliedHealthProfName");
			fields[148] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-DATEOFREFERRAL", "DateOfReferral");
			fields[149] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[150] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-END18WW", "End18WW");
			fields[151] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[152] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-LANGUAGE", "Language");
			fields[153] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-TRANSPORTREQUIRED", "TransportRequired");
			fields[154] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-TRANSPORT", "Transport");
			fields[155] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-AUTHORINGDATETIME", "AuthoringDateTime");
			fields[156] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-COPYDISCHARGETOPATIENT", "CopyDischargeToPatient");
			fields[157] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-PCT", "PCT");
			fields[158] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-OTHERLANGUAGE", "OtherLanguage");
			fields[159] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-SPECIALREQUIREMENTS", "SpecialRequirements");
			fields[160] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ISDADREFERRAL", "IsDADReferral");
			fields[161] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-DADUBRN", "DadUbrn");
			fields[162] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ISREFERRERPATIENTSGP", "IsReferrerPatientsGp");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ENDDATEKPI", "EndDateKPI");
			fields[164] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ENDDATEEMAILKPI", "EndDateEmailKPI");
			fields[165] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ENDDATEPAPERKPI", "EndDatePaperKPI");
			fields[166] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ORIGINALDATEOFREFERRAL", "OriginalDateOfReferral");
			fields[167] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-REFERERADDRESS", "RefererAddress");
			fields[168] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-TRANSFEREDBY", "TransferedBY");
			fields[169] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__patientsGp_" + componentIdentifier, "BO-1006100001-ID", "ID_Gp");
			fields[170] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__patientsGp_" + componentIdentifier, "BO-1006100001-STATUS", "Status");
			fields[171] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-ID", "ID_AwaitingClinicalInfo");
			fields[172] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-OTHERCLINICALINFORMATION", "OtherClinicalInformation");
			fields[173] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-DATEAWAITINGCLINICALINFO", "DateAwaitingClinicalInfo");
			fields[174] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-DATECLINICALINFORECEIVED", "DateClinicalInfoReceived");
			fields[175] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ID", "ID_CatsReferral");
			fields[176] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CARECONTEXT", "CareContext");
			fields[177] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ADDITIONALINVAPPTSSTATUS", "AdditionalInvApptsStatus");
			fields[178] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASINVESTIGATIONS", "HasInvestigations");
			fields[179] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASAPPOINTMENTS", "HasAppointments");
			fields[180] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[181] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASREFERRALLETTER", "HasReferralLetter");
			fields[182] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISCAB", "IsCAB");
			fields[183] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			fields[184] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ONWARDREFERRALSTATUS", "OnwardReferralStatus");
			fields[185] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PROVIDERCANCELLATION", "ProviderCancellation");
			fields[186] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASCONSULTATIONDETAILS", "HasConsultationDetails");
			fields[187] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-DISCHARGEDATE", "DischargeDate");
			fields[188] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISFINALREPORTREQUIRED", "IsFinalReportRequired");
			fields[189] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-TRIAGEDATETIME", "TriageDateTime");
			fields[190] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-LASTAPPTARRIVEDDATE", "LastApptArrivedDate");
			fields[191] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISACCEPTEDONCAB", "IsAcceptedOnCAB");
			fields[192] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISREFERRALREJECTEDONCAB", "IsReferralRejectedOnCAB");
			fields[193] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-WASPATIENTREJECTIONLETTERSENT", "WasPatientRejectionLetterSent");
			fields[194] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-WASPATIENTPROVIDERCANCELLATIONLETTERSENT", "WasPatientProviderCancellationLetterSent");
			fields[195] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-REQUIRESDISCHARGEREP", "RequiresDischargeRep");
			fields[196] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASDNAAPPTSFORREVIEW", "HasDNAApptsForReview");
			fields[197] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASCANCELLEDAPPTSFORREVIEW", "HasCancelledApptsForReview");
			fields[198] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISSECONDARYREPORTREQUIRED", "IsSecondaryReportRequired");
			fields[199] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-WASFURTHERMANAGEMENTDETAILSREVIEWED", "WasFurtherManagementDetailsReviewed");
			fields[200] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ONWARDREFERRALREASON", "OnwardReferralReason");
			fields[201] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-DISCHARGETOGPDETAILSREVIEWSTATUS", "DischargeToGPDetailsReviewStatus");
			fields[202] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[203] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[204] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[205] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISACTIVEMONITORAPPTREQUIRED", "IsActiveMonitorApptRequired");
			fields[206] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CATSREPORTSENTDATE", "CATSReportSentDate");
			fields[207] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ENDOFCAREDATE", "EndOfCareDate");
			fields[208] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PROCEDUREFORPOSTOPREVIEW", "ProcedureForPostOpReview");
			fields[209] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-REFERRALCATEGORY", "ReferralCategory");
			fields[210] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISONWARDREFERRALTRIAGE", "IsOnwardReferralTriage");
			fields[211] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-URGENCY", "Urgency");
			fields[212] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PATHWAYID", "PathwayID");
			fields[213] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[214] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CONSUPGRADEDATE", "ConsUpgradeDate");
			fields[215] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-ID", "ID_ReferralTransfer");
			fields[216] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-RTTSTATUSDATE", "RTTStatusDate");
			fields[217] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-OTHERPATIENTNUMBER", "OtherPatientNumber");
			fields[218] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-OTHERORGANISATIONCODE", "OTherOrganisationCode");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
