// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referraldetailscomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbUrgencyLookup();
	abstract protected void defaultcmbUrgencyLookupValue();
	abstract protected void bindcmbCategoryLookup();
	abstract protected void defaultcmbCategoryLookupValue();
	abstract protected void bindcmbSORLookup();
	abstract protected void defaultcmbSORLookupValue();
	abstract protected void bindcmbLanguageLookup();
	abstract protected void defaultcmbLanguageLookupValue();
	abstract protected void bindcmbTypeLookup();
	abstract protected void defaultcmbTypeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnTransferDetailsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbUrgencyValueSet(Object value);
	abstract protected void onCmbUrgencyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbCategoryValueSet(Object value);
	abstract protected void oncmbSORValueSet(Object value);
	abstract protected void onReferrerTypeSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnClinicalInfoClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkAwaitingInfoValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteReferralReceivedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkIntrepreterValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbLanguageValueSet(Object value);
	abstract protected void onCmbLanguageValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onValueChangedTransportRequired() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTypeValueSet(Object value);
	abstract protected void onBtnAlliedPracticeSearch() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnGPSearch() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPatientsGpValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbContactValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbProcedureValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbProcedureTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnTransferDetails().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnTransferDetailsClick();
			}
		});
		this.form.cmbUrgency().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUrgencyValueSet(value);
			}
		});
		this.form.cmbUrgency().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbUrgencyValueChanged();
			}
		});
		this.form.cmbCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCategoryValueSet(value);
			}
		});
		this.form.cmbSOR().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSORValueSet(value);
			}
		});
		this.form.cmbSOR().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onReferrerTypeSelectionChanged();
			}
		});
		this.form.btnClinicalInfo().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnClinicalInfoClick();
			}
		});
		this.form.chkAwaitingInfo().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkAwaitingInfoValueChanged();
			}
		});
		this.form.dteReferralReceived().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteReferralReceivedValueChanged();
			}
		});
		this.form.dteReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteReferralValueChanged();
			}
		});
		this.form.chkIntrepreter().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkIntrepreterValueChanged();
			}
		});
		this.form.cmbLanguage().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLanguageValueSet(value);
			}
		});
		this.form.cmbLanguage().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbLanguageValueChanged();
			}
		});
		this.form.chkTransport().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onValueChangedTransportRequired();
			}
		});
		this.form.cmbType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTypeValueSet(value);
			}
		});
		this.form.AHPSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAlliedPracticeSearch();
			}
		});
		this.form.GPSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnGPSearch();
			}
		});
		this.form.chkPatientsGp().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPatientsGpValueChanged();
			}
		});
		this.form.setccConsultantValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcConsultantValueChanged();
			}
		});
		this.form.cmbContract().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbContactValueChanged();
			}
		});
		this.form.qmbProcedure().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbProcedureValueChanged();
			}
		});
		this.form.qmbProcedure().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbProcedureTextSubmited(value);
			}
		});
		this.form.cmbService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbServiceValueChanged();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbUrgencyLookup();
		bindcmbCategoryLookup();
		bindcmbLanguageLookup();
		bindcmbTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbUrgencyLookup();
		bindcmbCategoryLookup();
		bindcmbSORLookup();
		bindcmbLanguageLookup();
		bindcmbTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbUrgencyLookupValue();
		defaultcmbCategoryLookupValue();
		defaultcmbSORLookupValue();
		defaultcmbLanguageLookupValue();
		defaultcmbTypeLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
