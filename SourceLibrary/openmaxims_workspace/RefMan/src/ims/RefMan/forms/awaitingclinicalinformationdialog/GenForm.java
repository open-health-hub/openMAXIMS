// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.awaitingclinicalinformationdialog;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.RefMan.vo.CatsReferralRefVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.RefMan.vo.CatsReferralRefVo' of the global context variable 'RefMan.CatsReferral' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(576, 448);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Label Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 362, 212, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "All Clinical Information Received on:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 10, 206, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Awaiting Clinical Information from:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 8, 216, 157, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Other Clinical Information:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 416, 384, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Remove from awaiting clinical information worklist", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 416, 416, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 496, 416, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.ENABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 8, 384, 384, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "All clinical information received", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 8, 240, 560, 112, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, new Integer(1500), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 216, 360, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 216, 8, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.TRUE, null}));

		// Dynamic Grid Controls
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 8, 40, 560, 160, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.READONLY, ControlState.EDITABLE, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE}));
	}



	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Label lblAllInfoReceived()
	{
		return (Label)super.getControl(0);
	}
	public Button btnRemoveFromWaitingList()
	{
		return (Button)super.getControl(3);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(4);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(5);
	}
	public Button btnAllInformationReceived()
	{
		return (Button)super.getControl(6);
	}
	public TextBox txtOther()
	{
		return (TextBox)super.getControl(7);
	}
	public DateTimeControl dtimInformationReceived()
	{
		return (DateTimeControl)super.getControl(8);
	}
	public DateTimeControl dtimAwaitingInformation()
	{
		return (DateTimeControl)super.getControl(9);
	}
	public DynamicGrid dyngrdClinInfo()
	{
		return (DynamicGrid)super.getControl(10);
	}

	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				Critical = new ImageHelper(102249, "Images/Core/Critical.gif", new Integer(16), new Integer(16));
				Delete = new ImageHelper(102148, "Images/Core/delete.png", new Integer(16), new Integer(16));
				Tick = new ImageHelper(102209, "Images/Core/tick.png", new Integer(16), new Integer(16));
				GrayStar = new ImageHelper(102276, "Images/Core/gray-star-1.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Critical;
			public final ims.framework.utils.Image Delete;
			public final ims.framework.utils.Image Tick;
			public final ims.framework.utils.Image GrayStar;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_CatsReferralWizzard = new ims.framework.ContextVariable("CatsReferralWizzard", prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier + "");
			cxl_AwaitingClinicalInfo = new ims.framework.ContextVariable("AwaitingClinicalInfo", prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__AwaitingClinicalInfo_" + componentIdentifier + "");
			cxl_IsAwaitingClinicalInfo = new ims.framework.ContextVariable("IsAwaitingClinicalInfo", prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__IsAwaitingClinicalInfo_" + componentIdentifier + "");
			cxl_CatsReferralVo = new ims.framework.ContextVariable("CatsReferralVo", prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier + "");
		}
		
		public boolean getCatsReferralWizzardIsNotNull()
		{
			return !cxl_CatsReferralWizzard.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralWizardVo getCatsReferralWizzard()
		{
			return (ims.RefMan.vo.CatsReferralWizardVo)cxl_CatsReferralWizzard.getValue(context);
		}
		public void setCatsReferralWizzard(ims.RefMan.vo.CatsReferralWizardVo value)
		{
			cxl_CatsReferralWizzard.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CatsReferralWizzard = null;
		public boolean getAwaitingClinicalInfoIsNotNull()
		{
			return !cxl_AwaitingClinicalInfo.getValueIsNull(context);
		}
		public ims.RefMan.vo.AwaitingClinicalInfoVo getAwaitingClinicalInfo()
		{
			return (ims.RefMan.vo.AwaitingClinicalInfoVo)cxl_AwaitingClinicalInfo.getValue(context);
		}
		public void setAwaitingClinicalInfo(ims.RefMan.vo.AwaitingClinicalInfoVo value)
		{
			cxl_AwaitingClinicalInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AwaitingClinicalInfo = null;
		public boolean getIsAwaitingClinicalInfoIsNotNull()
		{
			return !cxl_IsAwaitingClinicalInfo.getValueIsNull(context);
		}
		public Boolean getIsAwaitingClinicalInfo()
		{
			return (Boolean)cxl_IsAwaitingClinicalInfo.getValue(context);
		}
		public void setIsAwaitingClinicalInfo(Boolean value)
		{
			cxl_IsAwaitingClinicalInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsAwaitingClinicalInfo = null;
		public boolean getCatsReferralVoIsNotNull()
		{
			return !cxl_CatsReferralVo.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralVo getCatsReferralVo()
		{
			return (ims.RefMan.vo.CatsReferralVo)cxl_CatsReferralVo.getValue(context);
		}
		public void setCatsReferralVo(ims.RefMan.vo.CatsReferralVo value)
		{
			cxl_CatsReferralVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CatsReferralVo = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[169];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ID", "ID_CatsReferral");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CARECONTEXT", "CareContext");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ADDITIONALINVAPPTSSTATUS", "AdditionalInvApptsStatus");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASINVESTIGATIONS", "HasInvestigations");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASAPPOINTMENTS", "HasAppointments");
			fields[76] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[77] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASREFERRALLETTER", "HasReferralLetter");
			fields[78] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISCAB", "IsCAB");
			fields[79] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			fields[80] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ONWARDREFERRALSTATUS", "OnwardReferralStatus");
			fields[81] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PROVIDERCANCELLATION", "ProviderCancellation");
			fields[82] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASCONSULTATIONDETAILS", "HasConsultationDetails");
			fields[83] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-DISCHARGEDATE", "DischargeDate");
			fields[84] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISFINALREPORTREQUIRED", "IsFinalReportRequired");
			fields[85] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-TRIAGEDATETIME", "TriageDateTime");
			fields[86] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-LASTAPPTARRIVEDDATE", "LastApptArrivedDate");
			fields[87] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISACCEPTEDONCAB", "IsAcceptedOnCAB");
			fields[88] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISREFERRALREJECTEDONCAB", "IsReferralRejectedOnCAB");
			fields[89] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASPATIENTREJECTIONLETTERSENT", "WasPatientRejectionLetterSent");
			fields[90] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASPATIENTPROVIDERCANCELLATIONLETTERSENT", "WasPatientProviderCancellationLetterSent");
			fields[91] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-REQUIRESDISCHARGEREP", "RequiresDischargeRep");
			fields[92] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASDNAAPPTSFORREVIEW", "HasDNAApptsForReview");
			fields[93] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASCANCELLEDAPPTSFORREVIEW", "HasCancelledApptsForReview");
			fields[94] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISSECONDARYREPORTREQUIRED", "IsSecondaryReportRequired");
			fields[95] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASFURTHERMANAGEMENTDETAILSREVIEWED", "WasFurtherManagementDetailsReviewed");
			fields[96] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ONWARDREFERRALREASON", "OnwardReferralReason");
			fields[97] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-DISCHARGETOGPDETAILSREVIEWSTATUS", "DischargeToGPDetailsReviewStatus");
			fields[98] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[99] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[100] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[101] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISACTIVEMONITORAPPTREQUIRED", "IsActiveMonitorApptRequired");
			fields[102] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CATSREPORTSENTDATE", "CATSReportSentDate");
			fields[103] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ENDOFCAREDATE", "EndOfCareDate");
			fields[104] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PROCEDUREFORPOSTOPREVIEW", "ProcedureForPostOpReview");
			fields[105] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-REFERRALCATEGORY", "ReferralCategory");
			fields[106] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISONWARDREFERRALTRIAGE", "IsOnwardReferralTriage");
			fields[107] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-URGENCY", "Urgency");
			fields[108] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PATHWAYID", "PathwayID");
			fields[109] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[110] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CONSUPGRADEDATE", "ConsUpgradeDate");
			fields[111] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-ID", "ID_AwaitingClinicalInfo");
			fields[112] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-OTHERCLINICALINFORMATION", "OtherClinicalInformation");
			fields[113] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-DATEAWAITINGCLINICALINFO", "DateAwaitingClinicalInfo");
			fields[114] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-DATECLINICALINFORECEIVED", "DateClinicalInfoReceived");
			fields[115] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ID", "ID_CatsReferral");
			fields[116] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-CARECONTEXT", "CareContext");
			fields[117] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ADDITIONALINVAPPTSSTATUS", "AdditionalInvApptsStatus");
			fields[118] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASINVESTIGATIONS", "HasInvestigations");
			fields[119] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASAPPOINTMENTS", "HasAppointments");
			fields[120] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[121] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASREFERRALLETTER", "HasReferralLetter");
			fields[122] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISCAB", "IsCAB");
			fields[123] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			fields[124] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ONWARDREFERRALSTATUS", "OnwardReferralStatus");
			fields[125] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-PROVIDERCANCELLATION", "ProviderCancellation");
			fields[126] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASCONSULTATIONDETAILS", "HasConsultationDetails");
			fields[127] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-DISCHARGEDATE", "DischargeDate");
			fields[128] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISFINALREPORTREQUIRED", "IsFinalReportRequired");
			fields[129] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-TRIAGEDATETIME", "TriageDateTime");
			fields[130] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-LASTAPPTARRIVEDDATE", "LastApptArrivedDate");
			fields[131] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISACCEPTEDONCAB", "IsAcceptedOnCAB");
			fields[132] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISREFERRALREJECTEDONCAB", "IsReferralRejectedOnCAB");
			fields[133] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-WASPATIENTREJECTIONLETTERSENT", "WasPatientRejectionLetterSent");
			fields[134] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-WASPATIENTPROVIDERCANCELLATIONLETTERSENT", "WasPatientProviderCancellationLetterSent");
			fields[135] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-REQUIRESDISCHARGEREP", "RequiresDischargeRep");
			fields[136] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASDNAAPPTSFORREVIEW", "HasDNAApptsForReview");
			fields[137] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-HASCANCELLEDAPPTSFORREVIEW", "HasCancelledApptsForReview");
			fields[138] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISSECONDARYREPORTREQUIRED", "IsSecondaryReportRequired");
			fields[139] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-WASFURTHERMANAGEMENTDETAILSREVIEWED", "WasFurtherManagementDetailsReviewed");
			fields[140] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ONWARDREFERRALREASON", "OnwardReferralReason");
			fields[141] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-DISCHARGETOGPDETAILSREVIEWSTATUS", "DischargeToGPDetailsReviewStatus");
			fields[142] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[143] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[144] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[145] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISACTIVEMONITORAPPTREQUIRED", "IsActiveMonitorApptRequired");
			fields[146] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-CATSREPORTSENTDATE", "CATSReportSentDate");
			fields[147] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ENDOFCAREDATE", "EndOfCareDate");
			fields[148] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-PROCEDUREFORPOSTOPREVIEW", "ProcedureForPostOpReview");
			fields[149] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-REFERRALCATEGORY", "ReferralCategory");
			fields[150] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-ISONWARDREFERRALTRIAGE", "IsOnwardReferralTriage");
			fields[151] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-URGENCY", "Urgency");
			fields[152] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-PATHWAYID", "PathwayID");
			fields[153] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[154] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralWizzard_" + componentIdentifier, "BO-1004100035-CONSUPGRADEDATE", "ConsUpgradeDate");
			fields[155] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__AwaitingClinicalInfo_" + componentIdentifier, "BO-1096100044-ID", "ID_AwaitingClinicalInfo");
			fields[156] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__AwaitingClinicalInfo_" + componentIdentifier, "BO-1096100044-OTHERCLINICALINFORMATION", "OtherClinicalInformation");
			fields[157] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__AwaitingClinicalInfo_" + componentIdentifier, "BO-1096100044-DATEAWAITINGCLINICALINFO", "DateAwaitingClinicalInfo");
			fields[158] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__AwaitingClinicalInfo_" + componentIdentifier, "BO-1096100044-DATECLINICALINFORECEIVED", "DateClinicalInfoReceived");
			fields[159] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-ID", "ID_CatsReferral");
			fields[160] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-PATIENT", "Patient");
			fields[161] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[162] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[164] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-HASTHEATREAPPT", "HasTheatreAppt");
			fields[165] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-HASDNAAPPTSFORREVIEW", "HasDNAApptsForReview");
			fields[166] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-HASCANCELLEDAPPTSFORREVIEW", "HasCancelledApptsForReview");
			fields[167] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[168] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.AwaitingClinicalInformationDialog.__internal_x_context__CatsReferralVo_" + componentIdentifier, "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
