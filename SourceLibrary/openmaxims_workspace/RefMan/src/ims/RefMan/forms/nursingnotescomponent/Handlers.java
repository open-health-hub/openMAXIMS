// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.nursingnotescomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbSmokStatusLookup();
	abstract protected void defaultcmbSmokStatusLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddComorbidityClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbComorbidityValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbComorbidityTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddAllergyClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbAllergyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbAllergyTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdMedicationSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdMedicationSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdComorbiditiesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdComorbiditiesSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdAllergiesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdAllergiesSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkNegValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPosValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDecHeightValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDecWeightValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSmokStatusValueSet(Object value);
	abstract protected void onCmbSmokStatusValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnAddComorbidity().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddComorbidityClick();
			}
		});
		this.form.qmbComorbidity().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbComorbidityValueChanged();
			}
		});
		this.form.qmbComorbidity().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbComorbidityTextSubmited(value);
			}
		});
		this.form.btnAddAllergy().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddAllergyClick();
			}
		});
		this.form.qmbAllergy().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbAllergyValueChanged();
			}
		});
		this.form.qmbAllergy().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbAllergyTextSubmited(value);
			}
		});
		this.form.grdMedication().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdMedicationSelectionChanged();
			}
		});
		this.form.grdMedication().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdMedicationSelectionCleared();
			}
		});
		this.form.grdComorbidities().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdComorbiditiesSelectionChanged();
			}
		});
		this.form.grdComorbidities().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdComorbiditiesSelectionCleared();
			}
		});
		this.form.grdAllergies().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdAllergiesSelectionChanged();
			}
		});
		this.form.grdAllergies().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdAllergiesSelectionCleared();
			}
		});
		this.form.chkNeg().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkNegValueChanged();
			}
		});
		this.form.chkPos().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPosValueChanged();
			}
		});
		this.form.decHeight().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDecHeightValueChanged();
			}
		});
		this.form.decWeight().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDecWeightValueChanged();
			}
		});
		this.form.cmbSmokStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSmokStatusValueSet(value);
			}
		});
		this.form.cmbSmokStatus().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSmokStatusValueChanged();
			}
		});
		this.form.getContextMenus().RefMan.getNursingNotesMedicationsADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NursingNotesMedications.ADD, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNursingNotesMedicationsREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NursingNotesMedications.REMOVE, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNursingNotesComorbiditiesREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NursingNotesComorbidities.REMOVE, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNursingNotesAllergiesREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NursingNotesAllergies.REMOVE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbSmokStatusLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbSmokStatusLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbSmokStatusLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
