// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.eroddialog;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.RefMan.domain.ERODDialog.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.RefMan.domain.ERODDialog domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void oncmbERODTypeValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnDetails().cmbERODType().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.RefMan.vo.lookups.ERODType existingInstance = (ims.RefMan.vo.lookups.ERODType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbERODTypeLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.RefMan.vo.lookups.ERODType)
		{
			ims.RefMan.vo.lookups.ERODType instance = (ims.RefMan.vo.lookups.ERODType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbERODTypeLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.RefMan.vo.lookups.ERODType existingInstance = (ims.RefMan.vo.lookups.ERODType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnDetails().cmbERODType().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbERODTypeLookup()
	{
		this.form.ctnDetails().cmbERODType().clear();
		ims.RefMan.vo.lookups.ERODTypeCollection lookupCollection = ims.RefMan.vo.lookups.LookupHelper.getERODType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnDetails().cmbERODType().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbERODTypeLookupValue(int id)
	{
		ims.RefMan.vo.lookups.ERODType instance = ims.RefMan.vo.lookups.LookupHelper.getERODTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnDetails().cmbERODType().setValue(instance);
	}
	protected final void defaultcmbERODTypeLookupValue()
	{
		this.form.ctnDetails().cmbERODType().setValue((ims.RefMan.vo.lookups.ERODType)domain.getLookupService().getDefaultInstance(ims.RefMan.vo.lookups.ERODType.class, engine.getFormName().getID(), ims.RefMan.vo.lookups.ERODType.TYPE_ID));
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.RefMan.domain.ERODDialog domain;
}
