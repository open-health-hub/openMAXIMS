// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.atconsultation;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCompleteTaskClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnReviewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPatientContactClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnInterpretersClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtn1Click() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyr1TabChanged(ims.framework.LayerBridge tab);
	abstract protected void onCcNursingNotesValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcSpecimenCollectionValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcClinicalNotesValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcInvestigationsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcPrescriptionValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcPatientSpecialtyAssessmentsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcOutcomeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcApptsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnCompleteTask().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCompleteTaskClick();
			}
		});
		this.form.btnReview().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnReviewClick();
			}
		});
		this.form.btnPatientContact().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPatientContactClick();
			}
		});
		this.form.btnInterpreters().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnInterpretersClick();
			}
		});
		this.form.btn1().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtn1Click();
			}
		});
		this.form.lyr1().tabReferralLetter().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabReferralLetterActivated();
			}
		});
		this.form.lyr1().tabBaselineObs().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabBaselineObsActivated();
			}
		});
		this.form.lyr1().tabSpecimenCollection().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabSpecimenCollectionActivated();
			}
		});
		this.form.lyr1().tabClinicalNotes().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabClinicalNotesActivated();
			}
		});
		this.form.lyr1().tabInvestigations().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabInvestigationsActivated();
			}
		});
		this.form.lyr1().tabPrescription().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabPrescriptionActivated();
			}
		});
		this.form.lyr1().tabAssesments().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabAssesmentsActivated();
			}
		});
		this.form.lyr1().tabOutcome().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabOutcomeActivated();
			}
		});
		this.form.lyr1().tabDischarge().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabDischargeActivated();
			}
		});
		this.form.lyr1().tabNotes().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabNotesActivated();
			}
		});
		this.form.lyr1().tabReferralAppts().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabReferralApptsActivated();
			}
		});
		this.form.lyr1().tabBaselineObs().setccNursingNotesValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcNursingNotesValueChanged();
			}
		});
		this.form.lyr1().tabSpecimenCollection().setccSpecimenCollectionValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcSpecimenCollectionValueChanged();
			}
		});
		this.form.lyr1().tabClinicalNotes().setccClinicalNotesValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcClinicalNotesValueChanged();
			}
		});
		this.form.lyr1().tabInvestigations().setccInvestigationsValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcInvestigationsValueChanged();
			}
		});
		this.form.lyr1().tabPrescription().setccPrescriptionValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcPrescriptionValueChanged();
			}
		});
		this.form.lyr1().tabAssesments().setccPatientSpecialtyAssessmentsValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcPatientSpecialtyAssessmentsValueChanged();
			}
		});
		this.form.lyr1().tabOutcome().setccOutcomeValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcOutcomeValueChanged();
			}
		});
		this.form.lyr1().tabReferralAppts().setccApptsValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcApptsValueChanged();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
	}
	private void onlyr1tabReferralLetterActivated()
	{
		this.form.lyr1().showtabReferralLetter();
		onlyr1TabChanged(this.form.lyr1().tabReferralLetter());
	}
	private void onlyr1tabBaselineObsActivated()
	{
		this.form.lyr1().showtabBaselineObs();
		onlyr1TabChanged(this.form.lyr1().tabBaselineObs());
	}
	private void onlyr1tabSpecimenCollectionActivated()
	{
		this.form.lyr1().showtabSpecimenCollection();
		onlyr1TabChanged(this.form.lyr1().tabSpecimenCollection());
	}
	private void onlyr1tabClinicalNotesActivated()
	{
		this.form.lyr1().showtabClinicalNotes();
		onlyr1TabChanged(this.form.lyr1().tabClinicalNotes());
	}
	private void onlyr1tabInvestigationsActivated()
	{
		this.form.lyr1().showtabInvestigations();
		onlyr1TabChanged(this.form.lyr1().tabInvestigations());
	}
	private void onlyr1tabPrescriptionActivated()
	{
		this.form.lyr1().showtabPrescription();
		onlyr1TabChanged(this.form.lyr1().tabPrescription());
	}
	private void onlyr1tabAssesmentsActivated()
	{
		this.form.lyr1().showtabAssesments();
		onlyr1TabChanged(this.form.lyr1().tabAssesments());
	}
	private void onlyr1tabOutcomeActivated()
	{
		this.form.lyr1().showtabOutcome();
		onlyr1TabChanged(this.form.lyr1().tabOutcome());
	}
	private void onlyr1tabDischargeActivated()
	{
		this.form.lyr1().showtabDischarge();
		onlyr1TabChanged(this.form.lyr1().tabDischarge());
	}
	private void onlyr1tabNotesActivated()
	{
		this.form.lyr1().showtabNotes();
		onlyr1TabChanged(this.form.lyr1().tabNotes());
	}
	private void onlyr1tabReferralApptsActivated()
	{
		this.form.lyr1().showtabReferralAppts();
		onlyr1TabChanged(this.form.lyr1().tabReferralAppts());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
