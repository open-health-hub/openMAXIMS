// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.electivelistmanagement;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbStatusLookup();
	abstract protected void defaultcmbStatusLookupValue();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbProcedureTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnTransferToELClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbElectiveListNameValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbElectiveListNameTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroupShowValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbConsultantTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdElectiveListGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdElectiveListSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbStatusValueSet(Object value);
	abstract protected void onCmbStatusValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.qmbProcedure().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbProcedureTextSubmited(value);
			}
		});
		this.form.btnTransferToEL().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnTransferToELClick();
			}
		});
		this.form.qmbElectiveListName().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbElectiveListNameValueChanged();
			}
		});
		this.form.qmbElectiveListName().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbElectiveListNameTextSubmited(value);
			}
		});
		this.form.GroupShow().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupShowValueChanged();
			}
		});
		this.form.qmbConsultant().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbConsultantValueChanged();
			}
		});
		this.form.qmbConsultant().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbConsultantTextSubmited(value);
			}
		});
		this.form.qmbService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceValueChanged();
			}
		});
		this.form.qmbService().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceTextSubmited(value);
			}
		});
		this.form.grdElectiveList().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdElectiveListGridHeaderClicked(column);
			}
		});
		this.form.grdElectiveList().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdElectiveListSelectionChanged();
			}
		});
		this.form.cmbStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStatusValueSet(value);
			}
		});
		this.form.cmbStatus().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbStatusValueChanged();
			}
		});
		this.form.imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.imbSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchClick();
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementSET_STATUS_REQUIRES_TCIItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.SET_STATUS_REQUIRES_TCI, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementRECORDTCIItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.RECORDTCI, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementAMEND_TCIItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.AMEND_TCI, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementSUSPEND_ELECTIVE_LIST_ENTRYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.SUSPEND_ELECTIVE_LIST_ENTRY, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementUNSUSPEND_ELECTIVE_LIST_ENTRYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.UNSUSPEND_ELECTIVE_LIST_ENTRY, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementRECORD_ERODItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.RECORD_EROD, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementAMEND_ERODItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.AMEND_EROD, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementCANCEL_TCIItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.CANCEL_TCI, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementREMOVE_FROM_ELECTIVE_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.REMOVE_FROM_ELECTIVE_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementADD_TO_WAITING_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.ADD_TO_WAITING_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementADD_TO_BOOKED_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.ADD_TO_BOOKED_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementADD_TO_PLANNED_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.ADD_TO_PLANNED_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementEDIT_ELECTIVE_LIST_ENTRYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.EDIT_ELECTIVE_LIST_ENTRY, sender);
			}
		});
		this.form.getContextMenus().RefMan.getPatientElectiveListManagementBOOK_THEATREItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.PatientElectiveListManagement.BOOK_THEATRE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbStatusLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbStatusLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbStatusLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
