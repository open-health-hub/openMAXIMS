// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.newelectivelisttcieroddialog;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbTCIOfferedMethodLookup();
	abstract protected void defaultcmbTCIOfferedMethodLookupValue();
	abstract protected void bindcmbBreachReasonLookup();
	abstract protected void defaultcmbBreachReasonLookupValue();
	abstract protected void bindcmbInterpreterRequiredLookup();
	abstract protected void defaultcmbInterpreterRequiredLookupValue();
	abstract protected void bindcmbTransportRequiredLookup();
	abstract protected void defaultcmbTransportRequiredLookupValue();
	abstract protected void bindcmbIntendedManagementLookup();
	abstract protected void defaultcmbIntendedManagementLookupValue();
	abstract protected void bindcmbPriorityLookup();
	abstract protected void defaultcmbPriorityLookupValue();
	abstract protected void bindcmbElectiveListReasonLookup();
	abstract protected void defaultcmbElectiveListReasonLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbWardTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbHospitalValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbHospitalTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelTCIClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTCIOfferedMethodValueSet(Object value);
	abstract protected void oncmbBreachReasonValueSet(Object value);
	abstract protected void onDteTCIDateValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdNoteCommentsAddSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnDashboardClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddTCIClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddERODClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdNoteCommentsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSuspendClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteEarliestDateOfferedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnViewERODHistoryClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcRespHCPValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbInterpreterRequiredValueSet(Object value);
	abstract protected void oncmbTransportRequiredValueSet(Object value);
	abstract protected void onChkInterpreterRequiredValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTransportRequiredValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkSpecialRequirementsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkAvailableAtShortNoticedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntAnticipatedStayValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbIntendedManagementValueSet(Object value);
	abstract protected void onCmbIntendedManagementValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPriorityValueSet(Object value);
	abstract protected void onQmbIntendedProcedureValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbIntendedProcedureTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbElectiveListReasonValueSet(Object value);
	abstract protected void onCmbElectiveListReasonValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkExtendedSearchValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.qmbWard().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbWardTextSubmited(value);
			}
		});
		this.form.qmbHospital().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbHospitalValueChanged();
			}
		});
		this.form.qmbHospital().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbHospitalTextSubmited(value);
			}
		});
		this.form.btnCancelTCI().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelTCIClick();
			}
		});
		this.form.cmbTCIOfferedMethod().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTCIOfferedMethodValueSet(value);
			}
		});
		this.form.cmbBreachReason().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbBreachReasonValueSet(value);
			}
		});
		this.form.dteTCIDate().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteTCIDateValueChanged();
			}
		});
		this.form.grdNoteCommentsAdd().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdNoteCommentsAddSelectionChanged();
			}
		});
		this.form.btnDashboard().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnDashboardClick();
			}
		});
		this.form.btnAddTCI().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddTCIClick();
			}
		});
		this.form.btnAddEROD().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddERODClick();
			}
		});
		this.form.grdNoteComments().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdNoteCommentsSelectionChanged();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnSuspend().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSuspendClick();
			}
		});
		this.form.dteEarliestDateOffered().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteEarliestDateOfferedValueChanged();
			}
		});
		this.form.btnViewERODHistory().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnViewERODHistoryClick();
			}
		});
		this.form.setccRespHCPValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcRespHCPValueChanged();
			}
		});
		this.form.cmbInterpreterRequired().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbInterpreterRequiredValueSet(value);
			}
		});
		this.form.cmbTransportRequired().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTransportRequiredValueSet(value);
			}
		});
		this.form.chkInterpreterRequired().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkInterpreterRequiredValueChanged();
			}
		});
		this.form.chkTransportRequired().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTransportRequiredValueChanged();
			}
		});
		this.form.chkSpecialRequirements().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSpecialRequirementsValueChanged();
			}
		});
		this.form.chkAvailableAtShortNoticed().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkAvailableAtShortNoticedValueChanged();
			}
		});
		this.form.intAnticipatedStay().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntAnticipatedStayValueChanged();
			}
		});
		this.form.cmbIntendedManagement().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbIntendedManagementValueSet(value);
			}
		});
		this.form.cmbIntendedManagement().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbIntendedManagementValueChanged();
			}
		});
		this.form.cmbPriority().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPriorityValueSet(value);
			}
		});
		this.form.qmbIntendedProcedure().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbIntendedProcedureValueChanged();
			}
		});
		this.form.qmbIntendedProcedure().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbIntendedProcedureTextSubmited(value);
			}
		});
		this.form.cmbElectiveListReason().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbElectiveListReasonValueSet(value);
			}
		});
		this.form.cmbElectiveListReason().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbElectiveListReasonValueChanged();
			}
		});
		this.form.chkExtendedSearch().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkExtendedSearchValueChanged();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnClose().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseClick();
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu1ADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu1.ADD, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu1EDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu1.EDIT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu1VIEWItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu1.VIEW, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu1RIEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu1.RIE, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu2ADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu2.ADD, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu2EDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu2.EDIT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu2VIEWItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu2.VIEW, sender);
			}
		});
		this.form.getContextMenus().RefMan.getNewElectiveListNotesMenu2RIEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.NewElectiveListNotesMenu2.RIE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbTCIOfferedMethodLookup();
		bindcmbBreachReasonLookup();
		bindcmbInterpreterRequiredLookup();
		bindcmbTransportRequiredLookup();
		bindcmbIntendedManagementLookup();
		bindcmbPriorityLookup();
		bindcmbElectiveListReasonLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbTCIOfferedMethodLookup();
		bindcmbBreachReasonLookup();
		bindcmbInterpreterRequiredLookup();
		bindcmbTransportRequiredLookup();
		bindcmbIntendedManagementLookup();
		bindcmbPriorityLookup();
		bindcmbElectiveListReasonLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbTCIOfferedMethodLookupValue();
		defaultcmbBreachReasonLookupValue();
		defaultcmbInterpreterRequiredLookupValue();
		defaultcmbTransportRequiredLookupValue();
		defaultcmbIntendedManagementLookupValue();
		defaultcmbPriorityLookupValue();
		defaultcmbElectiveListReasonLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
