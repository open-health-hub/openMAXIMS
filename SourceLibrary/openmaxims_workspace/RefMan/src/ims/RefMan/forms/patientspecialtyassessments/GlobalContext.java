// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.patientspecialtyassessments;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		RefMan = new RefManContext(context);
		Core = new CoreContext(context);
		Assessment = new AssessmentContext(context);
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getIsComponentInEditModeIsNotNull()
		{
			return !cx_RefManIsComponentInEditMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getIsComponentInEditMode()
		{
			return (ims.framework.enumerations.FormMode)cx_RefManIsComponentInEditMode.getValue(context);
		}
		public void setIsComponentInEditMode(ims.framework.enumerations.FormMode value)
		{
			cx_RefManIsComponentInEditMode.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsComponentInEditMode = new ims.framework.ContextVariable("RefMan.IsComponentInEditMode", "_cv_RefMan.IsComponentInEditMode");
		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getIsProviderCancellationIsNotNull()
		{
			return !cx_RefManIsProviderCancellation.getValueIsNull(context);
		}
		public Boolean getIsProviderCancellation()
		{
			return (Boolean)cx_RefManIsProviderCancellation.getValue(context);
		}

		private ims.framework.ContextVariable cx_RefManIsProviderCancellation = new ims.framework.ContextVariable("RefMan.IsProviderCancellation", "_cvp_RefMan.IsProviderCancellation");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getSelectedGraphicAssessmentLiteIsNotNull()
		{
			return !cx_CoreSelectedGraphicAssessmentLite.getValueIsNull(context);
		}
		public ims.assessment.vo.GraphicAssessmentLiteVo getSelectedGraphicAssessmentLite()
		{
			return (ims.assessment.vo.GraphicAssessmentLiteVo)cx_CoreSelectedGraphicAssessmentLite.getValue(context);
		}
		public void setSelectedGraphicAssessmentLite(ims.assessment.vo.GraphicAssessmentLiteVo value)
		{
			cx_CoreSelectedGraphicAssessmentLite.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSelectedGraphicAssessmentLite = new ims.framework.ContextVariable("Core.SelectedGraphicAssessmentLite", "_cv_Core.SelectedGraphicAssessmentLite");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getSelectedUserAssessmentLiteIsNotNull()
		{
			return !cx_CoreSelectedUserAssessmentLite.getValueIsNull(context);
		}
		public ims.assessment.vo.UserAssessmentLiteVo getSelectedUserAssessmentLite()
		{
			return (ims.assessment.vo.UserAssessmentLiteVo)cx_CoreSelectedUserAssessmentLite.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreSelectedUserAssessmentLite = new ims.framework.ContextVariable("Core.SelectedUserAssessmentLite", "_cv_Core.SelectedUserAssessmentLite");
		public boolean getEpisodeofCareShortIsNotNull()
		{
			return !cx_CoreEpisodeofCareShort.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareShortVo getEpisodeofCareShort()
		{
			return (ims.core.vo.EpisodeofCareShortVo)cx_CoreEpisodeofCareShort.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreEpisodeofCareShort = new ims.framework.ContextVariable("Core.EpisodeofCareShort", "_cvp_Core.EpisodeofCareShort");

		private ims.framework.Context context;
	}
	public final class AssessmentContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private AssessmentContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getAssessmentsForSpecialtyCollectionIsNotNull()
		{
			return !cx_AssessmentAssessmentsForSpecialtyCollection.getValueIsNull(context);
		}
		public ims.assessment.vo.UserAssessmentLiteVoCollection getAssessmentsForSpecialtyCollection()
		{
			return (ims.assessment.vo.UserAssessmentLiteVoCollection)cx_AssessmentAssessmentsForSpecialtyCollection.getValue(context);
		}
		public void setAssessmentsForSpecialtyCollection(ims.assessment.vo.UserAssessmentLiteVoCollection value)
		{
			cx_AssessmentAssessmentsForSpecialtyCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AssessmentAssessmentsForSpecialtyCollection = new ims.framework.ContextVariable("Assessment.AssessmentsForSpecialtyCollection", "_cv_Assessment.AssessmentsForSpecialtyCollection");
		public boolean getGraphicAssessmentsForSpecialtyCollectionIsNotNull()
		{
			return !cx_AssessmentGraphicAssessmentsForSpecialtyCollection.getValueIsNull(context);
		}
		public ims.assessment.vo.GraphicAssessmentLiteVoCollection getGraphicAssessmentsForSpecialtyCollection()
		{
			return (ims.assessment.vo.GraphicAssessmentLiteVoCollection)cx_AssessmentGraphicAssessmentsForSpecialtyCollection.getValue(context);
		}
		public void setGraphicAssessmentsForSpecialtyCollection(ims.assessment.vo.GraphicAssessmentLiteVoCollection value)
		{
			cx_AssessmentGraphicAssessmentsForSpecialtyCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AssessmentGraphicAssessmentsForSpecialtyCollection = new ims.framework.ContextVariable("Assessment.GraphicAssessmentsForSpecialtyCollection", "_cv_Assessment.GraphicAssessmentsForSpecialtyCollection");

		private ims.framework.Context context;
	}

	public RefManContext RefMan;
	public CoreContext Core;
	public AssessmentContext Assessment;
}
