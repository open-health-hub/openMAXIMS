//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.53 build 2650.27803)
// Copyright (C) 1995-2007 IMS MAXIMS plc. All rights reserved.

package ims.oncology.forms.chemocycledrugdetails;

import ims.clinical.vo.ClinicalCodingVo;
import ims.clinical.vo.lookups.CodingItemType;
import ims.core.vo.MedicationDose;
import ims.core.vo.MedicationDoseCollection;
import ims.core.vo.MedicationLiteVo;
import ims.core.vo.PatientMedicationVo;
import ims.core.vo.lookups.MedicationRoute;
import ims.framework.Control;
import ims.framework.FormName;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.CodingRuntimeException;
import ims.framework.exceptions.PresentationLogicException;
import ims.oncology.forms.chemocycledrugdetails.GenForm.grdDetailsRow;
import ims.oncology.vo.ChemoDosageDetailsVo;
import ims.oncology.vo.ChemoDosageDetailsVoCollection;
import ims.oncology.vo.ChemoRegimensDrugConfigVo;
import ims.oncology.vo.ChemoTherapyDayDetailsVo;
import ims.oncology.vo.ChemoTherapyDayDetailsVoCollection;
import ims.oncology.vo.ChemotherapyCycleDetailsVo;
import ims.oncology.vo.enums.ChemoCycleMode;
import ims.vo.interfaces.IClinicalCodingValue;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		initialise();
		open();
	}

	private void initialise()
	{
		form.customControlMedication().setCodingItemType(CodingItemType.MEDICATION);
		form.customControlMedication().setHotlist(Boolean.FALSE);
		form.customControlMedication().setParentEditing(Boolean.TRUE);
		form.customControlMedication().setIsRequired(Boolean.TRUE);
		
		enableDosageControls(false);
		
		ChemoCycleMode mode = form.getGlobalContext().Oncology.getCycleDrugDetailMode();
		enableCycleFractionControls(mode);		
	}

	private void enableCycleFractionControls(ChemoCycleMode mode) 
	{
		if(mode == null)
			throw new CodingRuntimeException("ChemoCycleMode has not been set");
		if(mode.equals(ChemoCycleMode.ADDCYCLE))			//wdev-12819
		{
			form.GroupStatus().setValue(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive);
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive, true); 	//wdev-12819
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoInactive, true);	//wdev-12819
			form.txtDummyStatus().setEnabled(true);																				  		//wdev12819
			form.btnClose().setVisible(false);	//wdev-12819
			
		}
		
		if(mode.equals(ChemoCycleMode.ADDFRACTION) || mode.equals(ChemoCycleMode.EDITFRACTION))
		{
			form.intCycleNumber().setEnabled(false);
			form.intCycleDuration().setEnabled(false);
			form.dteCycleStart().setEnabled(false);
			
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive, false); 	//wdev-12819
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoInactive, false);	//wdev-12819
			form.txtDummyStatus().setEnabled(false);																				  	//wdev12819
			form.btnClose().setVisible(false);	//wdev-12819
		}
		if(mode.equals(ChemoCycleMode.VIEWDAY))	//wdev-12819
		{
			form.intCycleNumber().setEnabled(false);
			form.intCycleDuration().setEnabled(false);
			form.dteCycleStart().setEnabled(false);
			form.intDayNumber().setEnabled(false);
			form.dteFraction().setEnabled(false);
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive, false); 	//wdev-12819
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoInactive, false);	//wdev-12819
			form.txtDummyStatus().setEnabled(false);																				  	//wdev12819
			enableDosageControls(false);
			hideControlsViewDayMode();
		}
		else if(mode.equals(ChemoCycleMode.EDITCYCLE))
		{
			form.intDayNumber().setEnabled(false);
			form.dteFraction().setEnabled(false);
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive, true); 	//wdev-12819
			form.GroupStatus().setEnabled(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoInactive, true);	//wdev-12819
			form.txtDummyStatus().setEnabled(true);																				  		//wdev12819
			form.btnClose().setVisible(false);	//wdev-12819
		}
		
		if(mode.equals(ChemoCycleMode.VIEWDAY) || mode.equals(ChemoCycleMode.EDITFRACTION) || mode.equals(ChemoCycleMode.ADDCYCLE) || mode.equals(ChemoCycleMode.EDITCYCLE) || form.getGlobalContext().Oncology.getChemoTherapyDetailRecord() == null) //wdev-12819, WDEV-13094
			form.chkCopy().setVisible(false);
		
		enableMedDosageContextMenu();
	}
	private void hideControlsViewDayMode()
	{
		form.btnCancel().setVisible(false);
		form.btnCancelMedication().setVisible(false);
		form.btnOKMedication().setVisible(false);
		form.btnSave().setVisible(false);
	}
	//----------
	@Override
	protected void onGrdDetailsSelectionChanged() throws PresentationLogicException
	{
		populateMedicationControlsFromData(form.grdDetails().getSelectedRow().getValue());
		form.getLocalContext().setSelectedDosage(form.grdDetails().getSelectedRow().getValue());
		
		enableMedDosageContextMenu();
	}
	
	private void populateMedicationControlsFromData(ChemoDosageDetailsVo value) 
	{
		if (value != null && value.getPatientMedicationIsNotNull())			//wdev-12819
		{
			form.customControlMedication().setValue(value.getPatientMedication());
			
			if (value.getPatientMedication().getPrescribedDosesIsNotNull() && value.getPatientMedication().getPrescribedDoses().size() > 0) //wdev-12819
			{
				form.txtDose().setValue(value.getPatientMedication().getPrescribedDoses().get(0).getDose());
				form.cmbDose().setValue(value.getPatientMedication().getPrescribedDoses().get(0).getDoseUnit());
				form.cmbRoute().setValue(value.getPatientMedication().getPrescribedDoses().get(0).getAdminRoute());
			}
			form.intNoDoses().setValue(value != null ? value.getNumberDoses():null);								//wdev-12819
			form.cmbProviderOrganisation().setValue(value != null ? value.getProviderOrganisation() : null);		//wdev-12819
		}

	}

	@Override
	protected void onBtnCancelClick() throws PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}

	@Override
	protected void onBtnSaveClick() throws PresentationLogicException
	{
		ChemotherapyCycleDetailsVo voChemotherapyCycleDetailsVo = form.getGlobalContext().Oncology.getChemotherapyCycleDetailsVo();
		ChemoCycleMode mode = form.getGlobalContext().Oncology.getCycleDrugDetailMode();
		
		if(form.intCycleNumber().getValue()==null){
			engine.showMessage("Please select a Cycle Number");
			return;
		}
		if(mode != null && !mode.equals(ChemoCycleMode.EDITCYCLE)){
			if(form.intDayNumber().getValue()==null){
				engine.showMessage("Please select a Day Number");
				return;
			}
			if(form.grdDetails().getRows().size()==0){
				engine.showMessage("Please select a Medication");
				return;
			}
		}
		form.getGlobalContext().Oncology.setChemotherapyCycleDetailsVo(populateDataFromScreen(voChemotherapyCycleDetailsVo));
		engine.close(DialogResult.OK);	
	}
	
	@Override
	protected void onBtnCancelMedicationClick() throws PresentationLogicException
	{
		form.grdDetails().setValue(null);				//wdev-7309
		clearDrugDetailsControl();
		enableDosageControls(false);
		enableMedDosageContextMenu();
		form.grdDetails().setEnabled(true);			//wdev-12819
	}

	@Override
	protected void onBtnOKMedicationClick() throws PresentationLogicException
	{
		IClinicalCodingValue clinicalCoding = form.customControlMedication().getValue();
		if(clinicalCoding == null){
			ClinicalCodingVo vo = new ClinicalCodingVo();
			vo.setIClinicalCodingValue(form.customControlMedication().getSelectedItem());
			vo.setIClinicalCodingValueDescription(form.customControlMedication().getDescription());
			if(vo.getIClinicalCodingValue()!=null && vo.getIClinicalCodingValueDescription()!=null)
				clinicalCoding = vo;
		}
		if(clinicalCoding != null && clinicalCoding.getIClinicalCodingValue() instanceof MedicationLiteVo)
		{
			ChemoDosageDetailsVo vo =  new ChemoDosageDetailsVo();
			vo.setNumberDoses(form.intNoDoses().getValue());
			vo.setProviderOrganisation(form.cmbProviderOrganisation().getValue()); //wdev-12819
			MedicationLiteVo medicationLite = (MedicationLiteVo)clinicalCoding.getIClinicalCodingValue();
			vo.setPatientMedication(new PatientMedicationVo());
			vo.getPatientMedication().setPrescribedDoses(new MedicationDoseCollection());
			MedicationDose medicationDose = new MedicationDose();
			medicationDose.setAdminRoute(form.cmbRoute().getValue());
			medicationDose.setDose(form.txtDose().getValue());
			medicationDose.setDoseUnit(form.cmbDose().getValue());
			if(medicationLite.getID_MedicationIsNotNull() && medicationLite.getID_Medication() == -1)
			{
				vo.getPatientMedication().setMedication(medicationLite);
				vo.getPatientMedication().setOtherMedicationText(clinicalCoding.getIClinicalCodingValueDescription());
			}
			else
			{
				vo.getPatientMedication().setOtherMedicationText(clinicalCoding.getIClinicalCodingValueDescription());
				//vo.getPatientMedication().getPrescribedDoses().add(new MedicationDose());   //wdev-7309
				vo.getPatientMedication().setMedication(medicationLite);						//wdev-12819
			}
			
			vo.getPatientMedication().getPrescribedDoses().add(medicationDose);
			vo.getPatientMedication().setPatient(form.getGlobalContext().Core.getPatientShort());
			vo.getPatientMedication().setIsDiscontinued(Boolean.FALSE);
			
			if ( ! form.getLocalContext().getSelectedDosageIsNotNull())
				addDosage(vo, form.grdDetails().getRows().newRow());
			else
				addDosage(vo, form.grdDetails().getSelectedRow());
				
			//voPatientMedication.setMedication(clinicalCoding.getIClinicalCodingValue());
			//vo.setPatientMedication(value)
			
			clearDrugDetailsControl();
			form.grdDetails().setValue(null); //7309
		}
		else
		{
			engine.showMessage("Please select a Medication");
			return;
		}
		enableDosageControls(false);
		enableMedDosageContextMenu();
		form.grdDetails().setEnabled(true);			//wdev-12819
	}

	public void open() throws PresentationLogicException
	{
		ChemotherapyCycleDetailsVo voChemoCycleDetails = form.getGlobalContext().Oncology.getChemotherapyCycleDetailsVo();
		ChemoTherapyDayDetailsVo   voChemoTherapyDayDetails = form.getGlobalContext().Oncology.getChemoTherapyDayDetailsVo();
		
		super.populateScreenFromData(voChemoCycleDetails);
		//wdev-12819
		if(voChemoCycleDetails != null)
			form.GroupStatus().setValue(voChemoCycleDetails.getIsActiveIsNotNull() ? (voChemoCycleDetails.getIsActive().equals(Boolean.TRUE) ? ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive: ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoInactive) : null);
		//-----
		if(voChemoTherapyDayDetails != null)
		{
			form.intDayNumber().setValue(voChemoTherapyDayDetails.getDayNumber());
			form.dteFraction().setValue(voChemoTherapyDayDetails.getDayDate());
			
			for (int i = 0; voChemoTherapyDayDetails.getDosageDetailsIsNotNull() && i < voChemoTherapyDayDetails.getDosageDetails().size(); i++)
				addDosage(voChemoTherapyDayDetails.getDosageDetails().get(i), form.grdDetails().getRows().newRow());
		}
	}

	private void addDosage(ChemoDosageDetailsVo vo, grdDetailsRow row)
	{
		if(row == null || vo == null)
			return;
		
		row.setColMedication(vo.getPatientMedication().getOtherMedicationText());
		if(vo.getPatientMedication().getPrescribedDoses().size() > 0)
		{		
			String doseUnitandValue = "";
			if(vo.getPatientMedication().getPrescribedDoses().get(0).getDoseIsNotNull())
				doseUnitandValue += vo.getPatientMedication().getPrescribedDoses().get(0).getDose();
			if(vo.getPatientMedication().getPrescribedDoses().get(0).getDoseUnitIsNotNull())
				doseUnitandValue += " " + vo.getPatientMedication().getPrescribedDoses().get(0).getDoseUnit().getText();
			
			row.setColDose(doseUnitandValue);
			MedicationRoute route = vo.getPatientMedication().getPrescribedDoses().get(0).getAdminRoute();
			row.setColAdmin(route != null?route.toString():null);
		}
		row.setColNumberOfDoses(vo.getNumberDosesIsNotNull()?vo.getNumberDoses().toString():null);
		row.setValue(vo);
	}
	
	protected ims.oncology.vo.ChemotherapyCycleDetailsVo populateDataFromScreen(ims.oncology.vo.ChemotherapyCycleDetailsVo value)
	{
		value = super.populateDataFromScreen(value);
		//wdev-12819
		if(form.GroupStatus().getValue().equals(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoActive))
			value.setIsActive(Boolean.TRUE);
		else if(form.GroupStatus().getValue().equals(ims.oncology.forms.chemocycledrugdetails.GenForm.GroupStatusEnumeration.rdoInactive))
			value.setIsActive(Boolean.FALSE);
		else
			value.setIsActive(null);
		//---------------
		if(form.getGlobalContext().Oncology.getCycleDrugDetailModeIsNotNull())
		{
			//if we are editing the cycle we don't want to amend the day details
			if(!form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.EDITCYCLE))
			{
				ChemoTherapyDayDetailsVo voDayDetail = form.getGlobalContext().Oncology.getChemoTherapyDayDetailsVo();
				voDayDetail = populateDayDetailsFromScreen(voDayDetail);
				
				if(value.getDayDetails() == null)
					value.setDayDetails(new ChemoTherapyDayDetailsVoCollection());
				
				int index = value.getDayDetails().indexOf(voDayDetail);
				if(index < 0)
					value.getDayDetails().add(voDayDetail);
				else
					value.getDayDetails().set(index, voDayDetail);
			}
		}
		
		return value;	
	}

	private ChemoTherapyDayDetailsVo populateDayDetailsFromScreen(ChemoTherapyDayDetailsVo chemoTherapyDayDetailsVo)
	{
		if(chemoTherapyDayDetailsVo == null)
			chemoTherapyDayDetailsVo = new ChemoTherapyDayDetailsVo();
		
		chemoTherapyDayDetailsVo.setDayDate(form.dteFraction().getValue());
		chemoTherapyDayDetailsVo.setDayNumber(form.intDayNumber().getValue());

		chemoTherapyDayDetailsVo.setDosageDetails(new ChemoDosageDetailsVoCollection());
		for (int i = 0; i < form.grdDetails().getRows().size(); i++)
		{
			chemoTherapyDayDetailsVo.getDosageDetails().add(form.grdDetails().getRows().get(i).getValue());
		}
			
		return chemoTherapyDayDetailsVo;
	}
	
	private void clearDrugDetailsControl()
	{
		form.customControlMedication().clear();
		form.txtDose().setValue(null);
		form.cmbDose().setValue(null);
		form.cmbRoute().setValue(null);
		form.intNoDoses().setValue(null);
		form.cmbProviderOrganisation().setValue(null);	//wdev-12819
	}

	@Override
	protected void onContextMenuItemClick(int menuItemID, Control sender) throws PresentationLogicException 
	{
		switch(menuItemID)
		{
			case GenForm.ContextMenus.MedicationMultiple.NEW_MEDICATION:
				addMedDose();
			break;
		
			case GenForm.ContextMenus.MedicationMultiple.UPDATE_MEDICATION:
				editMedDose();
			break;
			
			case GenForm.ContextMenus.MedicationMultiple.DISCONTINUE_MEDICATION:
				removeMedDose();
			break;
			
		}
	}
	private void enableMedDosageContextMenu()
	{
		boolean editMode = form.btnOKMedication().isVisible();
		grdDetailsRow row = form.grdDetails().getSelectedRow();
		
		form.getContextMenus().getMedicationMultipleNEW_MEDICATIONItem().setVisible(!editMode && form.getGlobalContext().Oncology.getCycleDrugDetailModeIsNotNull() && !form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.EDITCYCLE) && !form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.VIEWDAY)); //wdev-12819
		form.getContextMenus().getMedicationMultipleUPDATE_MEDICATIONItem().setVisible(!editMode && row != null && form.getGlobalContext().Oncology.getCycleDrugDetailModeIsNotNull() && !form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.EDITCYCLE) && !form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.VIEWDAY)); //wdev-12819
		form.getContextMenus().getMedicationMultipleDISCONTINUE_MEDICATIONItem().setText("Remove");		//wdev-12819
		form.getContextMenus().getMedicationMultipleDISCONTINUE_MEDICATIONItem().setVisible(!editMode && row != null && form.getGlobalContext().Oncology.getCycleDrugDetailModeIsNotNull() && !form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.EDITCYCLE) && !form.getGlobalContext().Oncology.getCycleDrugDetailMode().equals(ChemoCycleMode.VIEWDAY)); //wdev-12819
	}


	private void removeMedDose() 
	{
		clearDrugDetailsControl();
		form.grdDetails().removeSelectedRow();
		//wdev-7309
		enableMedDosageContextMenu();
		
	}

	private void editMedDose() 
	{
		enableDosageControls(true);
		form.grdDetails().setEnabled(false);			//wdev-12819
	}

	private void addMedDose() 
	{
		clearDrugDetailsControl();
		enableDosageControls(true);
		form.grdDetails().setEnabled(false);			//wdev-12819
		form.getLocalContext().setSelectedDosage(null);
		//wdev-12819
		ChemoRegimensDrugConfigVo chemRegVo = null;
		if(form.getGlobalContext().Oncology.getRegimenAcronimIsNotNull())
		{
			chemRegVo = domain.getChemoRegimenConfig(form.getGlobalContext().Oncology.getRegimenAcronim().getID());
			if(chemRegVo != null)
			{
				if(chemRegVo.getLinkedDrugIsNotNull())
				{
					for(int i = 0; i < chemRegVo.getLinkedDrug().size();i++)
					{		
						//PatientMedicationVo tempVo = new PatientMedicationVo();
						//tempVo.setMedication(chemRegVo.getLinkedDrug().get(i));
						form.customControlMedication().setSelectedItem(chemRegVo.getLinkedDrug().get(i));
						//form.customControlMedication().setValue(tempVo);
						
					}
					form.customControlMedication().setSelectedItem(null);
					form.customControlMedication().showOpened();
					
					
				}
			}
		}
		//---------
	}
	
	private void enableDosageControls(boolean bEnable)
	{
		form.customControlMedication().setParentEditing(bEnable);
		form.txtDose().setEnabled(bEnable);
		form.cmbDose().setEnabled(bEnable);
		form.cmbRoute().setEnabled(bEnable);
		form.intNoDoses().setEnabled(bEnable);
		form.cmbProviderOrganisation().setEnabled(bEnable);//wdev-12819
		
		form.btnOKMedication().setVisible(bEnable);
		form.btnOKMedication().setEnabled(bEnable);
		form.btnCancelMedication().setVisible(bEnable);
		form.btnCancelMedication().setEnabled(bEnable);
	}

	@Override
	protected void onChkCopyValueChanged() throws PresentationLogicException 
	{		
		//engine.open(form.getForms().Oncology.ChooseOtherFractionDayDialog);
		//wdev-12819
		if(form.chkCopy().getValue() == true)
		{
			ChemoTherapyDayDetailsVo voCopiedDayDetails = domain.getChemoTherapyDayDetails(form.getGlobalContext().Oncology.getChemotherapyCycleDetailsVo());
			if(voCopiedDayDetails == null || !voCopiedDayDetails.getDosageDetailsIsNotNull() || voCopiedDayDetails.getDosageDetails().size() < 1)
			{
				engine.showMessage("No existing available Day to copy from");
				return;
			}
			else
			{
				//WDEV-16262
				ChemoDosageDetailsVo voDosageDetail = null;
				form.grdDetails().getRows().clear();
				for (int i = 0; voCopiedDayDetails.getDosageDetailsIsNotNull() && i < voCopiedDayDetails.getDosageDetails().size(); i++)
				{
					voCopiedDayDetails.getDosageDetails().get(i).setID_ChemoDosageDetails(null);
					voCopiedDayDetails.getDosageDetails().get(i).getPatientMedication().setID_PatientMedication(null);
					for ( int j=0; voCopiedDayDetails.getDosageDetails().get(i).getPatientMedication().getPrescribedDosesIsNotNull() && j < voCopiedDayDetails.getDosageDetails().get(i).getPatientMedication().getPrescribedDoses().size(); j++)
					{
						voCopiedDayDetails.getDosageDetails().get(i).getPatientMedication().getPrescribedDoses().get(j).setID_PatientMedicationDose(null);
					}
					voDosageDetail = (ChemoDosageDetailsVo)voCopiedDayDetails.getDosageDetails().get(i).clone();
					addDosage(voDosageDetail, form.grdDetails().getRows().newRow());
				}
				//WDEV-16262				
			}
		}
		//---------------------
		
		
	}

	@Override
	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException 
	{
		if(formName.equals(form.getForms().Oncology.ChooseOtherFractionDayDialog) && result.equals(DialogResult.OK))
		{
			ChemoTherapyDayDetailsVo   voCopiedDayDetails = form.getGlobalContext().Oncology.getChemoTherapyDayDetailsVo();
			form.getGlobalContext().Oncology.setChemoTherapyDayDetailsVo(null);
			
			if(voCopiedDayDetails != null)
			{
				
				form.intDayNumber().setValue(voCopiedDayDetails.getDayNumber());
				form.dteFraction().setValue(voCopiedDayDetails.getDayDate());
				
				form.grdDetails().getRows().clear();
				for (int i = 0; voCopiedDayDetails.getDosageDetailsIsNotNull() && i < voCopiedDayDetails.getDosageDetails().size(); i++)
				{
					voCopiedDayDetails.getDosageDetails().get(i).setID_ChemoDosageDetails(null);
					voCopiedDayDetails.getDosageDetails().get(i).getPatientMedication().setID_PatientMedication(null);
					
					addDosage(voCopiedDayDetails.getDosageDetails().get(i), form.grdDetails().getRows().newRow());
				}
			}
			
		}
	}

	//wdev-12819
	protected void onBtnCloseClick() throws PresentationLogicException 
	{
		
		engine.close(DialogResult.CANCEL);
	}
}
