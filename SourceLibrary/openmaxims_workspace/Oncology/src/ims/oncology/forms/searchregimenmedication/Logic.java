//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 4198.17562)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.oncology.forms.searchregimenmedication;

import java.util.ArrayList;

import ims.clinical.vo.ClinicalCodingVo;
import ims.clinical.vo.lookups.CodingItemType;
import ims.core.vo.MedicationLiteVo;
import ims.core.vo.PatientMedicationVo;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;
import ims.oncology.vo.ChemoDosageDetailsVo;
import ims.vo.ValueObject;
import ims.vo.interfaces.IClinicalCodingValue;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);	
	}
	
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		IClinicalCodingValue clinicalCoding = form.ccMedication().getValue();
		
		
		if (clinicalCoding == null || clinicalCoding.getIClinicalCodingValueDescription() == null || clinicalCoding.getIClinicalCodingValueDescription().length() == 0)
		{
			engine.showErrors(new String[]{"Clinical Term is mandatory ","Medication Description is mandatory."});
			return;
		}
		
				
		ValueObject medication = clinicalCoding.getIClinicalCodingValue();	
		if(medication != null && medication instanceof MedicationLiteVo)
		{
			if (((MedicationLiteVo) medication).getID_MedicationIsNotNull() && ((MedicationLiteVo) medication).getID_Medication() == -1)
			{
				//MedicationLiteVo med = (MedicationLiteVo) medication;
				//med.setMedicationName(clinicalCoding.getIClinicalCodingValueDescription());
				//med.setIsActive(true);
				
				//form.getGlobalContext().Oncology.setSelectedMedication(med);
				engine.showErrors(new String[]{"Select a medication"});
				form.ccMedication().setValue(null);
				initialise();
				return;
			}
			else
				form.getGlobalContext().Oncology.setSelectedMedication((MedicationLiteVo)clinicalCoding.getIClinicalCodingValue());
			
			engine.close(DialogResult.OK);	
		}
	}
	
	protected void onFormOpen(Object[] args) throws PresentationLogicException 
	{
		initialise();
		
	}
	private void initialise()
	{
		form.ccMedication().setCodingItemType(CodingItemType.MEDICATION);
		form.ccMedication().setHotlist(Boolean.FALSE);
		form.ccMedication().setParentEditing(Boolean.TRUE);
		form.ccMedication().setIsRequired(Boolean.TRUE);
	}

	//WDEV-17669
	protected void onCcMedicationValueChanged() throws PresentationLogicException
	{
		form.ccMedication().removeNoSuitableTermItem(CodingItemType.MEDICATION);
	}
}
