//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.assessment.forms.graphicassessmentnew;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindgrdAssociatedQuestionscolStatusLookup();
	abstract protected void bindgrdFindingQuestionscolStatusLookup();
	abstract protected void bindgrdFindingQuestionsWithStagecolStatusLookup();
	abstract protected void bindcmbActiveStatusLookup();
	abstract protected void defaultcmbActiveStatusLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnLinkClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPreviewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbUrlClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrDetailsTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onGrdImagesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdAssociatedQuestionsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdAssessmentFindingsRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFindingQuestionsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFindingQuestionsGridComboBoxSelectionChanged(int column, GenForm.lyrDetailsLayer.tabFindingsContainer.grdFindingQuestionsRow row, Object value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFindingQuestionsGridCheckBoxClicked(int column, GenForm.lyrDetailsLayer.tabFindingsContainer.grdFindingQuestionsRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelStageClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddStageClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkAnnotatedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdStagesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdFindingWithStageRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFindingQuestionsWithStageSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFindingQuestionsWithStageGridComboBoxSelectionChanged(int column, GenForm.lyrDetailsLayer.tabFindingsWithStagesContainer.grdFindingQuestionsWithStageRow row, Object value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFindingQuestionsWithStageGridCheckBoxClicked(int column, GenForm.lyrDetailsLayer.tabFindingsWithStagesContainer.grdFindingQuestionsWithStageRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdSpecialitiesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdSpecialitiesSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbActiveStatusValueSet(Object value);
	abstract protected void onLnkReturnToListClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnClearClick();
			}
		});
		this.form.btnLink().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnLinkClick();
			}
		});
		this.form.btnPreview().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPreviewClick();
			}
		});
		this.form.imbUrl().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbUrlClick();
			}
		});
		this.form.btnUpdate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateClick();
			}
		});
		this.form.lyrDetails().tabImages().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabImagesActivated();
			}
		});
		this.form.lyrDetails().tabQuestions().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabQuestionsActivated();
			}
		});
		this.form.lyrDetails().tabFindings().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabFindingsActivated();
			}
		});
		this.form.lyrDetails().tabStages().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabStagesActivated();
			}
		});
		this.form.lyrDetails().tabFindingsWithStages().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabFindingsWithStagesActivated();
			}
		});
		this.form.lyrDetails().tabSpecialties().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabSpecialtiesActivated();
			}
		});
		this.form.lyrDetails().tabImages().grdImages().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdImagesSelectionChanged();
			}
		});
		this.form.lyrDetails().tabQuestions().grdAssociatedQuestions().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdAssociatedQuestionsSelectionChanged();
			}
		});
		this.form.lyrDetails().tabFindings().dyngrdAssessmentFindings().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdAssessmentFindingsRowSelectionChanged(row);
			}
		});
		this.form.lyrDetails().tabFindings().grdFindingQuestions().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFindingQuestionsSelectionChanged();
			}
		});
		this.form.lyrDetails().tabFindings().grdFindingQuestions().setGridComboBoxSelectionChangedEvent(new GridComboBoxSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, Object value) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFindingQuestionsGridComboBoxSelectionChanged(column, new GenForm.lyrDetailsLayer.tabFindingsContainer.grdFindingQuestionsRow(row), value);
			}
		});
		this.form.lyrDetails().tabFindings().grdFindingQuestions().setGridCheckBoxClickedEvent(new GridCheckBoxClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFindingQuestionsGridCheckBoxClicked(column, new GenForm.lyrDetailsLayer.tabFindingsContainer.grdFindingQuestionsRow(row), isChecked);
			}
		});
		this.form.lyrDetails().tabStages().ctnStageDetails().btnCancelStage().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelStageClick();
			}
		});
		this.form.lyrDetails().tabStages().ctnStageDetails().btnAddStage().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddStageClick();
			}
		});
		this.form.lyrDetails().tabStages().ctnStageDetails().chkAnnotated().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkAnnotatedValueChanged();
			}
		});
		this.form.lyrDetails().tabStages().grdStages().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdStagesSelectionChanged();
			}
		});
		this.form.lyrDetails().tabFindingsWithStages().dyngrdFindingWithStage().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdFindingWithStageRowSelectionChanged(row);
			}
		});
		this.form.lyrDetails().tabFindingsWithStages().grdFindingQuestionsWithStage().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFindingQuestionsWithStageSelectionChanged();
			}
		});
		this.form.lyrDetails().tabFindingsWithStages().grdFindingQuestionsWithStage().setGridComboBoxSelectionChangedEvent(new GridComboBoxSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, Object value) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFindingQuestionsWithStageGridComboBoxSelectionChanged(column, new GenForm.lyrDetailsLayer.tabFindingsWithStagesContainer.grdFindingQuestionsWithStageRow(row), value);
			}
		});
		this.form.lyrDetails().tabFindingsWithStages().grdFindingQuestionsWithStage().setGridCheckBoxClickedEvent(new GridCheckBoxClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFindingQuestionsWithStageGridCheckBoxClicked(column, new GenForm.lyrDetailsLayer.tabFindingsWithStagesContainer.grdFindingQuestionsWithStageRow(row), isChecked);
			}
		});
		this.form.lyrDetails().tabSpecialties().grdSpecialities().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdSpecialitiesSelectionChanged();
			}
		});
		this.form.lyrDetails().tabSpecialties().grdSpecialities().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdSpecialitiesSelectionCleared();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.cmbActiveStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbActiveStatusValueSet(value);
			}
		});
		this.form.lnkReturnToList().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onLnkReturnToListClick();
			}
		});
		this.form.getContextMenus().getGenericGridAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Add, sender);
			}
		});
		this.form.getContextMenus().getGenericGridUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Update, sender);
			}
		});
		this.form.getContextMenus().getGenericGridRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Remove, sender);
			}
		});
		this.form.getContextMenus().getGenericGridViewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.View, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveUpItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveUp, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveDownItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveDown, sender);
			}
		});
		this.form.getContextMenus().getGenericGridReplaceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Replace, sender);
			}
		});
		this.form.getContextMenus().getGenericGridConfirmItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Confirm, sender);
			}
		});
		this.form.getContextMenus().getGenericGridEDIT_VIEW_ICP_ACTIONSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.EDIT_VIEW_ICP_ACTIONS, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.ADD, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsDPPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.DPP, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsFALLRISKItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.FALLRISK, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsADLItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.ADL, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsSKINItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.SKIN, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsBLADItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.BLAD, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsBWELItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.BWEL, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsMOBItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.MOB, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsWCItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.WC, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsCOMItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.COM, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsDISItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.DIS, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsPSYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.PSY, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsNURSEDISCHARGECHKLSTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.NURSEDISCHARGECHKLST, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsPREOPPOSSUMItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.PREOPPOSSUM, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsOPERATIVEDETAILSPOSSUMItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.OPERATIVEDETAILSPOSSUM, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsNEW_NON_SCORINGItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.NEW_NON_SCORING, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsDISCHARGECHECKLISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.DISCHARGECHECKLIST, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsNURSING_DISCHARGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.NURSING_DISCHARGE, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsNURSING_DISCHARGE_PLANNINGItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.NURSING_DISCHARGE_PLANNING, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsADD_NEW_BASED_ON_PREVIOUSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.ADD_NEW_BASED_ON_PREVIOUS, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsMANCHESTERTRIAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.MANCHESTERTRIAGE, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.EDIT, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsVIEWItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.VIEW, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsPREVIEWItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.PREVIEW, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsMOVE_UPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.MOVE_UP, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsMOVE_DOWNItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.MOVE_DOWN, sender);
			}
		});
		this.form.getContextMenus().getUserAssessmentsINTRODUCTORY_PHONE_CALLItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.UserAssessments.INTRODUCTORY_PHONE_CALL, sender);
			}
		});
		this.form.getContextMenus().getFindingMenuAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingMenu.Add, sender);
			}
		});
		this.form.getContextMenus().getFindingMenuEditItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingMenu.Edit, sender);
			}
		});
		this.form.getContextMenus().getFindingMenuRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingMenu.Remove, sender);
			}
		});
		this.form.getContextMenus().getFindingMenuCloneItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingMenu.Clone, sender);
			}
		});
		this.form.getContextMenus().getQuestionsAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Questions.Add, sender);
			}
		});
		this.form.getContextMenus().getQuestionsEditItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Questions.Edit, sender);
			}
		});
		this.form.getContextMenus().getQuestionsRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Questions.Remove, sender);
			}
		});
		this.form.getContextMenus().getQuestionsMoveUpItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Questions.MoveUp, sender);
			}
		});
		this.form.getContextMenus().getQuestionsMoveDownItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Questions.MoveDown, sender);
			}
		});
		this.form.getContextMenus().getStagesADD_STAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Stages.ADD_STAGE, sender);
			}
		});
		this.form.getContextMenus().getStagesEDIT_STAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Stages.EDIT_STAGE, sender);
			}
		});
		this.form.getContextMenus().getStagesREMOVE_STAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Stages.REMOVE_STAGE, sender);
			}
		});
		this.form.getContextMenus().getFindingWithStagesMenuADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingWithStagesMenu.ADD, sender);
			}
		});
		this.form.getContextMenus().getFindingWithStagesMenuREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingWithStagesMenu.REMOVE, sender);
			}
		});
		this.form.getContextMenus().getFindingWithStagesMenuCOPYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingWithStagesMenu.COPY, sender);
			}
		});
		this.form.getContextMenus().getFindingWithStagesMenuPASTEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.FindingWithStagesMenu.PASTE, sender);
			}
		});
		this.form.getContextMenus().getLIPNewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.LIP.New, sender);
			}
		});
		this.form.getContextMenus().getLIPUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.LIP.Update, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindgrdAssociatedQuestionscolStatusLookup();
		bindgrdFindingQuestionscolStatusLookup();
		bindgrdFindingQuestionsWithStagecolStatusLookup();
		bindcmbActiveStatusLookup();
	}
	protected void rebindAllLookups()
	{
		bindgrdAssociatedQuestionscolStatusLookup();
		bindgrdFindingQuestionscolStatusLookup();
		bindgrdFindingQuestionsWithStagecolStatusLookup();
		bindcmbActiveStatusLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbActiveStatusLookupValue();
	}
	private void onlyrDetailstabImagesActivated()
	{
		this.form.lyrDetails().showtabImages();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabImages());
	}
	private void onlyrDetailstabQuestionsActivated()
	{
		this.form.lyrDetails().showtabQuestions();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabQuestions());
	}
	private void onlyrDetailstabFindingsActivated()
	{
		this.form.lyrDetails().showtabFindings();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabFindings());
	}
	private void onlyrDetailstabStagesActivated()
	{
		this.form.lyrDetails().showtabStages();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabStages());
	}
	private void onlyrDetailstabFindingsWithStagesActivated()
	{
		this.form.lyrDetails().showtabFindingsWithStages();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabFindingsWithStages());
	}
	private void onlyrDetailstabSpecialtiesActivated()
	{
		this.form.lyrDetails().showtabSpecialties();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabSpecialties());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
