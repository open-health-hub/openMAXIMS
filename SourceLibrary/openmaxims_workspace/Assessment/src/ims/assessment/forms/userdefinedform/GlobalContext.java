//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.assessment.forms.userdefinedform;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getUserDefinedObjectShortIsNotNull()
		{
			return !cx_CoreUserDefinedObjectShort.getValueIsNull(context);
		}
		public ims.assessment.vo.UserDefinedObjectShortVo getUserDefinedObjectShort()
		{
			return (ims.assessment.vo.UserDefinedObjectShortVo)cx_CoreUserDefinedObjectShort.getValue(context);
		}
		public void setUserDefinedObjectShort(ims.assessment.vo.UserDefinedObjectShortVo value)
		{
			cx_CoreUserDefinedObjectShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreUserDefinedObjectShort = new ims.framework.ContextVariable("Core.UserDefinedObjectShort", "_cv_Core.UserDefinedObjectShort");
		public boolean getUserDefinedObjectSearchFilterIsNotNull()
		{
			return !cx_CoreUserDefinedObjectSearchFilter.getValueIsNull(context);
		}
		public ims.assessment.vo.UserDefinedObjectFilterVo getUserDefinedObjectSearchFilter()
		{
			return (ims.assessment.vo.UserDefinedObjectFilterVo)cx_CoreUserDefinedObjectSearchFilter.getValue(context);
		}
		public void setUserDefinedObjectSearchFilter(ims.assessment.vo.UserDefinedObjectFilterVo value)
		{
			cx_CoreUserDefinedObjectSearchFilter.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreUserDefinedObjectSearchFilter = new ims.framework.ContextVariable("Core.UserDefinedObjectSearchFilter", "_cv_Core.UserDefinedObjectSearchFilter");
		public boolean getUserDefinedObjectSelectedIsNotNull()
		{
			return !cx_CoreUserDefinedObjectSelected.getValueIsNull(context);
		}
		public ims.assessment.vo.UserDefinedObjectVo getUserDefinedObjectSelected()
		{
			return (ims.assessment.vo.UserDefinedObjectVo)cx_CoreUserDefinedObjectSelected.getValue(context);
		}
		public void setUserDefinedObjectSelected(ims.assessment.vo.UserDefinedObjectVo value)
		{
			cx_CoreUserDefinedObjectSelected.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreUserDefinedObjectSelected = new ims.framework.ContextVariable("Core.UserDefinedObjectSelected", "_cv_Core.UserDefinedObjectSelected");
		public boolean getUserDefinedFormModeIsNotNull()
		{
			return !cx_CoreUserDefinedFormMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getUserDefinedFormMode()
		{
			return (ims.framework.enumerations.FormMode)cx_CoreUserDefinedFormMode.getValue(context);
		}
		public void setUserDefinedFormMode(ims.framework.enumerations.FormMode value)
		{
			cx_CoreUserDefinedFormMode.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreUserDefinedFormMode = new ims.framework.ContextVariable("Core.UserDefinedFormMode", "_cv_Core.UserDefinedFormMode");

		private ims.framework.Context context;
	}

	public CoreContext Core;
}
