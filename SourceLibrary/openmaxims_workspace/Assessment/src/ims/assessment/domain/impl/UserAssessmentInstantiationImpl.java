//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.45 build 2389.25607)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.assessment.domain.impl;

import ims.assessment.instantiation.domain.objects.PatientAssessment;
import ims.assessment.instantiation.vo.PatientAssessmentRefVo;

import ims.assessment.configuration.domain.objects.UserDefinedObjectComponent;
import ims.assessment.configuration.vo.UserDefinedObjectComponentRefVo;
import ims.assessment.domain.base.impl.BaseUserAssessmentInstantiationImpl;
import ims.assessment.vo.domain.PatientAssessmentVoAssembler;
import ims.assessment.vo.domain.UserDefinedObjectComponentVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;

public class UserAssessmentInstantiationImpl extends BaseUserAssessmentInstantiationImpl
{
	/**
	* save
	*/
	public ims.assessment.vo.PatientAssessmentVo save(ims.assessment.vo.PatientAssessmentVo record) throws ims.domain.exceptions.StaleObjectException
	{
		if(record == null)
			throw new DomainRuntimeException("Cannot save null value for voPatientAssessment");
		if(record.isValidated() == false)
			throw new DomainRuntimeException("PatientAssessmentVo not validated");
		
		DomainFactory factory = getDomainFactory();
		PatientAssessment doPatientAssessment = PatientAssessmentVoAssembler.extractPatientAssessment(factory, record);
		factory.save(doPatientAssessment);
		
		return PatientAssessmentVoAssembler.create(doPatientAssessment);
	}

	/**
	* get
	*/
	public ims.assessment.vo.PatientAssessmentVo get(PatientAssessmentRefVo record)
	{
		if(record == null || record.getID_PatientAssessment() == null)
			throw new DomainRuntimeException("Invalid need assessment record to get");
		
		return PatientAssessmentVoAssembler.create((PatientAssessment)getDomainFactory().getDomainObject(PatientAssessment.class, record.getID_PatientAssessment()));
	}

	/**
	* getComponent
	*/
	public ims.assessment.vo.UserDefinedObjectComponentVo getComponent(UserDefinedObjectComponentRefVo ref)
	{
		if(ref == null || ref.getID_UserDefinedObjectComponent() == null)
			throw new DomainRuntimeException("Invalid component");
				
		return UserDefinedObjectComponentVoAssembler.create((UserDefinedObjectComponent)getDomainFactory().getDomainObject(UserDefinedObjectComponent.class, ref.getID_UserDefinedObjectComponent().intValue()));
	}
}
