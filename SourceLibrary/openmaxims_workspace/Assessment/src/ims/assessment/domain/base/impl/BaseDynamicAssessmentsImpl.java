//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.assessment.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseDynamicAssessmentsImpl extends DomainImpl implements ims.assessment.domain.DynamicAssessments, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetStructuredAssessment(ims.assessment.configuration.vo.UserAssessmentRefVo assessmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessment(ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientAssessment(ims.assessment.vo.Patient_AssessmentVo patientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.patient.vo.PatientRefVo patient, ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.core.admin.vo.CareContextRefVo careContext, ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment, ims.framework.utils.Date fromDate, ims.framework.utils.Date toDate)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessment(ims.assessment.instantiation.vo.PatientAssessmentRefVo patientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetGraphicalAssessment(ims.assessment.configuration.vo.GraphicAssessmentRefVo assessmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.patient.vo.PatientRefVo patient, ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.core.admin.vo.CareContextRefVo careContext, ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment, ims.framework.utils.Date fromDate, ims.framework.utils.Date toDate)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessment(ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLastStructuredAssessment(ims.core.vo.lookups.UserDefinedAssessmentType type, ims.core.admin.vo.CareContextRefVo careContext)
	{
	}

	@SuppressWarnings("unused")
	public void validategetClinicalContactShort(ims.core.admin.vo.ClinicalContactRefVo clinicacalContactRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextShort(ims.core.admin.vo.CareContextRefVo voCareContextRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLinkedReportName(ims.vo.ValueObjectRef refPatientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetHcpById(ims.core.resource.people.vo.HcpRefVo hcpRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPreviousPatientAssessment(ims.vo.ValueObjectRef contextType, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetEpisodeOfCare(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatient(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.CareContextRefVo careContext, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.CareContextRefVo careContext, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientDocument(ims.core.vo.PatientDocumentVo patientDocument, ims.assessment.vo.Patient_AssessmentVo patientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validateisSaved(ims.assessment.instantiation.vo.PatientAssessmentRefVo patientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTemplate(ims.core.admin.vo.TemplateBoRefVo template)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReportAndTemplate(ims.core.admin.vo.TemplateBoRefVo template)
	{
	}

	@SuppressWarnings("unused")
	public void validategetUserAssessment(ims.assessment.configuration.vo.UserAssessmentRefVo assessRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessmentList(ims.assessment.instantiation.vo.PatientAssessmentRefVo patientAssessment)
	{
		if(patientAssessment == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'patientAssessment' of type 'ims.assessment.instantiation.vo.PatientAssessmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPatientDocumentLiteVo(ims.core.documents.vo.PatientDocumentRefVo patDocRef)
	{
	}
}
