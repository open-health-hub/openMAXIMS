//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.oncology.vo.lookups;

import ims.framework.cn.data.TreeNode;
import java.util.ArrayList;
import ims.framework.utils.Image;
import ims.framework.utils.Color;

public class HRG extends ims.vo.LookupInstVo implements TreeNode
{
	private static final long serialVersionUID = 1L;

	public HRG()
	{
		super();
	}
	public HRG(int id)
	{
		super(id, "", true);
	}
	public HRG(int id, String text, boolean active)
	{
		super(id, text, active, null, null, null);
	}
	public HRG(int id, String text, boolean active, HRG parent, Image image)
	{
		super(id, text, active, parent, image);
	}
	public HRG(int id, String text, boolean active, HRG parent, Image image, Color color)
	{
		super(id, text, active, parent, image, color);
	}
	public HRG(int id, String text, boolean active, HRG parent, Image image, Color color, int order)
	{
		super(id, text, active, parent, image, color, order);
	}
	public static HRG buildLookup(ims.vo.LookupInstanceBean bean)
	{
		return new HRG(bean.getId(), bean.getText(), bean.isActive());
	}
	public String toString()
	{
		if(getText() != null)
			return getText();
		return "";
	}
	public TreeNode getParentNode()
	{
		return (HRG)super.getParentInstance();
	}
	public HRG getParent()
	{
		return (HRG)super.getParentInstance();
	}
	public void setParent(HRG parent)
	{
		super.setParentInstance(parent);
	}
	public TreeNode[] getChildren()
	{
		ArrayList children = super.getChildInstances();
		HRG[] typedChildren = new HRG[children.size()];
		for (int i = 0; i < children.size(); i++)
		{
			typedChildren[i] = (HRG)children.get(i);
		}
		return typedChildren;
	}
	public int addChild(TreeNode child)
	{
		if (child instanceof HRG)
		{
			super.addChild((HRG)child);
		}
		return super.getChildInstances().size();
	}
	public int removeChild(TreeNode child)
	{
		if (child instanceof HRG)
		{
			super.removeChild((HRG)child);
		}
		return super.getChildInstances().size();
	}
	public Image getExpandedImage()
	{
		return super.getImage();
	}
	public Image getCollapsedImage()
	{
		return super.getImage();
	}
	public static ims.framework.IItemCollection getNegativeInstancesAsIItemCollection()
	{
		HRGCollection result = new HRGCollection();
		result.add(OUTPATIENT_UNSEALED);
		result.add(MECAHNICAL_AFTERLOAD_ANAESTHETIC);
		result.add(MECHANICAL_AFTERLOAD_NO_ANAESTHETIC);
		result.add(MECHANICAL_AFTERLOAD_LD_ANAESTHETIC);
		result.add(MECHANICAL_AFTERLOAD_LD_NO_ANAESTHETIC);
		result.add(MANUAL_AFTERLOAD_BRACHYTHERAPY_WITH_ANAESTHETIC);
		result.add(SUPERFICIAL_TELETHERAPY_LESSTHAN4);
		result.add(SUPERFICIAL_TELETHERAPY_GREATERTHAN3);
		result.add(SIMPLE_TELETHERAPY_LESSTHAN4);
		result.add(SIMPLE_TELETHERAPY_LESSTHAN3_GREATERTHAN13);
		result.add(SIMPLE_TELETHERAPY_GREATERTHAN12);
		result.add(SIMPLE_TELETHERAPY_WITH_SIMULATOR_LESSTHAN4);
		result.add(SIMPLE_TELETHERAPY_SIM_GRETAERTHAN3_LESSTHAN13);
		result.add(SIMPLE_TELETHERAPY_WITH_SIMULATOR_GREATERTHAN12);
		result.add(COMPLEX_TELETHERAPY_LESSTHAN4);
		result.add(COMPLEX_TELETHERAPY_GREATERTHAN3_LESSTHAN13);
		result.add(COMPLEX_TELETHERAPY_GREATERTHAN12_LESSTHAN24);
		result.add(COMPLEX_TELETHERAPY_GREATERTHAN23);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_LESSTHAN4);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN_LESSTHAN13);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN12_LESSTHAN24);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN23);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_AND_PLANNING_GREATERTHAN23);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_HYPERFRACTIONATION);
		result.add(COMPLEX_TELETHERAPY_WITH_IMAGING_MULTIPLEPLANNING_HYPERFRACTIONATION);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_LESSTHAN4);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN3_LESSTHAN13);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN12_LESSTHAN24);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN23);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_GREATERTHAN23);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_HYPERFRACTIONATION);
		result.add(LIVE_SOURCE_BRACHYTHERAPY_WITHOUT_ANAESTHETIC);
		result.add(LIVE_SOURCE_BRACHYTHERAPY_WITH_ANAESTHETIC);
		result.add(MANUAL_AFTERLOAD_BRACHYTHERAPY_WITHOUT_ANAESTHETIC);
		result.add(INPATIENT_UNSEALED_SOURCE_BRACHYTHERAPY);
		result.add(TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_HYPERFRACTION);
		return result;
	}
	public static HRG[] getNegativeInstances()
	{
		HRG[] instances = new HRG[36];
		instances[0] = OUTPATIENT_UNSEALED;
		instances[1] = MECAHNICAL_AFTERLOAD_ANAESTHETIC;
		instances[2] = MECHANICAL_AFTERLOAD_NO_ANAESTHETIC;
		instances[3] = MECHANICAL_AFTERLOAD_LD_ANAESTHETIC;
		instances[4] = MECHANICAL_AFTERLOAD_LD_NO_ANAESTHETIC;
		instances[5] = MANUAL_AFTERLOAD_BRACHYTHERAPY_WITH_ANAESTHETIC;
		instances[6] = SUPERFICIAL_TELETHERAPY_LESSTHAN4;
		instances[7] = SUPERFICIAL_TELETHERAPY_GREATERTHAN3;
		instances[8] = SIMPLE_TELETHERAPY_LESSTHAN4;
		instances[9] = SIMPLE_TELETHERAPY_LESSTHAN3_GREATERTHAN13;
		instances[10] = SIMPLE_TELETHERAPY_GREATERTHAN12;
		instances[11] = SIMPLE_TELETHERAPY_WITH_SIMULATOR_LESSTHAN4;
		instances[12] = SIMPLE_TELETHERAPY_SIM_GRETAERTHAN3_LESSTHAN13;
		instances[13] = SIMPLE_TELETHERAPY_WITH_SIMULATOR_GREATERTHAN12;
		instances[14] = COMPLEX_TELETHERAPY_LESSTHAN4;
		instances[15] = COMPLEX_TELETHERAPY_GREATERTHAN3_LESSTHAN13;
		instances[16] = COMPLEX_TELETHERAPY_GREATERTHAN12_LESSTHAN24;
		instances[17] = COMPLEX_TELETHERAPY_GREATERTHAN23;
		instances[18] = COMPLEX_TELETHERAPY_WITH_IMAGING_LESSTHAN4;
		instances[19] = COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN_LESSTHAN13;
		instances[20] = COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN12_LESSTHAN24;
		instances[21] = COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN23;
		instances[22] = COMPLEX_TELETHERAPY_WITH_IMAGING_AND_PLANNING_GREATERTHAN23;
		instances[23] = COMPLEX_TELETHERAPY_WITH_IMAGING_HYPERFRACTIONATION;
		instances[24] = COMPLEX_TELETHERAPY_WITH_IMAGING_MULTIPLEPLANNING_HYPERFRACTIONATION;
		instances[25] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_LESSTHAN4;
		instances[26] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN3_LESSTHAN13;
		instances[27] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN12_LESSTHAN24;
		instances[28] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN23;
		instances[29] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_GREATERTHAN23;
		instances[30] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_HYPERFRACTIONATION;
		instances[31] = LIVE_SOURCE_BRACHYTHERAPY_WITHOUT_ANAESTHETIC;
		instances[32] = LIVE_SOURCE_BRACHYTHERAPY_WITH_ANAESTHETIC;
		instances[33] = MANUAL_AFTERLOAD_BRACHYTHERAPY_WITHOUT_ANAESTHETIC;
		instances[34] = INPATIENT_UNSEALED_SOURCE_BRACHYTHERAPY;
		instances[35] = TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_HYPERFRACTION;
		return instances;
	}
	public static String[] getNegativeInstanceNames()
	{
		String[] negativeInstances = new String[36];
		negativeInstances[0] = "OUTPATIENT_UNSEALED";
		negativeInstances[1] = "MECAHNICAL_AFTERLOAD_ANAESTHETIC";
		negativeInstances[2] = "MECHANICAL_AFTERLOAD_NO_ANAESTHETIC";
		negativeInstances[3] = "MECHANICAL_AFTERLOAD_LD_ANAESTHETIC";
		negativeInstances[4] = "MECHANICAL_AFTERLOAD_LD_NO_ANAESTHETIC";
		negativeInstances[5] = "MANUAL_AFTERLOAD_BRACHYTHERAPY_WITH_ANAESTHETIC";
		negativeInstances[6] = "SUPERFICIAL_TELETHERAPY_LESSTHAN4";
		negativeInstances[7] = "SUPERFICIAL_TELETHERAPY_GREATERTHAN3";
		negativeInstances[8] = "SIMPLE_TELETHERAPY_LESSTHAN4";
		negativeInstances[9] = "SIMPLE_TELETHERAPY_LESSTHAN3_GREATERTHAN13";
		negativeInstances[10] = "SIMPLE_TELETHERAPY_GREATERTHAN12";
		negativeInstances[11] = "SIMPLE_TELETHERAPY_WITH_SIMULATOR_LESSTHAN4";
		negativeInstances[12] = "SIMPLE_TELETHERAPY_SIM_GRETAERTHAN3_LESSTHAN13";
		negativeInstances[13] = "SIMPLE_TELETHERAPY_WITH_SIMULATOR_GREATERTHAN12";
		negativeInstances[14] = "COMPLEX_TELETHERAPY_LESSTHAN4";
		negativeInstances[15] = "COMPLEX_TELETHERAPY_GREATERTHAN3_LESSTHAN13";
		negativeInstances[16] = "COMPLEX_TELETHERAPY_GREATERTHAN12_LESSTHAN24";
		negativeInstances[17] = "COMPLEX_TELETHERAPY_GREATERTHAN23";
		negativeInstances[18] = "COMPLEX_TELETHERAPY_WITH_IMAGING_LESSTHAN4";
		negativeInstances[19] = "COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN_LESSTHAN13";
		negativeInstances[20] = "COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN12_LESSTHAN24";
		negativeInstances[21] = "COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN23";
		negativeInstances[22] = "COMPLEX_TELETHERAPY_WITH_IMAGING_AND_PLANNING_GREATERTHAN23";
		negativeInstances[23] = "COMPLEX_TELETHERAPY_WITH_IMAGING_HYPERFRACTIONATION";
		negativeInstances[24] = "COMPLEX_TELETHERAPY_WITH_IMAGING_MULTIPLEPLANNING_HYPERFRACTIONATION";
		negativeInstances[25] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_LESSTHAN4";
		negativeInstances[26] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN3_LESSTHAN13";
		negativeInstances[27] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN12_LESSTHAN24";
		negativeInstances[28] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN23";
		negativeInstances[29] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_GREATERTHAN23";
		negativeInstances[30] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_HYPERFRACTIONATION";
		negativeInstances[31] = "LIVE_SOURCE_BRACHYTHERAPY_WITHOUT_ANAESTHETIC";
		negativeInstances[32] = "LIVE_SOURCE_BRACHYTHERAPY_WITH_ANAESTHETIC";
		negativeInstances[33] = "MANUAL_AFTERLOAD_BRACHYTHERAPY_WITHOUT_ANAESTHETIC";
		negativeInstances[34] = "INPATIENT_UNSEALED_SOURCE_BRACHYTHERAPY";
		negativeInstances[35] = "TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_HYPERFRACTION";
		return negativeInstances;
	}
	public static HRG getNegativeInstance(String name)
	{
		if(name == null)
			return null;
		String[] negativeInstances = getNegativeInstanceNames();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].equals(name))
				return getNegativeInstances()[i];
		}
		return null;
	}
	public static HRG getNegativeInstance(Integer id)
	{
		if(id == null)
			return null;
		HRG[] negativeInstances = getNegativeInstances();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].getID() == id)
				return negativeInstances[i];
		}
		return null;
	}
	public int getTypeId()
	{
		return TYPE_ID;
	}
	public static final int TYPE_ID = 1251021;
	public static final HRG OUTPATIENT_UNSEALED = new HRG(-1231, "Outpatient Unsealed Source Brachytherapy", true, null, null, Color.Default);
	public static final HRG MECAHNICAL_AFTERLOAD_ANAESTHETIC = new HRG(-1232, "Mechanical Afterload High Dose Brachytherapy with anaesthetic", true, null, null, Color.Default);
	public static final HRG MECHANICAL_AFTERLOAD_NO_ANAESTHETIC = new HRG(-1233, "Mechanical Afterload High Dose Brachytherapy without anaesthetic", true, null, null, Color.Default);
	public static final HRG MECHANICAL_AFTERLOAD_LD_ANAESTHETIC = new HRG(-1234, "Mechanical Afterload Low Dose Brachytherapy with anaesthetic", true, null, null, Color.Default);
	public static final HRG MECHANICAL_AFTERLOAD_LD_NO_ANAESTHETIC = new HRG(-1235, "Mechanical Afterload Low Dose Brachytherapy without anaesthetic", true, null, null, Color.Default);
	public static final HRG MANUAL_AFTERLOAD_BRACHYTHERAPY_WITH_ANAESTHETIC = new HRG(-1236, "Manual Afterload Brachytherapy with anaesthetic", true, null, null, Color.Default);
	public static final HRG SUPERFICIAL_TELETHERAPY_LESSTHAN4 = new HRG(-1237, "Superficial Teletherapy < 4 fractions", true, null, null, Color.Default);
	public static final HRG SUPERFICIAL_TELETHERAPY_GREATERTHAN3 = new HRG(-1238, "Superficial Teletherapy > 3 fractions", true, null, null, Color.Default);
	public static final HRG SIMPLE_TELETHERAPY_LESSTHAN4 = new HRG(-1239, "Simple Teletherapy < 4", true, null, null, Color.Default);
	public static final HRG SIMPLE_TELETHERAPY_LESSTHAN3_GREATERTHAN13 = new HRG(-1240, "Simple Teletherapy > 3 < 13", true, null, null, Color.Default);
	public static final HRG SIMPLE_TELETHERAPY_GREATERTHAN12 = new HRG(-1241, "Simple Teletherapy > 12", true, null, null, Color.Default);
	public static final HRG SIMPLE_TELETHERAPY_WITH_SIMULATOR_LESSTHAN4 = new HRG(-1242, "Simple Teletherapy with Simulator < 4 fractions", true, null, null, Color.Default);
	public static final HRG SIMPLE_TELETHERAPY_SIM_GRETAERTHAN3_LESSTHAN13 = new HRG(-1243, "Simple Teletherapy with Simulator > 3 < 13 fractions", true, null, null, Color.Default);
	public static final HRG SIMPLE_TELETHERAPY_WITH_SIMULATOR_GREATERTHAN12 = new HRG(-1244, "Simple Teletherapy with Simulator > 12", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_LESSTHAN4 = new HRG(-1245, "Complex Teletherapy < 4 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_GREATERTHAN3_LESSTHAN13 = new HRG(-1246, "Complex Teletherapy  > 3 < 13 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_GREATERTHAN12_LESSTHAN24 = new HRG(-1247, "Complex Teletherapy  > 12 < 24 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_GREATERTHAN23 = new HRG(-1248, "Complex Teletherapy  > 23 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_LESSTHAN4 = new HRG(-1249, "Complex Teletherapy  with imaging< 4 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN_LESSTHAN13 = new HRG(-1250, "Complex Teletherapy  with imaging > 3 < 13 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN12_LESSTHAN24 = new HRG(-1251, "Complex Teletherapy  with imaging > 12 < 24 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_GREATERTHAN23 = new HRG(-1252, "Complex Teletherapy  with imaging > 23 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_AND_PLANNING_GREATERTHAN23 = new HRG(-1253, "Complex Teletherapy with imaging and multiple planning > 23 fractions", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_HYPERFRACTIONATION = new HRG(-1254, "Complex Teletherapy with imaging, hyperfractionation", true, null, null, Color.Default);
	public static final HRG COMPLEX_TELETHERAPY_WITH_IMAGING_MULTIPLEPLANNING_HYPERFRACTIONATION = new HRG(-1255, "Complex Teletherapy with imaging and multiple plan and hyperfractionation", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_LESSTHAN4 = new HRG(-1256, "Teletherapy with technical Support < 4 fractions", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN3_LESSTHAN13 = new HRG(-1257, "Teletherapy with technical Support > 3 < 13 fractions", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN12_LESSTHAN24 = new HRG(-1258, "Teletherapy with technical Support > 12 < 24", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_GREATERTHAN23 = new HRG(-1259, "Teletherapy with technical Support > 23 fractions", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_GREATERTHAN23 = new HRG(-1260, "Teletherapy with technical Support, multiple planning, > 23 fractions", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_HYPERFRACTIONATION = new HRG(-1261, "Teletherapy with technical Support, hyperfractionation", true, null, null, Color.Default);
	public static final HRG LIVE_SOURCE_BRACHYTHERAPY_WITHOUT_ANAESTHETIC = new HRG(-1262, "Live Source Brachytherapy without anaesthetic", true, null, null, Color.Default);
	public static final HRG LIVE_SOURCE_BRACHYTHERAPY_WITH_ANAESTHETIC = new HRG(-1263, "Live Source Brachytherapy with anaesthetic", true, null, null, Color.Default);
	public static final HRG MANUAL_AFTERLOAD_BRACHYTHERAPY_WITHOUT_ANAESTHETIC = new HRG(-1264, "Manual Afterload Brachytherapy without anaesthetic", true, null, null, Color.Default);
	public static final HRG INPATIENT_UNSEALED_SOURCE_BRACHYTHERAPY = new HRG(-1265, "Inpatient Unsealed Source Brachytherapy", true, null, null, Color.Default);
	public static final HRG TELETHERAPY_WITH_TECHNICAL_SUPPORT_MULTIPLE_PLANNING_HYPERFRACTION = new HRG(-2237, "Teletherapy with Techinical Support, Multiple Plan, Hyperfraction", true, null, null, Color.Default);
}
