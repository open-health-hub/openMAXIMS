//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.vo;


public class RoleDisciplineSecurityLevelLiteGCVo extends ims.vo.ValueObject implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public RoleDisciplineSecurityLevelLiteGCVo()
	{
	}
	public RoleDisciplineSecurityLevelLiteGCVo(ims.ocrr.vo.beans.RoleDisciplineSecurityLevelLiteGCVoBean bean)
	{
		this.roledisciplinesecuritylevels = ims.ocrr.vo.RoleDisciplineSecurityLevelLiteVoCollection.buildFromBeanCollection(bean.getRoleDisciplineSecurityLevels());
		this.isconfigloaded = bean.getIsConfigLoaded();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.ocrr.vo.beans.RoleDisciplineSecurityLevelLiteGCVoBean bean)
	{
		this.roledisciplinesecuritylevels = ims.ocrr.vo.RoleDisciplineSecurityLevelLiteVoCollection.buildFromBeanCollection(bean.getRoleDisciplineSecurityLevels());
		this.isconfigloaded = bean.getIsConfigLoaded();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.ocrr.vo.beans.RoleDisciplineSecurityLevelLiteGCVoBean bean = null;
		if(map != null)
			bean = (ims.ocrr.vo.beans.RoleDisciplineSecurityLevelLiteGCVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.ocrr.vo.beans.RoleDisciplineSecurityLevelLiteGCVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public boolean getRoleDisciplineSecurityLevelsIsNotNull()
	{
		return this.roledisciplinesecuritylevels != null;
	}
	public ims.ocrr.vo.RoleDisciplineSecurityLevelLiteVoCollection getRoleDisciplineSecurityLevels()
	{
		return this.roledisciplinesecuritylevels;
	}
	public void setRoleDisciplineSecurityLevels(ims.ocrr.vo.RoleDisciplineSecurityLevelLiteVoCollection value)
	{
		this.isValidated = false;
		this.roledisciplinesecuritylevels = value;
	}
	public boolean getIsConfigLoadedIsNotNull()
	{
		return this.isconfigloaded != null;
	}
	public Boolean getIsConfigLoaded()
	{
		return this.isconfigloaded;
	}
	public void setIsConfigLoaded(Boolean value)
	{
		this.isValidated = false;
		this.isconfigloaded = value;
	}
	public final String getIItemText()
	{
		return toString();
	}
	public final Integer getBoId() 
	{
		return null;
	}
	public final String getBoClassName()
	{
		return null;
	}
	public boolean equals(Object obj)
	{
		if(obj == null)
			return false;
		if(!(obj instanceof RoleDisciplineSecurityLevelLiteGCVo))
			return false;
		RoleDisciplineSecurityLevelLiteGCVo compareObj = (RoleDisciplineSecurityLevelLiteGCVo)obj;
		if(this.getRoleDisciplineSecurityLevels() == null && compareObj.getRoleDisciplineSecurityLevels() != null)
			return false;
		if(this.getRoleDisciplineSecurityLevels() != null && compareObj.getRoleDisciplineSecurityLevels() == null)
			return false;
		if(this.getRoleDisciplineSecurityLevels() != null && compareObj.getRoleDisciplineSecurityLevels() != null)
			return this.getRoleDisciplineSecurityLevels().equals(compareObj.getRoleDisciplineSecurityLevels());
		return super.equals(obj);
	}
	/**
	* doesInvPassSecurityCheck
	*/
	public boolean doesInvPassSecurityCheck(ims.core.clinical.vo.ServiceRefVo voInvService, ims.ocrr.vo.SecurityLevelConfigVo voInvSecurityLevel, boolean isOrdering)
	{
		if (voInvService == null)
			return true;
		
		//no security restriction on this investigation
		if(voInvSecurityLevel == null)
			return true;
		
		//WDEV-10848 - there may be no security level for the specific discipline configured for the role
		boolean serviceFound = false;
		if(this.getRoleDisciplineSecurityLevelsIsNotNull())
		{
			for(int i=0;i<this.getRoleDisciplineSecurityLevels().size(); i++)
			{
				RoleDisciplineSecurityLevelLiteVo voRoleDiscipSec = this.getRoleDisciplineSecurityLevels().get(i);
				if(voRoleDiscipSec.getService().equals(voInvService))
				{
					serviceFound = true; //WDEV-10848
					if(isOrdering)
					{
						if(voRoleDiscipSec.getOrderingSecurityLevel() == null)
							return true;
						if(voInvSecurityLevel.getSecurityLevel().intValue() <= voRoleDiscipSec.getOrderingSecurityLevel().getSecurityLevel().intValue())
							return true;
					}
					else if(!isOrdering) //viewing
					{
						if(voRoleDiscipSec.getViewingSecurityLevel() == null)
							return true;
						if(voInvSecurityLevel.getSecurityLevel().intValue() <= voRoleDiscipSec.getViewingSecurityLevel().getSecurityLevel().intValue())
							return true;
					}	
				}
			}
		}
		
		//WDEV-10848
		if(!serviceFound)
			return true;
		
		return false;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		RoleDisciplineSecurityLevelLiteGCVo clone = new RoleDisciplineSecurityLevelLiteGCVo();
		
		if(this.roledisciplinesecuritylevels == null)
			clone.roledisciplinesecuritylevels = null;
		else
			clone.roledisciplinesecuritylevels = (ims.ocrr.vo.RoleDisciplineSecurityLevelLiteVoCollection)this.roledisciplinesecuritylevels.clone();
		clone.isconfigloaded = this.isconfigloaded;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(RoleDisciplineSecurityLevelLiteGCVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A RoleDisciplineSecurityLevelLiteGCVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		RoleDisciplineSecurityLevelLiteGCVo compareObj = (RoleDisciplineSecurityLevelLiteGCVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getRoleDisciplineSecurityLevels() == null && compareObj.getRoleDisciplineSecurityLevels() != null)
				return -1;
			if(this.getRoleDisciplineSecurityLevels() != null && compareObj.getRoleDisciplineSecurityLevels() == null)
				return 1;
			if(this.getRoleDisciplineSecurityLevels() != null && compareObj.getRoleDisciplineSecurityLevels() != null)
				retVal = this.getRoleDisciplineSecurityLevels().compareTo(compareObj.getRoleDisciplineSecurityLevels());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.roledisciplinesecuritylevels != null)
			count++;
		if(this.isconfigloaded != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 2;
	}
	protected ims.ocrr.vo.RoleDisciplineSecurityLevelLiteVoCollection roledisciplinesecuritylevels;
	protected Boolean isconfigloaded;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
