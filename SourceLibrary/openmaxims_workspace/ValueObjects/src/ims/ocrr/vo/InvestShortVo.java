//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.vo;

/**
 * Linked to OCRR.Configuration.Investigation business object (ID: 1058100001).
 */
public class InvestShortVo extends ims.ocrr.configuration.vo.InvestigationRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public InvestShortVo()
	{
	}
	public InvestShortVo(Integer id, int version)
	{
		super(id, version);
	}
	public InvestShortVo(ims.ocrr.vo.beans.InvestShortVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.colour = bean.getColour() == null ? null : bean.getColour().buildColor();
		this.activestatus = bean.getActiveStatus() == null ? null : ims.core.vo.lookups.PreActiveActiveInactiveStatus.buildLookup(bean.getActiveStatus());
		this.investigationindex = bean.getInvestigationIndex() == null ? null : bean.getInvestigationIndex().buildVo();
		this.providerservice = bean.getProviderService() == null ? null : bean.getProviderService().buildVo();
		this.helptext = ims.core.vo.HelpTextVoCollection.buildFromBeanCollection(bean.getHelpText());
		this.isaddon = bean.getIsAddon();
		this.minreorderperiodval = bean.getMinReorderPeriodVal();
		this.minreorderperiodunit = bean.getMinReorderPeriodUnit() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getMinReorderPeriodUnit());
		this.femaleminreorderperiodval = bean.getFemaleMinReorderPeriodVal();
		this.femaleminreorderperiodunit = bean.getFemaleMinReorderPeriodUnit() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getFemaleMinReorderPeriodUnit());
		this.turnaroundmeasure = bean.getTurnaroundMeasure() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getTurnaroundMeasure());
		this.expectedturnaround = bean.getExpectedTurnaround();
		this.eventtype = bean.getEventType() == null ? null : ims.ocrr.vo.lookups.InvEventType.buildLookup(bean.getEventType());
		if(bean.getAssocInvestigations() != null)
		{
			this.associnvestigations = new ims.ocrr.configuration.vo.InvestigationRefVoCollection();
			for(int associnvestigations_i = 0; associnvestigations_i < bean.getAssocInvestigations().length; associnvestigations_i++)
			{
				this.associnvestigations.add(new ims.ocrr.configuration.vo.InvestigationRefVo(new Integer(bean.getAssocInvestigations()[associnvestigations_i].getId()), bean.getAssocInvestigations()[associnvestigations_i].getVersion()));
			}
		}
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.ocrr.vo.beans.InvestShortVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.colour = bean.getColour() == null ? null : bean.getColour().buildColor();
		this.activestatus = bean.getActiveStatus() == null ? null : ims.core.vo.lookups.PreActiveActiveInactiveStatus.buildLookup(bean.getActiveStatus());
		this.investigationindex = bean.getInvestigationIndex() == null ? null : bean.getInvestigationIndex().buildVo(map);
		this.providerservice = bean.getProviderService() == null ? null : bean.getProviderService().buildVo(map);
		this.helptext = ims.core.vo.HelpTextVoCollection.buildFromBeanCollection(bean.getHelpText());
		this.isaddon = bean.getIsAddon();
		this.minreorderperiodval = bean.getMinReorderPeriodVal();
		this.minreorderperiodunit = bean.getMinReorderPeriodUnit() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getMinReorderPeriodUnit());
		this.femaleminreorderperiodval = bean.getFemaleMinReorderPeriodVal();
		this.femaleminreorderperiodunit = bean.getFemaleMinReorderPeriodUnit() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getFemaleMinReorderPeriodUnit());
		this.turnaroundmeasure = bean.getTurnaroundMeasure() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getTurnaroundMeasure());
		this.expectedturnaround = bean.getExpectedTurnaround();
		this.eventtype = bean.getEventType() == null ? null : ims.ocrr.vo.lookups.InvEventType.buildLookup(bean.getEventType());
		if(bean.getAssocInvestigations() != null)
		{
			this.associnvestigations = new ims.ocrr.configuration.vo.InvestigationRefVoCollection();
			for(int associnvestigations_i = 0; associnvestigations_i < bean.getAssocInvestigations().length; associnvestigations_i++)
			{
				this.associnvestigations.add(new ims.ocrr.configuration.vo.InvestigationRefVo(new Integer(bean.getAssocInvestigations()[associnvestigations_i].getId()), bean.getAssocInvestigations()[associnvestigations_i].getVersion()));
			}
		}
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.ocrr.vo.beans.InvestShortVoBean bean = null;
		if(map != null)
			bean = (ims.ocrr.vo.beans.InvestShortVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.ocrr.vo.beans.InvestShortVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("COLOUR"))
			return getColour();
		if(fieldName.equals("ACTIVESTATUS"))
			return getActiveStatus();
		if(fieldName.equals("INVESTIGATIONINDEX"))
			return getInvestigationIndex();
		if(fieldName.equals("PROVIDERSERVICE"))
			return getProviderService();
		if(fieldName.equals("HELPTEXT"))
			return getHelpText();
		if(fieldName.equals("ISADDON"))
			return getIsAddon();
		if(fieldName.equals("MINREORDERPERIODVAL"))
			return getMinReorderPeriodVal();
		if(fieldName.equals("MINREORDERPERIODUNIT"))
			return getMinReorderPeriodUnit();
		if(fieldName.equals("FEMALEMINREORDERPERIODVAL"))
			return getFemaleMinReorderPeriodVal();
		if(fieldName.equals("FEMALEMINREORDERPERIODUNIT"))
			return getFemaleMinReorderPeriodUnit();
		if(fieldName.equals("TURNAROUNDMEASURE"))
			return getTurnaroundMeasure();
		if(fieldName.equals("EXPECTEDTURNAROUND"))
			return getExpectedTurnaround();
		if(fieldName.equals("EVENTTYPE"))
			return getEventType();
		if(fieldName.equals("ASSOCINVESTIGATIONS"))
			return getAssocInvestigations();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getColourIsNotNull()
	{
		return this.colour != null;
	}
	public ims.framework.utils.Color getColour()
	{
		return this.colour;
	}
	public void setColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.colour = value;
	}
	public boolean getActiveStatusIsNotNull()
	{
		return this.activestatus != null;
	}
	public ims.core.vo.lookups.PreActiveActiveInactiveStatus getActiveStatus()
	{
		return this.activestatus;
	}
	public void setActiveStatus(ims.core.vo.lookups.PreActiveActiveInactiveStatus value)
	{
		this.isValidated = false;
		this.activestatus = value;
	}
	public boolean getInvestigationIndexIsNotNull()
	{
		return this.investigationindex != null;
	}
	public ims.ocrr.vo.InvestigationIndexShortVo getInvestigationIndex()
	{
		return this.investigationindex;
	}
	public void setInvestigationIndex(ims.ocrr.vo.InvestigationIndexShortVo value)
	{
		this.isValidated = false;
		this.investigationindex = value;
	}
	public boolean getProviderServiceIsNotNull()
	{
		return this.providerservice != null;
	}
	public ims.ocrr.vo.LocSvcProviderSysVo getProviderService()
	{
		return this.providerservice;
	}
	public void setProviderService(ims.ocrr.vo.LocSvcProviderSysVo value)
	{
		this.isValidated = false;
		this.providerservice = value;
	}
	public boolean getHelpTextIsNotNull()
	{
		return this.helptext != null;
	}
	public ims.core.vo.HelpTextVoCollection getHelpText()
	{
		return this.helptext;
	}
	public void setHelpText(ims.core.vo.HelpTextVoCollection value)
	{
		this.isValidated = false;
		this.helptext = value;
	}
	public boolean getIsAddonIsNotNull()
	{
		return this.isaddon != null;
	}
	public Boolean getIsAddon()
	{
		return this.isaddon;
	}
	public void setIsAddon(Boolean value)
	{
		this.isValidated = false;
		this.isaddon = value;
	}
	public boolean getMinReorderPeriodValIsNotNull()
	{
		return this.minreorderperiodval != null;
	}
	public Integer getMinReorderPeriodVal()
	{
		return this.minreorderperiodval;
	}
	public void setMinReorderPeriodVal(Integer value)
	{
		this.isValidated = false;
		this.minreorderperiodval = value;
	}
	public boolean getMinReorderPeriodUnitIsNotNull()
	{
		return this.minreorderperiodunit != null;
	}
	public ims.ocrr.vo.lookups.MinReorderPeriod getMinReorderPeriodUnit()
	{
		return this.minreorderperiodunit;
	}
	public void setMinReorderPeriodUnit(ims.ocrr.vo.lookups.MinReorderPeriod value)
	{
		this.isValidated = false;
		this.minreorderperiodunit = value;
	}
	public boolean getFemaleMinReorderPeriodValIsNotNull()
	{
		return this.femaleminreorderperiodval != null;
	}
	public Integer getFemaleMinReorderPeriodVal()
	{
		return this.femaleminreorderperiodval;
	}
	public void setFemaleMinReorderPeriodVal(Integer value)
	{
		this.isValidated = false;
		this.femaleminreorderperiodval = value;
	}
	public boolean getFemaleMinReorderPeriodUnitIsNotNull()
	{
		return this.femaleminreorderperiodunit != null;
	}
	public ims.ocrr.vo.lookups.MinReorderPeriod getFemaleMinReorderPeriodUnit()
	{
		return this.femaleminreorderperiodunit;
	}
	public void setFemaleMinReorderPeriodUnit(ims.ocrr.vo.lookups.MinReorderPeriod value)
	{
		this.isValidated = false;
		this.femaleminreorderperiodunit = value;
	}
	public boolean getTurnaroundMeasureIsNotNull()
	{
		return this.turnaroundmeasure != null;
	}
	public ims.ocrr.vo.lookups.MinReorderPeriod getTurnaroundMeasure()
	{
		return this.turnaroundmeasure;
	}
	public void setTurnaroundMeasure(ims.ocrr.vo.lookups.MinReorderPeriod value)
	{
		this.isValidated = false;
		this.turnaroundmeasure = value;
	}
	public boolean getExpectedTurnaroundIsNotNull()
	{
		return this.expectedturnaround != null;
	}
	public Integer getExpectedTurnaround()
	{
		return this.expectedturnaround;
	}
	public void setExpectedTurnaround(Integer value)
	{
		this.isValidated = false;
		this.expectedturnaround = value;
	}
	public boolean getEventTypeIsNotNull()
	{
		return this.eventtype != null;
	}
	public ims.ocrr.vo.lookups.InvEventType getEventType()
	{
		return this.eventtype;
	}
	public void setEventType(ims.ocrr.vo.lookups.InvEventType value)
	{
		this.isValidated = false;
		this.eventtype = value;
	}
	public boolean getAssocInvestigationsIsNotNull()
	{
		return this.associnvestigations != null;
	}
	public ims.ocrr.configuration.vo.InvestigationRefVoCollection getAssocInvestigations()
	{
		return this.associnvestigations;
	}
	public void setAssocInvestigations(ims.ocrr.configuration.vo.InvestigationRefVoCollection value)
	{
		this.isValidated = false;
		this.associnvestigations = value;
	}
	/**
	* getNameWithLocationInfo
	*/
	public String getNameWithLocationInfo()
	{
		if(this.investigationindex == null)
			return "";
		if(this.investigationindex.getName() == null)
			return "";
			
		String additional = getLocationInfo();
		return this.investigationindex.getName() + additional;
	}
	/**
	* getName
	*/
	public String getName()
	{
		if(this.investigationindex != null && this.investigationindex.getNameIsNotNull())
			return this.investigationindex.getName();
		return "";
	}
	/**
	* buildHelpTextTooltip
	*/
	public String buildHelpTextTooltip()
	{
		if(this.helptext == null)
			return null;
		
		StringBuffer sb = new StringBuffer();
		
		for(int i=0;i<this.helptext.size();i++)
		{
			
			if(this.helptext.get(i).getTextCategoryIsNotNull())
				sb.append( new ims.utils.textile.Textile().process(ims.utils.textile.Textile.setBold(this.helptext.get(i).getTextCategory().getText()) + "\n" + this.helptext.get(i).getHelpText()));	}
		
		return sb.toString();
	}
	/**
	* getLocationInfo
	*/
	public String getLocationInfo()
	{
		String additional = "";		
		if(this.providerservice != null && this.providerservice.getLocationServiceIsNotNull() && this.providerservice.getLocationService().getLocationIsNotNull())
			additional = " (" + this.providerservice.getLocationService().getLocation().getName();
			
		if(this.providerservice != null && this.providerservice.getLocationServiceIsNotNull() && this.providerservice.getLocationService().getServiceIsNotNull() && this.providerservice.getLocationService().getService().getServiceNameIsNotNull())
		{
			if(additional.length() > 0)
				additional += ", ";
			else
				additional = " (";
				
			additional += this.providerservice.getLocationService().getService().getServiceName() + ")";
		}
		else if(additional.length() > 0)
			additional += ")";
		return additional;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.investigationindex != null)
		{
			if(!this.investigationindex.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.providerservice != null)
		{
			if(!this.providerservice.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.helptext != null)
		{
			if(!this.helptext.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.activestatus == null)
			listOfErrors.add("ActiveStatus is mandatory");
		if(this.investigationindex == null)
			listOfErrors.add("InvestigationIndex is mandatory");
		if(this.investigationindex != null)
		{
			String[] listOfOtherErrors = this.investigationindex.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.providerservice != null)
		{
			String[] listOfOtherErrors = this.providerservice.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.helptext != null)
		{
			String[] listOfOtherErrors = this.helptext.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.eventtype == null)
			listOfErrors.add("EventType is mandatory");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		InvestShortVo clone = new InvestShortVo(this.id, this.version);
		
		if(this.colour == null)
			clone.colour = null;
		else
			clone.colour = (ims.framework.utils.Color)this.colour.clone();
		if(this.activestatus == null)
			clone.activestatus = null;
		else
			clone.activestatus = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)this.activestatus.clone();
		if(this.investigationindex == null)
			clone.investigationindex = null;
		else
			clone.investigationindex = (ims.ocrr.vo.InvestigationIndexShortVo)this.investigationindex.clone();
		if(this.providerservice == null)
			clone.providerservice = null;
		else
			clone.providerservice = (ims.ocrr.vo.LocSvcProviderSysVo)this.providerservice.clone();
		if(this.helptext == null)
			clone.helptext = null;
		else
			clone.helptext = (ims.core.vo.HelpTextVoCollection)this.helptext.clone();
		clone.isaddon = this.isaddon;
		clone.minreorderperiodval = this.minreorderperiodval;
		if(this.minreorderperiodunit == null)
			clone.minreorderperiodunit = null;
		else
			clone.minreorderperiodunit = (ims.ocrr.vo.lookups.MinReorderPeriod)this.minreorderperiodunit.clone();
		clone.femaleminreorderperiodval = this.femaleminreorderperiodval;
		if(this.femaleminreorderperiodunit == null)
			clone.femaleminreorderperiodunit = null;
		else
			clone.femaleminreorderperiodunit = (ims.ocrr.vo.lookups.MinReorderPeriod)this.femaleminreorderperiodunit.clone();
		if(this.turnaroundmeasure == null)
			clone.turnaroundmeasure = null;
		else
			clone.turnaroundmeasure = (ims.ocrr.vo.lookups.MinReorderPeriod)this.turnaroundmeasure.clone();
		clone.expectedturnaround = this.expectedturnaround;
		if(this.eventtype == null)
			clone.eventtype = null;
		else
			clone.eventtype = (ims.ocrr.vo.lookups.InvEventType)this.eventtype.clone();
		clone.associnvestigations = this.associnvestigations;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(InvestShortVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A InvestShortVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		InvestShortVo compareObj = (InvestShortVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getInvestigationIndex() == null && compareObj.getInvestigationIndex() != null)
				return -1;
			if(this.getInvestigationIndex() != null && compareObj.getInvestigationIndex() == null)
				return 1;
			if(this.getInvestigationIndex() != null && compareObj.getInvestigationIndex() != null)
				retVal = this.getInvestigationIndex().compareTo(compareObj.getInvestigationIndex());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.colour != null)
			count++;
		if(this.activestatus != null)
			count++;
		if(this.investigationindex != null)
			count++;
		if(this.providerservice != null)
			count++;
		if(this.helptext != null)
			count++;
		if(this.isaddon != null)
			count++;
		if(this.minreorderperiodval != null)
			count++;
		if(this.minreorderperiodunit != null)
			count++;
		if(this.femaleminreorderperiodval != null)
			count++;
		if(this.femaleminreorderperiodunit != null)
			count++;
		if(this.turnaroundmeasure != null)
			count++;
		if(this.expectedturnaround != null)
			count++;
		if(this.eventtype != null)
			count++;
		if(this.associnvestigations != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 14;
	}
	protected ims.framework.utils.Color colour;
	protected ims.core.vo.lookups.PreActiveActiveInactiveStatus activestatus;
	protected ims.ocrr.vo.InvestigationIndexShortVo investigationindex;
	protected ims.ocrr.vo.LocSvcProviderSysVo providerservice;
	protected ims.core.vo.HelpTextVoCollection helptext;
	protected Boolean isaddon;
	protected Integer minreorderperiodval;
	protected ims.ocrr.vo.lookups.MinReorderPeriod minreorderperiodunit;
	protected Integer femaleminreorderperiodval;
	protected ims.ocrr.vo.lookups.MinReorderPeriod femaleminreorderperiodunit;
	protected ims.ocrr.vo.lookups.MinReorderPeriod turnaroundmeasure;
	protected Integer expectedturnaround;
	protected ims.ocrr.vo.lookups.InvEventType eventtype;
	protected ims.ocrr.configuration.vo.InvestigationRefVoCollection associnvestigations;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
