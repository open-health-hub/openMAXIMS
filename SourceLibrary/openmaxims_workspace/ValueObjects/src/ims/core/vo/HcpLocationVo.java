//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo;

/**
 * Linked to core.resource.HcpLocation business object (ID: 1005100003).
 */
public class HcpLocationVo extends ims.core.vo.HCPLocationLiteVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public HcpLocationVo()
	{
	}
	public HcpLocationVo(Integer id, int version)
	{
		super(id, version);
	}
	public HcpLocationVo(ims.core.vo.beans.HcpLocationVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.location = bean.getLocation() == null ? null : bean.getLocation().buildVo();
		this.isprimary = bean.getIsPrimary();
		this.accreditationstatus = bean.getAccreditationStatus() == null ? null : ims.core.vo.lookups.AccreditationLocationStatus.buildLookup(bean.getAccreditationStatus());
		this.services = ims.core.vo.HcpLocationsServicesVoCollection.buildFromBeanCollection(bean.getServices());
		this.startdate = bean.getStartDate() == null ? null : bean.getStartDate().buildDate();
		this.enddate = bean.getEndDate() == null ? null : bean.getEndDate().buildDate();
		this.accreditationhistory = ims.core.vo.HcpLocationAccreditationHistoryVoCollection.buildFromBeanCollection(bean.getAccreditationHistory());
		this.casetypes = ims.ntpf.vo.lookups.CaseTypeCollection.buildFromBeanCollection(bean.getCaseTypes());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.beans.HcpLocationVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.location = bean.getLocation() == null ? null : bean.getLocation().buildVo(map);
		this.isprimary = bean.getIsPrimary();
		this.accreditationstatus = bean.getAccreditationStatus() == null ? null : ims.core.vo.lookups.AccreditationLocationStatus.buildLookup(bean.getAccreditationStatus());
		this.services = ims.core.vo.HcpLocationsServicesVoCollection.buildFromBeanCollection(bean.getServices());
		this.startdate = bean.getStartDate() == null ? null : bean.getStartDate().buildDate();
		this.enddate = bean.getEndDate() == null ? null : bean.getEndDate().buildDate();
		this.accreditationhistory = ims.core.vo.HcpLocationAccreditationHistoryVoCollection.buildFromBeanCollection(bean.getAccreditationHistory());
		this.casetypes = ims.ntpf.vo.lookups.CaseTypeCollection.buildFromBeanCollection(bean.getCaseTypes());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.beans.HcpLocationVoBean bean = null;
		if(map != null)
			bean = (ims.core.vo.beans.HcpLocationVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.core.vo.beans.HcpLocationVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("SERVICES"))
			return getServices();
		if(fieldName.equals("STARTDATE"))
			return getStartDate();
		if(fieldName.equals("ENDDATE"))
			return getEndDate();
		if(fieldName.equals("ACCREDITATIONHISTORY"))
			return getAccreditationHistory();
		if(fieldName.equals("CASETYPES"))
			return getCaseTypes();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getServicesIsNotNull()
	{
		return this.services != null;
	}
	public ims.core.vo.HcpLocationsServicesVoCollection getServices()
	{
		return this.services;
	}
	public void setServices(ims.core.vo.HcpLocationsServicesVoCollection value)
	{
		this.isValidated = false;
		this.services = value;
	}
	public boolean getStartDateIsNotNull()
	{
		return this.startdate != null;
	}
	public ims.framework.utils.Date getStartDate()
	{
		return this.startdate;
	}
	public void setStartDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.startdate = value;
	}
	public boolean getEndDateIsNotNull()
	{
		return this.enddate != null;
	}
	public ims.framework.utils.Date getEndDate()
	{
		return this.enddate;
	}
	public void setEndDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.enddate = value;
	}
	public boolean getAccreditationHistoryIsNotNull()
	{
		return this.accreditationhistory != null;
	}
	public ims.core.vo.HcpLocationAccreditationHistoryVoCollection getAccreditationHistory()
	{
		return this.accreditationhistory;
	}
	public void setAccreditationHistory(ims.core.vo.HcpLocationAccreditationHistoryVoCollection value)
	{
		this.isValidated = false;
		this.accreditationhistory = value;
	}
	public boolean getCaseTypesIsNotNull()
	{
		return this.casetypes != null;
	}
	public ims.ntpf.vo.lookups.CaseTypeCollection getCaseTypes()
	{
		return this.casetypes;
	}
	public void setCaseTypes(ims.ntpf.vo.lookups.CaseTypeCollection value)
	{
		this.isValidated = false;
		this.casetypes = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.location != null)
		{
			if(!this.location.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.services != null)
		{
			if(!this.services.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.accreditationhistory != null)
		{
			if(!this.accreditationhistory.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.location == null)
			listOfErrors.add("Location is mandatory");
		if(this.location != null)
		{
			String[] listOfOtherErrors = this.location.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.services != null)
		{
			String[] listOfOtherErrors = this.services.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.accreditationhistory != null)
		{
			String[] listOfOtherErrors = this.accreditationhistory.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		HcpLocationVo clone = new HcpLocationVo(this.id, this.version);
		
		if(this.location == null)
			clone.location = null;
		else
			clone.location = (ims.core.vo.LocShortVo)this.location.clone();
		clone.isprimary = this.isprimary;
		if(this.accreditationstatus == null)
			clone.accreditationstatus = null;
		else
			clone.accreditationstatus = (ims.core.vo.lookups.AccreditationLocationStatus)this.accreditationstatus.clone();
		if(this.services == null)
			clone.services = null;
		else
			clone.services = (ims.core.vo.HcpLocationsServicesVoCollection)this.services.clone();
		if(this.startdate == null)
			clone.startdate = null;
		else
			clone.startdate = (ims.framework.utils.Date)this.startdate.clone();
		if(this.enddate == null)
			clone.enddate = null;
		else
			clone.enddate = (ims.framework.utils.Date)this.enddate.clone();
		if(this.accreditationhistory == null)
			clone.accreditationhistory = null;
		else
			clone.accreditationhistory = (ims.core.vo.HcpLocationAccreditationHistoryVoCollection)this.accreditationhistory.clone();
		if(this.casetypes == null)
			clone.casetypes = null;
		else
			clone.casetypes = (ims.ntpf.vo.lookups.CaseTypeCollection)this.casetypes.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(HcpLocationVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A HcpLocationVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		HcpLocationVo compareObj = (HcpLocationVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getID_HcpLocation() == null && compareObj.getID_HcpLocation() != null)
				return -1;
			if(this.getID_HcpLocation() != null && compareObj.getID_HcpLocation() == null)
				return 1;
			if(this.getID_HcpLocation() != null && compareObj.getID_HcpLocation() != null)
				retVal = this.getID_HcpLocation().compareTo(compareObj.getID_HcpLocation());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = super.countFieldsWithValue();
		if(this.services != null)
			count++;
		if(this.startdate != null)
			count++;
		if(this.enddate != null)
			count++;
		if(this.accreditationhistory != null)
			count++;
		if(this.casetypes != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return super.countValueObjectFields() + 5;
	}
	protected ims.core.vo.HcpLocationsServicesVoCollection services;
	protected ims.framework.utils.Date startdate;
	protected ims.framework.utils.Date enddate;
	protected ims.core.vo.HcpLocationAccreditationHistoryVoCollection accreditationhistory;
	protected ims.ntpf.vo.lookups.CaseTypeCollection casetypes;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
