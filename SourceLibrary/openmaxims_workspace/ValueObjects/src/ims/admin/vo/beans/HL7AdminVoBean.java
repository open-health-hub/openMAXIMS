//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.vo.beans;

public class HL7AdminVoBean extends ims.vo.ValueObjectBean
{
	public HL7AdminVoBean()
	{
	}
	public HL7AdminVoBean(ims.admin.vo.HL7AdminVo vo)
	{
		this.started = vo.getStarted();
		this.messages = vo.getMessages() == null ? null : vo.getMessages().getBeanCollection();
		this.isrunning = vo.getIsRunning();
		this.cfgstartinterface = vo.getCfgStartInterface();
		this.ipaddress = vo.getIpAddress();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.admin.vo.HL7AdminVo vo)
	{
		this.started = vo.getStarted();
		this.messages = vo.getMessages() == null ? null : vo.getMessages().getBeanCollection();
		this.isrunning = vo.getIsRunning();
		this.cfgstartinterface = vo.getCfgStartInterface();
		this.ipaddress = vo.getIpAddress();
	}

	public ims.admin.vo.HL7AdminVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.admin.vo.HL7AdminVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.admin.vo.HL7AdminVo vo = null;
		if(map != null)
			vo = (ims.admin.vo.HL7AdminVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.admin.vo.HL7AdminVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public String getStarted()
	{
		return this.started;
	}
	public void setStarted(String value)
	{
		this.started = value;
	}
	public ims.admin.vo.beans.HL7MessageInfoVoBean[] getMessages()
	{
		return this.messages;
	}
	public void setMessages(ims.admin.vo.beans.HL7MessageInfoVoBean[] value)
	{
		this.messages = value;
	}
	public Boolean getIsRunning()
	{
		return this.isrunning;
	}
	public void setIsRunning(Boolean value)
	{
		this.isrunning = value;
	}
	public Boolean getCfgStartInterface()
	{
		return this.cfgstartinterface;
	}
	public void setCfgStartInterface(Boolean value)
	{
		this.cfgstartinterface = value;
	}
	public String getIpAddress()
	{
		return this.ipaddress;
	}
	public void setIpAddress(String value)
	{
		this.ipaddress = value;
	}

	private String started;
	private ims.admin.vo.beans.HL7MessageInfoVoBean[] messages;
	private Boolean isrunning;
	private Boolean cfgstartinterface;
	private String ipaddress;
}
