//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.vo;

/**
 * Linked to core.configuration.MobileDevice business object (ID: 1028100054).
 */
public class MobileDeviceVo extends ims.core.configuration.vo.MobileDeviceRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public MobileDeviceVo()
	{
	}
	public MobileDeviceVo(Integer id, int version)
	{
		super(id, version);
	}
	public MobileDeviceVo(ims.admin.vo.beans.MobileDeviceVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.uniqueid = bean.getUniqueId();
		this.tokenid = bean.getTokenId();
		this.name = bean.getName();
		this.model = bean.getModel();
		this.systemname = bean.getSystemName();
		this.systemversion = bean.getSystemVersion();
		this.active = bean.getActive();
		this.applicationinfo = bean.getApplicationInfo();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.admin.vo.beans.MobileDeviceVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.uniqueid = bean.getUniqueId();
		this.tokenid = bean.getTokenId();
		this.name = bean.getName();
		this.model = bean.getModel();
		this.systemname = bean.getSystemName();
		this.systemversion = bean.getSystemVersion();
		this.active = bean.getActive();
		this.applicationinfo = bean.getApplicationInfo();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.admin.vo.beans.MobileDeviceVoBean bean = null;
		if(map != null)
			bean = (ims.admin.vo.beans.MobileDeviceVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.admin.vo.beans.MobileDeviceVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("UNIQUEID"))
			return getUniqueId();
		if(fieldName.equals("TOKENID"))
			return getTokenId();
		if(fieldName.equals("NAME"))
			return getName();
		if(fieldName.equals("MODEL"))
			return getModel();
		if(fieldName.equals("SYSTEMNAME"))
			return getSystemName();
		if(fieldName.equals("SYSTEMVERSION"))
			return getSystemVersion();
		if(fieldName.equals("ACTIVE"))
			return getActive();
		if(fieldName.equals("APPLICATIONINFO"))
			return getApplicationInfo();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getUniqueIdIsNotNull()
	{
		return this.uniqueid != null;
	}
	public String getUniqueId()
	{
		return this.uniqueid;
	}
	public static int getUniqueIdMaxLength()
	{
		return 255;
	}
	public void setUniqueId(String value)
	{
		this.isValidated = false;
		this.uniqueid = value;
	}
	public boolean getTokenIdIsNotNull()
	{
		return this.tokenid != null;
	}
	public String getTokenId()
	{
		return this.tokenid;
	}
	public static int getTokenIdMaxLength()
	{
		return 150;
	}
	public void setTokenId(String value)
	{
		this.isValidated = false;
		this.tokenid = value;
	}
	public boolean getNameIsNotNull()
	{
		return this.name != null;
	}
	public String getName()
	{
		return this.name;
	}
	public static int getNameMaxLength()
	{
		return 255;
	}
	public void setName(String value)
	{
		this.isValidated = false;
		this.name = value;
	}
	public boolean getModelIsNotNull()
	{
		return this.model != null;
	}
	public String getModel()
	{
		return this.model;
	}
	public static int getModelMaxLength()
	{
		return 100;
	}
	public void setModel(String value)
	{
		this.isValidated = false;
		this.model = value;
	}
	public boolean getSystemNameIsNotNull()
	{
		return this.systemname != null;
	}
	public String getSystemName()
	{
		return this.systemname;
	}
	public static int getSystemNameMaxLength()
	{
		return 255;
	}
	public void setSystemName(String value)
	{
		this.isValidated = false;
		this.systemname = value;
	}
	public boolean getSystemVersionIsNotNull()
	{
		return this.systemversion != null;
	}
	public String getSystemVersion()
	{
		return this.systemversion;
	}
	public static int getSystemVersionMaxLength()
	{
		return 255;
	}
	public void setSystemVersion(String value)
	{
		this.isValidated = false;
		this.systemversion = value;
	}
	public boolean getActiveIsNotNull()
	{
		return this.active != null;
	}
	public Boolean getActive()
	{
		return this.active;
	}
	public void setActive(Boolean value)
	{
		this.isValidated = false;
		this.active = value;
	}
	public boolean getApplicationInfoIsNotNull()
	{
		return this.applicationinfo != null;
	}
	public String getApplicationInfo()
	{
		return this.applicationinfo;
	}
	public static int getApplicationInfoMaxLength()
	{
		return 255;
	}
	public void setApplicationInfo(String value)
	{
		this.isValidated = false;
		this.applicationinfo = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.uniqueid != null)
			if(this.uniqueid.length() > 255)
				listOfErrors.add("The length of the field [uniqueid] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 255");
		if(this.tokenid != null)
			if(this.tokenid.length() > 150)
				listOfErrors.add("The length of the field [tokenid] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 150");
		if(this.name != null)
			if(this.name.length() > 255)
				listOfErrors.add("The length of the field [name] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 255");
		if(this.model != null)
			if(this.model.length() > 100)
				listOfErrors.add("The length of the field [model] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 100");
		if(this.systemname != null)
			if(this.systemname.length() > 255)
				listOfErrors.add("The length of the field [systemname] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 255");
		if(this.systemversion != null)
			if(this.systemversion.length() > 255)
				listOfErrors.add("The length of the field [systemversion] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 255");
		if(this.applicationinfo != null)
			if(this.applicationinfo.length() > 255)
				listOfErrors.add("The length of the field [applicationinfo] in the value object [ims.admin.vo.MobileDeviceVo] is too big. It should be less or equal to 255");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		MobileDeviceVo clone = new MobileDeviceVo(this.id, this.version);
		
		clone.uniqueid = this.uniqueid;
		clone.tokenid = this.tokenid;
		clone.name = this.name;
		clone.model = this.model;
		clone.systemname = this.systemname;
		clone.systemversion = this.systemversion;
		clone.active = this.active;
		clone.applicationinfo = this.applicationinfo;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(MobileDeviceVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A MobileDeviceVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((MobileDeviceVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((MobileDeviceVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.uniqueid != null)
			count++;
		if(this.tokenid != null)
			count++;
		if(this.name != null)
			count++;
		if(this.model != null)
			count++;
		if(this.systemname != null)
			count++;
		if(this.systemversion != null)
			count++;
		if(this.active != null)
			count++;
		if(this.applicationinfo != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 8;
	}
	protected String uniqueid;
	protected String tokenid;
	protected String name;
	protected String model;
	protected String systemname;
	protected String systemversion;
	protected Boolean active;
	protected String applicationinfo;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
