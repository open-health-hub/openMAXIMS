//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.vo.lookups;

import ims.framework.cn.data.TreeNode;
import java.util.ArrayList;
import ims.framework.utils.Image;
import ims.framework.utils.Color;

public class PatientKioskMessages extends ims.vo.LookupInstVo implements TreeNode
{
	private static final long serialVersionUID = 1L;

	public PatientKioskMessages()
	{
		super();
	}
	public PatientKioskMessages(int id)
	{
		super(id, "", true);
	}
	public PatientKioskMessages(int id, String text, boolean active)
	{
		super(id, text, active, null, null, null);
	}
	public PatientKioskMessages(int id, String text, boolean active, PatientKioskMessages parent, Image image)
	{
		super(id, text, active, parent, image);
	}
	public PatientKioskMessages(int id, String text, boolean active, PatientKioskMessages parent, Image image, Color color)
	{
		super(id, text, active, parent, image, color);
	}
	public PatientKioskMessages(int id, String text, boolean active, PatientKioskMessages parent, Image image, Color color, int order)
	{
		super(id, text, active, parent, image, color, order);
	}
	public static PatientKioskMessages buildLookup(ims.vo.LookupInstanceBean bean)
	{
		return new PatientKioskMessages(bean.getId(), bean.getText(), bean.isActive());
	}
	public String toString()
	{
		if(getText() != null)
			return getText();
		return "";
	}
	public TreeNode getParentNode()
	{
		return (PatientKioskMessages)super.getParentInstance();
	}
	public PatientKioskMessages getParent()
	{
		return (PatientKioskMessages)super.getParentInstance();
	}
	public void setParent(PatientKioskMessages parent)
	{
		super.setParentInstance(parent);
	}
	public TreeNode[] getChildren()
	{
		ArrayList children = super.getChildInstances();
		PatientKioskMessages[] typedChildren = new PatientKioskMessages[children.size()];
		for (int i = 0; i < children.size(); i++)
		{
			typedChildren[i] = (PatientKioskMessages)children.get(i);
		}
		return typedChildren;
	}
	public int addChild(TreeNode child)
	{
		if (child instanceof PatientKioskMessages)
		{
			super.addChild((PatientKioskMessages)child);
		}
		return super.getChildInstances().size();
	}
	public int removeChild(TreeNode child)
	{
		if (child instanceof PatientKioskMessages)
		{
			super.removeChild((PatientKioskMessages)child);
		}
		return super.getChildInstances().size();
	}
	public Image getExpandedImage()
	{
		return super.getImage();
	}
	public Image getCollapsedImage()
	{
		return super.getImage();
	}
	public static ims.framework.IItemCollection getNegativeInstancesAsIItemCollection()
	{
		PatientKioskMessagesCollection result = new PatientKioskMessagesCollection();
		result.add(WELCOME_MESSAGE);
		result.add(SEARCH_FAILED_MESSAGE);
		result.add(GOTO_RECEPTION_MESSAGE);
		result.add(CONFIRM_IDENTITY_MESSAGE);
		result.add(CONFIRM_APPOINTMENTS_MESSAGE);
		result.add(CONFIRM_FAILED_MESSAGE);
		result.add(APPOINTMENTS_CONFIRMED_MESSAGE);
		result.add(ENTER_SURNAME_MESSAGE);
		result.add(ENTER_DOB_MESSAGE);
		result.add(ENTER_GENDER_MESSAGE);
		result.add(ENTER_POSTCODE_MESSAGE);
		result.add(PATIENT_LATE_MESSAGE);
		return result;
	}
	public static PatientKioskMessages[] getNegativeInstances()
	{
		PatientKioskMessages[] instances = new PatientKioskMessages[12];
		instances[0] = WELCOME_MESSAGE;
		instances[1] = SEARCH_FAILED_MESSAGE;
		instances[2] = GOTO_RECEPTION_MESSAGE;
		instances[3] = CONFIRM_IDENTITY_MESSAGE;
		instances[4] = CONFIRM_APPOINTMENTS_MESSAGE;
		instances[5] = CONFIRM_FAILED_MESSAGE;
		instances[6] = APPOINTMENTS_CONFIRMED_MESSAGE;
		instances[7] = ENTER_SURNAME_MESSAGE;
		instances[8] = ENTER_DOB_MESSAGE;
		instances[9] = ENTER_GENDER_MESSAGE;
		instances[10] = ENTER_POSTCODE_MESSAGE;
		instances[11] = PATIENT_LATE_MESSAGE;
		return instances;
	}
	public static String[] getNegativeInstanceNames()
	{
		String[] negativeInstances = new String[12];
		negativeInstances[0] = "WELCOME_MESSAGE";
		negativeInstances[1] = "SEARCH_FAILED_MESSAGE";
		negativeInstances[2] = "GOTO_RECEPTION_MESSAGE";
		negativeInstances[3] = "CONFIRM_IDENTITY_MESSAGE";
		negativeInstances[4] = "CONFIRM_APPOINTMENTS_MESSAGE";
		negativeInstances[5] = "CONFIRM_FAILED_MESSAGE";
		negativeInstances[6] = "APPOINTMENTS_CONFIRMED_MESSAGE";
		negativeInstances[7] = "ENTER_SURNAME_MESSAGE";
		negativeInstances[8] = "ENTER_DOB_MESSAGE";
		negativeInstances[9] = "ENTER_GENDER_MESSAGE";
		negativeInstances[10] = "ENTER_POSTCODE_MESSAGE";
		negativeInstances[11] = "PATIENT_LATE_MESSAGE";
		return negativeInstances;
	}
	public static PatientKioskMessages getNegativeInstance(String name)
	{
		if(name == null)
			return null;
		String[] negativeInstances = getNegativeInstanceNames();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].equals(name))
				return getNegativeInstances()[i];
		}
		return null;
	}
	public static PatientKioskMessages getNegativeInstance(Integer id)
	{
		if(id == null)
			return null;
		PatientKioskMessages[] negativeInstances = getNegativeInstances();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].getID() == id)
				return negativeInstances[i];
		}
		return null;
	}
	public int getTypeId()
	{
		return TYPE_ID;
	}
	public static final int TYPE_ID = 1031013;
	public static final PatientKioskMessages WELCOME_MESSAGE = new PatientKioskMessages(-1582, "Welcome Message", true, null, null, Color.Default);
	public static final PatientKioskMessages SEARCH_FAILED_MESSAGE = new PatientKioskMessages(-1596, "Search Failed Message", true, null, null, Color.Default);
	public static final PatientKioskMessages GOTO_RECEPTION_MESSAGE = new PatientKioskMessages(-1597, "Goto Reception Message", true, null, null, Color.Default);
	public static final PatientKioskMessages CONFIRM_IDENTITY_MESSAGE = new PatientKioskMessages(-1598, "Confirm Identity Message", true, null, null, Color.Default);
	public static final PatientKioskMessages CONFIRM_APPOINTMENTS_MESSAGE = new PatientKioskMessages(-1599, "Confirm Appointments Message", true, null, null, Color.Default);
	public static final PatientKioskMessages CONFIRM_FAILED_MESSAGE = new PatientKioskMessages(-1600, "Confirm Failed Message", true, null, null, Color.Default);
	public static final PatientKioskMessages APPOINTMENTS_CONFIRMED_MESSAGE = new PatientKioskMessages(-1601, "Appointments Confirmed Message", true, null, null, Color.Default);
	public static final PatientKioskMessages ENTER_SURNAME_MESSAGE = new PatientKioskMessages(-1602, "Enter Surname Message", true, null, null, Color.Default);
	public static final PatientKioskMessages ENTER_DOB_MESSAGE = new PatientKioskMessages(-1603, "Enter DOB Message", true, null, null, Color.Default);
	public static final PatientKioskMessages ENTER_GENDER_MESSAGE = new PatientKioskMessages(-1604, "Enter Gender Message", true, null, null, Color.Default);
	public static final PatientKioskMessages ENTER_POSTCODE_MESSAGE = new PatientKioskMessages(-1605, "Enter Postcode Message", true, null, null, Color.Default);
	public static final PatientKioskMessages PATIENT_LATE_MESSAGE = new PatientKioskMessages(-1612, "Patient Late Message", true, null, null, Color.Default);
}
