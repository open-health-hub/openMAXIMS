//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.vo.beans;

public class CatheterDetailVoBean extends ims.vo.ValueObjectBean
{
	public CatheterDetailVoBean()
	{
	}
	public CatheterDetailVoBean(ims.clinical.vo.CatheterDetailVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.catheterinserted = vo.getCatheterInserted() == null ? null : (ims.vo.LookupInstanceBean)vo.getCatheterInserted().getBean();
		this.catheterinsertedby = vo.getCatheterInsertedBy() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getCatheterInsertedBy().getBean();
		this.difficultywithinsertion = vo.getDifficultyWithInsertion() == null ? null : (ims.vo.LookupInstanceBean)vo.getDifficultyWithInsertion().getBean();
		this.insertioncomments = vo.getInsertionComments();
		this.timeon = vo.getTimeOn() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getTimeOn().getBean();
		this.timeoff = vo.getTimeOff() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getTimeOff().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.clinical.vo.CatheterDetailVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.catheterinserted = vo.getCatheterInserted() == null ? null : (ims.vo.LookupInstanceBean)vo.getCatheterInserted().getBean();
		this.catheterinsertedby = vo.getCatheterInsertedBy() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getCatheterInsertedBy().getBean(map);
		this.difficultywithinsertion = vo.getDifficultyWithInsertion() == null ? null : (ims.vo.LookupInstanceBean)vo.getDifficultyWithInsertion().getBean();
		this.insertioncomments = vo.getInsertionComments();
		this.timeon = vo.getTimeOn() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getTimeOn().getBean();
		this.timeoff = vo.getTimeOff() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getTimeOff().getBean();
	}

	public ims.clinical.vo.CatheterDetailVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.clinical.vo.CatheterDetailVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.clinical.vo.CatheterDetailVo vo = null;
		if(map != null)
			vo = (ims.clinical.vo.CatheterDetailVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.clinical.vo.CatheterDetailVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.LookupInstanceBean getCatheterInserted()
	{
		return this.catheterinserted;
	}
	public void setCatheterInserted(ims.vo.LookupInstanceBean value)
	{
		this.catheterinserted = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getCatheterInsertedBy()
	{
		return this.catheterinsertedby;
	}
	public void setCatheterInsertedBy(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.catheterinsertedby = value;
	}
	public ims.vo.LookupInstanceBean getDifficultyWithInsertion()
	{
		return this.difficultywithinsertion;
	}
	public void setDifficultyWithInsertion(ims.vo.LookupInstanceBean value)
	{
		this.difficultywithinsertion = value;
	}
	public String getInsertionComments()
	{
		return this.insertioncomments;
	}
	public void setInsertionComments(String value)
	{
		this.insertioncomments = value;
	}
	public ims.framework.utils.beans.DateTimeBean getTimeOn()
	{
		return this.timeon;
	}
	public void setTimeOn(ims.framework.utils.beans.DateTimeBean value)
	{
		this.timeon = value;
	}
	public ims.framework.utils.beans.DateTimeBean getTimeOff()
	{
		return this.timeoff;
	}
	public void setTimeOff(ims.framework.utils.beans.DateTimeBean value)
	{
		this.timeoff = value;
	}

	private Integer id;
	private int version;
	private ims.vo.LookupInstanceBean catheterinserted;
	private ims.core.vo.beans.HcpLiteVoBean catheterinsertedby;
	private ims.vo.LookupInstanceBean difficultywithinsertion;
	private String insertioncomments;
	private ims.framework.utils.beans.DateTimeBean timeon;
	private ims.framework.utils.beans.DateTimeBean timeoff;
}
