// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to core.clinical.ReferralLetterDetails business object (ID: 1003100093).
 */
public class ReferralLetterDetailsBookingVo extends ims.core.clinical.vo.ReferralLetterDetailsRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public ReferralLetterDetailsBookingVo()
	{
	}
	public ReferralLetterDetailsBookingVo(Integer id, int version)
	{
		super(id, version);
	}
	public ReferralLetterDetailsBookingVo(ims.RefMan.vo.beans.ReferralLetterDetailsBookingVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.service = bean.getService() == null ? null : bean.getService().buildVo();
		this.function = bean.getFunction() == null ? null : bean.getFunction().buildVo();
		this.dateofreferral = bean.getDateOfReferral() == null ? null : bean.getDateOfReferral().buildDate();
		this.datereferralreceived = bean.getDateReferralReceived() == null ? null : bean.getDateReferralReceived().buildDate();
		this.endxdaykpi = bean.getEndXdayKPI() == null ? null : bean.getEndXdayKPI().buildDate();
		this.kpidays = ims.framework.utils.beans.DateBean.buildDateArray(bean.getKPIDays());
		this.dayto1stapp = bean.getDayTo1stApp();
		this.daystorttbreachdate = bean.getDaysToRTTBreachDate();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.ReferralLetterDetailsBookingVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.service = bean.getService() == null ? null : bean.getService().buildVo(map);
		this.function = bean.getFunction() == null ? null : bean.getFunction().buildVo(map);
		this.dateofreferral = bean.getDateOfReferral() == null ? null : bean.getDateOfReferral().buildDate();
		this.datereferralreceived = bean.getDateReferralReceived() == null ? null : bean.getDateReferralReceived().buildDate();
		this.endxdaykpi = bean.getEndXdayKPI() == null ? null : bean.getEndXdayKPI().buildDate();
		this.kpidays = ims.framework.utils.beans.DateBean.buildDateArray(bean.getKPIDays());
		this.dayto1stapp = bean.getDayTo1stApp();
		this.daystorttbreachdate = bean.getDaysToRTTBreachDate();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.ReferralLetterDetailsBookingVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.ReferralLetterDetailsBookingVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.ReferralLetterDetailsBookingVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("SERVICE"))
			return getService();
		if(fieldName.equals("FUNCTION"))
			return getFunction();
		if(fieldName.equals("DATEOFREFERRAL"))
			return getDateOfReferral();
		if(fieldName.equals("DATEREFERRALRECEIVED"))
			return getDateReferralReceived();
		if(fieldName.equals("ENDXDAYKPI"))
			return getEndXdayKPI();
		if(fieldName.equals("KPIDAYS"))
			return getKPIDays();
		if(fieldName.equals("DAYTO1STAPP"))
			return getDayTo1stApp();
		if(fieldName.equals("DAYSTORTTBREACHDATE"))
			return getDaysToRTTBreachDate();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getServiceIsNotNull()
	{
		return this.service != null;
	}
	public ims.core.vo.ServiceLiteVo getService()
	{
		return this.service;
	}
	public void setService(ims.core.vo.ServiceLiteVo value)
	{
		this.isValidated = false;
		this.service = value;
	}
	public boolean getFunctionIsNotNull()
	{
		return this.function != null;
	}
	public ims.core.vo.ServiceFunctionLiteVo getFunction()
	{
		return this.function;
	}
	public void setFunction(ims.core.vo.ServiceFunctionLiteVo value)
	{
		this.isValidated = false;
		this.function = value;
	}
	public boolean getDateOfReferralIsNotNull()
	{
		return this.dateofreferral != null;
	}
	public ims.framework.utils.Date getDateOfReferral()
	{
		return this.dateofreferral;
	}
	public void setDateOfReferral(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.dateofreferral = value;
	}
	public boolean getDateReferralReceivedIsNotNull()
	{
		return this.datereferralreceived != null;
	}
	public ims.framework.utils.Date getDateReferralReceived()
	{
		return this.datereferralreceived;
	}
	public void setDateReferralReceived(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.datereferralreceived = value;
	}
	public boolean getEndXdayKPIIsNotNull()
	{
		return this.endxdaykpi != null;
	}
	public ims.framework.utils.Date getEndXdayKPI()
	{
		return this.endxdaykpi;
	}
	public void setEndXdayKPI(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.endxdaykpi = value;
	}
	public boolean getKPIDaysIsNotNull()
	{
		return this.kpidays != null;
	}
	public ims.framework.utils.Date[] getKPIDays()
	{
		return this.kpidays;
	}
	public void setKPIDays(ims.framework.utils.Date[] value)
	{
		this.isValidated = false;
		this.kpidays = value;
	}
	public boolean getDayTo1stAppIsNotNull()
	{
		return this.dayto1stapp != null;
	}
	public Integer getDayTo1stApp()
	{
		return this.dayto1stapp;
	}
	public void setDayTo1stApp(Integer value)
	{
		this.isValidated = false;
		this.dayto1stapp = value;
	}
	public boolean getDaysToRTTBreachDateIsNotNull()
	{
		return this.daystorttbreachdate != null;
	}
	public Integer getDaysToRTTBreachDate()
	{
		return this.daystorttbreachdate;
	}
	public void setDaysToRTTBreachDate(Integer value)
	{
		this.isValidated = false;
		this.daystorttbreachdate = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.service != null)
		{
			if(!this.service.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.function != null)
		{
			if(!this.function.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.service == null)
			listOfErrors.add("Service is mandatory");
		if(this.service != null)
		{
			String[] listOfOtherErrors = this.service.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.function != null)
		{
			String[] listOfOtherErrors = this.function.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.dateofreferral == null)
			listOfErrors.add("DateOfReferral is mandatory");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ReferralLetterDetailsBookingVo clone = new ReferralLetterDetailsBookingVo(this.id, this.version);
		
		if(this.service == null)
			clone.service = null;
		else
			clone.service = (ims.core.vo.ServiceLiteVo)this.service.clone();
		if(this.function == null)
			clone.function = null;
		else
			clone.function = (ims.core.vo.ServiceFunctionLiteVo)this.function.clone();
		if(this.dateofreferral == null)
			clone.dateofreferral = null;
		else
			clone.dateofreferral = (ims.framework.utils.Date)this.dateofreferral.clone();
		if(this.datereferralreceived == null)
			clone.datereferralreceived = null;
		else
			clone.datereferralreceived = (ims.framework.utils.Date)this.datereferralreceived.clone();
		if(this.endxdaykpi == null)
			clone.endxdaykpi = null;
		else
			clone.endxdaykpi = (ims.framework.utils.Date)this.endxdaykpi.clone();
		if(this.kpidays == null)
			clone.kpidays = null;
		else
			clone.kpidays = (ims.framework.utils.Date[])this.kpidays.clone();
		clone.dayto1stapp = this.dayto1stapp;
		clone.daystorttbreachdate = this.daystorttbreachdate;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ReferralLetterDetailsBookingVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ReferralLetterDetailsBookingVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((ReferralLetterDetailsBookingVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((ReferralLetterDetailsBookingVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.service != null)
			count++;
		if(this.function != null)
			count++;
		if(this.dateofreferral != null)
			count++;
		if(this.datereferralreceived != null)
			count++;
		if(this.endxdaykpi != null)
			count++;
		if(this.kpidays != null)
			count++;
		if(this.dayto1stapp != null)
			count++;
		if(this.daystorttbreachdate != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 8;
	}
	protected ims.core.vo.ServiceLiteVo service;
	protected ims.core.vo.ServiceFunctionLiteVo function;
	protected ims.framework.utils.Date dateofreferral;
	protected ims.framework.utils.Date datereferralreceived;
	protected ims.framework.utils.Date endxdaykpi;
	protected ims.framework.utils.Date[] kpidays;
	protected Integer dayto1stapp;
	protected Integer daystorttbreachdate;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
