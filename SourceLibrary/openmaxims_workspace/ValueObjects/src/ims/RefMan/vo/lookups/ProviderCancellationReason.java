// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.lookups;

import ims.framework.cn.data.TreeNode;
import java.util.ArrayList;
import ims.framework.utils.Image;
import ims.framework.utils.Color;

public class ProviderCancellationReason extends ims.vo.LookupInstVo implements TreeNode
{
	private static final long serialVersionUID = 1L;

	public ProviderCancellationReason()
	{
		super();
	}
	public ProviderCancellationReason(int id)
	{
		super(id, "", true);
	}
	public ProviderCancellationReason(int id, String text, boolean active)
	{
		super(id, text, active, null, null, null);
	}
	public ProviderCancellationReason(int id, String text, boolean active, ProviderCancellationReason parent, Image image)
	{
		super(id, text, active, parent, image);
	}
	public ProviderCancellationReason(int id, String text, boolean active, ProviderCancellationReason parent, Image image, Color color)
	{
		super(id, text, active, parent, image, color);
	}
	public ProviderCancellationReason(int id, String text, boolean active, ProviderCancellationReason parent, Image image, Color color, int order)
	{
		super(id, text, active, parent, image, color, order);
	}
	public static ProviderCancellationReason buildLookup(ims.vo.LookupInstanceBean bean)
	{
		return new ProviderCancellationReason(bean.getId(), bean.getText(), bean.isActive());
	}
	public String toString()
	{
		if(getText() != null)
			return getText();
		return "";
	}
	public TreeNode getParentNode()
	{
		return (ProviderCancellationReason)super.getParentInstance();
	}
	public ProviderCancellationReason getParent()
	{
		return (ProviderCancellationReason)super.getParentInstance();
	}
	public void setParent(ProviderCancellationReason parent)
	{
		super.setParentInstance(parent);
	}
	public TreeNode[] getChildren()
	{
		ArrayList children = super.getChildInstances();
		ProviderCancellationReason[] typedChildren = new ProviderCancellationReason[children.size()];
		for (int i = 0; i < children.size(); i++)
		{
			typedChildren[i] = (ProviderCancellationReason)children.get(i);
		}
		return typedChildren;
	}
	public int addChild(TreeNode child)
	{
		if (child instanceof ProviderCancellationReason)
		{
			super.addChild((ProviderCancellationReason)child);
		}
		return super.getChildInstances().size();
	}
	public int removeChild(TreeNode child)
	{
		if (child instanceof ProviderCancellationReason)
		{
			super.removeChild((ProviderCancellationReason)child);
		}
		return super.getChildInstances().size();
	}
	public Image getExpandedImage()
	{
		return super.getImage();
	}
	public Image getCollapsedImage()
	{
		return super.getImage();
	}
	public static ims.framework.IItemCollection getNegativeInstancesAsIItemCollection()
	{
		ProviderCancellationReasonCollection result = new ProviderCancellationReasonCollection();
		return result;
	}
	public static ProviderCancellationReason[] getNegativeInstances()
	{
		return new ProviderCancellationReason[] {};
	}
	public static String[] getNegativeInstanceNames()
	{
		return new String[] {};
	}
	public static ProviderCancellationReason getNegativeInstance(String name)
	{
		if(name == null)
			return null;
		// No negative instances found
		return null;
	}
	public static ProviderCancellationReason getNegativeInstance(Integer id)
	{
		if(id == null)
			return null;
		// No negative instances found
		return null;
	}
	public int getTypeId()
	{
		return TYPE_ID;
	}
	public static final int TYPE_ID = 1341011;
}
