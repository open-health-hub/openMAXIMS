// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to RefMan.CatsReferral business object (ID: 1004100035).
 */
public class CatsReferralReviewDetailVo extends ims.RefMan.vo.CatsReferralRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public CatsReferralReviewDetailVo()
	{
	}
	public CatsReferralReviewDetailVo(Integer id, int version)
	{
		super(id, version);
	}
	public CatsReferralReviewDetailVo(ims.RefMan.vo.beans.CatsReferralReviewDetailVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.currentreviewdetail = ims.RefMan.vo.ReviewReferralDetailVoCollection.buildFromBeanCollection(bean.getCurrentReviewDetail());
		this.reviewhistory = ims.RefMan.vo.ReviewReferralDetailVoCollection.buildFromBeanCollection(bean.getReviewHistory());
		this.isflaggedforreview = bean.getIsFlaggedForReview();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.CatsReferralReviewDetailVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.currentreviewdetail = ims.RefMan.vo.ReviewReferralDetailVoCollection.buildFromBeanCollection(bean.getCurrentReviewDetail());
		this.reviewhistory = ims.RefMan.vo.ReviewReferralDetailVoCollection.buildFromBeanCollection(bean.getReviewHistory());
		this.isflaggedforreview = bean.getIsFlaggedForReview();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.CatsReferralReviewDetailVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.CatsReferralReviewDetailVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.CatsReferralReviewDetailVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("CURRENTREVIEWDETAIL"))
			return getCurrentReviewDetail();
		if(fieldName.equals("REVIEWHISTORY"))
			return getReviewHistory();
		if(fieldName.equals("ISFLAGGEDFORREVIEW"))
			return getIsFlaggedForReview();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getCurrentReviewDetailIsNotNull()
	{
		return this.currentreviewdetail != null;
	}
	public ims.RefMan.vo.ReviewReferralDetailVoCollection getCurrentReviewDetail()
	{
		return this.currentreviewdetail;
	}
	public void setCurrentReviewDetail(ims.RefMan.vo.ReviewReferralDetailVoCollection value)
	{
		this.isValidated = false;
		this.currentreviewdetail = value;
	}
	public boolean getReviewHistoryIsNotNull()
	{
		return this.reviewhistory != null;
	}
	public ims.RefMan.vo.ReviewReferralDetailVoCollection getReviewHistory()
	{
		return this.reviewhistory;
	}
	public void setReviewHistory(ims.RefMan.vo.ReviewReferralDetailVoCollection value)
	{
		this.isValidated = false;
		this.reviewhistory = value;
	}
	public boolean getIsFlaggedForReviewIsNotNull()
	{
		return this.isflaggedforreview != null;
	}
	public Boolean getIsFlaggedForReview()
	{
		return this.isflaggedforreview;
	}
	public void setIsFlaggedForReview(Boolean value)
	{
		this.isValidated = false;
		this.isflaggedforreview = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.currentreviewdetail != null)
		{
			if(!this.currentreviewdetail.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.reviewhistory != null)
		{
			if(!this.reviewhistory.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.currentreviewdetail != null)
		{
			String[] listOfOtherErrors = this.currentreviewdetail.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.reviewhistory != null)
		{
			String[] listOfOtherErrors = this.reviewhistory.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		CatsReferralReviewDetailVo clone = new CatsReferralReviewDetailVo(this.id, this.version);
		
		if(this.currentreviewdetail == null)
			clone.currentreviewdetail = null;
		else
			clone.currentreviewdetail = (ims.RefMan.vo.ReviewReferralDetailVoCollection)this.currentreviewdetail.clone();
		if(this.reviewhistory == null)
			clone.reviewhistory = null;
		else
			clone.reviewhistory = (ims.RefMan.vo.ReviewReferralDetailVoCollection)this.reviewhistory.clone();
		clone.isflaggedforreview = this.isflaggedforreview;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(CatsReferralReviewDetailVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A CatsReferralReviewDetailVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((CatsReferralReviewDetailVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((CatsReferralReviewDetailVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.currentreviewdetail != null)
			count++;
		if(this.reviewhistory != null)
			count++;
		if(this.isflaggedforreview != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 3;
	}
	protected ims.RefMan.vo.ReviewReferralDetailVoCollection currentreviewdetail;
	protected ims.RefMan.vo.ReviewReferralDetailVoCollection reviewhistory;
	protected Boolean isflaggedforreview;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
