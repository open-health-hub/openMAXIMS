// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;


public class SearchCriteriaForElectiveListManagementVo extends ims.vo.ValueObject implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public SearchCriteriaForElectiveListManagementVo()
	{
	}
	public SearchCriteriaForElectiveListManagementVo(ims.RefMan.vo.beans.SearchCriteriaForElectiveListManagementVoBean bean)
	{
		this.service = bean.getService() == null ? null : bean.getService().buildVo();
		this.electivelistname = bean.getElectiveListName() == null ? null : bean.getElectiveListName().buildVo();
		this.electivelistcode = bean.getElectiveListCode();
		this.consultant = bean.getConsultant() == null ? null : bean.getConsultant().buildVo();
		this.datefrom = bean.getDateFrom() == null ? null : bean.getDateFrom().buildDate();
		this.dateto = bean.getDateTo() == null ? null : bean.getDateTo().buildDate();
		this.status = bean.getStatus() == null ? null : ims.core.vo.lookups.WaitingListStatus.buildLookup(bean.getStatus());
		this.showadmittedanddeferred = bean.getShowAdmittedAndDeferred();
		this.showsuspended = bean.getShowSuspended();
		this.electivereason = bean.getElectiveReason() == null ? null : ims.emergency.vo.lookups.ElectiveListReason.buildLookup(bean.getElectiveReason());
		this.procedure = bean.getProcedure() == null ? null : bean.getProcedure().buildVo();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.SearchCriteriaForElectiveListManagementVoBean bean)
	{
		this.service = bean.getService() == null ? null : bean.getService().buildVo(map);
		this.electivelistname = bean.getElectiveListName() == null ? null : bean.getElectiveListName().buildVo(map);
		this.electivelistcode = bean.getElectiveListCode();
		this.consultant = bean.getConsultant() == null ? null : bean.getConsultant().buildVo(map);
		this.datefrom = bean.getDateFrom() == null ? null : bean.getDateFrom().buildDate();
		this.dateto = bean.getDateTo() == null ? null : bean.getDateTo().buildDate();
		this.status = bean.getStatus() == null ? null : ims.core.vo.lookups.WaitingListStatus.buildLookup(bean.getStatus());
		this.showadmittedanddeferred = bean.getShowAdmittedAndDeferred();
		this.showsuspended = bean.getShowSuspended();
		this.electivereason = bean.getElectiveReason() == null ? null : ims.emergency.vo.lookups.ElectiveListReason.buildLookup(bean.getElectiveReason());
		this.procedure = bean.getProcedure() == null ? null : bean.getProcedure().buildVo(map);
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.SearchCriteriaForElectiveListManagementVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.SearchCriteriaForElectiveListManagementVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.SearchCriteriaForElectiveListManagementVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public boolean getServiceIsNotNull()
	{
		return this.service != null;
	}
	public ims.admin.vo.ServiceForElectiveListConfigVo getService()
	{
		return this.service;
	}
	public void setService(ims.admin.vo.ServiceForElectiveListConfigVo value)
	{
		this.isValidated = false;
		this.service = value;
	}
	public boolean getElectiveListNameIsNotNull()
	{
		return this.electivelistname != null;
	}
	public ims.admin.vo.ElectiveListConfigLiteVo getElectiveListName()
	{
		return this.electivelistname;
	}
	public void setElectiveListName(ims.admin.vo.ElectiveListConfigLiteVo value)
	{
		this.isValidated = false;
		this.electivelistname = value;
	}
	public boolean getElectiveListCodeIsNotNull()
	{
		return this.electivelistcode != null;
	}
	public String getElectiveListCode()
	{
		return this.electivelistcode;
	}
	public static int getElectiveListCodeMaxLength()
	{
		return 255;
	}
	public void setElectiveListCode(String value)
	{
		this.isValidated = false;
		this.electivelistcode = value;
	}
	public boolean getConsultantIsNotNull()
	{
		return this.consultant != null;
	}
	public ims.core.vo.HcpLiteVo getConsultant()
	{
		return this.consultant;
	}
	public void setConsultant(ims.core.vo.HcpLiteVo value)
	{
		this.isValidated = false;
		this.consultant = value;
	}
	public boolean getDateFromIsNotNull()
	{
		return this.datefrom != null;
	}
	public ims.framework.utils.Date getDateFrom()
	{
		return this.datefrom;
	}
	public void setDateFrom(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.datefrom = value;
	}
	public boolean getDateToIsNotNull()
	{
		return this.dateto != null;
	}
	public ims.framework.utils.Date getDateTo()
	{
		return this.dateto;
	}
	public void setDateTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.dateto = value;
	}
	public boolean getStatusIsNotNull()
	{
		return this.status != null;
	}
	public ims.core.vo.lookups.WaitingListStatus getStatus()
	{
		return this.status;
	}
	public void setStatus(ims.core.vo.lookups.WaitingListStatus value)
	{
		this.isValidated = false;
		this.status = value;
	}
	public boolean getShowAdmittedAndDeferredIsNotNull()
	{
		return this.showadmittedanddeferred != null;
	}
	public Boolean getShowAdmittedAndDeferred()
	{
		return this.showadmittedanddeferred;
	}
	public void setShowAdmittedAndDeferred(Boolean value)
	{
		this.isValidated = false;
		this.showadmittedanddeferred = value;
	}
	public boolean getShowSuspendedIsNotNull()
	{
		return this.showsuspended != null;
	}
	public Boolean getShowSuspended()
	{
		return this.showsuspended;
	}
	public void setShowSuspended(Boolean value)
	{
		this.isValidated = false;
		this.showsuspended = value;
	}
	public boolean getElectiveReasonIsNotNull()
	{
		return this.electivereason != null;
	}
	public ims.emergency.vo.lookups.ElectiveListReason getElectiveReason()
	{
		return this.electivereason;
	}
	public void setElectiveReason(ims.emergency.vo.lookups.ElectiveListReason value)
	{
		this.isValidated = false;
		this.electivereason = value;
	}
	public boolean getProcedureIsNotNull()
	{
		return this.procedure != null;
	}
	public ims.core.vo.ProcedureLiteVo getProcedure()
	{
		return this.procedure;
	}
	public void setProcedure(ims.core.vo.ProcedureLiteVo value)
	{
		this.isValidated = false;
		this.procedure = value;
	}
	public final String getIItemText()
	{
		return toString();
	}
	public final Integer getBoId() 
	{
		return null;
	}
	public final String getBoClassName()
	{
		return null;
	}
	public boolean equals(Object obj)
	{
		if(obj == null)
			return false;
		if(!(obj instanceof SearchCriteriaForElectiveListManagementVo))
			return false;
		SearchCriteriaForElectiveListManagementVo compareObj = (SearchCriteriaForElectiveListManagementVo)obj;
		if(this.getService() == null && compareObj.getService() != null)
			return false;
		if(this.getService() != null && compareObj.getService() == null)
			return false;
		if(this.getService() != null && compareObj.getService() != null)
			return this.getService().equals(compareObj.getService());
		return super.equals(obj);
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.electivelistname != null)
		{
			if(!this.electivelistname.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.electivelistname != null)
		{
			String[] listOfOtherErrors = this.electivelistname.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		SearchCriteriaForElectiveListManagementVo clone = new SearchCriteriaForElectiveListManagementVo();
		
		if(this.service == null)
			clone.service = null;
		else
			clone.service = (ims.admin.vo.ServiceForElectiveListConfigVo)this.service.clone();
		if(this.electivelistname == null)
			clone.electivelistname = null;
		else
			clone.electivelistname = (ims.admin.vo.ElectiveListConfigLiteVo)this.electivelistname.clone();
		clone.electivelistcode = this.electivelistcode;
		if(this.consultant == null)
			clone.consultant = null;
		else
			clone.consultant = (ims.core.vo.HcpLiteVo)this.consultant.clone();
		if(this.datefrom == null)
			clone.datefrom = null;
		else
			clone.datefrom = (ims.framework.utils.Date)this.datefrom.clone();
		if(this.dateto == null)
			clone.dateto = null;
		else
			clone.dateto = (ims.framework.utils.Date)this.dateto.clone();
		if(this.status == null)
			clone.status = null;
		else
			clone.status = (ims.core.vo.lookups.WaitingListStatus)this.status.clone();
		clone.showadmittedanddeferred = this.showadmittedanddeferred;
		clone.showsuspended = this.showsuspended;
		if(this.electivereason == null)
			clone.electivereason = null;
		else
			clone.electivereason = (ims.emergency.vo.lookups.ElectiveListReason)this.electivereason.clone();
		if(this.procedure == null)
			clone.procedure = null;
		else
			clone.procedure = (ims.core.vo.ProcedureLiteVo)this.procedure.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(SearchCriteriaForElectiveListManagementVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A SearchCriteriaForElectiveListManagementVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		SearchCriteriaForElectiveListManagementVo compareObj = (SearchCriteriaForElectiveListManagementVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getService() == null && compareObj.getService() != null)
				return -1;
			if(this.getService() != null && compareObj.getService() == null)
				return 1;
			if(this.getService() != null && compareObj.getService() != null)
				retVal = this.getService().compareTo(compareObj.getService());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.service != null)
			count++;
		if(this.electivelistname != null)
			count++;
		if(this.electivelistcode != null)
			count++;
		if(this.consultant != null)
			count++;
		if(this.datefrom != null)
			count++;
		if(this.dateto != null)
			count++;
		if(this.status != null)
			count++;
		if(this.showadmittedanddeferred != null)
			count++;
		if(this.showsuspended != null)
			count++;
		if(this.electivereason != null)
			count++;
		if(this.procedure != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 11;
	}
	protected ims.admin.vo.ServiceForElectiveListConfigVo service;
	protected ims.admin.vo.ElectiveListConfigLiteVo electivelistname;
	protected String electivelistcode;
	protected ims.core.vo.HcpLiteVo consultant;
	protected ims.framework.utils.Date datefrom;
	protected ims.framework.utils.Date dateto;
	protected ims.core.vo.lookups.WaitingListStatus status;
	protected Boolean showadmittedanddeferred;
	protected Boolean showsuspended;
	protected ims.emergency.vo.lookups.ElectiveListReason electivereason;
	protected ims.core.vo.ProcedureLiteVo procedure;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
