// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to RefMan.ReferralTransfer business object (ID: 1096100070).
 */
public class ReferralTransferVo extends ims.RefMan.vo.ReferralTransferRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public ReferralTransferVo()
	{
	}
	public ReferralTransferVo(Integer id, int version)
	{
		super(id, version);
	}
	public ReferralTransferVo(ims.RefMan.vo.beans.ReferralTransferVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.rttstatusdate = bean.getRTTStatusDate() == null ? null : bean.getRTTStatusDate().buildDate();
		this.otherpatientnumber = bean.getOtherPatientNumber();
		this.otherorganisationcode = bean.getOTherOrganisationCode();
		this.currentrttstatus = bean.getCurrentRTTStatus() == null ? null : bean.getCurrentRTTStatus().buildVo();
		this.pathwayid = bean.getPathwayID();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.ReferralTransferVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.rttstatusdate = bean.getRTTStatusDate() == null ? null : bean.getRTTStatusDate().buildDate();
		this.otherpatientnumber = bean.getOtherPatientNumber();
		this.otherorganisationcode = bean.getOTherOrganisationCode();
		this.currentrttstatus = bean.getCurrentRTTStatus() == null ? null : bean.getCurrentRTTStatus().buildVo(map);
		this.pathwayid = bean.getPathwayID();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.ReferralTransferVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.ReferralTransferVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.ReferralTransferVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("RTTSTATUSDATE"))
			return getRTTStatusDate();
		if(fieldName.equals("OTHERPATIENTNUMBER"))
			return getOtherPatientNumber();
		if(fieldName.equals("OTHERORGANISATIONCODE"))
			return getOTherOrganisationCode();
		if(fieldName.equals("CURRENTRTTSTATUS"))
			return getCurrentRTTStatus();
		if(fieldName.equals("PATHWAYID"))
			return getPathwayID();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getRTTStatusDateIsNotNull()
	{
		return this.rttstatusdate != null;
	}
	public ims.framework.utils.Date getRTTStatusDate()
	{
		return this.rttstatusdate;
	}
	public void setRTTStatusDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.rttstatusdate = value;
	}
	public boolean getOtherPatientNumberIsNotNull()
	{
		return this.otherpatientnumber != null;
	}
	public String getOtherPatientNumber()
	{
		return this.otherpatientnumber;
	}
	public static int getOtherPatientNumberMaxLength()
	{
		return 50;
	}
	public void setOtherPatientNumber(String value)
	{
		this.isValidated = false;
		this.otherpatientnumber = value;
	}
	public boolean getOTherOrganisationCodeIsNotNull()
	{
		return this.otherorganisationcode != null;
	}
	public String getOTherOrganisationCode()
	{
		return this.otherorganisationcode;
	}
	public static int getOTherOrganisationCodeMaxLength()
	{
		return 5;
	}
	public void setOTherOrganisationCode(String value)
	{
		this.isValidated = false;
		this.otherorganisationcode = value;
	}
	public boolean getCurrentRTTStatusIsNotNull()
	{
		return this.currentrttstatus != null;
	}
	public ims.pathways.vo.RTTStatusPointVo getCurrentRTTStatus()
	{
		return this.currentrttstatus;
	}
	public void setCurrentRTTStatus(ims.pathways.vo.RTTStatusPointVo value)
	{
		this.isValidated = false;
		this.currentrttstatus = value;
	}
	public boolean getPathwayIDIsNotNull()
	{
		return this.pathwayid != null;
	}
	public String getPathwayID()
	{
		return this.pathwayid;
	}
	public static int getPathwayIDMaxLength()
	{
		return 255;
	}
	public void setPathwayID(String value)
	{
		this.isValidated = false;
		this.pathwayid = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.currentrttstatus != null)
		{
			if(!this.currentrttstatus.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.otherpatientnumber == null || this.otherpatientnumber.length() == 0)
			listOfErrors.add("OtherPatientNumber is mandatory");
		else if(this.otherpatientnumber.length() > 50)
			listOfErrors.add("The length of the field [otherpatientnumber] in the value object [ims.RefMan.vo.ReferralTransferVo] is too big. It should be less or equal to 50");
		if(this.otherorganisationcode == null || this.otherorganisationcode.length() == 0)
			listOfErrors.add("OTherOrganisationCode is mandatory");
		else if(this.otherorganisationcode.length() > 5)
			listOfErrors.add("The length of the field [otherorganisationcode] in the value object [ims.RefMan.vo.ReferralTransferVo] is too big. It should be less or equal to 5");
		if(this.currentrttstatus != null)
		{
			String[] listOfOtherErrors = this.currentrttstatus.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ReferralTransferVo clone = new ReferralTransferVo(this.id, this.version);
		
		if(this.rttstatusdate == null)
			clone.rttstatusdate = null;
		else
			clone.rttstatusdate = (ims.framework.utils.Date)this.rttstatusdate.clone();
		clone.otherpatientnumber = this.otherpatientnumber;
		clone.otherorganisationcode = this.otherorganisationcode;
		if(this.currentrttstatus == null)
			clone.currentrttstatus = null;
		else
			clone.currentrttstatus = (ims.pathways.vo.RTTStatusPointVo)this.currentrttstatus.clone();
		clone.pathwayid = this.pathwayid;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ReferralTransferVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ReferralTransferVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((ReferralTransferVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((ReferralTransferVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.rttstatusdate != null)
			count++;
		if(this.otherpatientnumber != null)
			count++;
		if(this.otherorganisationcode != null)
			count++;
		if(this.currentrttstatus != null)
			count++;
		if(this.pathwayid != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 5;
	}
	protected ims.framework.utils.Date rttstatusdate;
	protected String otherpatientnumber;
	protected String otherorganisationcode;
	protected ims.pathways.vo.RTTStatusPointVo currentrttstatus;
	protected String pathwayid;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
