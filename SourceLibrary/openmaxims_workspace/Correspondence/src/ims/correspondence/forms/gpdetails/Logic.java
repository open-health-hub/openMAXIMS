//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Sean Nesbitt using IMS Development Environment (version 1.25 build 1942.14331)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.correspondence.forms.gpdetails;

import ims.core.vo.GpShortVo;
import ims.core.vo.GpShortVoCollection;
import ims.framework.enumerations.FormMode;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	protected void onFormOpen() throws ims.framework.exceptions.FormOpenException
	{
		form.setMode(FormMode.VIEW);
		form.btnSelectGP().setEnabled(false);
	}

	private void populateGpGrid(GpShortVoCollection collection) 
	{
		form.grdGps().getRows().clear();
		GpShortVo voGpPract = null;
		GenForm.grdGpsRow row = null;
		for(int i=0;i<collection.size();i++)
		{
			voGpPract = collection.get(i);
			row = form.grdGps().getRows().newRow();
			
			row.setName(voGpPract.getName().toString());
			
			if (null != voGpPract &&  voGpPract.getPracticesIsNotNull())
			{
				for (int j=0; j < voGpPract.getPractices().size(); j++)
				{					
					if (voGpPract.getPractices().get(j).getIsPrimaryPracticeIsNotNull() && 
							(voGpPract.getPractices().get(j).getIsPrimaryPractice().equals(Boolean.TRUE)) &&
								//WDEV-2725
								voGpPract.getPractices().get(j).getPracticeIsNotNull() &&
									voGpPract.getPractices().get(j).getPractice().getAddressIsNotNull())
					{
						row.setAddress(voGpPract.getPractices().get(j).getPractice().getAddress().toDisplayString());
						break;					
					}
				}
			}
			if (voGpPract.getStatusIsNotNull())
				row.setStatus(voGpPract.getStatus().toString());
			row.setValue(voGpPract);
		}
	}
	
	protected void onBtnSelectGPClick() throws ims.framework.exceptions.PresentationLogicException
	{
		
		if (form.grdGps().getSelectedRowIndex() > -1)
		{
			form.getGlobalContext().Core.setGPDetails(form.grdGps().getValue());			
			engine.close(DialogResult.OK);
		}	
		else
			engine.close(DialogResult.CANCEL);
	}
	protected void onBtnClearClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.txtSearchName().setValue("");
		form.txtGPAddress1().setValue("");
		form.txtGPAddress2().setValue("");
		form.txtGPAddress3().setValue("");
		form.txtGPAddress4().setValue("");
		form.txtGPPhone().setValue("");
		form.grdGps().getRows().clear();		
	}
	 protected void onRadioButtonGroup1ValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		// TODO Add your code here.
	}
	protected void onCmbSearchLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		// TODO Add your code here.
	}
	protected void onGrdGPSSelectionChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		//populate control details
		GenForm.grdGpsRow row = form.grdGps().getRows().get(form.grdGps().getSelectedRowIndex());
		GpShortVo voGp = row.getValue();
		if (null == voGp)
			return;
		
		if (voGp.getPracticesIsNotNull())
		{
			//WDEV-2725
			if (row.getValue().getPractices().get(0).getPracticeIsNotNull() &&
					row.getValue().getPractices().get(0).getPractice().getAddressIsNotNull())
			{
				form.txtGPAddress1().setValue(row.getValue().getPractices().get(0).getPractice().getAddress().getLine1());
				form.txtGPAddress2().setValue(row.getValue().getPractices().get(0).getPractice().getAddress().getLine2());
				form.txtGPAddress3().setValue(row.getValue().getPractices().get(0).getPractice().getAddress().getLine3());
				form.txtGPAddress4().setValue(row.getValue().getPractices().get(0).getPractice().getAddress().getLine4());
			}
		}
		
		// TODO form.txtGPLocation().setValue(row.getValue().get)
		
		if (voGp.getNameIsNotNull())
			form.txtGPName().setValue(voGp.getName().toString());
		
		form.txtGPPhone().setValue(row.getValue().getMobile());
		
		form.btnSelectGP().setVisible(true);
		form.btnSelectGP().setEnabled(true);
		
	}

	/* (non-Javadoc)
	 * @see ims.dischargeletters.forms.gpdetails.Handlers#onBtnCancelClick()
	 */
	protected void onBtnCancelClick() throws PresentationLogicException {
		engine.close(DialogResult.CANCEL);
	}

	protected void onImbClearClick() throws PresentationLogicException 
	{
		form.txtSearchName().setValue(""); 
		form.cmbSearchLocation().setValue("");
	}

	protected void onImbSearchClick() throws PresentationLogicException 
	{
		//Load GP's
		if (form.txtSearchName().getValue() != null)
		{
			form.grdGps().getRows().clear();
			populateGpGrid(domain.listGPsBySurname(form.txtSearchName().getValue()));
			form.btnSelectGP().setEnabled(false);			
		}
		else
			engine.showMessage("Please type some letters of the GP's surname into the Name field.");		
	}

}
