//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Billy Mahon using IMS Development Environment (version 1.36 build 2111.26314)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.spinalinjuries.forms.opdsummary;

import ims.admin.vo.ReportTemplateVo;
import ims.admin.vo.ReportVo;
import ims.admin.vo.ReportVoCollection;
import ims.configuration.gen.ConfigFlag;
import ims.framework.exceptions.FormOpenException;

import com.ims.query.builder.client.QueryBuilderClient;
import com.ims.query.builder.client.SeedValue;
import com.ims.query.builder.client.exceptions.QueryBuilderClientException;

public class Logic extends BaseLogic
{
	protected void onFormOpen() throws FormOpenException 
	{
		open();
	}
	
	private void open()
	{
		ReportVoCollection coll = domain.listAssignedReports(new Integer(engine.getFormName().getID()));
	
		if(coll != null && coll.size() > 0)
		{
			//this form must have a single report asigned to it and single template
			ReportVo rep = coll.get(0);
			
			if(rep.getTemplatesIsNotNull() && rep.getTemplates().size() > 0)
			{
				ReportTemplateVo template = rep.getTemplates().get(0);
				
				String urlQueryServer = ConfigFlag.GEN.QUERY_SERVER_URL.getValue();
				String urlReportServer = ConfigFlag.GEN.REPORT_SERVER_URL.getValue();

				String[] obj = domain.getReportAndTemplate(rep.getID_ReportBo(), template.getID_TemplateBo());
			
				if(obj == null || obj.length == 0)
				{
					engine.showMessage("I could not get the report and template !");
					return;
				}
				
				QueryBuilderClient client = new QueryBuilderClient(urlQueryServer, engine.getSessionId());

				client.addSeed(new SeedValue("Patient_id", form.getGlobalContext().Core.getPatientShort().getID_Patient(), Integer.class));
				
				String resultUrl = "";
				try
				{
					resultUrl = client.buildReportAsUrlInlineFrame(obj[0], obj[1], urlReportServer, QueryBuilderClient.HTML, "", 1);
				} 
				catch (QueryBuilderClientException e1)
				{
					engine.showMessage("Error creating report: " + e1.getMessage());
					return;
				}
				
				form.htmReport().setHTML(resultUrl);
			}
		}
		else
		{
			form.htmReport().setHTML("<CENTER><B>No report was assigned to this form. Please go to Admin->Reports and assign a report to this form.</B></CENTER>");
		}
	}
	
}
