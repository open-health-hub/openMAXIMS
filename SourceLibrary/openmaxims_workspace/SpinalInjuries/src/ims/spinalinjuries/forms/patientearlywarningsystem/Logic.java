//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.62 build 3040.26452)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.spinalinjuries.forms.patientearlywarningsystem;

import ims.core.vo.PatientEWSVo;
import ims.core.vo.PatientEWSVoCollection;
import ims.framework.exceptions.PresentationLogicException;
import ims.spinalinjuries.forms.patientearlywarningsystem.GenForm.grdEWSRow;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		doSearch();
	}

	private void doSearch()
	{
		clearGrid();

		PatientEWSVoCollection voColl = domain.listPatientEWS(form.getGlobalContext().Core.getCurrentCareContext());
		if (voColl == null || voColl.size() == 0)
			engine.showMessage("No records found for the Search Criteria Provided");

		populateGridControl(voColl);
	}

	private void populateGridControl(PatientEWSVoCollection voColl)
	{
		for (int i = 0; voColl != null && i < voColl.size(); i++)
		{
			PatientEWSVo voPatEWS= voColl.get(i);
			grdEWSRow row = form.grdEWS().getRows().newRow();
			row.setValue(voPatEWS);
			
			StringBuffer sb = new StringBuffer();
			sb.append(voPatEWS.getSysInfoIsNotNull() ? voPatEWS.getSysInfo().getCreationUser().toString() : "");
			sb.append("  ");
			sb.append(voPatEWS.getSysInfoIsNotNull() ? voPatEWS.getSysInfo().getCreationDateTime().toString() : "");
			
			row.setColAuthoringInfo(sb.toString());
			row.setColScore(voPatEWS.getSECSScore());
			row.setColDetails(voPatEWS.getScoreDetails());
			row.setTooltip(voPatEWS.getScoreDetails());
			row.setColAssess(form.getImages().Core.Text);
			//	row.setColAssess(voPatEWS.getPatientAssessmentIsNotNull() ? voPatEWS.getPatientAssessment() : null);
		}
	}

	private void clearGrid()
	{
		form.grdEWS().getRows().clear();
	}

	@Override
	protected void onGrdEWSGridButtonClicked(int column, grdEWSRow row) throws PresentationLogicException 
	{
		if (row.getValue().getPatientAssessmentIsNotNull())
		{
			form.getGlobalContext().Assessment.setIsDynamicAssessmentOpenedForPreview(true);
			form.getGlobalContext().Assessment.setOpenDynamicAssessmentDialogInViewMode(true);
			//	form.getGlobalContext().Assessment.setDynamicAssessment(row.getValue().getPatientAssessment());
			form.getGlobalContext().Clinical.PatientAssessment.setSelectedAssessment(row.getValue().getPatientAssessment());
			engine.open(form.getForms().Assessment.DynamicAssessmentsDialog, new Object[]{row.getValue().getPatientAssessment().getAssessmentData().getUserAssessment()});
		}
	}
}
