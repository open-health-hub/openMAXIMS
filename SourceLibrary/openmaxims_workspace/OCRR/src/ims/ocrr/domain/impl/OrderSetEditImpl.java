//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Marius Mihalec using IMS Development Environment (version 1.30 build 2046.20208)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.ocrr.domain.impl;

import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.impl.DomainImpl;
import ims.ocrr.configuration.domain.objects.OrderSet;
import ims.ocrr.vo.domain.OrderSetEditVoAssembler;

public class OrderSetEditImpl extends DomainImpl implements ims.ocrr.domain.OrderSetEdit, ims.domain.impl.Transactional
{
	public ims.ocrr.vo.OrderSetEditVo getOrderSet(Integer recordID)
	{
		if(recordID == null)
			return null;
		
		DomainFactory factory = getDomainFactory();
		OrderSet record = (OrderSet)factory.getDomainObject(OrderSet.class, recordID);
		if(record != null)
			return OrderSetEditVoAssembler.create(record);
		
		return null;
	}

	/**
	* saveOrderSet
	*/
	public ims.ocrr.vo.OrderSetEditVo saveOrderSet(ims.ocrr.vo.OrderSetEditVo record) throws ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.StaleObjectException
	{
		DomainFactory factory = getDomainFactory();
		
		if(record.isValidated() == false)
			throw new DomainRuntimeException("Order set not validated");
		
		//WDEV-11073 - removed delete items as hibernate handles orphans
		
		OrderSet doRecord = OrderSetEditVoAssembler.extractOrderSet(factory, record);
		factory.save(doRecord);
			
		return OrderSetEditVoAssembler.create(doRecord);
	}
}
