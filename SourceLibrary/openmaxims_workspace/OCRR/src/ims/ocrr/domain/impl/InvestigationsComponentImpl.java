//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.65 build 3163.31063)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.ocrr.domain.impl;

import ims.ocrr.domain.base.impl.BaseInvestigationsComponentImpl;
import ims.core.patient.vo.PatientRefVo;
import ims.domain.exceptions.DomainInterfaceException;
import ims.ocrr.vo.OrderInvestigationLiteVoCollection;
import ims.ocrr.vo.domain.OrderInvestigationLiteVoAssembler;

public class InvestigationsComponentImpl extends BaseInvestigationsComponentImpl
{

	private static final long serialVersionUID = 1L;
	
	private static final int ORD_INV_REQUESTED = 400;

	public OrderInvestigationLiteVoCollection listResults(PatientRefVo patient) throws DomainInterfaceException
	{
		if (patient == null || !patient.getID_PatientIsNotNull())
			return null;
		
		String query = "select ordInv from OcsOrderSession as orderSession left join orderSession.patient as patient left join orderSession.investigations as ordInv where patient.id =:PAT_ID order by ordInv.displayDateTime desc";
		
		return OrderInvestigationLiteVoAssembler.createOrderInvestigationLiteVoCollectionFromOrderInvestigation(getDomainFactory().find(query, "PAT_ID", patient.getID_Patient(), ORD_INV_REQUESTED));
	}	
}
