//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.65 build 3210.27143)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.ocrr.forms.rejectedinvestigationdetails;

import ims.framework.enumerations.DialogResult;
import ims.ocrr.forms.rejectedinvestigationdetails.GenForm.grdRejectedRow;
import ims.ocrr.vo.OrderInvestigationLiteVo;
import ims.ocrr.vo.OrderInvestigationLiteVoCollection;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		open();
	}
	
	private void open() 
	{
		OrderInvestigationLiteVoCollection voColl = domain.listRejectedInvestigations(form.getGlobalContext().RefMan.getCatsReferral());
		for(int i = 0 ; voColl != null && i < voColl.size() ; i++)
			addInvestigationRow(voColl.get(i));
	}
	
	private void addInvestigationRow(OrderInvestigationLiteVo voInv) 
	{
		grdRejectedRow row = form.grdRejected().getRows().newRow();
		
		if(voInv.getSysInfoIsNotNull() && voInv.getSysInfo().getCreationDateTime() != null)
			row.setColOrdDate(voInv.getSysInfo().getCreationDateTime().getDate());
		row.setColRejectedDate(voInv.getOrdInvCurrentStatusIsNotNull() ? voInv.getOrdInvCurrentStatus().getChangeDateTime().getDate() : null);
		row.setColInvestigatio(voInv.getInvestigationIsNotNull() && voInv.getInvestigation().getInvestigationIndexIsNotNull() ? voInv.getInvestigation().getInvestigationIndex().getName() : "");
		row.setColReasonRej(voInv.getOrdInvCurrentStatusIsNotNull() && voInv.getOrdInvCurrentStatus().getStatusChangeReasonIsNotNull() ? voInv.getOrdInvCurrentStatus().getStatusChangeReason().toString() : "");
		row.setTooltipForColReasonRej(voInv.getOrdInvCurrentStatusIsNotNull() && voInv.getOrdInvCurrentStatus().getStatusChangeReasonIsNotNull() ? voInv.getOrdInvCurrentStatus().getStatusChangeReason().toString() : "");
		row.setColReasonNotes(voInv.getOrdInvCurrentStatusIsNotNull() ? voInv.getOrdInvCurrentStatus().getStatusReason() : "");
		row.setTooltipForColReasonNotes(voInv.getOrdInvCurrentStatusIsNotNull() ? voInv.getOrdInvCurrentStatus().getStatusReason() : "");
	}

	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.OK);
	}
}
