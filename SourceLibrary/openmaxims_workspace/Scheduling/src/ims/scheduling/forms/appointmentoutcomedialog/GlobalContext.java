//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.forms.appointmentoutcomedialog;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		RefMan = new RefManContext(context);
		Core = new CoreContext(context);
		Clinical = new ClinicalContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getBookingAppointmentRefIsNotNull()
		{
			return !cx_SchedulingBookingAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getBookingAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_SchedulingBookingAppointmentRef.getValue(context);
		}
		public void setBookingAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_SchedulingBookingAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointmentRef = new ims.framework.ContextVariable("Scheduling.BookingAppointmentRef", "_cv_Scheduling.BookingAppointmentRef");
		public boolean getBookingAppointmentIsNotNull()
		{
			return !cx_SchedulingBookingAppointment.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentVo getBookingAppointment()
		{
			return (ims.scheduling.vo.Booking_AppointmentVo)cx_SchedulingBookingAppointment.getValue(context);
		}
		public void setBookingAppointment(ims.scheduling.vo.Booking_AppointmentVo value)
		{
			cx_SchedulingBookingAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointment = new ims.framework.ContextVariable("Scheduling.BookingAppointment", "_cv_Scheduling.BookingAppointment");
		public boolean getBookingActivityIsNotNull()
		{
			return !cx_SchedulingBookingActivity.getValueIsNull(context);
		}
		public ims.core.resource.place.vo.ActivityRefVo getBookingActivity()
		{
			return (ims.core.resource.place.vo.ActivityRefVo)cx_SchedulingBookingActivity.getValue(context);
		}
		public void setBookingActivity(ims.core.resource.place.vo.ActivityRefVo value)
		{
			cx_SchedulingBookingActivity.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingActivity = new ims.framework.ContextVariable("Scheduling.BookingActivity", "_cv_Scheduling.BookingActivity");
		public boolean getFutureAppointmentDetailsIsNotNull()
		{
			return !cx_SchedulingFutureAppointmentDetails.getValueIsNull(context);
		}
		public ims.scheduling.vo.FutureAppointmentDetailsVo getFutureAppointmentDetails()
		{
			return (ims.scheduling.vo.FutureAppointmentDetailsVo)cx_SchedulingFutureAppointmentDetails.getValue(context);
		}
		public void setFutureAppointmentDetails(ims.scheduling.vo.FutureAppointmentDetailsVo value)
		{
			cx_SchedulingFutureAppointmentDetails.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingFutureAppointmentDetails = new ims.framework.ContextVariable("Scheduling.FutureAppointmentDetails", "_cv_Scheduling.FutureAppointmentDetails");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientElectiveListIsNotNull()
		{
			return !cx_RefManPatientElectiveList.getValueIsNull(context);
		}
		public ims.RefMan.vo.PatientElectiveListDetailsToSaveVo getPatientElectiveList()
		{
			return (ims.RefMan.vo.PatientElectiveListDetailsToSaveVo)cx_RefManPatientElectiveList.getValue(context);
		}
		public void setPatientElectiveList(ims.RefMan.vo.PatientElectiveListDetailsToSaveVo value)
		{
			cx_RefManPatientElectiveList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManPatientElectiveList = new ims.framework.ContextVariable("RefMan.PatientElectiveList", "_cv_RefMan.PatientElectiveList");
		public boolean getPatientProcedureForAppointmentOutcomeIsNotNull()
		{
			return !cx_RefManPatientProcedureForAppointmentOutcome.getValueIsNull(context);
		}
		public ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo getPatientProcedureForAppointmentOutcome()
		{
			return (ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo)cx_RefManPatientProcedureForAppointmentOutcome.getValue(context);
		}
		public void setPatientProcedureForAppointmentOutcome(ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo value)
		{
			cx_RefManPatientProcedureForAppointmentOutcome.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManPatientProcedureForAppointmentOutcome = new ims.framework.ContextVariable("RefMan.PatientProcedureForAppointmentOutcome", "_cv_RefMan.PatientProcedureForAppointmentOutcome");
		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getAppointmentSavedIsNotNull()
		{
			return !cx_RefManAppointmentSaved.getValueIsNull(context);
		}
		public Boolean getAppointmentSaved()
		{
			return (Boolean)cx_RefManAppointmentSaved.getValue(context);
		}
		public void setAppointmentSaved(Boolean value)
		{
			cx_RefManAppointmentSaved.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManAppointmentSaved = new ims.framework.ContextVariable("RefMan.AppointmentSaved", "_cv_RefMan.AppointmentSaved");
		public boolean getSelectedDiagnosisApptOutcomeListIsNotNull()
		{
			return !cx_RefManSelectedDiagnosisApptOutcomeList.getValueIsNull(context);
		}
		public ims.clinical.vo.PatientDiagnosisOpNotesVoCollection getSelectedDiagnosisApptOutcomeList()
		{
			return (ims.clinical.vo.PatientDiagnosisOpNotesVoCollection)cx_RefManSelectedDiagnosisApptOutcomeList.getValue(context);
		}
		public void setSelectedDiagnosisApptOutcomeList(ims.clinical.vo.PatientDiagnosisOpNotesVoCollection value)
		{
			cx_RefManSelectedDiagnosisApptOutcomeList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedDiagnosisApptOutcomeList = new ims.framework.ContextVariable("RefMan.SelectedDiagnosisApptOutcomeList", "_cv_RefMan.SelectedDiagnosisApptOutcomeList");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getEpisodeofCareShortIsNotNull()
		{
			return !cx_CoreEpisodeofCareShort.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareShortVo getEpisodeofCareShort()
		{
			return (ims.core.vo.EpisodeofCareShortVo)cx_CoreEpisodeofCareShort.getValue(context);
		}
		public void setEpisodeofCareShort(ims.core.vo.EpisodeofCareShortVo value)
		{
			cx_CoreEpisodeofCareShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreEpisodeofCareShort = new ims.framework.ContextVariable("Core.EpisodeofCareShort", "_cvp_Core.EpisodeofCareShort");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getCurrentClinicalContactIsNotNull()
		{
			return !cx_CoreCurrentClinicalContact.getValueIsNull(context);
		}
		public ims.core.vo.ClinicalContactShortVo getCurrentClinicalContact()
		{
			return (ims.core.vo.ClinicalContactShortVo)cx_CoreCurrentClinicalContact.getValue(context);
		}
		public void setCurrentClinicalContact(ims.core.vo.ClinicalContactShortVo value)
		{
			cx_CoreCurrentClinicalContact.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentClinicalContact = new ims.framework.ContextVariable("Core.CurrentClinicalContact", "_cvp_Core.CurrentClinicalContact");

		private ims.framework.Context context;
	}
	public final class ClinicalContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ClinicalContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSelectedPatientDiagnosisOPNotesIsNotNull()
		{
			return !cx_ClinicalSelectedPatientDiagnosisOPNotes.getValueIsNull(context);
		}
		public ims.clinical.vo.PatientDiagnosisOpNotesVo getSelectedPatientDiagnosisOPNotes()
		{
			return (ims.clinical.vo.PatientDiagnosisOpNotesVo)cx_ClinicalSelectedPatientDiagnosisOPNotes.getValue(context);
		}
		public void setSelectedPatientDiagnosisOPNotes(ims.clinical.vo.PatientDiagnosisOpNotesVo value)
		{
			cx_ClinicalSelectedPatientDiagnosisOPNotes.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalSelectedPatientDiagnosisOPNotes = new ims.framework.ContextVariable("Clinical.SelectedPatientDiagnosisOPNotes", "_cv_Clinical.SelectedPatientDiagnosisOPNotes");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public RefManContext RefMan;
	public CoreContext Core;
	public ClinicalContext Clinical;
}
