//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.forms.bookingslotstatus;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		ChooseAndBook = new ChooseAndBookContext(context);
	}
	public final class ChooseAndBookContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ChooseAndBookContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getisCancelSlotAndApptAvailableIsNotNull()
		{
			return !cx_ChooseAndBookisCancelSlotAndApptAvailable.getValueIsNull(context);
		}
		public Boolean getisCancelSlotAndApptAvailable()
		{
			return (Boolean)cx_ChooseAndBookisCancelSlotAndApptAvailable.getValue(context);
		}
		public void setisCancelSlotAndApptAvailable(Boolean value)
		{
			cx_ChooseAndBookisCancelSlotAndApptAvailable.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookisCancelSlotAndApptAvailable = new ims.framework.ContextVariable("ChooseAndBook.isCancelSlotAndApptAvailable", "_cv_ChooseAndBook.isCancelSlotAndApptAvailable");
		public boolean getApptStatusIsNotNull()
		{
			return !cx_ChooseAndBookApptStatus.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.Status_Reason getApptStatus()
		{
			return (ims.scheduling.vo.lookups.Status_Reason)cx_ChooseAndBookApptStatus.getValue(context);
		}
		public void setApptStatus(ims.scheduling.vo.lookups.Status_Reason value)
		{
			cx_ChooseAndBookApptStatus.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookApptStatus = new ims.framework.ContextVariable("ChooseAndBook.ApptStatus", "_cv_ChooseAndBook.ApptStatus");
		public boolean getisCancelSlotIsNotNull()
		{
			return !cx_ChooseAndBookisCancelSlot.getValueIsNull(context);
		}
		public Boolean getisCancelSlot()
		{
			return (Boolean)cx_ChooseAndBookisCancelSlot.getValue(context);
		}
		public void setisCancelSlot(Boolean value)
		{
			cx_ChooseAndBookisCancelSlot.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookisCancelSlot = new ims.framework.ContextVariable("ChooseAndBook.isCancelSlot", "_cv_ChooseAndBook.isCancelSlot");
		public boolean getApptStatusReasonIsNotNull()
		{
			return !cx_ChooseAndBookApptStatusReason.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.Status_Reason getApptStatusReason()
		{
			return (ims.scheduling.vo.lookups.Status_Reason)cx_ChooseAndBookApptStatusReason.getValue(context);
		}
		public void setApptStatusReason(ims.scheduling.vo.lookups.Status_Reason value)
		{
			cx_ChooseAndBookApptStatusReason.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookApptStatusReason = new ims.framework.ContextVariable("ChooseAndBook.ApptStatusReason", "_cv_ChooseAndBook.ApptStatusReason");
		public boolean getSessionSlotStatusReasonIsNotNull()
		{
			return !cx_ChooseAndBookSessionSlotStatusReason.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.Status_Reason getSessionSlotStatusReason()
		{
			return (ims.scheduling.vo.lookups.Status_Reason)cx_ChooseAndBookSessionSlotStatusReason.getValue(context);
		}
		public void setSessionSlotStatusReason(ims.scheduling.vo.lookups.Status_Reason value)
		{
			cx_ChooseAndBookSessionSlotStatusReason.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookSessionSlotStatusReason = new ims.framework.ContextVariable("ChooseAndBook.SessionSlotStatusReason", "_cv_ChooseAndBook.SessionSlotStatusReason");
		public boolean getSessionSlotStatusIsNotNull()
		{
			return !cx_ChooseAndBookSessionSlotStatus.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.Status_Reason getSessionSlotStatus()
		{
			return (ims.scheduling.vo.lookups.Status_Reason)cx_ChooseAndBookSessionSlotStatus.getValue(context);
		}
		public void setSessionSlotStatus(ims.scheduling.vo.lookups.Status_Reason value)
		{
			cx_ChooseAndBookSessionSlotStatus.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookSessionSlotStatus = new ims.framework.ContextVariable("ChooseAndBook.SessionSlotStatus", "_cv_ChooseAndBook.SessionSlotStatus");

		private ims.framework.Context context;
	}

	public ChooseAndBookContext ChooseAndBook;
}
