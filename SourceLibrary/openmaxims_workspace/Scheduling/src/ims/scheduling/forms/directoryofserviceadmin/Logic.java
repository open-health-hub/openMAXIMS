//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.30 build 2011.19815)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.scheduling.forms.directoryofserviceadmin;

import ims.RefMan.vo.ContractConfigShortVo;
import ims.RefMan.vo.ContractConfigShortVoCollection;
import ims.configuration.gen.ConfigFlag;
import ims.core.vo.LocationLiteVoCollection;
import ims.core.vo.ServiceFunctionVo;
import ims.core.vo.ServiceFunctionVoCollection;
import ims.core.vo.ServiceShortVo;
import ims.core.vo.ServiceShortVoCollection;
import ims.core.vo.lookups.PreActiveActiveInactiveStatus;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.Color;
import ims.scheduling.vo.DirectoryOfServiceVo;
import ims.scheduling.vo.DirectoryOfServiceVoCollection;

import java.util.ArrayList;

public class Logic extends BaseLogic
{
	protected void onFormOpen() throws ims.framework.exceptions.FormOpenException
	{
		defaultContextMenus();
		loadDefaultData();
		initialize();
	}

	private void initialize()
	{

	}

	private void defaultContextMenus()
	{
		form.getContextMenus().getGenericGridAddItem().setVisible(true);
		form.getContextMenus().getGenericGridUpdateItem().setVisible(false);
	}

	protected void onGrdDetailsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		DirectoryOfServiceVo voDirService = form.grdDetails().getValue();
		form.getLocalContext().setDirectoryOfService(voDirService);
		form.getContextMenus().getGenericGridUpdateItem().setVisible(form.getLocalContext().getDirectoryOfServiceIsNotNull());//WDEV-11662
		populateScreenFromData();
	}

	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		DirectoryOfServiceVo voDirService = populateDataFromScreen();
		
		//wdev-11805
		if(form.qmbLocation().getValue() != null && form.cmbContract().getValue() != null && form.cmbContract().getValue().getContractOrganisationIsNotNull())
		{			
			if(getLocattionRefresh() == false)
			{
				engine.showErrors(new String[]{"Location is mandatory."});
				return;
			}
		}
		//----------------

		String[] arrErrors = voDirService.validate();
		if (arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}

		try
		{
			voDirService = domain.saveDirectoryOfService(voDirService);
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		catch (UniqueKeyViolationException e)
		{
			engine.showMessage(e.getMessage());
			return;
		}

		defaultContextMenus();
		search(false);//	WDEV-15178
		form.grdDetails().setValue(voDirService);
		onGrdDetailsSelectionChanged();

		form.setMode(FormMode.VIEW);
	}
	//wdev-11805
	private Boolean getLocattionRefresh()
	{
		
		LocationLiteVoCollection voCollLocLite= domain.listLocationLiteByNameAndOrganisation("%%%", form.cmbContract().getValue().getContractOrganisation());
		if (voCollLocLite != null && voCollLocLite.size() > 0)
		{
			for (int i = 0; i < voCollLocLite.size(); i++)
			{
				if( form.qmbLocation().getValue().equals(voCollLocLite.get(i)))
					return true;
			
			}
		}
		
		form.qmbLocation().clear();
		if (voCollLocLite != null && voCollLocLite.size() > 0)
		{
			for (int i = 0; i < voCollLocLite.size(); i++)
			{
				form.qmbLocation().newRow(voCollLocLite.get(i), voCollLocLite.get(i).getName().toString());
			}
		
		}
		return false;
		
	}
	//-----------
	

	//WDEV-11662
	private void removeNonActiveContracts()
	{
		// form.cmbContract().getValues().get(0).
		ArrayList values = form.cmbContract().getValues();
		if (values == null || values.size() == 0)
			return;
		for (int i = values.size() - 1; i >= 0; i--)
		{
			if (values.get(i) instanceof ContractConfigShortVo)
			{
				ContractConfigShortVo contract = (ContractConfigShortVo) values.get(i);

				if (!PreActiveActiveInactiveStatus.ACTIVE.equals(contract.getStatus()))
				{
					form.cmbContract().removeRow((ContractConfigShortVo) values.get(i));
				}
			}
		}
	}

	private DirectoryOfServiceVo populateDataFromScreen()
	{
		DirectoryOfServiceVo voDirService = (DirectoryOfServiceVo) form.getLocalContext().getDirectoryOfService().clone();
		if (voDirService == null)
			voDirService = new DirectoryOfServiceVo();

		voDirService.setDoSId(form.txtId().getValue());
		voDirService.setDoSName(form.txtName().getValue());
		voDirService.setService(form.cmbService().getValue());
		voDirService.setIsActive(new Boolean(form.chkActive().getValue()));
		voDirService.setLocation(form.qmbLocation().getValue());
		//voDirService.setOrganisation(form.cmbOrganisation().getValue());
		//WDEV-11662
		voDirService.setContract(form.cmbContract().getValue());

		ServiceFunctionVoCollection voCollFuncs = voDirService.getFunctions();
		if (voCollFuncs == null)
			voCollFuncs = new ServiceFunctionVoCollection();

		for (int i = 0; i < form.grdFunctions().getRows().size(); i++)
		{
			if (form.grdFunctions().getRows().get(i).getColSelect() == true)
				voCollFuncs.add(form.grdFunctions().getRows().get(i).getValue());
		}

		voDirService.setFunctions(voCollFuncs);

		return voDirService;
	}

	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		//Start WDEV-11662 & WDEV-11611
		search(false);//	WDEV-15178
		form.grdDetails().setValue(form.getLocalContext().getDirectoryOfService());
		onGrdDetailsSelectionChanged();
		//End WDEV-11662 & WDEV-11611
		form.setMode(FormMode.VIEW);
		/* WDEV-11662 & WDEV-11611
		populateScreenFromData();
		defaultContextMenus();
		*/
		
	}

	private void populateScreenFromData()
	{
		clearDetails();

		DirectoryOfServiceVo voDirService = form.getLocalContext().getDirectoryOfService();
		if (voDirService == null)
			return;

		form.txtId().setValue(voDirService.getDoSId());
		form.txtName().setValue(voDirService.getDoSName());
		form.chkActive().setValue(voDirService.getIsActiveIsNotNull() ? voDirService.getIsActive().booleanValue() : false);
		form.cmbService().setValue(voDirService.getService());
		//WDEV-11662 form.cmbOrganisation().setValue(voDirService.getOrganisation());
		//WDEV-11662-Begin
		if (voDirService.getContractIsNotNull() && !form.cmbContract().getValues().contains(voDirService.getContractIsNotNull()))
		{
			form.cmbContract().newRow(voDirService.getContract(), voDirService.getContract().getContractName());
		}
		form.cmbContract().setValue(voDirService.getContract());
		//WDEV-11662-End
		if (voDirService.getLocationIsNotNull())
		{
			form.qmbLocation().newRow(voDirService.getLocation(), voDirService.getLocation().getName());
			form.qmbLocation().setValue(voDirService.getLocation());
		}

		loadFunctions();

		if (voDirService.getFunctionsIsNotNull())
		{
			ServiceFunctionVo voFunction = null;
			GenForm.grdFunctionsRow fRow = null;
			for (int i = 0; i < voDirService.getFunctions().size(); i++)
			{
				voFunction = voDirService.getFunctions().get(i);
				boolean bFound = false;
				for (int p = 0; p < form.grdFunctions().getRows().size(); p++)
				{
					fRow = form.grdFunctions().getRows().get(p);
					if (voFunction.equals(fRow.getValue()))
					{
						fRow.setColSelect(true);
						bFound = true;
					}
				}
				if (!bFound)
				{
					fRow = form.grdFunctions().getRows().newRow();
					if (voFunction.getFunctionIsNotNull())
						fRow.setColName(voFunction.getFunction().getText());
					fRow.setColSelect(true);
					fRow.setValue(voFunction);
				}
			}
		}
	}

	protected void onBtnSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		search(true);//	WDEV-15178
	}

	//	WDEV-15178
	private void search(boolean showErrorMessages)
	{
		DirectoryOfServiceVo filter = new DirectoryOfServiceVo();
		filter.setDoSName(form.txtNameFilter().getValue());
		filter.setService(form.cmbServiceFilter().getValue());
		filter.setLocation(form.qmbLocationFilter().getValue());

		clearDetails();
		DirectoryOfServiceVoCollection voCollDirServices = domain.listDirectoryOfService(filter);
		populateDetailsGrid(voCollDirServices, showErrorMessages);//	WDEV-15178

		defaultContextMenus();
	}

	private void populateDetailsGrid(DirectoryOfServiceVoCollection voCollDirServices, boolean showErrorMessages)//	WDEV-15178
	{
		form.grdDetails().getRows().clear();

		if ((voCollDirServices == null || voCollDirServices.size() == 0) && showErrorMessages)//	WDEV-15178
		{
			engine.showMessage("No results for search criteria");
			return;
		}

		DirectoryOfServiceVo voDirService = null;
		GenForm.grdDetailsRow row = null;
		for (int i = 0; i < voCollDirServices.size(); i++)
		{
			voDirService = voCollDirServices.get(i);
			row = form.grdDetails().getRows().newRow();
			row.setColId(voDirService.getDoSId());
			row.setColName(voDirService.getDoSName());
			if (voDirService.getServiceIsNotNull())
				row.setColService(voDirService.getService().getServiceName());
			if (!voDirService.getIsActiveIsNotNull() || (voDirService.getIsActiveIsNotNull() && !voDirService.getIsActive().booleanValue()))
				row.setBackColor(Color.Linen);
			if (voDirService.getLocationIsNotNull())
				row.setColLocation(voDirService.getLocation().getName());
			row.setValue(voDirService);
		}
	}

	protected void onBtnClearClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.grdDetails().getRows().clear();
		form.txtNameFilter().setValue(null);
		form.cmbServiceFilter().setValue(null);								//wdev-10876
		form.qmbLocationFilter().clear();
		form.getContextMenus().getGenericGridUpdateItem().setVisible(false);//WDEV-10876
		clearDetails();
	}

	private void clearDetails()
	{
		form.grdFunctions().getRows().clear();
		form.txtId().setValue(null);
		form.txtName().setValue(null);
		form.cmbService().setValue(null);
		form.cmbContract().setValue(null);//WDEV-11662
		//WDEV-11662form.cmbOrganisation().setValue(null);
		removeNonActiveContracts();
		form.qmbLocation().clear();
		form.chkActive().setValue(false);
	}

	private ServiceShortVoCollection listServices(String value)
	{
		ServiceShortVo voService = new ServiceShortVo();
		voService.setServiceName(value);
		voService.setIsActive(Boolean.TRUE);
		return domain.listService(voService);
	}

	protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
	{
		switch (menuItemID)
		{
			case GenForm.ContextMenus.GenericGrid.Add:
				menuAddClick();
				break;
			case GenForm.ContextMenus.GenericGrid.Update:
				menuUpdateClick();
				break;
		}
	}

	private void menuUpdateClick()
	{
		form.setMode(FormMode.EDIT);
		form.getContextMenus().getGenericGridUpdateItem().setVisible(false);
		form.getContextMenus().getGenericGridAddItem().setVisible(false);
	}

	private void menuAddClick()
	{
		form.getLocalContext().setDirectoryOfService(new DirectoryOfServiceVo());
		form.grdDetails().setValue(null);
		clearDetails();
		form.getContextMenus().getGenericGridUpdateItem().setVisible(false);
		form.getContextMenus().getGenericGridAddItem().setVisible(false);
		form.setMode(FormMode.EDIT);
		form.txtName().setFocus();
		form.chkActive().setValue(true);
	}

	private void loadFunctions()
	{
		form.grdFunctions().getRows().clear();

		ServiceShortVo voService = form.cmbService().getValue();
		if (voService == null)
			return;

		ServiceFunctionVoCollection voCollFunction = domain.listServiceFunctions(voService);
		if (voCollFunction != null)
		{
			GenForm.grdFunctionsRow fRow;
			for (int i = 0; i < voCollFunction.size(); i++)
			{
				fRow = form.grdFunctions().getRows().newRow();
				if (voCollFunction.get(i).getFunctionIsNotNull())
					fRow.setColName(voCollFunction.get(i).getFunction().getText());
				fRow.setValue(voCollFunction.get(i));
			}
		}
	}

	protected void onCmbSpecialityValueChanged() throws PresentationLogicException
	{
		loadFunctions();
	}

	private void loadDefaultData()
	{
		form.txtNameFilter().setFocus();
		// Load SpecialityFilter and Speciality combos
		form.cmbServiceFilter().clear();
		form.cmbService().clear();
		ServiceShortVoCollection voCollServices = listServices(null);
		for (int i = 0; i < voCollServices.size(); i++)
		{
			form.cmbServiceFilter().newRow(voCollServices.get(i), voCollServices.get(i).getServiceName());
			form.cmbService().newRow(voCollServices.get(i), voCollServices.get(i).getServiceName());
		}
		/*WDEV-11662
		OrganisationLiteVoCollection listOrganisations = domain.listOrganisations();
		
		form.cmbOrganisation().clear();
		for (int i = 0; listOrganisations != null && i < listOrganisations.size(); i++)
		{
			form.cmbOrganisation().newRow(listOrganisations.get(i), listOrganisations.get(i).getName());
		}*/
		
		ContractConfigShortVoCollection contracts = domain.listActiveContracts();
		form.cmbContract().clear();
		for (int i = 0; contracts != null && i < contracts.size(); i++)
		{
			form.cmbContract().newRow(contracts.get(i), contracts.get(i).getContractName());
		}
		//WDEV-11662 End

	}

	protected void onQmbLocationFilterTextSubmited(String value) throws PresentationLogicException
	{
		form.qmbLocationFilter().clear();
		LocationLiteVoCollection voCollLocLite = domain.listLocationLiteByName(value);

		if (voCollLocLite != null && voCollLocLite.size() > 0)
		{
			for (int i = 0; i < voCollLocLite.size(); i++)
			{
				form.qmbLocationFilter().newRow(voCollLocLite.get(i), voCollLocLite.get(i).getName().toString());
			}
			if (voCollLocLite.size() == 1)
				form.qmbLocationFilter().setValue(voCollLocLite.get(0));
			else if (voCollLocLite.size() > 1)
				form.qmbLocationFilter().showOpened();
		}
		else
			engine.showMessage("No matching records found");
	}

	protected void onQmbLocationTextSubmited(String value) throws PresentationLogicException
	{
		form.qmbLocation().clear();

		//WDEV-11662LocationLiteVoCollection voCollLocLite = form.cmbOrganisation().getValue() instanceof OrganisationLiteVo ? domain.listLocationLiteByNameAndOrganisation(value, form.cmbOrganisation().getValue()) : domain.listLocationLiteByName(value);
		if (form.cmbContract().getValue() == null || !form.cmbContract().getValue().getContractOrganisationIsNotNull())
			return;
		LocationLiteVoCollection voCollLocLite= domain.listLocationLiteByNameAndOrganisation(value, form.cmbContract().getValue().getContractOrganisation());
		//WDEV-11662 end
		if (voCollLocLite != null && voCollLocLite.size() > 0)
		{
			for (int i = 0; i < voCollLocLite.size(); i++)
			{
				form.qmbLocation().newRow(voCollLocLite.get(i), voCollLocLite.get(i).getName().toString());
			}
			if (voCollLocLite.size() == 1)
				form.qmbLocation().setValue(voCollLocLite.get(0));
			else if (voCollLocLite.size() > 1)
				form.qmbLocation().showOpened();
		}
		else
			engine.showMessage("No matching records found");
	}
	/*WDEV-11662
	@Override
	protected void onCmbOrganisationValueChanged() throws PresentationLogicException
	{
		if (form.cmbOrganisation().getValue() instanceof OrganisationLiteVo)
		{
			form.qmbLocation().clear();
			form.qmbLocation().setValue(null);
		}

	}
	*/
	//WDEV-11662
	@Override
	protected void onCmbContractValueChanged() throws PresentationLogicException
	{
		clearLocation();
		updateLocationControlState();
		
	}
	private void clearLocation()
	{
		form.qmbLocation().getValues().clear();
		form.qmbLocation().clear();
	}
	private void updateLocationControlState()
	{
		form.qmbLocation().setEnabled(FormMode.EDIT.equals(form.getMode()) && form.cmbContract().getValue()!=null);
	}



	@Override
	protected void onFormModeChanged()
	{
		updateLocationControlState();
		
	}
	//End WDEV-11662
}
