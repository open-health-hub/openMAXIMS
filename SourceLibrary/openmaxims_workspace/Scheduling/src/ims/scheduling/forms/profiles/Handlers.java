//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.forms.profiles;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode, ims.framework.interfaces.IClearInfo
{
	abstract protected String[] getLookupUsageErrors();
	abstract protected void bindcmbConsMediaTypeLookup();
	abstract protected void defaultcmbConsMediaTypeLookupValue();
	abstract protected void bindcmbSlotTypeLookup();
	abstract protected void defaultcmbSlotTypeLookupValue();
	abstract protected void bindcmbTheatreTypeLookup();
	abstract protected void defaultcmbTheatreTypeLookupValue();
	abstract protected void bindcmbCategoryLookup();
	abstract protected void defaultcmbCategoryLookupValue();
	abstract protected void bindcmbIntervalTypeLookup();
	abstract protected void defaultcmbIntervalTypeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbFilterDirectoryOfServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbConsMediaTypeValueSet(Object value);
	abstract protected void oncmbSlotTypeValueSet(Object value);
	abstract protected void onCmbSlotTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkFlexibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTheatreTypeValueSet(Object value);
	abstract protected void onChkTheatreValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnLocationClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbCategoryValueSet(Object value);
	abstract protected void onCmbSpecialityValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbIntervalTypeValueSet(Object value);
	abstract protected void onCmbIntervalTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteStartDateValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdListOwnerSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdListOwnersGridQueryComboBoxTextSubmited(int column, GenForm.lyrDetailsLayer.tabListOwnersContainer.grdListOwnerRow row, String text) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdDOSGridCheckBoxClicked(int column, GenForm.lyrDetailsLayer.tabDOSContainer.grdDOSRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdSlotsGeneralSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkSlotsActiveOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdActivitiesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTCITimesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdParentChildSlotsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTheatreSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTheatreGridQueryComboBoxTextSubmited(int column, GenForm.lyrDetailsLayer.tabTheatreContainer.grdTheatreRow row, String text) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdBookingRightsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdExclPeriodsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdExclDatesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTemplatesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdProfilesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				// Checking lookups usage
				if(getLookupUsageErrors() != null && getLookupUsageErrors().length > 0)
					throw new ims.framework.exceptions.FormMandatoryLookupMissingException(ims.framework.exceptions.FormMandatoryLookupMissingException.getError(getLookupUsageErrors()));
				onFormOpen();
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.qmbFilterDirectoryOfService().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbFilterDirectoryOfServiceTextSubmited(value);
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnClearClick();
			}
		});
		this.form.btnSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSearchClick();
			}
		});
		this.form.lyrDetails().tabGeneralDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabGeneralDetailsActivated();
			}
		});
		this.form.lyrDetails().tabProfileDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabProfileDetailsActivated();
			}
		});
		this.form.lyrDetails().tabListOwners().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabListOwnersActivated();
			}
		});
		this.form.lyrDetails().tabDOS().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabDOSActivated();
			}
		});
		this.form.lyrDetails().tabSlots().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabSlotsActivated();
			}
		});
		this.form.lyrDetails().tabActivities().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabActivitiesActivated();
			}
		});
		this.form.lyrDetails().tabTheatre().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabTheatreActivated();
			}
		});
		this.form.lyrDetails().tabBookingRights().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabBookingRightsActivated();
			}
		});
		this.form.lyrDetails().tabExclusion().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabExclusionActivated();
			}
		});
		this.form.lyrDetails().tabTemplates().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabTemplatesActivated();
			}
		});
		this.form.lyrDetails().tabGeneralDetails().cmbConsMediaType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbConsMediaTypeValueSet(value);
			}
		});
		this.form.lyrDetails().tabGeneralDetails().cmbSlotType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSlotTypeValueSet(value);
			}
		});
		this.form.lyrDetails().tabGeneralDetails().cmbSlotType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSlotTypeValueChanged();
			}
		});
		this.form.lyrDetails().tabGeneralDetails().chkFlexible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkFlexibleValueChanged();
			}
		});
		this.form.lyrDetails().tabGeneralDetails().cmbTheatreType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTheatreTypeValueSet(value);
			}
		});
		this.form.lyrDetails().tabGeneralDetails().chkTheatre().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTheatreValueChanged();
			}
		});
		this.form.lyrDetails().tabGeneralDetails().btnLocation().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnLocationClick();
			}
		});
		this.form.lyrDetails().tabGeneralDetails().cmbCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCategoryValueSet(value);
			}
		});
		this.form.lyrDetails().tabGeneralDetails().cmbSpeciality().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSpecialityValueChanged();
			}
		});
		this.form.lyrDetails().tabProfileDetails().cmbIntervalType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbIntervalTypeValueSet(value);
			}
		});
		this.form.lyrDetails().tabProfileDetails().cmbIntervalType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbIntervalTypeValueChanged();
			}
		});
		this.form.lyrDetails().tabProfileDetails().dteStartDate().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteStartDateValueChanged();
			}
		});
		this.form.lyrDetails().tabListOwners().grdListOwner().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdListOwnerSelectionChanged();
			}
		});
		this.form.lyrDetails().tabListOwners().grdListOwner().setGridQueryComboBoxTextSubmitedEvent(new GridQueryComboBoxTextSubmited()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, String text) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdListOwnersGridQueryComboBoxTextSubmited(column, new GenForm.lyrDetailsLayer.tabListOwnersContainer.grdListOwnerRow(row), text);
			}
		});
		this.form.lyrDetails().tabDOS().grdDOS().setGridCheckBoxClickedEvent(new GridCheckBoxClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdDOSGridCheckBoxClicked(column, new GenForm.lyrDetailsLayer.tabDOSContainer.grdDOSRow(row), isChecked);
			}
		});
		this.form.lyrDetails().tabSlots().grdSlotsGeneral().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdSlotsGeneralSelectionChanged();
			}
		});
		this.form.lyrDetails().tabSlots().chkSlotsActiveOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSlotsActiveOnlyValueChanged();
			}
		});
		this.form.lyrDetails().tabActivities().grdActivities().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdActivitiesSelectionChanged();
			}
		});
		this.form.lyrDetails().tabTheatre().lyrSlots().tabTCI().grdTCITimes().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTCITimesSelectionChanged();
			}
		});
		this.form.lyrDetails().tabTheatre().lyrSlots().tabTheatreSlots().grdParentChildSlots().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdParentChildSlotsSelectionChanged();
			}
		});
		this.form.lyrDetails().tabTheatre().grdTheatre().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTheatreSelectionChanged();
			}
		});
		this.form.lyrDetails().tabTheatre().grdTheatre().setGridQueryComboBoxTextSubmitedEvent(new GridQueryComboBoxTextSubmited()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, String text) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTheatreGridQueryComboBoxTextSubmited(column, new GenForm.lyrDetailsLayer.tabTheatreContainer.grdTheatreRow(row), text);
			}
		});
		this.form.lyrDetails().tabBookingRights().grdBookingRights().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdBookingRightsSelectionChanged();
			}
		});
		this.form.lyrDetails().tabExclusion().grdExclPeriods().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdExclPeriodsSelectionChanged();
			}
		});
		this.form.lyrDetails().tabExclusion().grdExclDates().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdExclDatesSelectionChanged();
			}
		});
		this.form.lyrDetails().tabTemplates().grdTemplates().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTemplatesSelectionChanged();
			}
		});
		this.form.grdProfiles().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdProfilesSelectionChanged();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.getContextMenus().Scheduling.getProfileListOwnersADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileListOwners.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileListOwnersEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileListOwners.EDIT, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileListOwnersREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileListOwners.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileSlotsGeneralADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileSlotsGeneral.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileSlotsGeneralEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileSlotsGeneral.EDIT, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileSlotsGeneralREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileSlotsGeneral.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileActivityADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileActivity.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileActivityREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileActivity.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreTCITimesADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatreTCITimes.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreTCITimesREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatreTCITimes.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreSlotsADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatreSlots.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreSlotsEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatreSlots.EDIT, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreSlotsREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatreSlots.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatre.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTheatreREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTheatre.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileBookingRightsADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileBookingRights.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileBookingRightsEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileBookingRights.EDIT, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileBookingRightsREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileBookingRights.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileExclusionTimesADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileExclusionTimes.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileExclusionTimesEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileExclusionTimes.EDIT, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileExclusionTimesREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileExclusionTimes.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileExclusionDatesADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileExclusionDates.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileExclusionDatesEDITItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileExclusionDates.EDIT, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileExclusionDatesREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileExclusionDates.REMOVE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTemplatesADDTEMPLATEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTemplates.ADDTEMPLATE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfileTemplatesREMOVETEMPLATEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfileTemplates.REMOVETEMPLATE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfilesMenuADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfilesMenu.ADD, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfilesMenuUPDATEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfilesMenu.UPDATE, sender);
			}
		});
		this.form.getContextMenus().Scheduling.getProfilesMenuCLONE_PROFILEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.SchedulingNamespace.ProfilesMenu.CLONE_PROFILE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbConsMediaTypeLookup();
		bindcmbSlotTypeLookup();
		bindcmbTheatreTypeLookup();
		bindcmbCategoryLookup();
		bindcmbIntervalTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbConsMediaTypeLookup();
		bindcmbSlotTypeLookup();
		bindcmbTheatreTypeLookup();
		bindcmbCategoryLookup();
		bindcmbIntervalTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbConsMediaTypeLookupValue();
		defaultcmbSlotTypeLookupValue();
		defaultcmbTheatreTypeLookupValue();
		defaultcmbCategoryLookupValue();
		defaultcmbIntervalTypeLookupValue();
	}
	private void onlyrDetailstabGeneralDetailsActivated()
	{
		this.form.lyrDetails().showtabGeneralDetails();
	}
	private void onlyrDetailstabProfileDetailsActivated()
	{
		this.form.lyrDetails().showtabProfileDetails();
	}
	private void onlyrDetailstabListOwnersActivated()
	{
		this.form.lyrDetails().showtabListOwners();
	}
	private void onlyrDetailstabDOSActivated()
	{
		this.form.lyrDetails().showtabDOS();
	}
	private void onlyrDetailstabSlotsActivated()
	{
		this.form.lyrDetails().showtabSlots();
	}
	private void onlyrDetailstabActivitiesActivated()
	{
		this.form.lyrDetails().showtabActivities();
	}
	private void onlyrDetailstabTheatreActivated()
	{
		this.form.lyrDetails().showtabTheatre();
	}
	private void onlyrDetailstabBookingRightsActivated()
	{
		this.form.lyrDetails().showtabBookingRights();
	}
	private void onlyrDetailstabExclusionActivated()
	{
		this.form.lyrDetails().showtabExclusion();
	}
	private void onlyrDetailstabTemplatesActivated()
	{
		this.form.lyrDetails().showtabTemplates();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	public abstract void clearContextInformation();
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
