//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseSessionManagementImpl extends DomainImpl implements ims.scheduling.domain.SessionManagement, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistProfiles(String profileName)
	{
	}

	@SuppressWarnings("unused")
	public void validategetHospitalForCurrentLocation(Integer locId)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActiveWardsForHospital(ims.core.vo.LocationLiteVo location)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistHcpLite(ims.core.vo.HcpFilter filter)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistSessions(ims.scheduling.vo.SessionManagementSearchCriteriaVo searchCriteria)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSlotsForSession(ims.scheduling.vo.Sch_SessionRefVo sessionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralForAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appointmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionShortVo(ims.scheduling.vo.Sch_SessionRefVo sessionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddSlotToSession(ims.scheduling.vo.SessionManagementVo session, ims.scheduling.vo.SessionSlotVo slot)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelSession(ims.scheduling.vo.Sch_SessionRefVo session, ims.scheduling.vo.Appointment_StatusVo voApptCancelStatus, Boolean cancelAppointment, Boolean isFlexible)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionVo(ims.scheduling.vo.Sch_SessionRefVo sessionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionManagementVo(ims.scheduling.vo.Sch_SessionRefVo sessionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveSession(ims.scheduling.vo.SessionVo session, Boolean editingSlots)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTheatreSlots(ims.scheduling.vo.Sch_SessionRefVo sessionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateisReferralICPCompleted(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetServiceAndActivityByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt, Boolean isFlexible)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralCancelStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientShort(ims.core.patient.vo.PatientRefVo patientRef)
	{
	}
}
