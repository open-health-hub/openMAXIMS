//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseAppointmentOutcomeDialogImpl extends DomainImpl implements ims.scheduling.domain.AppointmentOutcomeDialog, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatesaveBookingAppointment(ims.scheduling.vo.BookingAppointmentOutcomeVo appt, ims.RefMan.vo.PatientElectiveListDetailsToSaveVo patientElectiveListToSave, ims.pathways.vo.EventLiteVo firstDefinitiveTreatmentEvent)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.BookingAppointmentOutcomeVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatethereAreActivePatientElectiveListsForCurrentCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateisCurrentPathwayClockActive(ims.scheduling.vo.Booking_AppointmentRefVo bookAppointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientProcedure(ims.core.clinical.vo.PatientProcedureRefVo patientProcedureRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContext(ims.scheduling.vo.Booking_AppointmentRefVo bookApptId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetAppointmentOutcomeConfigByApptOutcomeLookup(ims.scheduling.vo.lookups.ApptOutcome apptOutcomeLookup)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasReferralActivePatientElectiveList(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientDiagnosis(ims.core.clinical.vo.PatientDiagnosisRefVo patientDiagnosisRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRef)
	{
	}
}
