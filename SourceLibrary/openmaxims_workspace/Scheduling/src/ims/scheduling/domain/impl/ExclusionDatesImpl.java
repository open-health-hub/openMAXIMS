//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.62 build 3100.30141)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.scheduling.domain.impl;

import java.util.List;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;
import ims.scheduling.domain.base.impl.BaseExclusionDatesImpl;
import ims.scheduling.domain.objects.SessionExclusionDate;
import ims.scheduling.vo.domain.ExclusionDatesVoAssembler;

public class ExclusionDatesImpl extends BaseExclusionDatesImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* listExclusionDates
	*/
	public ims.scheduling.vo.ExclusionDatesVo listExclusionDates()
	{
		DomainFactory factory = getDomainFactory();
		List exDate = factory.find("from SessionExclusionDate exDate");
		if(exDate.size() > 0)
		{
			SessionExclusionDate doExDate = (SessionExclusionDate)exDate.get(0);
			//idf record has been instantiated but dates array is empty return null
			if(doExDate.getDates() == null || doExDate.getDates().size() == 0)
				return null;
			
			return ExclusionDatesVoAssembler.create(doExDate);
		}
			
		return null;
	}

	/**
	* saveExclusionDates
	*/
	public ims.scheduling.vo.ExclusionDatesVo saveExclusionDates(ims.scheduling.vo.ExclusionDatesVo voExclusionDate) throws ims.domain.exceptions.StaleObjectException
	{
		if(voExclusionDate == null) 
			throw new CodingRuntimeException("exclusionDate is null in method saveExclusionDates");
		
		DomainFactory factory = getDomainFactory();
		SessionExclusionDate doExDate = ExclusionDatesVoAssembler.extractSessionExclusionDate(factory, voExclusionDate);
		factory.save(doExDate);
		return ExclusionDatesVoAssembler.create(doExDate);
	}
}
