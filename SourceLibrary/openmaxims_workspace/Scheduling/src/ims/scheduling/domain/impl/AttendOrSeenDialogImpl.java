//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.70 build 3358.22649)
// Copyright (C) 1995-2009 IMS MAXIMS plc. All rights reserved.

package ims.scheduling.domain.impl;

import ims.framework.exceptions.CodingRuntimeException;
import ims.scheduling.domain.PatientAppointmentManagement;
import ims.scheduling.domain.base.impl.BaseAttendOrSeenDialogImpl;
import ims.scheduling.domain.objects.Booking_Appointment;
import ims.scheduling.vo.domain.Booking_AppointmentShortVoAssembler;

public class AttendOrSeenDialogImpl extends BaseAttendOrSeenDialogImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* saveBookingAppt
	*/
	public ims.scheduling.vo.Booking_AppointmentVo saveBookingAppt(ims.scheduling.vo.Booking_AppointmentShortVo appt) throws ims.domain.exceptions.StaleObjectException
	{
		PatientAppointmentManagement impl = (PatientAppointmentManagement) getDomainImpl(PatientAppointmentManagementImpl.class);
		return impl.saveBookingAppt(appt, null,false); //WDEV-10883,wdev-12090
	}

	/**
	* getBookingAppointmentShort
	*/
	public ims.scheduling.vo.Booking_AppointmentShortVo getBookingAppointmentShort(ims.scheduling.vo.Booking_AppointmentRefVo bookingAppt)
	{
		if (bookingAppt == null || bookingAppt.getID_Booking_Appointment() == null)
			throw new CodingRuntimeException("bookingAppt is null or id not provided in method getBookingAppointmentShort");
		
		return   Booking_AppointmentShortVoAssembler.create((Booking_Appointment) getDomainFactory().getDomainObject(bookingAppt));
	}
}
