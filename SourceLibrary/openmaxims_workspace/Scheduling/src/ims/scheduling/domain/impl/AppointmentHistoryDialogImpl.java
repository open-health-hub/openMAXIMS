//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Peter Martin using IMS Development Environment (version 1.71 build 3604.17792)
// Copyright (C) 1995-2009 IMS MAXIMS. All rights reserved.

package ims.scheduling.domain.impl;

import ims.framework.exceptions.CodingRuntimeException;
import ims.scheduling.domain.base.impl.BaseAppointmentHistoryDialogImpl;
import ims.scheduling.domain.objects.Sch_Session;
import ims.scheduling.vo.Appointment_StatusVo;
import ims.scheduling.vo.Booking_AppointmentShortVo;
import ims.scheduling.vo.Booking_AppointmentShortVoCollection;
import ims.scheduling.vo.Sch_SessionRefVo;
import ims.scheduling.vo.SessionLitWithProfileVo;
import ims.scheduling.vo.domain.Booking_AppointmentShortVoAssembler;
import ims.scheduling.vo.domain.SessionLitWithProfileVoAssembler;

import java.util.List;

public class AppointmentHistoryDialogImpl extends BaseAppointmentHistoryDialogImpl
{

	private static final long serialVersionUID = 1L;

	// wdev-17771
	public Booking_AppointmentShortVo getBookingAppointmentByAppStatusfromHistory(Appointment_StatusVo appstatus)
	{

		if (appstatus == null)
			throw new CodingRuntimeException("Appointment_StatusVo cannot be null");

		String query = "select b1_1	from Booking_Appointment as b1_1 left join b1_1.apptStatusHistory as a1_1 where	(a1_1.id = :appstatusid)";
		List<?> bookappList = getDomainFactory().find(query, new String[] { "appstatusid" }, new Object[] { appstatus.getID_Appointment_Status() });

		if (bookappList != null && bookappList.size() > 0)
		{
			Booking_AppointmentShortVoCollection tempvoColl = Booking_AppointmentShortVoAssembler.createBooking_AppointmentShortVoCollectionFromBooking_Appointment(bookappList);
			if (tempvoColl != null && tempvoColl.size() > 0)
				return tempvoColl.get(0);
		}

		return null;

	}

	// wdev-17771
	public SessionLitWithProfileVo getSessionwithProfile(Sch_SessionRefVo sessionRef)
	{
		if (sessionRef == null || sessionRef.getID_Sch_Session() == null)
			return null;

		return SessionLitWithProfileVoAssembler.create((Sch_Session) getDomainFactory().getDomainObject(Sch_Session.class, sessionRef.getID_Sch_Session()));
	}

}
