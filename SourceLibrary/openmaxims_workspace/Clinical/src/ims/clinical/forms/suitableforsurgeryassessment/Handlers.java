//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.suitableforsurgeryassessment;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbAnaestheticLookup();
	abstract protected void defaultcmbAnaestheticLookupValue();
	abstract protected void bindcmbTheatreTypeLookup();
	abstract protected void defaultcmbTheatreTypeLookupValue();
	abstract protected void bindcmbLateralityLookup();
	abstract protected void defaultcmbLateralityLookupValue();
	abstract protected void bindcmbReasonNotSuitableLookup();
	abstract protected void defaultcmbReasonNotSuitableLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRecbrAssessmentsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbAnaestheticValueSet(Object value);
	abstract protected void onCmbAnaestheticValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTheatreTypeValueSet(Object value);
	abstract protected void oncmbLateralityValueSet(Object value);
	abstract protected void onCcClinicalProcedureValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdCommentsRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPerformedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkSuitableValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkSpecialEquipmentValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkSpecialInstructionsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbReasonNotSuitableValueSet(Object value);
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnUpdate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateClick();
			}
		});
		this.form.recbrAssessments().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRecbrAssessmentsValueChanged();
			}
		});
		this.form.cmbAnaesthetic().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAnaestheticValueSet(value);
			}
		});
		this.form.cmbAnaesthetic().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbAnaestheticValueChanged();
			}
		});
		this.form.cmbTheatreType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTheatreTypeValueSet(value);
			}
		});
		this.form.cmbLaterality().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLateralityValueSet(value);
			}
		});
		this.form.setccClinicalProcedureValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcClinicalProcedureValueChanged();
			}
		});
		this.form.lyrSuitable().tabPageDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSuitabletabPageDetailsActivated();
			}
		});
		this.form.lyrSuitable().tabPageComments().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSuitabletabPageCommentsActivated();
			}
		});
		this.form.lyrSuitable().tabPageSpecialEquiptment().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSuitabletabPageSpecialEquiptmentActivated();
			}
		});
		this.form.lyrSuitable().tabPageSpecialInstructions().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSuitabletabPageSpecialInstructionsActivated();
			}
		});
		this.form.lyrSuitable().tabPageComments().dyngrdComments().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdCommentsRowSelectionChanged(row);
			}
		});
		this.form.ctnConclusions().chkPerformed().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPerformedValueChanged();
			}
		});
		this.form.ctnConclusions().chkSuitable().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSuitableValueChanged();
			}
		});
		this.form.ctnConclusions().chkSpecialEquipment().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSpecialEquipmentValueChanged();
			}
		});
		this.form.ctnConclusions().chkSpecialInstructions().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSpecialInstructionsValueChanged();
			}
		});
		this.form.ctnConclusions().cmbReasonNotSuitable().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReasonNotSuitableValueSet(value);
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.getContextMenus().Clinical.getSuitableForSurgeryCommentsAddCommentItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ClinicalNamespace.SuitableForSurgeryComments.AddComment, sender);
			}
		});
		this.form.getContextMenus().Clinical.getSuitableForSurgeryCommentsEditCommentItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ClinicalNamespace.SuitableForSurgeryComments.EditComment, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbAnaestheticLookup();
		bindcmbTheatreTypeLookup();
		bindcmbLateralityLookup();
		bindcmbReasonNotSuitableLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbAnaestheticLookup();
		bindcmbTheatreTypeLookup();
		bindcmbLateralityLookup();
		bindcmbReasonNotSuitableLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbAnaestheticLookupValue();
		defaultcmbTheatreTypeLookupValue();
		defaultcmbLateralityLookupValue();
		defaultcmbReasonNotSuitableLookupValue();
	}
	private void onlyrSuitabletabPageDetailsActivated()
	{
		this.form.lyrSuitable().showtabPageDetails();
	}
	private void onlyrSuitabletabPageCommentsActivated()
	{
		this.form.lyrSuitable().showtabPageComments();
	}
	private void onlyrSuitabletabPageSpecialEquiptmentActivated()
	{
		this.form.lyrSuitable().showtabPageSpecialEquiptment();
	}
	private void onlyrSuitabletabPageSpecialInstructionsActivated()
	{
		this.form.lyrSuitable().showtabPageSpecialInstructions();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
