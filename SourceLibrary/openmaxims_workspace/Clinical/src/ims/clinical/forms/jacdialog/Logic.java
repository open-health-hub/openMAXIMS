//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.71 build 3937.27059)
// Copyright (C) 1995-2010 IMS MAXIMS. All rights reserved.

package ims.clinical.forms.jacdialog;

import ims.clinical.vo.TTAStatusVo;
import ims.clinical.vo.lookups.TTAStatus;
import ims.core.vo.MemberOfStaffLiteVo;
import ims.core.vo.enums.MosType;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.DateTime;

import java.util.ArrayList;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onBtnCancelClick() throws PresentationLogicException 
	{	
		engine.close(DialogResult.CANCEL);		
	}

	@Override
	protected void onBtnSaveClick() throws PresentationLogicException 
	{
		if(!validateUIRules())//	WDEV-13691
			return;
		
		TTAStatusVo newStatus = new TTAStatusVo();
		newStatus.setStatusDateTime(form.dtim1().getValue());	//	WDEV-13691				
		newStatus.setAuthoringUser(form.cc1().getValue() instanceof MemberOfStaffLiteVo ? (MemberOfStaffLiteVo) form.cc1().getValue() : null);//	WDEV-13691
		newStatus.setStatus(TTAStatus.AWAITING_DISPENSING);
		
		form.getGlobalContext().Clinical.seteDischargePharmacyApprovalTTAPharmacySystemDetails(newStatus);
		engine.close(DialogResult.OK);
	}
	
	//	WDEV-13691
	private boolean validateUIRules() 
	{
		ArrayList<String> uiErrors = new ArrayList<String>();
		
		if(form.cc1().getValue() == null)
		{
			uiErrors.add("TTA Input to Pharmacy System is mandatory.");
		}
		
		if(form.dtim1().getValue() == null)
		{
			uiErrors.add("TTA Input to Pharmacy System Date is mandatory.");
		}
		
		if(form.dtim1().getValue() != null && new DateTime().isLessThan(form.dtim1().getValue()))
		{
			uiErrors.add("TTA Input to Pharmacy System Date cannot be set in the future.");
		}
		
		if (uiErrors.size() > 0)
		{
			engine.showErrors(uiErrors.toArray(new String[uiErrors.size()]));
			return false;
		}
		
		return true;
	}

	@Override
	protected void onFormOpen(Object[] args) throws PresentationLogicException 
	{	
		form.cc1().initialize(MosType.ALL);//	WDEV-13691
		form.cc1().isRequired(true);//	WDEV-13691
		form.cc1().setValue(domain.getMosUser() instanceof MemberOfStaffLiteVo ? (MemberOfStaffLiteVo) domain.getMosUser() : null);//	WDEV-13691
		form.dtim1().setValue(new DateTime());
	}
}
