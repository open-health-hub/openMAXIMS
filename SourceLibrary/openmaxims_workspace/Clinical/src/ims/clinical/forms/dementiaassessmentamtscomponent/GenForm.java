//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.dementiaassessmentamtscomponent;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}

	public static class GroupMedicationRadioButton extends RadioButtonBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected void setContext(Integer startTabIndex, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize)
		{
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex ");
			RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 656, 439, 40, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
			control.addButton(0, anchoringHelper1.getX(), anchoringHelper1.getY(), anchoringHelper1.getWidth(), "No", startTabIndex.intValue() + 48);
			RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 552, 439, 48, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
			control.addButton(1, anchoringHelper2.getX(), anchoringHelper2.getY(), anchoringHelper2.getWidth(), "Yes", startTabIndex.intValue() + 47);
		}
		public void setText(GroupMedicationEnumeration option, String value)
		{
			if(option != null && option.id >= 0 && value != null)
				control.setText(option.id, value);
		}
		public GroupMedicationEnumeration getValue()
		{
			switch (super.control.getValue())
			{
				case -1: return GroupMedicationEnumeration.None;
				case 0: return GroupMedicationEnumeration.rdoMedicationNO;
				case 1: return GroupMedicationEnumeration.rdoMedicationYES;
			}
			return null;
		}
		public void setValue(GroupMedicationEnumeration value)
		{
			if(value != null)
				super.control.setValue(value.id);
			else
				super.control.setValue(GroupMedicationEnumeration.None.id);
		}
		public boolean isEnabled(GroupMedicationEnumeration option)
		{
			return super.control.isEnabled(option.id);
		}
		public void setEnabled(GroupMedicationEnumeration option, boolean value)
		{
			super.control.setEnabled(option.id, value);
		}
		public boolean isVisible(GroupMedicationEnumeration option)
		{
			return super.control.isVisible(option.id);
		}
		public void setVisible(GroupMedicationEnumeration option, boolean value)
		{
			super.control.setVisible(option.id, value);
		}
		public void setVisible(boolean value)
		{
			super.control.setVisible(value);
		}
		public void setEnabled(boolean value)
		{
			super.control.setEnabled(value);
		}
	}
	public static class GroupMedicationEnumeration implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public static GroupMedicationEnumeration None = new GroupMedicationEnumeration(-1);
		public static GroupMedicationEnumeration rdoMedicationNO = new GroupMedicationEnumeration(0);
		public static GroupMedicationEnumeration rdoMedicationYES = new GroupMedicationEnumeration(1);
		private GroupMedicationEnumeration(int id)
		{
			this.id = id;
		}
		public boolean equals(Object o)
		{
			return this.id == ((GroupMedicationEnumeration)o).id;
		}
		private int id;
	}

	public static class GroupPRotocolRadioButton extends RadioButtonBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected void setContext(Integer startTabIndex, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize)
		{
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex ");
			RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 656, 416, 56, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
			control.addButton(0, anchoringHelper3.getX(), anchoringHelper3.getY(), anchoringHelper3.getWidth(), "No", startTabIndex.intValue() + 46);
			RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 552, 416, 56, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
			control.addButton(1, anchoringHelper4.getX(), anchoringHelper4.getY(), anchoringHelper4.getWidth(), "Yes", startTabIndex.intValue() + 45);
		}
		public void setText(GroupPRotocolEnumeration option, String value)
		{
			if(option != null && option.id >= 0 && value != null)
				control.setText(option.id, value);
		}
		public GroupPRotocolEnumeration getValue()
		{
			switch (super.control.getValue())
			{
				case -1: return GroupPRotocolEnumeration.None;
				case 0: return GroupPRotocolEnumeration.rdoTrustProtocolNO;
				case 1: return GroupPRotocolEnumeration.rdoTrustProtocolYES;
			}
			return null;
		}
		public void setValue(GroupPRotocolEnumeration value)
		{
			if(value != null)
				super.control.setValue(value.id);
			else
				super.control.setValue(GroupPRotocolEnumeration.None.id);
		}
		public boolean isEnabled(GroupPRotocolEnumeration option)
		{
			return super.control.isEnabled(option.id);
		}
		public void setEnabled(GroupPRotocolEnumeration option, boolean value)
		{
			super.control.setEnabled(option.id, value);
		}
		public boolean isVisible(GroupPRotocolEnumeration option)
		{
			return super.control.isVisible(option.id);
		}
		public void setVisible(GroupPRotocolEnumeration option, boolean value)
		{
			super.control.setVisible(option.id, value);
		}
		public void setVisible(boolean value)
		{
			super.control.setVisible(value);
		}
		public void setEnabled(boolean value)
		{
			super.control.setEnabled(value);
		}
	}
	public static class GroupPRotocolEnumeration implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public static GroupPRotocolEnumeration None = new GroupPRotocolEnumeration(-1);
		public static GroupPRotocolEnumeration rdoTrustProtocolNO = new GroupPRotocolEnumeration(0);
		public static GroupPRotocolEnumeration rdoTrustProtocolYES = new GroupPRotocolEnumeration(1);
		private GroupPRotocolEnumeration(int id)
		{
			this.id = id;
		}
		public boolean equals(Object o)
		{
			return this.id == ((GroupPRotocolEnumeration)o).id;
		}
		private int id;
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(730, 584);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Panel Controls
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 512, 32, 104, 344, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,"", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 8, 32, 504, 344, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 616, 32, 104, 344, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,"", new Integer(2), ""}));

		// Label Controls
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 16, 493, 35, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Note:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 580, 8, 149, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "<<Authoring Date /Time >>", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 448, 8, 136, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Authoring Date /Time :", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 136, 8, 110, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "<<Authoring HCP>>", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 40, 8, 92, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Authoring HCP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 16, 476, 45, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Clinical", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 40, 439, 443, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Confirm a medication review is undertaken (in particular review of antipsychotic drugs):", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 40, 416, 347, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Confirm that the Trust's protocol for investigations is being followed:", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 536, 378, 65, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Total Score:", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 557, 128, 23, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "N/A", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 552, 45, 24, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Yes", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 16, 72, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "1)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 35, 352, 111, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Recall 42 West Street", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 32, 324, 133, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Count backwards from 20", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 32, 296, 105, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Who is the monarch", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 32, 268, 91, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Year WW2 ended", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 32, 240, 101, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Recognise 2 people", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 32, 212, 90, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Name of Hospital", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 32, 184, 159, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Current Time (to nearest hour)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 32, 156, 68, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Current Year", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 16, 128, 117, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Repeat 42 West Street", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 32, 100, 68, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date of Birth", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 32, 72, 23, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Age", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 16, 45, 55, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Question", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 16, 100, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "2)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 16, 156, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "3)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 16, 184, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "4)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 16, 212, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "5)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 16, 240, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "6)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 16, 268, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "7)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 16, 296, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "8)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 16, 324, 15, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "9)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 16, 352, 21, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "10)", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 656, 128, 23, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "N/A", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 656, 45, 20, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "No", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 96, 559, 80, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 55), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "RIE", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 96, 559, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 52), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 16, 559, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 51), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "New", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 16, 559, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 50), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 645, 559, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 54), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 568, 559, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 53), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 64, 476, 656, 80, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 49), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,Boolean.TRUE, new Integer(2500), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 616, 378, 32, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 42), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 557, 352, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 37), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper52 = new RuntimeAnchoring(designSize, runtimeSize, 557, 324, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper52.getX()), new Integer(anchoringHelper52.getY()), new Integer(anchoringHelper52.getWidth()), new Integer(anchoringHelper52.getHeight()), new Integer(startTabIndex.intValue() + 33), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper53 = new RuntimeAnchoring(designSize, runtimeSize, 557, 296, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper53.getX()), new Integer(anchoringHelper53.getY()), new Integer(anchoringHelper53.getWidth()), new Integer(anchoringHelper53.getHeight()), new Integer(startTabIndex.intValue() + 29), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper54 = new RuntimeAnchoring(designSize, runtimeSize, 557, 268, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper54.getX()), new Integer(anchoringHelper54.getY()), new Integer(anchoringHelper54.getWidth()), new Integer(anchoringHelper54.getHeight()), new Integer(startTabIndex.intValue() + 25), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper55 = new RuntimeAnchoring(designSize, runtimeSize, 557, 240, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper55.getX()), new Integer(anchoringHelper55.getY()), new Integer(anchoringHelper55.getWidth()), new Integer(anchoringHelper55.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper56 = new RuntimeAnchoring(designSize, runtimeSize, 557, 212, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1051), new Integer(anchoringHelper56.getX()), new Integer(anchoringHelper56.getY()), new Integer(anchoringHelper56.getWidth()), new Integer(anchoringHelper56.getHeight()), new Integer(startTabIndex.intValue() + 17), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper57 = new RuntimeAnchoring(designSize, runtimeSize, 557, 184, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1052), new Integer(anchoringHelper57.getX()), new Integer(anchoringHelper57.getY()), new Integer(anchoringHelper57.getWidth()), new Integer(anchoringHelper57.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper58 = new RuntimeAnchoring(designSize, runtimeSize, 557, 156, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1053), new Integer(anchoringHelper58.getX()), new Integer(anchoringHelper58.getY()), new Integer(anchoringHelper58.getWidth()), new Integer(anchoringHelper58.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper59 = new RuntimeAnchoring(designSize, runtimeSize, 557, 100, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1054), new Integer(anchoringHelper59.getX()), new Integer(anchoringHelper59.getY()), new Integer(anchoringHelper59.getWidth()), new Integer(anchoringHelper59.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper60 = new RuntimeAnchoring(designSize, runtimeSize, 557, 72, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1055), new Integer(anchoringHelper60.getX()), new Integer(anchoringHelper60.getY()), new Integer(anchoringHelper60.getWidth()), new Integer(anchoringHelper60.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper61 = new RuntimeAnchoring(designSize, runtimeSize, 656, 352, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1056), new Integer(anchoringHelper61.getX()), new Integer(anchoringHelper61.getY()), new Integer(anchoringHelper61.getWidth()), new Integer(anchoringHelper61.getHeight()), new Integer(startTabIndex.intValue() + 41), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper62 = new RuntimeAnchoring(designSize, runtimeSize, 656, 324, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1057), new Integer(anchoringHelper62.getX()), new Integer(anchoringHelper62.getY()), new Integer(anchoringHelper62.getWidth()), new Integer(anchoringHelper62.getHeight()), new Integer(startTabIndex.intValue() + 36), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper63 = new RuntimeAnchoring(designSize, runtimeSize, 656, 296, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1058), new Integer(anchoringHelper63.getX()), new Integer(anchoringHelper63.getY()), new Integer(anchoringHelper63.getWidth()), new Integer(anchoringHelper63.getHeight()), new Integer(startTabIndex.intValue() + 32), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper64 = new RuntimeAnchoring(designSize, runtimeSize, 656, 268, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1059), new Integer(anchoringHelper64.getX()), new Integer(anchoringHelper64.getY()), new Integer(anchoringHelper64.getWidth()), new Integer(anchoringHelper64.getHeight()), new Integer(startTabIndex.intValue() + 28), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper65 = new RuntimeAnchoring(designSize, runtimeSize, 656, 240, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1060), new Integer(anchoringHelper65.getX()), new Integer(anchoringHelper65.getY()), new Integer(anchoringHelper65.getWidth()), new Integer(anchoringHelper65.getHeight()), new Integer(startTabIndex.intValue() + 24), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper66 = new RuntimeAnchoring(designSize, runtimeSize, 656, 212, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1061), new Integer(anchoringHelper66.getX()), new Integer(anchoringHelper66.getY()), new Integer(anchoringHelper66.getWidth()), new Integer(anchoringHelper66.getHeight()), new Integer(startTabIndex.intValue() + 20), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper67 = new RuntimeAnchoring(designSize, runtimeSize, 656, 184, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1062), new Integer(anchoringHelper67.getX()), new Integer(anchoringHelper67.getY()), new Integer(anchoringHelper67.getWidth()), new Integer(anchoringHelper67.getHeight()), new Integer(startTabIndex.intValue() + 16), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper68 = new RuntimeAnchoring(designSize, runtimeSize, 656, 156, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1063), new Integer(anchoringHelper68.getX()), new Integer(anchoringHelper68.getY()), new Integer(anchoringHelper68.getWidth()), new Integer(anchoringHelper68.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper69 = new RuntimeAnchoring(designSize, runtimeSize, 656, 100, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1064), new Integer(anchoringHelper69.getX()), new Integer(anchoringHelper69.getY()), new Integer(anchoringHelper69.getWidth()), new Integer(anchoringHelper69.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper70 = new RuntimeAnchoring(designSize, runtimeSize, 656, 72, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1065), new Integer(anchoringHelper70.getX()), new Integer(anchoringHelper70.getY()), new Integer(anchoringHelper70.getWidth()), new Integer(anchoringHelper70.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));

		// Image Buttons Controls
		RuntimeAnchoring anchoringHelper71 = new RuntimeAnchoring(designSize, runtimeSize, 8, 4, 26, 26, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1066), new Integer(anchoringHelper71.getX()), new Integer(anchoringHelper71.getY()), new Integer(anchoringHelper71.getWidth()), new Integer(anchoringHelper71.getHeight()), new Integer(-1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, this.getImages().Core.InfoEnabled24, this.getImages().Core.InfoEnabled24, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper72 = new RuntimeAnchoring(designSize, runtimeSize, 8, 434, 26, 26, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1067), new Integer(anchoringHelper72.getX()), new Integer(anchoringHelper72.getY()), new Integer(anchoringHelper72.getWidth()), new Integer(anchoringHelper72.getHeight()), new Integer(-1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, this.getImages().Core.InfoEnabled24, this.getImages().Core.InfoEnabled24, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper73 = new RuntimeAnchoring(designSize, runtimeSize, 8, 408, 26, 26, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1068), new Integer(anchoringHelper73.getX()), new Integer(anchoringHelper73.getY()), new Integer(anchoringHelper73.getWidth()), new Integer(anchoringHelper73.getHeight()), new Integer(-1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, this.getImages().Core.InfoEnabled24, this.getImages().Core.InfoEnabled24, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));

		// RadioButton Controls
		RadioButton tmpGroupMedication = (RadioButton)factory.getControl(RadioButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1069), new Integer(0), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE});
		super.addControl(tmpGroupMedication);
		GroupMedicationRadioButton GroupMedication = (GroupMedicationRadioButton)RadioButtonBridgeFlyweightFactory.getInstance().createRadioButtonBridge(GroupMedicationRadioButton.class, tmpGroupMedication);
		GroupMedication.setContext(startTabIndex, designSize, runtimeSize);
		super.addRadioButton(GroupMedication);
		RadioButton tmpGroupPRotocol = (RadioButton)factory.getControl(RadioButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1070), new Integer(0), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE});
		super.addControl(tmpGroupPRotocol);
		GroupPRotocolRadioButton GroupPRotocol = (GroupPRotocolRadioButton)RadioButtonBridgeFlyweightFactory.getInstance().createRadioButtonBridge(GroupPRotocolRadioButton.class, tmpGroupPRotocol);
		GroupPRotocol.setContext(startTabIndex, designSize, runtimeSize);
		super.addRadioButton(GroupPRotocol);

		// Horizontal Line Controls
		RuntimeAnchoring anchoringHelper74 = new RuntimeAnchoring(designSize, runtimeSize, 8, 464, 712, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1071), new Integer(anchoringHelper74.getX()), new Integer(anchoringHelper74.getY()), new Integer(anchoringHelper74.getWidth()), new Integer(anchoringHelper74.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper75 = new RuntimeAnchoring(designSize, runtimeSize, 8, 400, 712, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1072), new Integer(anchoringHelper75.getX()), new Integer(anchoringHelper75.getY()), new Integer(anchoringHelper75.getWidth()), new Integer(anchoringHelper75.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper76 = new RuntimeAnchoring(designSize, runtimeSize, 520, 344, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1073), new Integer(anchoringHelper76.getX()), new Integer(anchoringHelper76.getY()), new Integer(anchoringHelper76.getWidth()), new Integer(anchoringHelper76.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper77 = new RuntimeAnchoring(designSize, runtimeSize, 520, 316, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1074), new Integer(anchoringHelper77.getX()), new Integer(anchoringHelper77.getY()), new Integer(anchoringHelper77.getWidth()), new Integer(anchoringHelper77.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper78 = new RuntimeAnchoring(designSize, runtimeSize, 520, 288, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1075), new Integer(anchoringHelper78.getX()), new Integer(anchoringHelper78.getY()), new Integer(anchoringHelper78.getWidth()), new Integer(anchoringHelper78.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper79 = new RuntimeAnchoring(designSize, runtimeSize, 520, 260, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1076), new Integer(anchoringHelper79.getX()), new Integer(anchoringHelper79.getY()), new Integer(anchoringHelper79.getWidth()), new Integer(anchoringHelper79.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper80 = new RuntimeAnchoring(designSize, runtimeSize, 520, 232, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1077), new Integer(anchoringHelper80.getX()), new Integer(anchoringHelper80.getY()), new Integer(anchoringHelper80.getWidth()), new Integer(anchoringHelper80.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper81 = new RuntimeAnchoring(designSize, runtimeSize, 520, 204, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1078), new Integer(anchoringHelper81.getX()), new Integer(anchoringHelper81.getY()), new Integer(anchoringHelper81.getWidth()), new Integer(anchoringHelper81.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper82 = new RuntimeAnchoring(designSize, runtimeSize, 520, 176, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1079), new Integer(anchoringHelper82.getX()), new Integer(anchoringHelper82.getY()), new Integer(anchoringHelper82.getWidth()), new Integer(anchoringHelper82.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper83 = new RuntimeAnchoring(designSize, runtimeSize, 520, 148, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1080), new Integer(anchoringHelper83.getX()), new Integer(anchoringHelper83.getY()), new Integer(anchoringHelper83.getWidth()), new Integer(anchoringHelper83.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper84 = new RuntimeAnchoring(designSize, runtimeSize, 520, 120, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1081), new Integer(anchoringHelper84.getX()), new Integer(anchoringHelper84.getY()), new Integer(anchoringHelper84.getWidth()), new Integer(anchoringHelper84.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper85 = new RuntimeAnchoring(designSize, runtimeSize, 520, 92, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1082), new Integer(anchoringHelper85.getX()), new Integer(anchoringHelper85.getY()), new Integer(anchoringHelper85.getWidth()), new Integer(anchoringHelper85.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper86 = new RuntimeAnchoring(designSize, runtimeSize, 520, 64, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1083), new Integer(anchoringHelper86.getX()), new Integer(anchoringHelper86.getY()), new Integer(anchoringHelper86.getWidth()), new Integer(anchoringHelper86.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper87 = new RuntimeAnchoring(designSize, runtimeSize, 16, 344, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1084), new Integer(anchoringHelper87.getX()), new Integer(anchoringHelper87.getY()), new Integer(anchoringHelper87.getWidth()), new Integer(anchoringHelper87.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper88 = new RuntimeAnchoring(designSize, runtimeSize, 16, 316, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1085), new Integer(anchoringHelper88.getX()), new Integer(anchoringHelper88.getY()), new Integer(anchoringHelper88.getWidth()), new Integer(anchoringHelper88.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper89 = new RuntimeAnchoring(designSize, runtimeSize, 16, 288, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1086), new Integer(anchoringHelper89.getX()), new Integer(anchoringHelper89.getY()), new Integer(anchoringHelper89.getWidth()), new Integer(anchoringHelper89.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper90 = new RuntimeAnchoring(designSize, runtimeSize, 16, 260, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1087), new Integer(anchoringHelper90.getX()), new Integer(anchoringHelper90.getY()), new Integer(anchoringHelper90.getWidth()), new Integer(anchoringHelper90.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper91 = new RuntimeAnchoring(designSize, runtimeSize, 16, 232, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1088), new Integer(anchoringHelper91.getX()), new Integer(anchoringHelper91.getY()), new Integer(anchoringHelper91.getWidth()), new Integer(anchoringHelper91.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper92 = new RuntimeAnchoring(designSize, runtimeSize, 16, 204, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1089), new Integer(anchoringHelper92.getX()), new Integer(anchoringHelper92.getY()), new Integer(anchoringHelper92.getWidth()), new Integer(anchoringHelper92.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper93 = new RuntimeAnchoring(designSize, runtimeSize, 16, 176, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1090), new Integer(anchoringHelper93.getX()), new Integer(anchoringHelper93.getY()), new Integer(anchoringHelper93.getWidth()), new Integer(anchoringHelper93.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper94 = new RuntimeAnchoring(designSize, runtimeSize, 16, 148, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1091), new Integer(anchoringHelper94.getX()), new Integer(anchoringHelper94.getY()), new Integer(anchoringHelper94.getWidth()), new Integer(anchoringHelper94.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper95 = new RuntimeAnchoring(designSize, runtimeSize, 16, 120, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1092), new Integer(anchoringHelper95.getX()), new Integer(anchoringHelper95.getY()), new Integer(anchoringHelper95.getWidth()), new Integer(anchoringHelper95.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper96 = new RuntimeAnchoring(designSize, runtimeSize, 16, 92, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1093), new Integer(anchoringHelper96.getX()), new Integer(anchoringHelper96.getY()), new Integer(anchoringHelper96.getWidth()), new Integer(anchoringHelper96.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper97 = new RuntimeAnchoring(designSize, runtimeSize, 16, 64, 488, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1094), new Integer(anchoringHelper97.getX()), new Integer(anchoringHelper97.getY()), new Integer(anchoringHelper97.getWidth()), new Integer(anchoringHelper97.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper98 = new RuntimeAnchoring(designSize, runtimeSize, 624, 344, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1095), new Integer(anchoringHelper98.getX()), new Integer(anchoringHelper98.getY()), new Integer(anchoringHelper98.getWidth()), new Integer(anchoringHelper98.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper99 = new RuntimeAnchoring(designSize, runtimeSize, 624, 316, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1096), new Integer(anchoringHelper99.getX()), new Integer(anchoringHelper99.getY()), new Integer(anchoringHelper99.getWidth()), new Integer(anchoringHelper99.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper100 = new RuntimeAnchoring(designSize, runtimeSize, 624, 288, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1097), new Integer(anchoringHelper100.getX()), new Integer(anchoringHelper100.getY()), new Integer(anchoringHelper100.getWidth()), new Integer(anchoringHelper100.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper101 = new RuntimeAnchoring(designSize, runtimeSize, 624, 260, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1098), new Integer(anchoringHelper101.getX()), new Integer(anchoringHelper101.getY()), new Integer(anchoringHelper101.getWidth()), new Integer(anchoringHelper101.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper102 = new RuntimeAnchoring(designSize, runtimeSize, 624, 232, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1099), new Integer(anchoringHelper102.getX()), new Integer(anchoringHelper102.getY()), new Integer(anchoringHelper102.getWidth()), new Integer(anchoringHelper102.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper103 = new RuntimeAnchoring(designSize, runtimeSize, 624, 204, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1100), new Integer(anchoringHelper103.getX()), new Integer(anchoringHelper103.getY()), new Integer(anchoringHelper103.getWidth()), new Integer(anchoringHelper103.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper104 = new RuntimeAnchoring(designSize, runtimeSize, 624, 176, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1101), new Integer(anchoringHelper104.getX()), new Integer(anchoringHelper104.getY()), new Integer(anchoringHelper104.getWidth()), new Integer(anchoringHelper104.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper105 = new RuntimeAnchoring(designSize, runtimeSize, 624, 148, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1102), new Integer(anchoringHelper105.getX()), new Integer(anchoringHelper105.getY()), new Integer(anchoringHelper105.getWidth()), new Integer(anchoringHelper105.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper106 = new RuntimeAnchoring(designSize, runtimeSize, 624, 120, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1103), new Integer(anchoringHelper106.getX()), new Integer(anchoringHelper106.getY()), new Integer(anchoringHelper106.getWidth()), new Integer(anchoringHelper106.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper107 = new RuntimeAnchoring(designSize, runtimeSize, 624, 92, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1104), new Integer(anchoringHelper107.getX()), new Integer(anchoringHelper107.getY()), new Integer(anchoringHelper107.getWidth()), new Integer(anchoringHelper107.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper108 = new RuntimeAnchoring(designSize, runtimeSize, 624, 64, 88, 8, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1105), new Integer(anchoringHelper108.getX()), new Integer(anchoringHelper108.getY()), new Integer(anchoringHelper108.getWidth()), new Integer(anchoringHelper108.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,new Integer(0)}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Label lblComment1()
	{
		return (Label)super.getControl(3);
	}
	public Label lblAuthoringDateTime()
	{
		return (Label)super.getControl(4);
	}
	public Label lbl18()
	{
		return (Label)super.getControl(5);
	}
	public Label lblAuthoringHCP()
	{
		return (Label)super.getControl(6);
	}
	public Label lbl14()
	{
		return (Label)super.getControl(7);
	}
	public Label lblComment()
	{
		return (Label)super.getControl(8);
	}
	public Label lblConfirmMedication()
	{
		return (Label)super.getControl(9);
	}
	public Label lblConfirmTrust()
	{
		return (Label)super.getControl(10);
	}
	public Label lblRecall42()
	{
		return (Label)super.getControl(15);
	}
	public Label lblCountbackwards()
	{
		return (Label)super.getControl(16);
	}
	public Label lblWhoIsMonarch()
	{
		return (Label)super.getControl(17);
	}
	public Label lblYearOfWW2()
	{
		return (Label)super.getControl(18);
	}
	public Label lblRecognizetwopeople()
	{
		return (Label)super.getControl(19);
	}
	public Label lblNameOfHospital()
	{
		return (Label)super.getControl(20);
	}
	public Label lblCurrentTime()
	{
		return (Label)super.getControl(21);
	}
	public Label lblCurrentYear()
	{
		return (Label)super.getControl(22);
	}
	public Label lblRepeat42()
	{
		return (Label)super.getControl(23);
	}
	public Label lblDOB()
	{
		return (Label)super.getControl(24);
	}
	public Label lblAge()
	{
		return (Label)super.getControl(25);
	}
	public Button btnRIE()
	{
		return (Button)super.getControl(38);
	}
	public Button btnEditFollowUp()
	{
		return (Button)super.getControl(39);
	}
	public Button btnNewFollowUp()
	{
		return (Button)super.getControl(40);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(41);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(42);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(43);
	}
	public TextBox txtComment()
	{
		return (TextBox)super.getControl(44);
	}
	public TextBox txtTotalScore()
	{
		return (TextBox)super.getControl(45);
	}
	public CheckBox chkRecallYes()
	{
		return (CheckBox)super.getControl(46);
	}
	public CheckBox chkCountYes()
	{
		return (CheckBox)super.getControl(47);
	}
	public CheckBox chkMonarchYes()
	{
		return (CheckBox)super.getControl(48);
	}
	public CheckBox chkYearWW2Yes()
	{
		return (CheckBox)super.getControl(49);
	}
	public CheckBox chkRecogniseYes()
	{
		return (CheckBox)super.getControl(50);
	}
	public CheckBox chkNameHospitalYes()
	{
		return (CheckBox)super.getControl(51);
	}
	public CheckBox chkCurrentTimeYes()
	{
		return (CheckBox)super.getControl(52);
	}
	public CheckBox chkCurrentYearYes()
	{
		return (CheckBox)super.getControl(53);
	}
	public CheckBox chkDBYes()
	{
		return (CheckBox)super.getControl(54);
	}
	public CheckBox chkAgeYes()
	{
		return (CheckBox)super.getControl(55);
	}
	public CheckBox chkRecallNo()
	{
		return (CheckBox)super.getControl(56);
	}
	public CheckBox chkCountNo()
	{
		return (CheckBox)super.getControl(57);
	}
	public CheckBox chkMonarchNo()
	{
		return (CheckBox)super.getControl(58);
	}
	public CheckBox chkYearWW2No()
	{
		return (CheckBox)super.getControl(59);
	}
	public CheckBox chkRecogniseNo()
	{
		return (CheckBox)super.getControl(60);
	}
	public CheckBox chkNameHospitalNo()
	{
		return (CheckBox)super.getControl(61);
	}
	public CheckBox chkCurrentTimeNo()
	{
		return (CheckBox)super.getControl(62);
	}
	public CheckBox chkCurrentYearNo()
	{
		return (CheckBox)super.getControl(63);
	}
	public CheckBox chkDBNo()
	{
		return (CheckBox)super.getControl(64);
	}
	public CheckBox chkAgeNo()
	{
		return (CheckBox)super.getControl(65);
	}
	public ImageButton imbAMTSForm()
	{
		return (ImageButton)super.getControl(66);
	}
	public ImageButton imbConfirmMedication()
	{
		return (ImageButton)super.getControl(67);
	}
	public ImageButton imbConfirmTrustProtocol()
	{
		return (ImageButton)super.getControl(68);
	}
	public GroupMedicationRadioButton GroupMedication()
	{
		return (GroupMedicationRadioButton)super.getRadioButton(0);
	}
	public GroupPRotocolRadioButton GroupPRotocol()
	{
		return (GroupPRotocolRadioButton)super.getRadioButton(1);
	}
	public HorizontalLine hzl35()
	{
		return (HorizontalLine)super.getControl(71);
	}
	public HorizontalLine hzl34()
	{
		return (HorizontalLine)super.getControl(72);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Clinical = new ClinicalForms();
			Core = new CoreForms();
		}
		public final class ClinicalForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private ClinicalForms()
			{
				DementiaAssessmentAMTSComponent = new LocalFormName(123261);
			}
			public final FormName DementiaAssessmentAMTSComponent;
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				RieConfirmationDialog = new LocalFormName(102370);
			}
			public final FormName RieConfirmationDialog;
		}

		public ClinicalForms Clinical;
		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				InfoEnabled24 = new ImageHelper(102511, "Images/Core/info_enabled_24.png", new Integer(24), new Integer(24));
			}
			public final ims.framework.utils.Image InfoEnabled24;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_SelectedEvent = new ims.framework.ContextVariable("SelectedEvent", prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedEvent_" + componentIdentifier + "");
			cxl_SelectedRecord = new ims.framework.ContextVariable("SelectedRecord", prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier + "");
			cxl_inFollowUpMode = new ims.framework.ContextVariable("inFollowUpMode", prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__inFollowUpMode_" + componentIdentifier + "");
			cxl_SelectedAMTSRecord = new ims.framework.ContextVariable("SelectedAMTSRecord", prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier + "");
		}
		
		public boolean getSelectedEventIsNotNull()
		{
			return !cxl_SelectedEvent.getValueIsNull(context);
		}
		public ims.clinical.vo.enums.DementiaEventEnumeration getSelectedEvent()
		{
			return (ims.clinical.vo.enums.DementiaEventEnumeration)cxl_SelectedEvent.getValue(context);
		}
		public void setSelectedEvent(ims.clinical.vo.enums.DementiaEventEnumeration value)
		{
			cxl_SelectedEvent.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedEvent = null;
		public boolean getSelectedRecordIsNotNull()
		{
			return !cxl_SelectedRecord.getValueIsNull(context);
		}
		public ims.clinical.vo.DementiaVo getSelectedRecord()
		{
			return (ims.clinical.vo.DementiaVo)cxl_SelectedRecord.getValue(context);
		}
		public void setSelectedRecord(ims.clinical.vo.DementiaVo value)
		{
			cxl_SelectedRecord.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedRecord = null;
		public boolean getinFollowUpModeIsNotNull()
		{
			return !cxl_inFollowUpMode.getValueIsNull(context);
		}
		public Boolean getinFollowUpMode()
		{
			return (Boolean)cxl_inFollowUpMode.getValue(context);
		}
		public void setinFollowUpMode(Boolean value)
		{
			cxl_inFollowUpMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_inFollowUpMode = null;
		public boolean getSelectedAMTSRecordIsNotNull()
		{
			return !cxl_SelectedAMTSRecord.getValueIsNull(context);
		}
		public ims.clinical.vo.DementiaAssessAndInvestigateVo getSelectedAMTSRecord()
		{
			return (ims.clinical.vo.DementiaAssessAndInvestigateVo)cxl_SelectedAMTSRecord.getValue(context);
		}
		public void setSelectedAMTSRecord(ims.clinical.vo.DementiaAssessAndInvestigateVo value)
		{
			cxl_SelectedAMTSRecord.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedAMTSRecord = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[117];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_Admin.DementiaConfiguration", "BO-1004100057-ID", "ID_DementiaConfiguration");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_Admin.DementiaConfiguration", "BO-1004100057-AGE", "Age");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_Admin.DementiaConfiguration", "BO-1004100057-EXCLUDEFAIRPERIOD", "ExcludeFAIRPeriod");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_Admin.DementiaConfiguration", "BO-1004100057-STEPONEPERIOD", "StepOnePeriod");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_Admin.DementiaConfiguration", "BO-1004100057-REMOVETIMEPERIOD", "RemoveTimePeriod");
			fields[76] = new ims.framework.ReportField(this.context, "_cv_Admin.DementiaConfiguration", "BO-1004100057-AMTSTHRESHOLDSCORE", "AMTSThresholdScore");
			fields[77] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-ID", "ID_DementiaAssessAndInvestigate");
			fields[78] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q1AGE", "Q1Age");
			fields[79] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q2DOB", "Q2DOB");
			fields[80] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q3CURRENTYEAR", "Q3CurrentYear");
			fields[81] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q4CURRENTTIME", "Q4CurrentTime");
			fields[82] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q5NAMEOFHOSPITAL", "Q5NameOfHospital");
			fields[83] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q6RECOGNISEPEOPLE", "Q6RecognisePeople");
			fields[84] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q7YEARWW2ENDED", "Q7YearWW2Ended");
			fields[85] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q8MONARCH", "Q8Monarch");
			fields[86] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q9COUNTBACKWARDS", "Q9CountBackwards");
			fields[87] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-Q10RECALL", "Q10Recall");
			fields[88] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-AMTSSCORE", "AMTSScore");
			fields[89] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-CONFIRMTRUSTSPROTOCOL", "ConfirmTrustsProtocol");
			fields[90] = new ims.framework.ReportField(this.context, "_cv_Clinical.AMTSRecordToView", "BO-1003100119-CONFIRMMEDICATIONREVIEW", "ConfirmMedicationReview");
			fields[91] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-ID", "ID_Dementia");
			fields[92] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-PATIENT", "Patient");
			fields[93] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[94] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-BREACHDATETIME", "BreachDateTime");
			fields[95] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-AGEONADMISSION", "AgeOnAdmission");
			fields[96] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-DISCHARGEDATETIME", "DischargeDateTime");
			fields[97] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-DEMENTIACONFIRMED", "DementiaConfirmed");
			fields[98] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-DELIRIUMCONFIRMED", "DeliriumConfirmed");
			fields[99] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-AMTSSCORE", "AMTSScore");
			fields[100] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-CONFIRMEDPATIENTPUTONDEMENTIAPATHWAY", "ConfirmedPatientPutOnDementiaPathway");
			fields[101] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-ADMISSIONDETAIL", "AdmissionDetail");
			fields[102] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1003100117-ISEXCLUDEDFROMWORKLIST", "IsExcludedFromWorklist");
			fields[103] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-ID", "ID_DementiaAssessAndInvestigate");
			fields[104] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q1AGE", "Q1Age");
			fields[105] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q2DOB", "Q2DOB");
			fields[106] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q3CURRENTYEAR", "Q3CurrentYear");
			fields[107] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q4CURRENTTIME", "Q4CurrentTime");
			fields[108] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q5NAMEOFHOSPITAL", "Q5NameOfHospital");
			fields[109] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q6RECOGNISEPEOPLE", "Q6RecognisePeople");
			fields[110] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q7YEARWW2ENDED", "Q7YearWW2Ended");
			fields[111] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q8MONARCH", "Q8Monarch");
			fields[112] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q9COUNTBACKWARDS", "Q9CountBackwards");
			fields[113] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-Q10RECALL", "Q10Recall");
			fields[114] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-AMTSSCORE", "AMTSScore");
			fields[115] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-CONFIRMTRUSTSPROTOCOL", "ConfirmTrustsProtocol");
			fields[116] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DementiaAssessmentAMTSComponent.__internal_x_context__SelectedAMTSRecord_" + componentIdentifier, "BO-1003100119-CONFIRMMEDICATIONREVIEW", "ConfirmMedicationReview");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
