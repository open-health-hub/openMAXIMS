//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Catalin Tomozei using IMS Development Environment (version 1.80 build 3999.26423)
// Copyright (C) 1995-2010 IMS MAXIMS. All rights reserved.

package ims.clinical.forms.packagesandconsumables;

import java.util.ArrayList;

import ims.clinical.forms.packagesandconsumables.GenForm.grd1Row;
import ims.clinical.vo.IntraOperativeCareRecordVo;
import ims.core.clinical.domain.objects.PatientProcedure;
import ims.core.vo.PatientProcedureLiteVo;
import ims.core.vo.PatientProcedureVo;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.setMode(FormMode.EDIT);
		if (args != null && args.length > 0)
		{
			if (args[0] != null)
			{
				if (((Integer) args[0]).equals(1))
				{
					form.grd1().setColumn1Caption("Consumable");
					form.grd2().setColumn1Caption("Consumable");
					
					populateConsumableGrid();
				}
				else if (((Integer) args[0]).equals(2))
				{
					form.grd1().setColumn1Caption("Drug");
					form.grd2().setColumn1Caption("Drug");
					
					populateDrugGrid();
				}
				else if (((Integer) args[0]).equals(3))
				{
					form.grd1().setColumn1Caption("Prosthesis");
					form.grd2().setColumn1Caption("Prosthesis");
					
					populateProsthesisGrid();
				}
				else if (((Integer) args[0]).equals(4))
				{
					form.grd1().setColumn1Caption("Theatre Package");
					form.grd2().setColumn1Caption("Theatre Package");
					
					populatePackagesGrid();
				}
				
				else if (((Integer) args[0]).equals(5))
				{
					form.grd1().setColumn1Caption("ISC Code");
					form.grd2().setColumn1Caption("ISC Code");
				}
			}
			if (args[1] != null && args[1] instanceof PatientProcedureVo  )
			{
				form.txt1().setValue(((PatientProcedureVo )args[1]).getProcedureDescription());				
			}
			else if (args[1] != null && args[1] instanceof String )
			{				
				if (((String)args[1]).equals("Consumables"))
				{
					grd1Row row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000010</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diathermy Plate with lead – Adult");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000020</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foley Urinary  Catheter  10F, 12F, 14F.....24F");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000030</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Long term catheter drainage bag");
					row.setColumn2(true);

					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000040</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nasal oxygen cannula");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000050</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oxygen facemask");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000060</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rebreather oxygen mask");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000070</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Surgical stockings – small, medium, large");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000080</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wound Dressing pack");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000090</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tubigrip – A – F");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000100</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Blood transfusion – 2 units");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>B0000110</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IV fluids – Normal Saline, Dextrose Saline");
					row.setColumn2(true);
				}
				else if (((String)args[1]).equals("Drugs"))
				{
					grd1Row row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000010</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drugs on discharge");
					row.setColumn2(false);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000120</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diabetes");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000135</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hormone Replacement Therapy");
					row.setColumn2(false);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004180</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Endocrine");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004120</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gastro-intestinal tract");
					row.setColumn2(false);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004130</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cardiovascular system");
					row.setColumn2(false);
					
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004150</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pain/Analgesia");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004220</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nutrition");
					row.setColumn2(false);
				}
				else if (((String)args[1]).equals("Packages"))
				{
					grd1Row row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000010</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inpatient Package");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000120</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PDT All Inclusive");
					row.setColumn2(false);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000135</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FollowUp Treatment for PDT");
					row.setColumn2(true);										
				}
				else if (((String)args[1]).equals("Accommodation"))
				{
					grd1Row row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000010</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Critical Care - 0");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000120</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Critical Care - 1");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0000135</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Critical Care - 2");
					row.setColumn2(false);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004180</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Critical Care - 3");
					row.setColumn2(false);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004120</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inpatient Medical");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004130</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Room No en-suite");
					row.setColumn2(true);					
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004150</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Room Shared Care");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004220</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Daycase - Medical");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004220</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Daycase - Minor");
					row.setColumn2(true);
					
					row = form.grd1().getRows().newRow();
					row.setColumn1("<b>D0004220</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Daycase - Major");
					row.setColumn2(false);
				}
				
			}
		}
	}
	private void populateISCGrid(ArrayList<String> arrayList) 
	{
		for (int i = 0; i < arrayList.size(); i++) 
		{
			grd1Row row = form.grd1().getRows().newRow();
			row.setColumn1(arrayList.get(i));
			row.setColumn2(true);
		}
		
	}
	@Override
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Clinical.setPackageAndConsumableItems(new ArrayList<String>());
		for (int i = 0; i < form.grd1().getRows().size(); i++) 
		{
			if (form.grd1().getRows().get(i).getColumn2())
			{
				form.getGlobalContext().Clinical.getPackageAndConsumableItems().add(form.grd1().getRows().get(i).getColumn1());
			}
		}
		
		engine.close(DialogResult.OK);
	}
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	
	private void populateConsumableGrid()
	{
		grd1Row row = form.grd1().getRows().newRow();
		row.setColumn1("Anaesthetic gases");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Blood handling charge");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Dressing of wound, small");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Laparoscopic consumables");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Leeches");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Therapeutic shoe");
		row.setColumn2(true);
	}
	
	private void populateDrugGrid()
	{
		grd1Row row = form.grd1().getRows().newRow();
		row.setColumn1("Endocrine");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Diabetes");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Respiratory system");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Eye");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Central nervous system");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Skin");
		row.setColumn2(true);
	}
	
	private void populateProsthesisGrid()
	{
		grd1Row row = form.grd1().getRows().newRow();
		row.setColumn1("Prosthesis, Screw");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Prosthesis, K Wires");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Prosthesis, Stents cardiac");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Prosthesis, Pacemaker");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Prosthesis, Aortic");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Prosthesis, Artificial eye");
		row.setColumn2(true);
	}
	
	private void populatePackagesGrid()
	{
		grd1Row row = form.grd1().getRows().newRow();
		row.setColumn1("Inpatient package");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Follow Up Treatment for PDT");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Biopsy of lesion of retina");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Revision of lents implant");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("Laser iridotomy");
		row.setColumn2(true);
		
		row = form.grd1().getRows().newRow();
		row.setColumn1("PDT All inclusive package");
		row.setColumn2(true);
	}
}
