//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.edischargepharmacyapprovalcomponent;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.CareContextShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.CareContextShortVo' of the global context variable 'Core.CurrentCareContext' is not supported.");
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuNewItem = factory.createMenuItem(startControlID.intValue() + 1, "New", true, false, new Integer(102149), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3670001)))
			contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu.add(contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuNewItem);
		contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuEditItem = factory.createMenuItem(startControlID.intValue() + 2, "Edit", true, false, new Integer(102150), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3670002)))
			contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu.add(contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuEditItem);
		contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuRemoveItem = factory.createMenuItem(startControlID.intValue() + 3, "Remove", true, false, new Integer(102300), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3670003)))
			contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu.add(contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuRemoveItem);
		contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuViewItem = factory.createMenuItem(startControlID.intValue() + 4, "View", true, false, new Integer(102223), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3670004)))
			contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu.add(contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuViewItem);
		contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuViewPreviousItem = factory.createMenuItem(startControlID.intValue() + 5, "View Previous e-Discharge TTA", true, false, new Integer(123168), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3670005)))
			contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu.add(contextMenus.Clinical.contextMenuEDischargeMedsSthkMenuViewPreviousItem);
		form.registerMenu(contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu);


		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 160, 64, 232, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ims.framework.FormUiLogic m_ccResponsablePharmacistForm = loader.loadComponent(102256, appForm, startControlID * 10 + 1000, anchoringHelper1.getSize(), instance1, startTabIndex.intValue() + 3, skipContextValidation);
		//ims.framework.Control m_ccResponsablePharmacistControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(160), new Integer(64), new Integer(232), new Integer(20), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 3), m_ccResponsablePharmacistForm, instance1 } );
		ims.framework.Control m_ccResponsablePharmacistControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1001),  new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 3), m_ccResponsablePharmacistForm, instance1, Boolean.FALSE } );
		super.addControl(m_ccResponsablePharmacistControl);
		Menu[] menus1 = m_ccResponsablePharmacistForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}
		ims.framework.CustomComponent instance2 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 560, 8, 296, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ims.framework.FormUiLogic m_ccOrderingClinForm = loader.loadComponent(102256, appForm, startControlID * 10 + 2000, anchoringHelper2.getSize(), instance2, startTabIndex.intValue() + 1006, skipContextValidation);
		//ims.framework.Control m_ccOrderingClinControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(560), new Integer(8), new Integer(296), new Integer(20), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, new Integer(startTabIndex.intValue() + 1006), m_ccOrderingClinForm, instance2 } );
		ims.framework.Control m_ccOrderingClinControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1003),  new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, new Integer(startTabIndex.intValue() + 1006), m_ccOrderingClinForm, instance2, Boolean.TRUE } );
		super.addControl(m_ccOrderingClinControl);
		Menu[] menus2 = m_ccOrderingClinForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus2.length; x++)
		{
			form.registerMenu(menus2[x]);
		}

		// Label Controls
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 440, 112, 108, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Rejection Reason:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 10, 32, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "EDD:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 440, 90, 68, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "TTA status:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 440, 66, 111, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Clinician Bleep No:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 440, 37, 120, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Ordering Date Time:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 440, 10, 110, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Ordering Clinician:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 8, 88, 194, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Clinical Comments To Pharmacy :", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 192, 37, 19, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Kg", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 32, 37, 84, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Body Weight :", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 56, 584, 0, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 8, 66, 153, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Last updating Pharmacist:", new Integer(1), null, new Integer(0)}));

		// Hint Controls
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 8, 37, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Hint.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.ENABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "86796026-7811-49dc-af8f-270cc4daf6e0"}));

		// Button Controls
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 272, 7, 104, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(startTabIndex.intValue() + 1005), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Status History", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 528, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), new Integer(startTabIndex.intValue() + 2016), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "TTA Dispensed", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 424, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), new Integer(startTabIndex.intValue() + 2015), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Enter Pharmacy", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 765, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), new Integer(startTabIndex.intValue() + 2024), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 680, 600, 80, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), new Integer(startTabIndex.intValue() + 2022), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 8, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 2020), ControlState.UNKNOWN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 8, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 2011), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Approve", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 216, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 2013), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Reject", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 320, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), new Integer(startTabIndex.intValue() + 2014), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Print Request", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 632, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), new Integer(startTabIndex.intValue() + 2017), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Final Checks", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 112, 208, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), new Integer(startTabIndex.intValue() + 2012), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Suspended", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 560, 112, 280, 88, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), new Integer(startTabIndex.intValue() + 2010), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 560, 88, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), new Integer(startTabIndex.intValue() + 2009), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 560, 64, 160, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), new Integer(startTabIndex.intValue() + 2008), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(25), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 8, 112, 424, 88, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), new Integer(startTabIndex.intValue() + 1004), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, new Integer(1500), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Controls
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 48, 8, 136, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 560, 35, 160, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), new Integer(startTabIndex.intValue() + 2007), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.TRUE, null}));

		// Dynamic Grid Controls
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 8, 240, 832, 352, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), new Integer(startTabIndex.intValue() + 2018), ControlState.READONLY, ControlState.EDITABLE, ims.framework.enumerations.ControlAnchoring.ALL, contextMenus.Clinical.contextMenuEDischargeMedsSthkMenu, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE}));

		// DecimalBox Controls
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 120, 35, 64, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DecimalBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, Boolean.TRUE, Boolean.FALSE, new Integer(5), new Integer(2), "The decimal value is invalid. A valid value can have up to 3 digits and up to 2 decimals.", null, Boolean.FALSE}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public ims.core.forms.mosquery.IComponent ccResponsablePharmacist()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
	}
	public void setccResponsablePharmacistValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
	}
	public void setccResponsablePharmacistVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setVisible(value);
	}
	public boolean isccResponsablePharmacistVisible()
	{
		return ((ims.framework.Control)super.getControl(0)).isVisible();
	}
	public void setccResponsablePharmacistEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setEnabled(value);
	}
	public boolean isccResponsablePharmacistEnabled()
	{
		return ((ims.framework.Control)super.getControl(0)).isEnabled();
	}
	public ims.core.forms.mosquery.IComponent ccOrderingClin()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(1)).getLogic();
	}
	public void setccOrderingClinValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(1)).setValueChangedEvent(delegate);
	}
	public void setccOrderingClinVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setVisible(value);
	}
	public boolean isccOrderingClinVisible()
	{
		return ((ims.framework.Control)super.getControl(1)).isVisible();
	}
	public void setccOrderingClinEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setEnabled(value);
	}
	public boolean isccOrderingClinEnabled()
	{
		return ((ims.framework.Control)super.getControl(1)).isEnabled();
	}
	public Hint hint1()
	{
		return (Hint)super.getControl(13);
	}
	public Button btnStatusHistory()
	{
		return (Button)super.getControl(14);
	}
	public Button btnTTADispensed()
	{
		return (Button)super.getControl(15);
	}
	public Button btnJAC()
	{
		return (Button)super.getControl(16);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(17);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(18);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(19);
	}
	public Button btnApprove()
	{
		return (Button)super.getControl(20);
	}
	public Button btnReject()
	{
		return (Button)super.getControl(21);
	}
	public Button btnPrintRequest()
	{
		return (Button)super.getControl(22);
	}
	public Button btnFinalChecks()
	{
		return (Button)super.getControl(23);
	}
	public Button btnSuspended()
	{
		return (Button)super.getControl(24);
	}
	public TextBox txtRejectionReason()
	{
		return (TextBox)super.getControl(25);
	}
	public TextBox txt1()
	{
		return (TextBox)super.getControl(26);
	}
	public TextBox txt2()
	{
		return (TextBox)super.getControl(27);
	}
	public TextBox txtClinicalCommentsToPharmacy()
	{
		return (TextBox)super.getControl(28);
	}
	public DateControl dteEDD()
	{
		return (DateControl)super.getControl(29);
	}
	public DateTimeControl dtim1()
	{
		return (DateTimeControl)super.getControl(30);
	}
	public DynamicGrid dyngrdMedication()
	{
		return (DynamicGrid)super.getControl(31);
	}
	public DecimalBox decBodyWeight()
	{
		return (DecimalBox)super.getControl(32);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Clinical = new ClinicalForms();
		}
		public final class ClinicalForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private ClinicalForms()
			{
				JACDialog = new LocalFormName(123204);
				TTADispenseDialog = new LocalFormName(123114);
				TTAPrintDialog = new LocalFormName(123205);
				EDischargeTTAStatusHistoryDialog = new LocalFormName(123213);
				EDischargeMedsSthkDialog = new LocalFormName(123215);
				EDischargePharmacyApprovalRejectDialog = new LocalFormName(123217);
				EDischargePharmacyApprovalSuspendedDialog = new LocalFormName(123218);
			}
			public final FormName JACDialog;
			public final FormName TTADispenseDialog;
			public final FormName TTAPrintDialog;
			public final FormName EDischargeTTAStatusHistoryDialog;
			public final FormName EDischargeMedsSthkDialog;
			public final FormName EDischargePharmacyApprovalRejectDialog;
			public final FormName EDischargePharmacyApprovalSuspendedDialog;
		}

		public ClinicalForms Clinical;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
			Admin = new AdminImages();
			Correspondence = new CorrespondenceImages();
			OCRR = new OCRRImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				Form = new ImageHelper(102258, "Images/Core/Control_Form.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Form;
		}
		public final class AdminImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private AdminImages()
			{
				Leaf = new ImageHelper(103101, "Images/Admin/Leaf.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Leaf;
		}
		public final class CorrespondenceImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CorrespondenceImages()
			{
				Supplementry = new ImageHelper(111109, "Images/Correspondence/Profile.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Supplementry;
		}
		public final class OCRRImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private OCRRImages()
			{
				Investigation = new ImageHelper(116105, "Images/OCRR/Investigation.gif", new Integer(16), new Integer(16));
				UpdatedResult = new ImageHelper(116138, "Images/OCRR/UpdatedResult.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Investigation;
			public final ims.framework.utils.Image UpdatedResult;
		}
		public final CoreImages Core;
		public final AdminImages Admin;
		public final CorrespondenceImages Correspondence;
		public final OCRRImages OCRR;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_EditedRecord = new ims.framework.ContextVariable("EditedRecord", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier + "");
			cxl_EditedMedicalRecord = new ims.framework.ContextVariable("EditedMedicalRecord", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier + "");
			cxl_CurrentStatus = new ims.framework.ContextVariable("CurrentStatus", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__CurrentStatus_" + componentIdentifier + "");
			cxl_MedicationStatusToBeSet = new ims.framework.ContextVariable("MedicationStatusToBeSet", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__MedicationStatusToBeSet_" + componentIdentifier + "");
			cxl_Summary = new ims.framework.ContextVariable("Summary", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier + "");
			cxl_LastEvent = new ims.framework.ContextVariable("LastEvent", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__LastEvent_" + componentIdentifier + "");
			cxl_PharmApproveConfirmMsgBoxId = new ims.framework.ContextVariable("PharmApproveConfirmMsgBoxId", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__PharmApproveConfirmMsgBoxId_" + componentIdentifier + "");
			cxl_IsHcp = new ims.framework.ContextVariable("IsHcp", prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__IsHcp_" + componentIdentifier + "");
		}
		
		public boolean getEditedRecordIsNotNull()
		{
			return !cxl_EditedRecord.getValueIsNull(context);
		}
		public ims.clinical.vo.TTAMedicationAndPharmacyVo getEditedRecord()
		{
			return (ims.clinical.vo.TTAMedicationAndPharmacyVo)cxl_EditedRecord.getValue(context);
		}
		public void setEditedRecord(ims.clinical.vo.TTAMedicationAndPharmacyVo value)
		{
			cxl_EditedRecord.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_EditedRecord = null;
		public boolean getEditedMedicalRecordIsNotNull()
		{
			return !cxl_EditedMedicalRecord.getValueIsNull(context);
		}
		public ims.clinical.vo.TTAMedicationDetailVo getEditedMedicalRecord()
		{
			return (ims.clinical.vo.TTAMedicationDetailVo)cxl_EditedMedicalRecord.getValue(context);
		}
		public void setEditedMedicalRecord(ims.clinical.vo.TTAMedicationDetailVo value)
		{
			cxl_EditedMedicalRecord.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_EditedMedicalRecord = null;
		public boolean getCurrentStatusIsNotNull()
		{
			return !cxl_CurrentStatus.getValueIsNull(context);
		}
		public ims.clinical.vo.TTAStatusVo getCurrentStatus()
		{
			return (ims.clinical.vo.TTAStatusVo)cxl_CurrentStatus.getValue(context);
		}
		public void setCurrentStatus(ims.clinical.vo.TTAStatusVo value)
		{
			cxl_CurrentStatus.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentStatus = null;
		public boolean getMedicationStatusToBeSetIsNotNull()
		{
			return !cxl_MedicationStatusToBeSet.getValueIsNull(context);
		}
		public  ims.clinical.vo.enums.EDischargeComponentStatus getMedicationStatusToBeSet()
		{
			return ( ims.clinical.vo.enums.EDischargeComponentStatus)cxl_MedicationStatusToBeSet.getValue(context);
		}
		public void setMedicationStatusToBeSet( ims.clinical.vo.enums.EDischargeComponentStatus value)
		{
			cxl_MedicationStatusToBeSet.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MedicationStatusToBeSet = null;
		public boolean getSummaryIsNotNull()
		{
			return !cxl_Summary.getValueIsNull(context);
		}
		public ims.clinical.vo.EDischargeSTHKSummaryVo getSummary()
		{
			return (ims.clinical.vo.EDischargeSTHKSummaryVo)cxl_Summary.getValue(context);
		}
		public void setSummary(ims.clinical.vo.EDischargeSTHKSummaryVo value)
		{
			cxl_Summary.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Summary = null;
		public boolean getLastEventIsNotNull()
		{
			return !cxl_LastEvent.getValueIsNull(context);
		}
		public ims.clinical.vo.enums.EDischargeLastEvent getLastEvent()
		{
			return (ims.clinical.vo.enums.EDischargeLastEvent)cxl_LastEvent.getValue(context);
		}
		public void setLastEvent(ims.clinical.vo.enums.EDischargeLastEvent value)
		{
			cxl_LastEvent.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_LastEvent = null;
		public boolean getPharmApproveConfirmMsgBoxIdIsNotNull()
		{
			return !cxl_PharmApproveConfirmMsgBoxId.getValueIsNull(context);
		}
		public Integer getPharmApproveConfirmMsgBoxId()
		{
			return (Integer)cxl_PharmApproveConfirmMsgBoxId.getValue(context);
		}
		public void setPharmApproveConfirmMsgBoxId(Integer value)
		{
			cxl_PharmApproveConfirmMsgBoxId.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PharmApproveConfirmMsgBoxId = null;
		public boolean getIsHcpIsNotNull()
		{
			return !cxl_IsHcp.getValueIsNull(context);
		}
		public Boolean getIsHcp()
		{
			return (Boolean)cxl_IsHcp.getValue(context);
		}
		public void setIsHcp(Boolean value)
		{
			cxl_IsHcp.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsHcp = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public ClinicalNamespace Clinical = new ClinicalNamespace();
		public final class ClinicalNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class EDischargeMedsSthkMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int New = 1;
				public static final int Edit = 2;
				public static final int Remove = 3;
				public static final int View = 4;
				public static final int ViewPrevious = 5;
			}
			public void disableAllEDischargeMedsSthkMenuMenuItems()
			{
				this.contextMenuEDischargeMedsSthkMenuNewItem.setEnabled(false);
				this.contextMenuEDischargeMedsSthkMenuEditItem.setEnabled(false);
				this.contextMenuEDischargeMedsSthkMenuRemoveItem.setEnabled(false);
				this.contextMenuEDischargeMedsSthkMenuViewItem.setEnabled(false);
				this.contextMenuEDischargeMedsSthkMenuViewPreviousItem.setEnabled(false);
			}
			public void hideAllEDischargeMedsSthkMenuMenuItems()
			{
				this.contextMenuEDischargeMedsSthkMenuNewItem.setVisible(false);
				this.contextMenuEDischargeMedsSthkMenuEditItem.setVisible(false);
				this.contextMenuEDischargeMedsSthkMenuRemoveItem.setVisible(false);
				this.contextMenuEDischargeMedsSthkMenuViewItem.setVisible(false);
				this.contextMenuEDischargeMedsSthkMenuViewPreviousItem.setVisible(false);
			}
			private Menu contextMenuEDischargeMedsSthkMenu;
			public ReadOnlyMenuItem getEDischargeMedsSthkMenuNewItem()
			{
				return this.contextMenuEDischargeMedsSthkMenuNewItem;
			}
			private MenuItem contextMenuEDischargeMedsSthkMenuNewItem;
			public ReadOnlyMenuItem getEDischargeMedsSthkMenuEditItem()
			{
				return this.contextMenuEDischargeMedsSthkMenuEditItem;
			}
			private MenuItem contextMenuEDischargeMedsSthkMenuEditItem;
			public ReadOnlyMenuItem getEDischargeMedsSthkMenuRemoveItem()
			{
				return this.contextMenuEDischargeMedsSthkMenuRemoveItem;
			}
			private MenuItem contextMenuEDischargeMedsSthkMenuRemoveItem;
			public ReadOnlyMenuItem getEDischargeMedsSthkMenuViewItem()
			{
				return this.contextMenuEDischargeMedsSthkMenuViewItem;
			}
			private MenuItem contextMenuEDischargeMedsSthkMenuViewItem;
			public ReadOnlyMenuItem getEDischargeMedsSthkMenuViewPreviousItem()
			{
				return this.contextMenuEDischargeMedsSthkMenuViewPreviousItem;
			}
			private MenuItem contextMenuEDischargeMedsSthkMenuViewPreviousItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[136];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-ID", "ID_TTAMedicationDetail");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-OTHERMEDICATIONTEXT", "OtherMedicationText");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-DOSEVALUE", "DoseValue");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-DOSEUNIT", "DoseUnit");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-FORM", "Form");
			fields[76] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-ROUTE", "Route");
			fields[77] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-FREQUENCYVALUE", "FrequencyValue");
			fields[78] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-FREQUENCYUNIT", "FrequencyUnit");
			fields[79] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-COMMENCEDDATE", "CommencedDate");
			fields[80] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-DURATIONVALUE", "DurationValue");
			fields[81] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-DURATIONUNIT", "DurationUnit");
			fields[82] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-CLINICALCOMMENTSFORPHARMACY", "ClinicalCommentsForPharmacy");
			fields[83] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-MEDICATIONINSTRUCTIONSFORPATIENT", "MedicationInstructionsForPatient");
			fields[84] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-PRESCRIBERCONTACTED", "PrescriberContacted");
			fields[85] = new ims.framework.ReportField(this.context, "_cv_Clinical.EDischargeMeds", "BO-1099100016-UNITTEXT", "UnitText");
			fields[86] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADockedPrinted", "BO-1099100017-ID", "ID_TTAStatus");
			fields[87] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADockedPrinted", "BO-1099100017-STATUS", "Status");
			fields[88] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADockedPrinted", "BO-1099100017-STATUSDATETIME", "StatusDateTime");
			fields[89] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADockedPrinted", "BO-1099100017-REASONFORREJECTION", "ReasonForRejection");
			fields[90] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADockedPrinted", "BO-1099100017-REASONFORSUSPENSION", "ReasonForSuspension");
			fields[91] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADispense", "BO-1099100017-ID", "ID_TTAStatus");
			fields[92] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADispense", "BO-1099100017-STATUS", "Status");
			fields[93] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADispense", "BO-1099100017-STATUSDATETIME", "StatusDateTime");
			fields[94] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADispense", "BO-1099100017-REASONFORREJECTION", "ReasonForRejection");
			fields[95] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTADispense", "BO-1099100017-REASONFORSUSPENSION", "ReasonForSuspension");
			fields[96] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTAPharmacySystemDetails", "BO-1099100017-ID", "ID_TTAStatus");
			fields[97] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTAPharmacySystemDetails", "BO-1099100017-STATUS", "Status");
			fields[98] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTAPharmacySystemDetails", "BO-1099100017-STATUSDATETIME", "StatusDateTime");
			fields[99] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTAPharmacySystemDetails", "BO-1099100017-REASONFORREJECTION", "ReasonForRejection");
			fields[100] = new ims.framework.ReportField(this.context, "_cv_Clinical.eDischargePharmacyApprovalTTAPharmacySystemDetails", "BO-1099100017-REASONFORSUSPENSION", "ReasonForSuspension");
			fields[101] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier, "BO-1099100015-ID", "ID_TTAMedicationAndPharmacy");
			fields[102] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier, "BO-1099100015-BODYWEIGHTKG", "BodyWeightKg");
			fields[103] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier, "BO-1099100015-CLINICALCOMMENTSTOPHARMACY", "ClinicalCommentsToPharmacy");
			fields[104] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier, "BO-1099100015-ORDERINGDATETIME", "OrderingDateTime");
			fields[105] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier, "BO-1099100015-CLINICIANBLEEPNO", "ClinicianBleepNo");
			fields[106] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedRecord_" + componentIdentifier, "BO-1099100015-DATESUBMITTEDTOPHARMACY", "DateSubmittedToPharmacy");
			fields[107] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-ID", "ID_TTAMedicationDetail");
			fields[108] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-OTHERMEDICATIONTEXT", "OtherMedicationText");
			fields[109] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-DOSEVALUE", "DoseValue");
			fields[110] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-DOSEUNIT", "DoseUnit");
			fields[111] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-FORM", "Form");
			fields[112] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-ROUTE", "Route");
			fields[113] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-FREQUENCYVALUE", "FrequencyValue");
			fields[114] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-FREQUENCYUNIT", "FrequencyUnit");
			fields[115] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-COMMENCEDDATE", "CommencedDate");
			fields[116] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-DURATIONVALUE", "DurationValue");
			fields[117] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-DURATIONUNIT", "DurationUnit");
			fields[118] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-CLINICALCOMMENTSFORPHARMACY", "ClinicalCommentsForPharmacy");
			fields[119] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-MEDICATIONINSTRUCTIONSFORPATIENT", "MedicationInstructionsForPatient");
			fields[120] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-PRESCRIBERCONTACTED", "PrescriberContacted");
			fields[121] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__EditedMedicalRecord_" + componentIdentifier, "BO-1099100016-UNITTEXT", "UnitText");
			fields[122] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__CurrentStatus_" + componentIdentifier, "BO-1099100017-ID", "ID_TTAStatus");
			fields[123] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__CurrentStatus_" + componentIdentifier, "BO-1099100017-STATUS", "Status");
			fields[124] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__CurrentStatus_" + componentIdentifier, "BO-1099100017-STATUSDATETIME", "StatusDateTime");
			fields[125] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__CurrentStatus_" + componentIdentifier, "BO-1099100017-REASONFORREJECTION", "ReasonForRejection");
			fields[126] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__CurrentStatus_" + componentIdentifier, "BO-1099100017-REASONFORSUSPENSION", "ReasonForSuspension");
			fields[127] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-ID", "ID_Summary");
			fields[128] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-CARECONTEXT", "CareContext");
			fields[129] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[130] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-TTASTATUS", "TTAStatus");
			fields[131] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-HASHADANYPROCEDURESPERFORMED", "HasHadAnyProceduresPerformed");
			fields[132] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-ADDITONALCLINICALINFO", "AdditonalClinicalInfo");
			fields[133] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-DISCHARGELETTERSTATUS", "DischargeLetterStatus");
			fields[134] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-DISCHARGESUPPLEMENTARYLETTERSTATUS", "DischargeSupplementaryLetterStatus");
			fields[135] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.EDischargePharmacyApprovalComponent.__internal_x_context__Summary_" + componentIdentifier, "BO-1099100018-DISCHARGEDETAILS", "DischargeDetails");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
