//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.demoreferraldetails;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class lyrLayer extends Layer
	{
		private static final long serialVersionUID = 1L;
		public static class tabReferralDetailsContainer extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public static class cmbLocationsComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.vo.ValueObject value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.vo.ValueObject value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.vo.ValueObject value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.vo.ValueObject value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.vo.ValueObject value)
				{
					return super.control.removeRow(value);
				}
				public ims.vo.ValueObject getValue()
				{
					return (ims.vo.ValueObject)super.control.getValue();
				}
				public void setValue(ims.vo.ValueObject value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbStatusComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.CoreReferralStatus value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.CoreReferralStatus value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.CoreReferralStatus value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.CoreReferralStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.CoreReferralStatus value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.CoreReferralStatus getValue()
				{
					return (ims.core.vo.lookups.CoreReferralStatus)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.CoreReferralStatus value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbDisciplineComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.clinical.vo.lookups.ReferralDiscipline value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.clinical.vo.lookups.ReferralDiscipline value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.clinical.vo.lookups.ReferralDiscipline value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.clinical.vo.lookups.ReferralDiscipline value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.clinical.vo.lookups.ReferralDiscipline value)
				{
					return super.control.removeRow(value);
				}
				public ims.clinical.vo.lookups.ReferralDiscipline getValue()
				{
					return (ims.clinical.vo.lookups.ReferralDiscipline)super.control.getValue();
				}
				public void setValue(ims.clinical.vo.lookups.ReferralDiscipline value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbSourceofReferralComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.clinical.vo.lookups.ReferralSource value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.clinical.vo.lookups.ReferralSource value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.clinical.vo.lookups.ReferralSource value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.clinical.vo.lookups.ReferralSource value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.clinical.vo.lookups.ReferralSource value)
				{
					return super.control.removeRow(value);
				}
				public ims.clinical.vo.lookups.ReferralSource getValue()
				{
					return (ims.clinical.vo.lookups.ReferralSource)super.control.getValue();
				}
				public void setValue(ims.clinical.vo.lookups.ReferralSource value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbReasonReferralComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.ReasonForReferral value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.ReasonForReferral value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.ReasonForReferral value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.ReasonForReferral value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.ReasonForReferral value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.ReasonForReferral getValue()
				{
					return (ims.core.vo.lookups.ReasonForReferral)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.ReasonForReferral value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbSpecialtyCodeComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.clinical.vo.lookups.SpecialtyFunctionCode value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.clinical.vo.lookups.SpecialtyFunctionCode value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.clinical.vo.lookups.SpecialtyFunctionCode value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.clinical.vo.lookups.SpecialtyFunctionCode value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.clinical.vo.lookups.SpecialtyFunctionCode value)
				{
					return super.control.removeRow(value);
				}
				public ims.clinical.vo.lookups.SpecialtyFunctionCode getValue()
				{
					return (ims.clinical.vo.lookups.SpecialtyFunctionCode)super.control.getValue();
				}
				public void setValue(ims.clinical.vo.lookups.SpecialtyFunctionCode value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbPriorityComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.ReferralPriority value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.ReferralPriority value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.ReferralPriority value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.ReferralPriority value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.ReferralPriority value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.ReferralPriority getValue()
				{
					return (ims.core.vo.lookups.ReferralPriority)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.ReferralPriority value)
				{
					super.control.setValue(value);
				}
			}
			public static class qmbReferredToComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.MemberOfStaffShortVo value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.MemberOfStaffShortVo value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.MemberOfStaffShortVo value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.MemberOfStaffShortVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.MemberOfStaffShortVo value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.MemberOfStaffShortVo getValue()
				{
					return (ims.core.vo.MemberOfStaffShortVo)super.control.getValue();
				}
				public void setValue(ims.core.vo.MemberOfStaffShortVo value)
				{
					super.control.setValue(value);
				}
				public void setEditedText(String text)
				{
					super.control.setEditedText(text);
				}
				public String getEditedText()
				{
					return super.control.getEditedText();
				}
			}
			public static class qmbReferredByComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.vo.ValueObject value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.vo.ValueObject value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.vo.ValueObject value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.vo.ValueObject value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.vo.ValueObject value)
				{
					return super.control.removeRow(value);
				}
				public ims.vo.ValueObject getValue()
				{
					return (ims.vo.ValueObject)super.control.getValue();
				}
				public void setValue(ims.vo.ValueObject value)
				{
					super.control.setValue(value);
				}
				public void setEditedText(String text)
				{
					super.control.setEditedText(text);
				}
				public String getEditedText()
				{
					return super.control.getEditedText();
				}
			}
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Label Controls
				RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 432, 168, 45, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Status:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 432, 128, 63, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Discipline:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 8, 284, 85, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Mobile Phone:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 118, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Location:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 8, 251, 78, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Work Phone:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 8, 151, 54, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Address:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 8, 317, 93, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "E-mail Address:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 432, 24, 119, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Reason for Referral:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 432, 408, 137, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Recording Date / Time:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 432, 368, 99, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Recording User :", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 8, 350, 115, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Priority of Referral:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 8, 85, 76, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referred By:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 8, 416, 160, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date of Receipt of Referral:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 8, 383, 88, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referred Date:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 432, 56, 75, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Referred To:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 432, 96, 145, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Specialty Function Code:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 432, 216, 112, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Referral Comment:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 8, 24, 111, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Source of Referral:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 8, 86, 68, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "HCP Name:", new Integer(1), null, new Integer(0)}));
		
				// TextBox Controls
				RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 168, 284, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 168, 118, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 168, 85, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 168, 251, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 168, 151, 216, 88, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, new Integer(120), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 168, 317, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 576, 368, 224, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), new Integer(startTabIndex.intValue() + 27), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 432, 232, 368, 104, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), new Integer(startTabIndex.intValue() + 25), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		
				// Date Controls
				RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 168, 416, 144, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), new Integer(startTabIndex.intValue() + 16), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
				RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 168, 383, 144, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), new Integer(startTabIndex.intValue() + 15), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.TRUE, null}));
		
				// Date Time Controls
				RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 576, 408, 224, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), new Integer(startTabIndex.intValue() + 29), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		
				// ComboBox Controls
				RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 168, 118, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbLocationsTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbLocationsTemp);
				cmbLocationsComboBox cmbLocations = (cmbLocationsComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbLocationsComboBox.class, m_cmbLocationsTemp);
				super.addComboBox(cmbLocations);
				RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 584, 168, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				ComboBox m_cmbStatusTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbStatusTemp);
				cmbStatusComboBox cmbStatus = (cmbStatusComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbStatusComboBox.class, m_cmbStatusTemp);
				super.addComboBox(cmbStatus);
				RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 584, 128, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				ComboBox m_cmbDisciplineTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), new Integer(startTabIndex.intValue() + 20), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbDisciplineTemp);
				cmbDisciplineComboBox cmbDiscipline = (cmbDisciplineComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDisciplineComboBox.class, m_cmbDisciplineTemp);
				super.addComboBox(cmbDiscipline);
				RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 168, 24, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbSourceofReferralTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbSourceofReferralTemp);
				cmbSourceofReferralComboBox cmbSourceofReferral = (cmbSourceofReferralComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSourceofReferralComboBox.class, m_cmbSourceofReferralTemp);
				super.addComboBox(cmbSourceofReferral);
				RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 584, 24, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				ComboBox m_cmbReasonReferralTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 17), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbReasonReferralTemp);
				cmbReasonReferralComboBox cmbReasonReferral = (cmbReasonReferralComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbReasonReferralComboBox.class, m_cmbReasonReferralTemp);
				super.addComboBox(cmbReasonReferral);
				RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 584, 96, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				ComboBox m_cmbSpecialtyCodeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 19), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbSpecialtyCodeTemp);
				cmbSpecialtyCodeComboBox cmbSpecialtyCode = (cmbSpecialtyCodeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSpecialtyCodeComboBox.class, m_cmbSpecialtyCodeTemp);
				super.addComboBox(cmbSpecialtyCode);
				RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 168, 350, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPriorityTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 14), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPriorityTemp);
				cmbPriorityComboBox cmbPriority = (cmbPriorityComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPriorityComboBox.class, m_cmbPriorityTemp);
				super.addComboBox(cmbPriority);
		
				// Query ComboBox Controls
				RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 584, 56, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				ComboBox m_qmbReferredToTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 18), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.FALSE, new Integer(-1), Boolean.FALSE});
				addControl(m_qmbReferredToTemp);
				qmbReferredToComboBox qmbReferredTo = (qmbReferredToComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbReferredToComboBox.class, m_qmbReferredToTemp);
				super.addComboBox(qmbReferredTo);
				RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 168, 86, 216, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_qmbReferredByTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.FALSE, new Integer(-1), Boolean.FALSE});
				addControl(m_qmbReferredByTemp);
				qmbReferredByComboBox qmbReferredBy = (qmbReferredByComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbReferredByComboBox.class, m_qmbReferredByTemp);
				super.addComboBox(qmbReferredBy);
		
				// CheckBox Controls
				RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 168, 57, 160, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Supply Referral HCP Details", Boolean.TRUE, null}));
			}

			public Label lblReferredBy()
			{
				return (Label)super.getControl(11);
			}
			public Label lblHCPName()
			{
				return (Label)super.getControl(18);
			}
			public TextBox txtMobilePhone()
			{
				return (TextBox)super.getControl(19);
			}
			public TextBox txtLocation()
			{
				return (TextBox)super.getControl(20);
			}
			public TextBox txtHCPName()
			{
				return (TextBox)super.getControl(21);
			}
			public TextBox txtWorkPhone()
			{
				return (TextBox)super.getControl(22);
			}
			public TextBox txtAddress()
			{
				return (TextBox)super.getControl(23);
			}
			public TextBox txtEmail()
			{
				return (TextBox)super.getControl(24);
			}
			public TextBox txtRecordingUser()
			{
				return (TextBox)super.getControl(25);
			}
			public TextBox txtDelayResonComments()
			{
				return (TextBox)super.getControl(26);
			}
			public DateControl dteRecieptReferral()
			{
				return (DateControl)super.getControl(27);
			}
			public DateControl dteDecisionToRefer()
			{
				return (DateControl)super.getControl(28);
			}
			public DateTimeControl dtimRecordingDate()
			{
				return (DateTimeControl)super.getControl(29);
			}
			public cmbLocationsComboBox cmbLocations()
			{
				return (cmbLocationsComboBox)super.getComboBox(0);
			}
			public cmbStatusComboBox cmbStatus()
			{
				return (cmbStatusComboBox)super.getComboBox(1);
			}
			public cmbDisciplineComboBox cmbDiscipline()
			{
				return (cmbDisciplineComboBox)super.getComboBox(2);
			}
			public cmbSourceofReferralComboBox cmbSourceofReferral()
			{
				return (cmbSourceofReferralComboBox)super.getComboBox(3);
			}
			public cmbReasonReferralComboBox cmbReasonReferral()
			{
				return (cmbReasonReferralComboBox)super.getComboBox(4);
			}
			public cmbSpecialtyCodeComboBox cmbSpecialtyCode()
			{
				return (cmbSpecialtyCodeComboBox)super.getComboBox(5);
			}
			public cmbPriorityComboBox cmbPriority()
			{
				return (cmbPriorityComboBox)super.getComboBox(6);
			}
			public qmbReferredToComboBox qmbReferredTo()
			{
				return (qmbReferredToComboBox)super.getComboBox(7);
			}
			public qmbReferredByComboBox qmbReferredBy()
			{
				return (qmbReferredByComboBox)super.getComboBox(8);
			}
			public CheckBox chkSupplyHCPDetails()
			{
				return (CheckBox)super.getControl(39);
			}
		}
		public static class tabAssessmentContainer extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Custom Controls
				ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
				RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 16, 40, 792, 464, ims.framework.enumerations.ControlAnchoring.ALL);
				ims.framework.FormUiLogic m_customControlAssessmentForm = loader.loadComponent(127109, appForm, startControlID * 10 + 1000, anchoringHelper41.getSize(), instance1, -1, skipContextValidation);
				//ims.framework.Control m_customControlAssessmentControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(16), new Integer(40), new Integer(792), new Integer(464), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, new Integer(-1), m_customControlAssessmentForm, instance1 } );
				ims.framework.Control m_customControlAssessmentControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1041),  new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, new Integer(-1), m_customControlAssessmentForm, instance1, Boolean.FALSE } );
				super.addControl(m_customControlAssessmentControl);
				Menu[] menus1 = m_customControlAssessmentForm.getForm().getRegisteredMenus();
				for(int x = 0; x < menus1.length; x++)
				{
					form.registerMenu(menus1[x]);
				}
		
				// Button Controls
				RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 728, 8, 75, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 42), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Favourites", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
			}

			public ims.assessment.forms.structuralassessment.IComponent customControlAssessment()
			{
				return (ims.assessment.forms.structuralassessment.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
			}
			public void setcustomControlAssessmentValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
			{
				((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
			}
			public void setcustomControlAssessmentVisible(boolean value)
			{
				((ims.framework.Control)super.getControl(0)).setVisible(value);
			}
			public boolean iscustomControlAssessmentVisible()
			{
				return ((ims.framework.Control)super.getControl(0)).isVisible();
			}
			public void setcustomControlAssessmentEnabled(boolean value)
			{
				((ims.framework.Control)super.getControl(0)).setEnabled(value);
			}
			public boolean iscustomControlAssessmentEnabled()
			{
				return ((ims.framework.Control)super.getControl(0)).isEnabled();
			}
			public Button btnFavourites()
			{
				return (Button)super.getControl(1);
			}
		}

		protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
		{
			if(form == null)
				throw new RuntimeException("Invalid form");
			if(appForm == null)
				throw new RuntimeException("Invalid application form");
			if(control == null); // this is to avoid eclipse warning only.
			if(loader == null); // this is to avoid eclipse warning only.
			if(startControlID == null)
				throw new RuntimeException("Invalid startControlID");
			if(designSize == null); // this is to avoid eclipse warning only.
			if(runtimeSize == null); // this is to avoid eclipse warning only.
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex");
			RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 8, 48, 824, 544, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabReferralDetails = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Referral Details", new Integer(startControlID.intValue() + 0), new Boolean(true), new Boolean(false), new Boolean(true), new Boolean(true), new Boolean(false), new Boolean(false)});
			tabReferralDetailsContainer m_tabReferralDetailsContainer = (tabReferralDetailsContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabReferralDetailsContainer.class, m_tabReferralDetails, factory);
			super.addContainer(m_tabReferralDetails, m_tabReferralDetailsContainer);
			ims.framework.utils.SizeInfo m_tabReferralDetailsDesignSize = new ims.framework.utils.SizeInfo(824, 544);
			ims.framework.utils.SizeInfo m_tabReferralDetailsRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper43.getWidth(), anchoringHelper43.getHeight());
			m_tabReferralDetailsContainer.setContext(form, appForm, m_tabReferralDetails, loader, startControlID, m_tabReferralDetailsDesignSize, m_tabReferralDetailsRuntimeSize, startTabIndex, skipContextValidation);
			RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 8, 48, 824, 544, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabAssessment = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Assessment", new Integer(startControlID.intValue() + 0), new Boolean(false), new Boolean(false), new Boolean(true), new Boolean(true), new Boolean(false), new Boolean(false)});
			tabAssessmentContainer m_tabAssessmentContainer = (tabAssessmentContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabAssessmentContainer.class, m_tabAssessment, factory);
			super.addContainer(m_tabAssessment, m_tabAssessmentContainer);
			ims.framework.utils.SizeInfo m_tabAssessmentDesignSize = new ims.framework.utils.SizeInfo(824, 544);
			ims.framework.utils.SizeInfo m_tabAssessmentRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper44.getWidth(), anchoringHelper44.getHeight());
			m_tabAssessmentContainer.setContext(form, appForm, m_tabAssessment, loader, startControlID, m_tabAssessmentDesignSize, m_tabAssessmentRuntimeSize, startTabIndex, skipContextValidation);
		}
		public void hide()
		{
			tabReferralDetails().setVisible(false);
			tabAssessment().setVisible(false);
		}
		public void settabReferralDetailsEnabled(boolean value)
		{
			tabReferralDetails().setEnabled(value);
		}
		public void settabAssessmentEnabled(boolean value)
		{
			tabAssessment().setEnabled(value);
		}
		public void showtabReferralDetails()
		{
			tabAssessment().setVisible(false);
			tabReferralDetails().setVisible(true);
		}
		public void showtabAssessment()
		{
			tabReferralDetails().setVisible(false);
			tabAssessment().setVisible(true);
		}

		public tabReferralDetailsContainer tabReferralDetails()
		{
			return (tabReferralDetailsContainer)super.layers.get(0);
		}
		public tabAssessmentContainer tabAssessment()
		{
			return (tabAssessmentContainer)super.layers.get(1);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.CareContextShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.CareContextShortVo' of the global context variable 'Core.CurrentCareContext' is not supported.");
		if(!context.isValidContextType(ims.core.vo.ClinicalContactShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.ClinicalContactShortVo' of the global context variable 'Core.CurrentClinicalContact' is not supported.");
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	private void validateMandatoryContext(Context context)
	{
		if(new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext").getValueIsNull(context))
			throw new ims.framework.exceptions.FormMandatoryContextMissingException("The required context data 'Core.CurrentCareContext' is not available.");
	}
	public boolean supportsRecordedInError()
	{
		return true;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return this.getLocalContext().getSelectedReferral();
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
			validateMandatoryContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Panel Controls
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 832, 32, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Referrals Recording", new Integer(1), ""}));

		// Layer Clasess
		lyrLayer m_lyrLayer = (lyrLayer)LayerFlyweightFactory.getInstance().createLayer(lyrLayer.class, this, factory);
		super.addLayer(m_lyrLayer);
		m_lyrLayer.setContext(form, appForm, control, loader, startControlID, designSize, runtimeSize, startTabIndex, skipContextValidation);

		// Button Controls
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 760, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 34), ControlState.UNKNOWN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Close", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 664, 600, 80, 24, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 30), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 96, 600, 80, 24, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 8, 600, 80, 24, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "New", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 752, 600, 80, 24, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 32), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}
	public lyrLayer lyr()
	{
		return (lyrLayer)super.getLayer(0);
	}
	public Button btnClose()
	{
		return (Button)super.getControl(3);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(4);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(5);
	}
	public Button btnNew()
	{
		return (Button)super.getControl(6);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(7);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Clinical = new ClinicalForms();
			Assessment = new AssessmentForms();
		}
		public final class ClinicalForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private ClinicalForms()
			{
				PreceedingReferral = new LocalFormName(123136);
				DemoPatientReferralList = new LocalFormName(123143);
				DemoreferralDetailsDialog = new LocalFormName(123144);
			}
			public final FormName PreceedingReferral;
			public final FormName DemoPatientReferralList;
			public final FormName DemoreferralDetailsDialog;
		}
		public final class AssessmentForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private AssessmentForms()
			{
				AssessmentFavourites = new LocalFormName(127117);
			}
			public final FormName AssessmentFavourites;
		}

		public ClinicalForms Clinical;
		public AssessmentForms Assessment;
	}

	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_SelectedReferral = new ims.framework.ContextVariable("SelectedReferral", prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier + "");
			cxl_LoggedInMOS = new ims.framework.ContextVariable("LoggedInMOS", prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier + "");
			cxl_UserAssessmentVo = new ims.framework.ContextVariable("UserAssessmentVo", prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier + "");
			cxl_GraphicalUserAssessment = new ims.framework.ContextVariable("GraphicalUserAssessment", prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier + "");
		}
		
		public boolean getSelectedReferralIsNotNull()
		{
			return !cxl_SelectedReferral.getValueIsNull(context);
		}
		public ims.clinical.vo.ReferralsRecordingVo getSelectedReferral()
		{
			return (ims.clinical.vo.ReferralsRecordingVo)cxl_SelectedReferral.getValue(context);
		}
		public void setSelectedReferral(ims.clinical.vo.ReferralsRecordingVo value)
		{
			cxl_SelectedReferral.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedReferral = null;
		public boolean getLoggedInMOSIsNotNull()
		{
			return !cxl_LoggedInMOS.getValueIsNull(context);
		}
		public ims.core.vo.MemberOfStaffShortVo getLoggedInMOS()
		{
			return (ims.core.vo.MemberOfStaffShortVo)cxl_LoggedInMOS.getValue(context);
		}
		public void setLoggedInMOS(ims.core.vo.MemberOfStaffShortVo value)
		{
			cxl_LoggedInMOS.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_LoggedInMOS = null;
		public boolean getUserAssessmentVoIsNotNull()
		{
			return !cxl_UserAssessmentVo.getValueIsNull(context);
		}
		public ims.assessment.vo.UserAssessmentVo getUserAssessmentVo()
		{
			return (ims.assessment.vo.UserAssessmentVo)cxl_UserAssessmentVo.getValue(context);
		}
		public void setUserAssessmentVo(ims.assessment.vo.UserAssessmentVo value)
		{
			cxl_UserAssessmentVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_UserAssessmentVo = null;
		public boolean getGraphicalUserAssessmentIsNotNull()
		{
			return !cxl_GraphicalUserAssessment.getValueIsNull(context);
		}
		public ims.assessment.vo.GraphicAssessmentVo getGraphicalUserAssessment()
		{
			return (ims.assessment.vo.GraphicAssessmentVo)cxl_GraphicalUserAssessment.getValue(context);
		}
		public void setGraphicalUserAssessment(ims.assessment.vo.GraphicAssessmentVo value)
		{
			cxl_GraphicalUserAssessment.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_GraphicalUserAssessment = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[197];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-ID", "ID_GraphicAssessment");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-NAME", "Name");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-ASSESSMENTTYPE", "AssessmentType");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-ACTIVESTATUS", "ActiveStatus");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-HELPURL", "HelpUrl");
			fields[76] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-STOREPRINTEDREPORT", "StorePrintedReport");
			fields[77] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedGraphicAssessmentVo", "BO-1028100006-ASSOCIATEDREPORTFORPRINTING", "AssociatedReportForPrinting");
			fields[78] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-ID", "ID_ReferralsRecording");
			fields[79] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REFERRALTYPE", "ReferralType");
			fields[80] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REFERRALSOURCE", "ReferralSource");
			fields[81] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DATESENT", "DateSent");
			fields[82] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DETAILS", "Details");
			fields[83] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DATEFIRSTSEEN", "DateFirstSeen");
			fields[84] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DATERECEIVED", "DateReceived");
			fields[85] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REFERRALPRIORITY", "ReferralPriority");
			fields[86] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REASONFORREFERRAL", "ReasonForReferral");
			fields[87] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-SPECIALTYFUNCTIONCODE", "SpecialtyFunctionCode");
			fields[88] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REFERRALCATEGORY", "ReferralCategory");
			fields[89] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-PRIMARYPRECEEDING", "PrimaryPreceeding");
			fields[90] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-CARESPELL", "CareSpell");
			fields[91] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-CARECONTEXT", "CareContext");
			fields[92] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-CLINICALCONTACT", "ClinicalContact");
			fields[93] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REFERRALSTATUS", "ReferralStatus");
			fields[94] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-URGENTCANCERREFERRALTYPE", "UrgentCancerReferralType");
			fields[95] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-CANCERSTATUS", "CancerStatus");
			fields[96] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DELAYREASONGPURGENTREFERRAL", "DelayReasonGPUrgentReferral");
			fields[97] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DELAYREASONTEXT", "DelayReasonText");
			fields[98] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-DISCIPLINE", "Discipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedPreceedingReferralVo", "BO-1072100062-REASONFORREFERRALTEXT", "ReasonForReferralText");
			fields[100] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-ID", "ID_ReferralsRecording");
			fields[101] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-REFERRALTYPE", "ReferralType");
			fields[102] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-REFERRALSOURCE", "ReferralSource");
			fields[103] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DATESENT", "DateSent");
			fields[104] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DETAILS", "Details");
			fields[105] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DATEFIRSTSEEN", "DateFirstSeen");
			fields[106] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DATERECEIVED", "DateReceived");
			fields[107] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-REFERRALPRIORITY", "ReferralPriority");
			fields[108] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-REASONFORREFERRAL", "ReasonForReferral");
			fields[109] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-SPECIALTYFUNCTIONCODE", "SpecialtyFunctionCode");
			fields[110] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-REFERRALCATEGORY", "ReferralCategory");
			fields[111] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-PRIMARYPRECEEDING", "PrimaryPreceeding");
			fields[112] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-CARESPELL", "CareSpell");
			fields[113] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-CARECONTEXT", "CareContext");
			fields[114] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-CLINICALCONTACT", "ClinicalContact");
			fields[115] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-REFERRALSTATUS", "ReferralStatus");
			fields[116] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-URGENTCANCERREFERRALTYPE", "UrgentCancerReferralType");
			fields[117] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-CANCERSTATUS", "CancerStatus");
			fields[118] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DELAYREASONGPURGENTREFERRAL", "DelayReasonGPUrgentReferral");
			fields[119] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DELAYREASONTEXT", "DelayReasonText");
			fields[120] = new ims.framework.ReportField(this.context, "_cv_Clinical.SelectedReferralRecordingVo", "BO-1072100062-DISCIPLINE", "Discipline");
			fields[121] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ID", "ID_UserAssessment");
			fields[122] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-NAME", "Name");
			fields[123] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-DESCRIPTION", "Description");
			fields[124] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ASSESSMENTTYPE", "AssessmentType");
			fields[125] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ACTIVESTATUS", "ActiveStatus");
			fields[126] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-HELPURL", "HelpURL");
			fields[127] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-SCORINGMETHOD", "ScoringMethod");
			fields[128] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ISFLATVIEW", "IsFlatView");
			fields[129] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-CATEGORY", "Category");
			fields[130] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ISMULTIPLEGROUP", "IsMultipleGroup");
			fields[131] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-GROUPQUESTIONWIDTH", "GroupQuestionWidth");
			fields[132] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-STOREPRINTEDASSESSMENT", "StorePrintedAssessment");
			fields[133] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ISMULTIROLE", "IsMultiRole");
			fields[134] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-HEADERTEXT", "HeaderText");
			fields[135] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-FOOTERTEXT", "FooterText");
			fields[136] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-MAXHEADERHEIGHT", "MaxHeaderHeight");
			fields[137] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-MAXFOOTERHEIGHT", "MaxFooterHeight");
			fields[138] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-ASSOCIATEDREPORT", "AssociatedReport");
			fields[139] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-CANCOPYLAST", "CanCopyLast");
			fields[140] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedUserAssessmentVo", "BO-1003100043-COPYLASTFROMCONTEXT", "CopyLastFromContext");
			fields[141] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-ID", "ID_ReferralsRecording");
			fields[142] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REFERRALTYPE", "ReferralType");
			fields[143] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REFERRALSOURCE", "ReferralSource");
			fields[144] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DATESENT", "DateSent");
			fields[145] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DETAILS", "Details");
			fields[146] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DATEFIRSTSEEN", "DateFirstSeen");
			fields[147] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DATERECEIVED", "DateReceived");
			fields[148] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REFERRALPRIORITY", "ReferralPriority");
			fields[149] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REASONFORREFERRAL", "ReasonForReferral");
			fields[150] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-SPECIALTYFUNCTIONCODE", "SpecialtyFunctionCode");
			fields[151] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REFERRALCATEGORY", "ReferralCategory");
			fields[152] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-PRIMARYPRECEEDING", "PrimaryPreceeding");
			fields[153] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-CARESPELL", "CareSpell");
			fields[154] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-CARECONTEXT", "CareContext");
			fields[155] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-CLINICALCONTACT", "ClinicalContact");
			fields[156] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REFERRALSTATUS", "ReferralStatus");
			fields[157] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-URGENTCANCERREFERRALTYPE", "UrgentCancerReferralType");
			fields[158] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-CANCERSTATUS", "CancerStatus");
			fields[159] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DELAYREASONGPURGENTREFERRAL", "DelayReasonGPUrgentReferral");
			fields[160] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DELAYREASONTEXT", "DelayReasonText");
			fields[161] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-DISCIPLINE", "Discipline");
			fields[162] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__SelectedReferral_" + componentIdentifier, "BO-1072100062-REASONFORREFERRALTEXT", "ReasonForReferralText");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-ID", "ID_MemberOfStaff");
			fields[164] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-INITIALS", "Initials");
			fields[165] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-SIGNATUREBLOCK", "SignatureBlock");
			fields[166] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-STAFFTYPE", "StaffType");
			fields[167] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-ISACTIVE", "IsActive");
			fields[168] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-SDSROLEID", "SdsRoleId");
			fields[169] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__LoggedInMOS_" + componentIdentifier, "BO-1006100006-CANREFERPATIENT", "CanReferPatient");
			fields[170] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ID", "ID_UserAssessment");
			fields[171] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-NAME", "Name");
			fields[172] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-DESCRIPTION", "Description");
			fields[173] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ASSESSMENTTYPE", "AssessmentType");
			fields[174] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ACTIVESTATUS", "ActiveStatus");
			fields[175] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-HELPURL", "HelpURL");
			fields[176] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-SCORINGMETHOD", "ScoringMethod");
			fields[177] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ISFLATVIEW", "IsFlatView");
			fields[178] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-CATEGORY", "Category");
			fields[179] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ISMULTIPLEGROUP", "IsMultipleGroup");
			fields[180] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-GROUPQUESTIONWIDTH", "GroupQuestionWidth");
			fields[181] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-STOREPRINTEDASSESSMENT", "StorePrintedAssessment");
			fields[182] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ISMULTIROLE", "IsMultiRole");
			fields[183] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-HEADERTEXT", "HeaderText");
			fields[184] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-FOOTERTEXT", "FooterText");
			fields[185] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-MAXHEADERHEIGHT", "MaxHeaderHeight");
			fields[186] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-MAXFOOTERHEIGHT", "MaxFooterHeight");
			fields[187] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-ASSOCIATEDREPORT", "AssociatedReport");
			fields[188] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-CANCOPYLAST", "CanCopyLast");
			fields[189] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__UserAssessmentVo_" + componentIdentifier, "BO-1003100043-COPYLASTFROMCONTEXT", "CopyLastFromContext");
			fields[190] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-ID", "ID_GraphicAssessment");
			fields[191] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-NAME", "Name");
			fields[192] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-ASSESSMENTTYPE", "AssessmentType");
			fields[193] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-ACTIVESTATUS", "ActiveStatus");
			fields[194] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-HELPURL", "HelpUrl");
			fields[195] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-STOREPRINTEDREPORT", "StorePrintedReport");
			fields[196] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.DemoreferralDetails.__internal_x_context__GraphicalUserAssessment_" + componentIdentifier, "BO-1028100006-ASSOCIATEDREPORTFORPRINTING", "AssociatedReportForPrinting");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
