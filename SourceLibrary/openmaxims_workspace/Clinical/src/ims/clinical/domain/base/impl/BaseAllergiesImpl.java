//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseAllergiesImpl extends DomainImpl implements ims.clinical.domain.Allergies, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistPatientAllergies(ims.core.vo.PatientShort patient, Boolean active)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientAllergy(ims.core.vo.PatientAllergy voPatientAllergy)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAllergenTypeReactions(ims.core.vo.lookups.AllergenType voAllergenType)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistHcps(ims.core.vo.HcpFilter voHcpFilter)
	{
	}

	@SuppressWarnings("unused")
	public void validategetpatientAllergy(Integer patientAllergyID)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientNoAllergyInfo(ims.core.patient.vo.PatientRefVo patientRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientNoAllergyInfo(ims.core.vo.PatientNoAllergyInfoVo patientNoAllergyInfo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientAllergy(ims.core.vo.PatientAllergy voPatientAllergy, ims.core.vo.PatientNoAllergyInfoVo patientNoAllergyInfo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveHeartsAlert(ims.core.patient.vo.PatientRefVo patientRefVo, String pasMapping, Boolean isActive)
	{
	}

	@SuppressWarnings("unused")
	public void validategetAllergenForTaxonomy(ims.core.vo.lookups.TaxonomyType taxonomyType, String mapping)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdatePASAllergies(ims.core.patient.vo.PatientRefVo patient, ims.core.vo.IfPatientAllergyVoCollection allergiesFromMsg)
	{
	}
}
