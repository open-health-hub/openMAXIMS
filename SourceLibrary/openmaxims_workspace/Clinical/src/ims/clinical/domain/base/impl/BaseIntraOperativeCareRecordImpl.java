//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseIntraOperativeCareRecordImpl extends DomainImpl implements ims.clinical.domain.IntraOperativeCareRecord, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetIntraOperativeCareRecord(ims.core.clinical.vo.IntraOperativeDetailsRefVo intraOperativeDetails)
	{
	}

	@SuppressWarnings("unused")
	public void validategetProcedureFromSuitableForSurgery(ims.core.admin.vo.CareContextRefVo careContext)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.clinical.vo.IntraOperativeCareRecordVo record, ims.scheduling.vo.Booking_AppointmentShortVo theatreAppt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetProcedure(ims.core.clinical.vo.PatientProcedureRefVo patientProcedure)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistTheatres(ims.core.resource.place.vo.LocationRefVo locRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveProcedure(ims.core.vo.PatientProcedureVo voPatientProcedure, ims.core.vo.PatientShort patientShortVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetIntraOperativeCareRecord(ims.core.clinical.vo.IntraOperativeCareRecordRefVo intraOperativeRecord)
	{
	}

	@SuppressWarnings("unused")
	public void validategetInpatientRecord(ims.core.patient.vo.PatientRefVo patientRef)
	{
		if(patientRef == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'patientRef' of type 'ims.core.patient.vo.PatientRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.core.admin.vo.CareContextRefVo careContextRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppt(ims.RefMan.vo.CatsReferralVo catsReferralvo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTheatreApptForIntraOperativeCareRecord(ims.core.clinical.vo.IntraOperativeCareRecordRefVo intraOperative)
	{
		if(intraOperative == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'intraOperative' of type 'ims.core.clinical.vo.IntraOperativeCareRecordRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validaterieIntraOperativeCareRecordAndActualProcedure(ims.clinical.vo.IntraOperativeCareRecordVo iocr, ims.framework.FormName formName, Integer patientId, Integer contactId, Integer careContextId, String comment)
	{
		if(iocr == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'iocr' of type 'ims.clinical.vo.IntraOperativeCareRecordVo' cannot be null.");
		if(formName == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'formName' of type 'ims.framework.FormName' cannot be null.");
		if(comment == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'comment' of type 'String' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetMostRecentOutPatientAppointment(ims.core.patient.vo.PatientRefVo voPatientRef)
	{
	}
}
