//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseEDischargeMedsSthkDialogImpl extends DomainImpl implements ims.clinical.domain.EDischargeMedsSthkDialog, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetMedicationLiteVo(ims.core.clinical.vo.MedicationRefVo refVo)
	{
		if(refVo == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'refVo' of type 'ims.core.clinical.vo.MedicationRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistFrequentMedications(Integer count, ims.core.resource.people.vo.HcpRefVo hcp)
	{
		if(count == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'count' of type 'Integer' cannot be null.");
		if(hcp == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'hcp' of type 'ims.core.resource.people.vo.HcpRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistMedicationHotlist(String text, ims.core.resource.people.vo.HcpRefVo hcp)
	{
		if(hcp == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'hcp' of type 'ims.core.resource.people.vo.HcpRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validateaddMedicationToHotlist(ims.core.clinical.vo.MedicationRefVo medication, ims.core.resource.people.vo.HcpRefVo hcp)
	{
		if(medication == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'medication' of type 'ims.core.clinical.vo.MedicationRefVo' cannot be null.");
		if(hcp == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'hcp' of type 'ims.core.resource.people.vo.HcpRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetForms(ims.core.clinical.vo.MedicationRefVo medication)
	{
		if(medication == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'medication' of type 'ims.core.clinical.vo.MedicationRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetRoutes(ims.core.clinical.vo.MedicationRefVo medication, ims.clinical.vo.lookups.DoseFormIndicator form)
	{
		if(medication == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'medication' of type 'ims.core.clinical.vo.MedicationRefVo' cannot be null.");
		if(form == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'form' of type 'ims.clinical.vo.lookups.DoseFormIndicator' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetUnits(ims.core.clinical.vo.MedicationRefVo medication, ims.clinical.vo.lookups.DoseFormIndicator form, ims.core.vo.lookups.MedicationRoute route)
	{
		if(medication == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'medication' of type 'ims.core.clinical.vo.MedicationRefVo' cannot be null.");
		if(form == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'form' of type 'ims.clinical.vo.lookups.DoseFormIndicator' cannot be null.");
		if(route == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'route' of type 'ims.core.vo.lookups.MedicationRoute' cannot be null.");
	}
}
