//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 4261.20360)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.admin.domain.impl;

import java.util.ArrayList;
import java.util.List;

import ims.admin.domain.base.impl.BaseLocationMultipleSelectDialogImpl;
import ims.admin.vo.RecordedInErrorVo;
import ims.admin.vo.domain.ServiceVoLiteVoAssembler;
import ims.RefMan.vo.OrganisationConfigVo;
import ims.RefMan.vo.OrganisationConfigVoCollection;
import ims.RefMan.vo.domain.OrganisationConfigVoAssembler;
import ims.configuration.RecordedInError;
import ims.core.vo.OrganisationLiteVoCollection;
import ims.core.vo.domain.OrganisationLiteVoAssembler;
import ims.core.vo.lookups.OrganisationType;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;

public class LocationMultipleSelectDialogImpl extends BaseLocationMultipleSelectDialogImpl
{

	private static final long serialVersionUID = 1L;

	public ims.core.vo.OrganisationLiteVoCollection listActiveOrganisations(String name)
	{
		
		
		StringBuilder hqlBuilder = new StringBuilder("from Organisation as org where org.type.id not in (" +	getInvalidTypes()+	") and org.isActive = 1 and org.isRIE is null  ");
		ArrayList<String> paramNames = new ArrayList<String>();
		ArrayList<Object> paramValues = new ArrayList<Object>();
		
		String and = "and ";
				
		if (name!=null && name.length()>0)
		{
			hqlBuilder.append(and);
			hqlBuilder.append(" upper(org.name) like :cName ");
			and = "and ";
			paramNames.add("cName");
			paramValues.add("%"+name.toUpperCase()+"%");
		}
				
		hqlBuilder.append(" order by upper(org.name)");
						
		List dos = getDomainFactory().find(hqlBuilder.toString(),paramNames,paramValues);
		
		if (dos == null || dos.size() == 0)
			return null;
		
		return OrganisationLiteVoAssembler.createOrganisationLiteVoCollectionFromOrganisation(dos); 
		
	}
	private String getInvalidTypes() 
	{
		return Integer.toString(OrganisationType.GPP.getID())+","+Integer.toString(OrganisationType.SUPPLIER.getID());
	}

	public OrganisationConfigVo getOrganisation(ims.core.resource.place.vo.OrganisationRefVo organisationRef)
	{
		if(organisationRef == null)
			throw new DomainRuntimeException("Organisation cannot be null");
		DomainFactory factory = getDomainFactory();
		String hql = " from Organisation as org where org.id = :orgId";
		List lst = factory.find(hql, new String[]{"orgId"}, new Object[]{organisationRef.getID_Organisation()});
		if (lst != null && lst.size() > 0)
		{
			OrganisationConfigVoCollection orgColl = OrganisationConfigVoAssembler.createOrganisationConfigVoCollectionFromOrganisation(lst);
			if(orgColl != null && orgColl.size() > 0)
				return orgColl.get(0);
		}
		return null;
	}
}
