//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.45 build 2328.23985)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.admin.domain.impl;

import java.util.List;

import ims.admin.domain.base.impl.BaseDrawingConfigListImpl;
import ims.domain.DomainFactory;

public class DrawingConfigListImpl extends BaseDrawingConfigListImpl
{

	public ims.core.vo.DrawingGraphicImageShortVoCollection listGraphicImages(String name, ims.core.vo.lookups.PreActiveActiveInactiveStatus status)
	{
		DomainFactory factory = getDomainFactory();
		StringBuffer hql = new StringBuffer("from DrawingGraphicImage dgi");
		java.util.ArrayList markers = new java.util.ArrayList();		
		java.util.ArrayList values  = new java.util.ArrayList();
		String clause = " where ";
		
		if(name != null && !name.equals(""))
		{
			hql.append(clause);
			hql.append("upper(dgi.imageName) like :imgName");
			markers.add("imgName");
			values.add(name.toUpperCase());
			clause = " and "; 
		}
		
		if(status != null)
		{
			hql.append(clause);
			hql.append("dgi.imageStatus = :imgStat");
			markers.add("imgStat");
			values.add(getDomLookup(status));
			clause = " and ";
		}

		List graphicImagesList = factory.find(hql.toString(), markers, values);
		return ims.core.vo.domain.DrawingGraphicImageShortVoAssembler.createDrawingGraphicImageShortVoCollectionFromDrawingGraphicImage(graphicImagesList);
	}
}
