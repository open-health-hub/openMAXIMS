//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.80 build 4847.21738)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.admin.domain.impl;

import ims.admin.domain.base.impl.BasePACSConfigImpl;
import ims.core.configuration.domain.objects.PACSConfiguration;
import ims.core.vo.PacsConfigurationVoCollection;
import ims.core.vo.domain.PacsConfigurationVoAssembler;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

import java.util.List;

public class PACSConfigImpl extends BasePACSConfigImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* getPACSConfigVo
	*/
	public ims.core.vo.PacsConfigurationVo getPACSConfigVo()
	{
		DomainFactory factory = getDomainFactory();
		List<?> lstPACS =  factory.find("select e1_1 from PACSConfiguration as e1_1 ");
		if(lstPACS != null && lstPACS.size() >0)
		{
			PacsConfigurationVoCollection tempColl = PacsConfigurationVoAssembler.createPacsConfigurationVoCollectionFromPACSConfiguration(lstPACS);
			if( tempColl != null && tempColl.size() > 0)
				return tempColl.get(0);
		}
		
		return null;		
				
	}

	public ims.core.vo.PacsConfigurationVo savePACSConfigVo(ims.core.vo.PacsConfigurationVo pacsVO) throws ims.domain.exceptions.StaleObjectException
	{
		if (pacsVO == null)
			throw new CodingRuntimeException("Cannot save null PacsConfigurationVo");

		DomainFactory factory = getDomainFactory();
				
		PACSConfiguration doPACS = PacsConfigurationVoAssembler.extractPACSConfiguration(factory, pacsVO);
		
		factory.save(doPACS);
		return PacsConfigurationVoAssembler.create(doPACS);
		
	}
}
