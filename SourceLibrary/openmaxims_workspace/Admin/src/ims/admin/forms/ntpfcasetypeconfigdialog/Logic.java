//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.80 build 4535.14223)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.admin.forms.ntpfcasetypeconfigdialog;

import ims.admin.forms.ntpfcasetypeconfigdialog.GenForm.grdCaseTypesRow;
import ims.framework.enumerations.DialogResult;
import ims.ntpf.vo.lookups.CaseType;
import ims.ntpf.vo.lookups.CaseTypeCollection;
import ims.ntpf.vo.lookups.LookupHelper;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.grdCaseTypes().getRows().clear();
		
		CaseTypeCollection coll = LookupHelper.getCaseType(domain.getLookupService());
		
		for(int k = 0 ; k < coll.size() ; k++)
		{
			grdCaseTypesRow row = form.grdCaseTypes().getRows().newRow();
			row.setColCaseType(coll.get(k).getText());
			row.setColSelect(checkSelect(coll.get(k)));
			row.setValue(coll.get(k));
		}
	}

	private boolean checkSelect(CaseType caseType)
	{
		CaseTypeCollection coll = form.getGlobalContext().NTPF.getCaseTypes();
		for(int k = 0 ; coll != null && k < coll.size() ; k++)
		{
			if (coll.get(k).equals(caseType))
				return true;
		}
		return false;
	}

	@Override
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		CaseTypeCollection coll = new CaseTypeCollection();
		for(int k = 0 ; k < form.grdCaseTypes().getRows().size() ; k++)
		{
			if (form.grdCaseTypes().getRows().get(k).getColSelect())
				coll.add(form.grdCaseTypes().getRows().get(k).getValue());
		}
		//if (coll.size() > 0)
			form.getGlobalContext().NTPF.setCaseTypes(coll);
		//else
			//form.getGlobalContext().NTPF.setCaseTypes(null);
			

		engine.close(DialogResult.OK);
	}
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
}
