//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.locationservice;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Admin = new AdminContext(context);
		NTPF = new NTPFContext(context);
	}
	public final class AdminContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private AdminContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentHospitalIsNotNull()
		{
			return !cx_AdminCurrentHospital.getValueIsNull(context);
		}
		public String getCurrentHospital()
		{
			return (String)cx_AdminCurrentHospital.getValue(context);
		}
		public void setCurrentHospital(String value)
		{
			cx_AdminCurrentHospital.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminCurrentHospital = new ims.framework.ContextVariable("Admin.CurrentHospital", "_cv_Admin.CurrentHospital");
		public boolean getCurrentProcedureIsNotNull()
		{
			return !cx_AdminCurrentProcedure.getValueIsNull(context);
		}
		public String getCurrentProcedure()
		{
			return (String)cx_AdminCurrentProcedure.getValue(context);
		}
		public void setCurrentProcedure(String value)
		{
			cx_AdminCurrentProcedure.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminCurrentProcedure = new ims.framework.ContextVariable("Admin.CurrentProcedure", "_cv_Admin.CurrentProcedure");
		public boolean getCurrentSpecialtyIsNotNull()
		{
			return !cx_AdminCurrentSpecialty.getValueIsNull(context);
		}
		public String getCurrentSpecialty()
		{
			return (String)cx_AdminCurrentSpecialty.getValue(context);
		}
		public void setCurrentSpecialty(String value)
		{
			cx_AdminCurrentSpecialty.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminCurrentSpecialty = new ims.framework.ContextVariable("Admin.CurrentSpecialty", "_cv_Admin.CurrentSpecialty");
		public boolean getSelectedLocShortVoIsNotNull()
		{
			return !cx_AdminSelectedLocShortVo.getValueIsNull(context);
		}
		public ims.core.vo.LocShortVo getSelectedLocShortVo()
		{
			return (ims.core.vo.LocShortVo)cx_AdminSelectedLocShortVo.getValue(context);
		}
		public void setSelectedLocShortVo(ims.core.vo.LocShortVo value)
		{
			cx_AdminSelectedLocShortVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminSelectedLocShortVo = new ims.framework.ContextVariable("Admin.SelectedLocShortVo", "_cv_Admin.SelectedLocShortVo");
		public boolean getActivityContextPricingDetailIsNotNull()
		{
			return !cx_AdminActivityContextPricingDetail.getValueIsNull(context);
		}
		public ims.core.vo.ActivityContextPricingDetailsVo getActivityContextPricingDetail()
		{
			return (ims.core.vo.ActivityContextPricingDetailsVo)cx_AdminActivityContextPricingDetail.getValue(context);
		}
		public void setActivityContextPricingDetail(ims.core.vo.ActivityContextPricingDetailsVo value)
		{
			cx_AdminActivityContextPricingDetail.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminActivityContextPricingDetail = new ims.framework.ContextVariable("Admin.ActivityContextPricingDetail", "_cv_Admin.ActivityContextPricingDetail");
		public boolean getLSAPricingActionIsNotNull()
		{
			return !cx_AdminLSAPricingAction.getValueIsNull(context);
		}
		public Integer getLSAPricingAction()
		{
			return (Integer)cx_AdminLSAPricingAction.getValue(context);
		}
		public void setLSAPricingAction(Integer value)
		{
			cx_AdminLSAPricingAction.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminLSAPricingAction = new ims.framework.ContextVariable("Admin.LSAPricingAction", "_cv_Admin.LSAPricingAction");
		public boolean getActivityContextPricingDetailCollectionIsNotNull()
		{
			return !cx_AdminActivityContextPricingDetailCollection.getValueIsNull(context);
		}
		public ims.core.vo.ActivityContextPricingDetailsVoCollection getActivityContextPricingDetailCollection()
		{
			return (ims.core.vo.ActivityContextPricingDetailsVoCollection)cx_AdminActivityContextPricingDetailCollection.getValue(context);
		}
		public void setActivityContextPricingDetailCollection(ims.core.vo.ActivityContextPricingDetailsVoCollection value)
		{
			cx_AdminActivityContextPricingDetailCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminActivityContextPricingDetailCollection = new ims.framework.ContextVariable("Admin.ActivityContextPricingDetailCollection", "_cv_Admin.ActivityContextPricingDetailCollection");
		public boolean getLocationServiceActivityCollectionIsNotNull()
		{
			return !cx_AdminLocationServiceActivityCollection.getValueIsNull(context);
		}
		public ims.core.vo.LocationServiceActivityVoCollection getLocationServiceActivityCollection()
		{
			return (ims.core.vo.LocationServiceActivityVoCollection)cx_AdminLocationServiceActivityCollection.getValue(context);
		}
		public void setLocationServiceActivityCollection(ims.core.vo.LocationServiceActivityVoCollection value)
		{
			cx_AdminLocationServiceActivityCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminLocationServiceActivityCollection = new ims.framework.ContextVariable("Admin.LocationServiceActivityCollection", "_cv_Admin.LocationServiceActivityCollection");

		private ims.framework.Context context;
	}
	public final class NTPFContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private NTPFContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getConfirmPriceIncreasesIsNotNull()
		{
			return !cx_NTPFConfirmPriceIncreases.getValueIsNull(context);
		}
		public Boolean getConfirmPriceIncreases()
		{
			return (Boolean)cx_NTPFConfirmPriceIncreases.getValue(context);
		}
		public void setConfirmPriceIncreases(Boolean value)
		{
			cx_NTPFConfirmPriceIncreases.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NTPFConfirmPriceIncreases = new ims.framework.ContextVariable("NTPF.ConfirmPriceIncreases", "_cv_NTPF.ConfirmPriceIncreases");

		private ims.framework.Context context;
	}

	public AdminContext Admin;
	public NTPFContext NTPF;
}
