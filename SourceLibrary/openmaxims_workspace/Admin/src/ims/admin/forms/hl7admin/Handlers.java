//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.hl7admin;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode, ims.framework.interfaces.IClearInfo
{
	abstract protected void bindcmbPatIdTypeLookup();
	abstract protected void defaultcmbPatIdTypeLookupValue();
	abstract protected void bindcmbPatIdLookup();
	abstract protected void defaultcmbPatIdLookupValue();
	abstract protected void bindcmbMsgTypeLookup();
	abstract protected void defaultcmbMsgTypeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnRecoverClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdStatsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtongrpInterfaceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnRefresh() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkStartupFlag() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnStartStopClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteToValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteFromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPatIdTypeValueSet(Object value);
	abstract protected void onCmbPatIdTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbResetClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdMsgsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdListSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPatIdValueSet(Object value);
	abstract protected void onCmbPatIdValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbMsgTypeValueSet(Object value);
	abstract protected void OnbtnOBsearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdProviderSystemSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.lyrHL7().tabInterfaces().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrHL7tabInterfacesActivated();
			}
		});
		this.form.lyrHL7().tabQuery().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrHL7tabQueryActivated();
			}
		});
		this.form.lyrHL7().tabDemographicFeed().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrHL7tabDemographicFeedActivated();
			}
		});
		this.form.lyrHL7().tabOutboundControl().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrHL7tabOutboundControlActivated();
			}
		});
		this.form.lyrHL7().tabInterfaces().btnRecover().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnRecoverClick();
			}
		});
		this.form.lyrHL7().tabInterfaces().grdStats().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdStatsSelectionChanged();
			}
		});
		this.form.lyrHL7().tabInterfaces().grpInterface().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtongrpInterfaceValueChanged();
			}
		});
		this.form.lyrHL7().tabInterfaces().btnRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnRefresh();
			}
		});
		this.form.lyrHL7().tabInterfaces().chkStart().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkStartupFlag();
			}
		});
		this.form.lyrHL7().tabInterfaces().btnStartStop().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnStartStopClick();
			}
		});
		this.form.lyrHL7().tabQuery().dteTo().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteToValueChanged();
			}
		});
		this.form.lyrHL7().tabQuery().dteFrom().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteFromValueChanged();
			}
		});
		this.form.lyrHL7().tabQuery().cmbPatIdType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatIdTypeValueSet(value);
			}
		});
		this.form.lyrHL7().tabQuery().cmbPatIdType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbPatIdTypeValueChanged();
			}
		});
		this.form.lyrHL7().tabQuery().imbReset().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbResetClick();
			}
		});
		this.form.lyrHL7().tabQuery().imbSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchClick();
			}
		});
		this.form.lyrHL7().tabQuery().grdMsgs().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdMsgsSelectionChanged();
			}
		});
		this.form.lyrHL7().tabDemographicFeed().grdList().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdListSelectionChanged();
			}
		});
		this.form.lyrHL7().tabDemographicFeed().cmbPatId().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatIdValueSet(value);
			}
		});
		this.form.lyrHL7().tabDemographicFeed().cmbPatId().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbPatIdValueChanged();
			}
		});
		this.form.lyrHL7().tabDemographicFeed().cmbMsgType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMsgTypeValueSet(value);
			}
		});
		this.form.lyrHL7().tabDemographicFeed().btnOBsearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				OnbtnOBsearchClick();
			}
		});
		this.form.lyrHL7().tabOutboundControl().grdProviderSystem().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdProviderSystemSelectionChanged();
			}
		});
		this.form.lyrHL7().tabOutboundControl().btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.lyrHL7().tabOutboundControl().btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.lyrHL7().tabOutboundControl().btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.getContextMenus().getHl7AdminStatsMenuVIEW_SUCCESSFULItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Hl7AdminStatsMenu.VIEW_SUCCESSFUL, sender);
			}
		});
		this.form.getContextMenus().getHl7AdminStatsMenuVIEW_FAILEDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Hl7AdminStatsMenu.VIEW_FAILED, sender);
			}
		});
		this.form.getContextMenus().getHl7AdminQryMenuVIEW_MESSAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Hl7AdminQryMenu.VIEW_MESSAGE, sender);
			}
		});
		this.form.getContextMenus().getHl7AdminQryMenuRESUBMITMSGItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Hl7AdminQryMenu.RESUBMITMSG, sender);
			}
		});
		this.form.getContextMenus().getHl7AdminQryMenuMARKASSENTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.Hl7AdminQryMenu.MARKASSENT, sender);
			}
		});
		this.form.getContextMenus().getGenericGridAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Add, sender);
			}
		});
		this.form.getContextMenus().getGenericGridUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Update, sender);
			}
		});
		this.form.getContextMenus().getGenericGridRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Remove, sender);
			}
		});
		this.form.getContextMenus().getGenericGridViewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.View, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveUpItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveUp, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveDownItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveDown, sender);
			}
		});
		this.form.getContextMenus().getGenericGridReplaceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Replace, sender);
			}
		});
		this.form.getContextMenus().getGenericGridConfirmItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Confirm, sender);
			}
		});
		this.form.getContextMenus().getGenericGridEDIT_VIEW_ICP_ACTIONSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.EDIT_VIEW_ICP_ACTIONS, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbPatIdTypeLookup();
		bindcmbPatIdLookup();
		bindcmbMsgTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbPatIdTypeLookup();
		bindcmbPatIdLookup();
		bindcmbMsgTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbPatIdTypeLookupValue();
		defaultcmbPatIdLookupValue();
		defaultcmbMsgTypeLookupValue();
	}
	private void onlyrHL7tabInterfacesActivated()
	{
		this.form.lyrHL7().showtabInterfaces();
	}
	private void onlyrHL7tabQueryActivated()
	{
		this.form.lyrHL7().showtabQuery();
	}
	private void onlyrHL7tabDemographicFeedActivated()
	{
		this.form.lyrHL7().showtabDemographicFeed();
	}
	private void onlyrHL7tabOutboundControlActivated()
	{
		this.form.lyrHL7().showtabOutboundControl();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	public abstract void clearContextInformation();
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
