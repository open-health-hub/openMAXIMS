//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.activity;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.admin.domain.Activity.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.admin.domain.Activity domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	public void clearContextInformation()
	{
		engine.clearPatientContextInformation();
	}
	protected void clearScreen()
	{
		this.form.lyrActivity().tabNtpf().chkActive().setValue(false);
		this.form.lyrActivity().tabNtpf().txtName().setValue("");
		this.form.lyrActivity().tabNtpf().txtEmailAlert().setValue("");
		this.form.lyrActivity().tabNtpf().txtActivity().setValue("");
		this.form.lyrActivity().tabSchedulling().chkActActive().setValue(false);
		this.form.lyrActivity().tabSchedulling().txtActName().setValue("");
		this.form.lyrActivity().tabSchedulling().txtActType().setValue("");
		this.form.lyrActivity().tabSchedulling().intTimeRequired().setValue(null);
	}
	protected void populateScreenFromData(ims.core.vo.ActivityVo value)
	{
		clearScreen();
		if(value == null)
			return;

		if(value.getIsActiveIsNotNull())
			this.form.lyrActivity().tabNtpf().chkActive().setValue(value.getIsActive().booleanValue());
		this.form.lyrActivity().tabNtpf().txtName().setValue(value.getNameIsNotNull() ? value.getName(): null);
		this.form.lyrActivity().tabNtpf().txtEmailAlert().setValue(value.getNameIsNotNull() ? value.getName(): null);
		this.form.lyrActivity().tabNtpf().txtActivity().setValue(value.getNameIsNotNull() ? value.getName(): null);
		if(value.getIsActiveIsNotNull())
			this.form.lyrActivity().tabSchedulling().chkActActive().setValue(value.getIsActive().booleanValue());
		this.form.lyrActivity().tabSchedulling().txtActName().setValue(value.getNameIsNotNull() ? value.getName(): null);
		this.form.lyrActivity().tabSchedulling().txtActType().setValue(value.getNameIsNotNull() ? value.getName(): null);
		this.form.lyrActivity().tabSchedulling().intTimeRequired().setValue(value.getTmReqIsNotNull() ? value.getTmReq() : null);
	}
	protected ims.core.vo.ActivityVo populateDataFromScreen(ims.core.vo.ActivityVo value)
	{
		if(value == null)
			value = new ims.core.vo.ActivityVo();

		value.setIsActive(new Boolean(this.form.lyrActivity().tabNtpf().chkActive().getValue()));
		value.setName(this.form.lyrActivity().tabNtpf().txtName().getValue());
		value.setName(this.form.lyrActivity().tabNtpf().txtEmailAlert().getValue());
		value.setName(this.form.lyrActivity().tabNtpf().txtActivity().getValue());
		value.setIsActive(new Boolean(this.form.lyrActivity().tabSchedulling().chkActActive().getValue()));
		value.setName(this.form.lyrActivity().tabSchedulling().txtActName().getValue());
		value.setName(this.form.lyrActivity().tabSchedulling().txtActType().getValue());
		value.setTmReq(this.form.lyrActivity().tabSchedulling().intTimeRequired().getValue());

		return value;
	}
	protected ims.core.vo.ActivityVo populateDataFromScreen()
	{
		return populateDataFromScreen(new ims.core.vo.ActivityVo());
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.admin.domain.Activity domain;
}
