//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.externalresourcesconfig;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbStatusDetailsLookup();
	abstract protected void defaultcmbStatusDetailsLookupValue();
	abstract protected void bindcmbHcpTypeDetailsLookup();
	abstract protected void defaultcmbHcpTypeDetailsLookupValue();
	abstract protected void bindcmbCountyLookup();
	abstract protected void defaultcmbCountyLookupValue();
	abstract protected void bindcmbExternalResourceTypeDetailsLookup();
	abstract protected void defaultcmbExternalResourceTypeDetailsLookupValue();
	abstract protected void bindcmbStatusLookup();
	abstract protected void defaultcmbStatusLookupValue();
	abstract protected void bindcmbHCPTypeLookup();
	abstract protected void defaultcmbHCPTypeLookupValue();
	abstract protected void bindcmbResourceTypeLookup();
	abstract protected void defaultcmbResourceTypeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbStatusDetailsValueSet(Object value);
	abstract protected void oncmbHcpTypeDetailsValueSet(Object value);
	abstract protected void oncmbCountyValueSet(Object value);
	abstract protected void oncmbExternalResourceTypeDetailsValueSet(Object value);
	abstract protected void onCmbExternalResourceTypeDetailsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdExternalResourceSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbStatusValueSet(Object value);
	abstract protected void oncmbHCPTypeValueSet(Object value);
	abstract protected void oncmbResourceTypeValueSet(Object value);
	abstract protected void onCmbResourceTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.cmbStatusDetails().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStatusDetailsValueSet(value);
			}
		});
		this.form.cmbHcpTypeDetails().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbHcpTypeDetailsValueSet(value);
			}
		});
		this.form.cmbCounty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCountyValueSet(value);
			}
		});
		this.form.cmbExternalResourceTypeDetails().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbExternalResourceTypeDetailsValueSet(value);
			}
		});
		this.form.cmbExternalResourceTypeDetails().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbExternalResourceTypeDetailsValueChanged();
			}
		});
		this.form.grdExternalResource().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdExternalResourceSelectionChanged();
			}
		});
		this.form.imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.imbSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchClick();
			}
		});
		this.form.cmbStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStatusValueSet(value);
			}
		});
		this.form.cmbHCPType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbHCPTypeValueSet(value);
			}
		});
		this.form.cmbResourceType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbResourceTypeValueSet(value);
			}
		});
		this.form.cmbResourceType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbResourceTypeValueChanged();
			}
		});
		this.form.getContextMenus().Admin.getExternalResourceNewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AdminNamespace.ExternalResource.New, sender);
			}
		});
		this.form.getContextMenus().Admin.getExternalResourceEditItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AdminNamespace.ExternalResource.Edit, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbStatusDetailsLookup();
		bindcmbHcpTypeDetailsLookup();
		bindcmbCountyLookup();
		bindcmbExternalResourceTypeDetailsLookup();
		bindcmbStatusLookup();
		bindcmbHCPTypeLookup();
		bindcmbResourceTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbStatusDetailsLookup();
		bindcmbHcpTypeDetailsLookup();
		bindcmbCountyLookup();
		bindcmbExternalResourceTypeDetailsLookup();
		bindcmbStatusLookup();
		bindcmbHCPTypeLookup();
		bindcmbResourceTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbStatusDetailsLookupValue();
		defaultcmbHcpTypeDetailsLookupValue();
		defaultcmbCountyLookupValue();
		defaultcmbExternalResourceTypeDetailsLookupValue();
		defaultcmbStatusLookupValue();
		defaultcmbHCPTypeLookupValue();
		defaultcmbResourceTypeLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
