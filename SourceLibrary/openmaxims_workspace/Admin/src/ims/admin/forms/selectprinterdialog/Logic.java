//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 4471.18200)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.admin.forms.selectprinterdialog;

import ims.framework.MessageButtons;
import ims.framework.MessageIcon;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.PrinterScope;
import ims.framework.interfaces.ILocation;
import ims.framework.interfaces.IPrinter;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		initialize();
	}
	

	private void initialize()
	{
		// Set current location
		ILocation currentLocation = domain.getCurrentLocation();
		
		//wdev-17031
		String name = null;
		if( currentLocation != null)
		{
			name = currentLocation.getName();
			if( name != null  &&  name.length() >  90)
				name = name.substring(0, 79);
				
		}
		form.lblLocation().setValue(currentLocation != null ? name : "No location selected");
		
		// Initialize component
		form.ccSelectPrinter().initialize(currentLocation, PrinterScope.DEFAULT);
		form.ccSelectPrinter().setIsRequired(Boolean.TRUE); //WDEV-17625
	}

	
	@Override
	protected void onBtnOKClick() throws ims.framework.exceptions.PresentationLogicException
	{
		IPrinter printer = form.ccSelectPrinter().getSelectedPrinter();
		
		if (printer == null)
		{
			engine.showMessage("Please select a printer", "Error", MessageButtons.OK, MessageIcon.ERROR);
			return;
		}
		
		form.getGlobalContext().Admin.setSelectedPrinter(printer);
		
		engine.close(DialogResult.OK);
	}

	
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
}
