//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.practicesearch;

import ims.framework.enumerations.FormMode;

public interface IComponent
{
	public void setMode(FormMode mode);
	public FormMode getMode();
	/**
	* getValue
	*/
	public ims.core.vo.OrganisationWithSitesVo getSelectedPractice();

	/**
	* clear
	*/
	public void clear();

	/**
	* returns an instance of the Admin.PracticeSearch enumeration (Search, Clear, Select) when selecting, pressing Search or Clear buttons
	*/
	public ims.admin.vo.enums.PracticeSearch getActionEvent();

	public void setEnabled(Boolean enabled);

	/**
	* display Context Menus for PracticeAdmin Screen
	*/
	public void setVisibleContextMenus(Boolean visible);

	/**
	* getSelectedSurgery
	*/
	public ims.core.vo.LocSiteVo getSelectedSurgery();

	/**
	* setSurgerySelectable defaults to false and needs to be called specifically from the PracticeAdmin form
	*/
	public void setSurgerySelectable(Boolean selectable);

	/**
	* sets the selection in the tree
	*/
	public void setValue(ims.vo.ValueObject val);

	/**
	* get new OrganisationWithSiteVo based on the Search Criteria fields
	*/
	public ims.core.vo.OrganisationWithSitesVo getNewPracticeBasedOnSearchCriteria();

	/**
	* set Search button as Default
	*/
	public void setSearchButtonAsDefault();

	/**
	* sets "Remove" context menu to be hidded/visible - hidden by default
	*/
	public void setVisibleRemoveContextMenu(Boolean isVisible);

	/**
	* sets invisible Surgery Context menu 
	*/
	public void setInvisibleSurgeryContextMenu();

	/**
	* add a Practice to Grid
	*/
	public Boolean addPractice(ims.core.vo.OrganisationWithSitesVo organisationWithSitesVo);

	/**
	* get Parent Practice
	*/
	public ims.core.vo.OrganisationWithSitesVo getParentPractice();

	/**
	* remove the Practice from Grid (after a delete)
	*/
	public Boolean removePracticeFromGrid(ims.core.vo.OrganisationWithSitesVo voOrganisationWithSites);

	/**
	* removes Surgery record from Grid
	*/
	public Boolean removeSurgeryFromGrid(ims.core.vo.LocSiteVo voLocSite);

	/**
	* clears the last action event
	*/
	public void setActionEventHandled();

	public void search();

	public void setValueInGrid(ims.vo.ValueObject val);
}
