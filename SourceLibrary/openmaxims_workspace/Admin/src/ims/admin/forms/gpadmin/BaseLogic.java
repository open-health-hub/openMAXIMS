//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.gpadmin;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.admin.domain.GPAdmin.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.admin.domain.GPAdmin domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	public void clearContextInformation()
	{
		engine.clearPatientContextInformation();
	}
	protected final void bindgrdContactscolContactTypeLookup()
	{
		this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().grdContacts().colContactTypeComboBox().clear();
		ims.core.vo.lookups.ChannelTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getChannelType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().grdContacts().colContactTypeComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void bindgrdMappingscolExtCodeTypeLookup()
	{
		this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().grdMappings().colExtCodeTypeComboBox().clear();
		ims.core.vo.lookups.TaxonomyTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getTaxonomyType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().grdMappings().colExtCodeTypeComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void oncmbGPStatusValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbGPStatus().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.GPStatus existingInstance = (ims.core.vo.lookups.GPStatus)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbGPStatusLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.GPStatus)
		{
			ims.core.vo.lookups.GPStatus instance = (ims.core.vo.lookups.GPStatus)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbGPStatusLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.GPStatus existingInstance = (ims.core.vo.lookups.GPStatus)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbGPStatus().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbGPStatusLookup()
	{
		this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbGPStatus().clear();
		ims.core.vo.lookups.GPStatusCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getGPStatus(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbGPStatus().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbGPStatusLookupValue(int id)
	{
		ims.core.vo.lookups.GPStatus instance = ims.core.vo.lookups.LookupHelper.getGPStatusInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbGPStatus().setValue(instance);
	}
	protected final void defaultcmbGPStatusLookupValue()
	{
		this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbGPStatus().setValue((ims.core.vo.lookups.GPStatus)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.GPStatus.class, engine.getFormName().getID(), ims.core.vo.lookups.GPStatus.TYPE_ID));
	}
	protected final void oncmbTitleValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbTitle().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.PersonTitle existingInstance = (ims.core.vo.lookups.PersonTitle)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbTitleLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.PersonTitle)
		{
			ims.core.vo.lookups.PersonTitle instance = (ims.core.vo.lookups.PersonTitle)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbTitleLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.PersonTitle existingInstance = (ims.core.vo.lookups.PersonTitle)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbTitle().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbTitleLookup()
	{
		this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbTitle().clear();
		ims.core.vo.lookups.PersonTitleCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getPersonTitle(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbTitle().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbTitleLookupValue(int id)
	{
		ims.core.vo.lookups.PersonTitle instance = ims.core.vo.lookups.LookupHelper.getPersonTitleInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbTitle().setValue(instance);
	}
	protected final void defaultcmbTitleLookupValue()
	{
		this.form.ctnGPDetails().lyrGPDetails().tabGPDetails().cmbTitle().setValue((ims.core.vo.lookups.PersonTitle)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.PersonTitle.class, engine.getFormName().getID(), ims.core.vo.lookups.PersonTitle.TYPE_ID));
	}
	protected void clearScreen()
	{
	}
	protected void populateScreenFromData(ims.core.vo.GP value)
	{
		clearScreen();
		if(value == null)
			return;

	}
	protected ims.core.vo.GP populateDataFromScreen(ims.core.vo.GP value)
	{
		if(value == null)
			value = new ims.core.vo.GP();


		return value;
	}
	protected ims.core.vo.GP populateDataFromScreen()
	{
		return populateDataFromScreen(new ims.core.vo.GP());
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.admin.domain.GPAdmin domain;
}
