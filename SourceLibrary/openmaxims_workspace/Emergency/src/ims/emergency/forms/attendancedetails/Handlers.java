//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.forms.attendancedetails;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrEmergencyAttendanceTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onCcAttendanceDetailsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcChatRequestedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcInvoicesBillingValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPreviousHistorySelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormOpen(args);
			}
		});
		this.form.lyrEmergencyAttendance().tabAttDet().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrEmergencyAttendancetabAttDetActivated();
			}
		});
		this.form.lyrEmergencyAttendance().tabChart().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrEmergencyAttendancetabChartActivated();
			}
		});
		this.form.lyrEmergencyAttendance().tabInvoices().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrEmergencyAttendancetabInvoicesActivated();
			}
		});
		this.form.lyrEmergencyAttendance().tabAttDet().setccAttendanceDetailsValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcAttendanceDetailsValueChanged();
			}
		});
		this.form.lyrEmergencyAttendance().tabChart().setccChatRequestedValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcChatRequestedValueChanged();
			}
		});
		this.form.lyrEmergencyAttendance().tabInvoices().setccInvoicesBillingValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcInvoicesBillingValueChanged();
			}
		});
		this.form.grdPreviousHistory().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPreviousHistorySelectionChanged();
			}
		});
		this.form.getContextMenus().Emergency.getAttendanceDetailsNewEpisodeItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.EmergencyNamespace.AttendanceDetails.NewEpisode, sender);
			}
		});
		this.form.getContextMenus().Emergency.getAttendanceDetailsEditEpisodeItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.EmergencyNamespace.AttendanceDetails.EditEpisode, sender);
			}
		});
		this.form.getContextMenus().Emergency.getAttendanceDetailsAddAttendanceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.EmergencyNamespace.AttendanceDetails.AddAttendance, sender);
			}
		});
		this.form.getContextMenus().Emergency.getAttendanceDetailsEditAttendanceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.EmergencyNamespace.AttendanceDetails.EditAttendance, sender);
			}
		});
		this.form.getContextMenus().Emergency.getAttendanceDetailsViewEventHistoryItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.EmergencyNamespace.AttendanceDetails.ViewEventHistory, sender);
			}
		});
	}
	private void onlyrEmergencyAttendancetabAttDetActivated()
	{
		this.form.lyrEmergencyAttendance().showtabAttDet();
		onlyrEmergencyAttendanceTabChanged(this.form.lyrEmergencyAttendance().tabAttDet());
	}
	private void onlyrEmergencyAttendancetabChartActivated()
	{
		this.form.lyrEmergencyAttendance().showtabChart();
		onlyrEmergencyAttendanceTabChanged(this.form.lyrEmergencyAttendance().tabChart());
	}
	private void onlyrEmergencyAttendancetabInvoicesActivated()
	{
		this.form.lyrEmergencyAttendance().showtabInvoices();
		onlyrEmergencyAttendanceTabChanged(this.form.lyrEmergencyAttendance().tabInvoices());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
