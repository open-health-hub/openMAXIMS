//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.forms.quickregistration;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbSourceOfReferralComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.emergency.vo.lookups.ReferredBy value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.emergency.vo.lookups.ReferredBy value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.emergency.vo.lookups.ReferredBy value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.emergency.vo.lookups.ReferredBy value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.emergency.vo.lookups.ReferredBy value)
		{
			return super.control.removeRow(value);
		}
		public ims.emergency.vo.lookups.ReferredBy getValue()
		{
			return (ims.emergency.vo.lookups.ReferredBy)super.control.getValue();
		}
		public void setValue(ims.emergency.vo.lookups.ReferredBy value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbRegistrationTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.emergency.vo.lookups.QuickRegistrationType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.emergency.vo.lookups.QuickRegistrationType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.emergency.vo.lookups.QuickRegistrationType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.emergency.vo.lookups.QuickRegistrationType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.emergency.vo.lookups.QuickRegistrationType value)
		{
			return super.control.removeRow(value);
		}
		public ims.emergency.vo.lookups.QuickRegistrationType getValue()
		{
			return (ims.emergency.vo.lookups.QuickRegistrationType)super.control.getValue();
		}
		public void setValue(ims.emergency.vo.lookups.QuickRegistrationType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbGenderComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.Sex value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.Sex value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.Sex value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.Sex value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.Sex value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.Sex getValue()
		{
			return (ims.core.vo.lookups.Sex)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.Sex value)
		{
			super.control.setValue(value);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientFilter.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientFilter' of the global context variable 'Core.PatientFilter' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Panel Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 504, 200, 336, 392, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT,"Comments", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 200, 488, 392, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Episode/Attendance Details", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 832, 184, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Patient Details", new Integer(2), ""}));

		// Label Controls
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 16, 296, 77, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Arrival Time:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 16, 264, 87, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Incident Time:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 16, 232, 111, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Source of Referral:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 16, 32, 109, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Registration Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 16, 160, 33, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "DOB:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 16, 128, 29, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Sex:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 16, 96, 65, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Forename:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 16, 64, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Surname:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 688, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), new Integer(startTabIndex.intValue() + 19), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 765, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 8, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), new Integer(startTabIndex.intValue() + 17), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "New", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 320, 29, 96, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Patient Search", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 512, 230, 320, 353, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), new Integer(startTabIndex.intValue() + 14), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT,Boolean.TRUE, new Integer(500), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 128, 94, 688, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 128, 62, 688, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 128, 294, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 128, 262, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));

		// PartialDateBox Controls
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 128, 158, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(PartialDateBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, null, Boolean.FALSE, Boolean.FALSE}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 128, 230, 344, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbSourceOfReferralTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbSourceOfReferralTemp);
		cmbSourceOfReferralComboBox cmbSourceOfReferral = (cmbSourceOfReferralComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSourceOfReferralComboBox.class, m_cmbSourceOfReferralTemp);
		super.addComboBox(cmbSourceOfReferral);
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 128, 30, 176, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbRegistrationTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbRegistrationTypeTemp);
		cmbRegistrationTypeComboBox cmbRegistrationType = (cmbRegistrationTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbRegistrationTypeComboBox.class, m_cmbRegistrationTypeTemp);
		super.addComboBox(cmbRegistrationType);
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 128, 126, 176, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbGenderTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbGenderTemp);
		cmbGenderComboBox cmbGender = (cmbGenderComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbGenderComboBox.class, m_cmbGenderTemp);
		super.addComboBox(cmbGender);
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}
	public Button btnSave()
	{
		return (Button)super.getControl(11);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(12);
	}
	public Button btnNew()
	{
		return (Button)super.getControl(13);
	}
	public Button btnPatSearch()
	{
		return (Button)super.getControl(14);
	}
	public TextBox txtComments()
	{
		return (TextBox)super.getControl(15);
	}
	public TextBox txtForename()
	{
		return (TextBox)super.getControl(16);
	}
	public TextBox txtSurname()
	{
		return (TextBox)super.getControl(17);
	}
	public DateTimeControl dtimArrival()
	{
		return (DateTimeControl)super.getControl(18);
	}
	public DateTimeControl dtimInjury()
	{
		return (DateTimeControl)super.getControl(19);
	}
	public PartialDateBox pdtDOB()
	{
		return (PartialDateBox)super.getControl(20);
	}
	public cmbSourceOfReferralComboBox cmbSourceOfReferral()
	{
		return (cmbSourceOfReferralComboBox)super.getComboBox(0);
	}
	public cmbRegistrationTypeComboBox cmbRegistrationType()
	{
		return (cmbRegistrationTypeComboBox)super.getComboBox(1);
	}
	public cmbGenderComboBox cmbGender()
	{
		return (cmbGenderComboBox)super.getComboBox(2);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Emergency = new EmergencyForms();
			Core = new CoreForms();
		}
		public final class EmergencyForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private EmergencyForms()
			{
				SendToAreaDialog = new LocalFormName(129121);
				QuickRegistrationPatientSearchDialog = new LocalFormName(129172);
			}
			public final FormName SendToAreaDialog;
			public final FormName QuickRegistrationPatientSearchDialog;
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				PrintReport = new LocalFormName(102180);
			}
			public final FormName PrintReport;
		}

		public EmergencyForms Emergency;
		public CoreForms Core;
	}

	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_patientToSave = new ims.framework.ContextVariable("patientToSave", prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__patientToSave_" + componentIdentifier + "");
			cxl_episodeToSave = new ims.framework.ContextVariable("episodeToSave", prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier + "");
			cxl_careContextToSave = new ims.framework.ContextVariable("careContextToSave", prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier + "");
			cxl_emergencyEpisodeToSave = new ims.framework.ContextVariable("emergencyEpisodeToSave", prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyEpisodeToSave_" + componentIdentifier + "");
			cxl_emergencyAttendanceToSave = new ims.framework.ContextVariable("emergencyAttendanceToSave", prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier + "");
			cxl_careSpellToSave = new ims.framework.ContextVariable("careSpellToSave", prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careSpellToSave_" + componentIdentifier + "");
		}
		
		public boolean getpatientToSaveIsNotNull()
		{
			return !cxl_patientToSave.getValueIsNull(context);
		}
		public ims.core.vo.PatientLiteVo getpatientToSave()
		{
			return (ims.core.vo.PatientLiteVo)cxl_patientToSave.getValue(context);
		}
		public void setpatientToSave(ims.core.vo.PatientLiteVo value)
		{
			cxl_patientToSave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_patientToSave = null;
		public boolean getepisodeToSaveIsNotNull()
		{
			return !cxl_episodeToSave.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareVo getepisodeToSave()
		{
			return (ims.core.vo.EpisodeofCareVo)cxl_episodeToSave.getValue(context);
		}
		public void setepisodeToSave(ims.core.vo.EpisodeofCareVo value)
		{
			cxl_episodeToSave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_episodeToSave = null;
		public boolean getcareContextToSaveIsNotNull()
		{
			return !cxl_careContextToSave.getValueIsNull(context);
		}
		public ims.core.vo.CareContextVo getcareContextToSave()
		{
			return (ims.core.vo.CareContextVo)cxl_careContextToSave.getValue(context);
		}
		public void setcareContextToSave(ims.core.vo.CareContextVo value)
		{
			cxl_careContextToSave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_careContextToSave = null;
		public boolean getemergencyEpisodeToSaveIsNotNull()
		{
			return !cxl_emergencyEpisodeToSave.getValueIsNull(context);
		}
		public ims.emergency.vo.EmergencyEpisodeForQuickRegistrationVo getemergencyEpisodeToSave()
		{
			return (ims.emergency.vo.EmergencyEpisodeForQuickRegistrationVo)cxl_emergencyEpisodeToSave.getValue(context);
		}
		public void setemergencyEpisodeToSave(ims.emergency.vo.EmergencyEpisodeForQuickRegistrationVo value)
		{
			cxl_emergencyEpisodeToSave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_emergencyEpisodeToSave = null;
		public boolean getemergencyAttendanceToSaveIsNotNull()
		{
			return !cxl_emergencyAttendanceToSave.getValueIsNull(context);
		}
		public ims.emergency.vo.EmergencyAttendanceForQuickRegistrationVo getemergencyAttendanceToSave()
		{
			return (ims.emergency.vo.EmergencyAttendanceForQuickRegistrationVo)cxl_emergencyAttendanceToSave.getValue(context);
		}
		public void setemergencyAttendanceToSave(ims.emergency.vo.EmergencyAttendanceForQuickRegistrationVo value)
		{
			cxl_emergencyAttendanceToSave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_emergencyAttendanceToSave = null;
		public boolean getcareSpellToSaveIsNotNull()
		{
			return !cxl_careSpellToSave.getValueIsNull(context);
		}
		public ims.core.vo.CareSpellVo getcareSpellToSave()
		{
			return (ims.core.vo.CareSpellVo)cxl_careSpellToSave.getValue(context);
		}
		public void setcareSpellToSave(ims.core.vo.CareSpellVo value)
		{
			cxl_careSpellToSave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_careSpellToSave = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[139];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-ID", "ID_TrackingArea");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-AREANAMEDESCRIPTION", "AreaNameDescription");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-AREADISPLAYNAME", "AreaDisplayName");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-STATUS", "Status");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-ISOVERALLVIEW", "IsOverallView");
			fields[76] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-ISREGISTRATIONAREA", "IsRegistrationArea");
			fields[77] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-PATIENTREFRESHRATE", "PatientRefreshRate");
			fields[78] = new ims.framework.ReportField(this.context, "_cv_Emergency.TrackingAreaForSendToAreaVo", "BO-1087100001-AREATYPE", "AreaType");
			fields[79] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-ID", "ID_Patient");
			fields[80] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-SEX", "Sex");
			fields[81] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-DOB", "Dob");
			fields[82] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-DOD", "Dod");
			fields[83] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-RELIGION", "Religion");
			fields[84] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-ISACTIVE", "IsActive");
			fields[85] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[86] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[87] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-SCN", "SCN");
			fields[88] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[89] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[90] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[91] = new ims.framework.ReportField(this.context, "_cv_Emergency.SelectedPatient", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[92] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__patientToSave_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[93] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__patientToSave_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[94] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__patientToSave_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[95] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__patientToSave_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[96] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__patientToSave_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[97] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[98] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-CARESPELL", "CareSpell");
			fields[99] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-SPECIALTY", "Specialty");
			fields[100] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[101] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-STARTDATE", "StartDate");
			fields[102] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-ENDDATE", "EndDate");
			fields[103] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__episodeToSave_" + componentIdentifier, "BO-1004100018-CURRENTREFERRAL", "CurrentReferral");
			fields[104] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-ID", "ID_CareContext");
			fields[105] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-CONTEXT", "Context");
			fields[106] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[107] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[108] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[109] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[110] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[111] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[112] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-BEDNUMBER", "BedNumber");
			fields[113] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careContextToSave_" + componentIdentifier, "BO-1004100019-DISCHARGEREASON", "DischargeReason");
			fields[114] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyEpisodeToSave_" + componentIdentifier, "BO-1004100024-ID", "ID_EmergencyEpisode");
			fields[115] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyEpisodeToSave_" + componentIdentifier, "BO-1004100024-INJURYDATETIME", "InjuryDateTime");
			fields[116] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyEpisodeToSave_" + componentIdentifier, "BO-1004100024-SOURCEOFREFERRAL", "SourceOfReferral");
			fields[117] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyEpisodeToSave_" + componentIdentifier, "BO-1004100024-EPISODEOFCARE", "EpisodeOfCare");
			fields[118] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyEpisodeToSave_" + componentIdentifier, "BO-1004100024-PATIENT", "Patient");
			fields[119] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ID", "ID_EmergencyAttendance");
			fields[120] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ARRIVALDATETIME", "ArrivalDateTime");
			fields[121] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-REGISTRATIONDATETIME", "RegistrationDateTime");
			fields[122] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ATTENDANCETYPE", "AttendanceType");
			fields[123] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-CARECONTEXT", "CareContext");
			fields[124] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-EMERGENCYEPISODE", "EmergencyEpisode");
			fields[125] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ISUNKNOWNPATIENT", "IsUnknownPatient");
			fields[126] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-PATIENT", "Patient");
			fields[127] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-EPISODE", "Episode");
			fields[128] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ISQUICKREGISTRATION", "IsQuickRegistration");
			fields[129] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ISEXPECTEDARRIVAL", "IsExpectedArrival");
			fields[130] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-ISMAJORINCIDENT", "IsMajorIncident");
			fields[131] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-EXPECTEDARRIVALDATETIME", "ExpectedArrivalDateTime");
			fields[132] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-AGEATATTENDANCE", "AgeAtAttendance");
			fields[133] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-REGISTERINGMOS", "RegisteringMOS");
			fields[134] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__emergencyAttendanceToSave_" + componentIdentifier, "BO-1004100025-COMMENTS", "Comments");
			fields[135] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careSpellToSave_" + componentIdentifier, "BO-1004100017-ID", "ID_CareSpell");
			fields[136] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careSpellToSave_" + componentIdentifier, "BO-1004100017-STARTDATE", "StartDate");
			fields[137] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careSpellToSave_" + componentIdentifier, "BO-1004100017-ENDDATE", "EndDate");
			fields[138] = new ims.framework.ReportField(this.context, prefix + "_lv_Emergency.QuickRegistration.__internal_x_context__careSpellToSave_" + componentIdentifier, "BO-1004100017-PATIENT", "Patient");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
