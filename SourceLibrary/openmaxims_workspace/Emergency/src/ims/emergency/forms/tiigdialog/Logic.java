//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 4471.18200)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.emergency.forms.tiigdialog;

import ims.emergency.vo.TIIGVo;
import ims.emergency.vo.emergencyepisodeliteVo;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		//WDEV-16637
		if (args!=null && args.length>0 && args[0]!=null && args[0] instanceof FormMode && FormMode.VIEW.equals((FormMode)args[0]))
		{
			form.setMode((FormMode) args[0]);
		}
		
		populateScreenFromDate(form.getGlobalContext().Emergency.getTIIG());
	}
	
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	
	protected void onBtnOKClick() throws ims.framework.exceptions.PresentationLogicException
	{
		emergencyepisodeliteVo record = populateDataFromScreen(form.getGlobalContext().Emergency.getTIIG());
		form.getGlobalContext().Emergency.setTIIG(record);
		engine.close(DialogResult.OK);
	}
	
	protected void onCmbDrinkPriorIncidentValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		// TODO Add your code here.
	}
	
	protected void onCmbAssaultLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		// TODO Add your code here.
	}
	
	protected void onCmbAssaultWeaponValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		// TODO Add your code here.
	}
	private emergencyepisodeliteVo populateDataFromScreen(emergencyepisodeliteVo record)
	{
		if(	record == null)
			record = new emergencyepisodeliteVo();
		
		record.setInjuryDateTime(form.dtimIncidentDateTime().getValue());
		record.setIncidentLocation(form.cmbIncidentLocation().getValue());
		
		TIIGVo tiigVo = record.getTiig();
		if(	tiigVo == null)
			tiigVo = new TIIGVo();
		
		tiigVo.setHadPatientConsumedAlcohol(form.cmbHadPatientConsumedAlcohol().getValue());
		tiigVo.setAssaultWeapon(form.cmbAssaultWeapon().getValue());	
		tiigVo.setAssaultWeaponDetails(form.txtAssaultWeapon().getValue());
		tiigVo.setAssaultLocation(form.cmbAssaultLocation().getValue());
		tiigVo.setAssaultLocationDetails(form.txtAssaultLocation().getValue());
		tiigVo.setAttackerHadConsumedAlcohol(form.cmbAttackerHadConsumedAlcohol().getValue());
		tiigVo.setConsumedOrPurchasedAlcoholFrom(form.cmbDrinkPriorIncident().getValue());
		tiigVo.setGenderofAttacker(form.cmbGenderOfAttacker().getValue());
		tiigVo.setIntendToInformPolice(form.cmbIntendedToInformPolice().getValue());
		tiigVo.setNumberOfAttackers(form.cmbNumberOfAttackers().getValue());
		tiigVo.setPreviouslyAssulatedByAttacker(form.cmbPatientPreviously().getValue());
		tiigVo.setRelationshipToAttacker(form.cmbRelationshipToAttacker().getValue());
		tiigVo.setLastDrinkLocationDetails(form.txtDrinkPriorIncident().getValue());
		
		record.setTiig(tiigVo);
		
		return record;
		
		
		
		
	}
	private void populateScreenFromDate(emergencyepisodeliteVo episodeVo)
	{
		clear();
		if( episodeVo == null)
			return;
		form.dtimIncidentDateTime().setValue(episodeVo.getInjuryDateTime());
		form.cmbIncidentLocation().setValue(episodeVo.getIncidentLocation());
		
		if(	episodeVo.getTiigIsNotNull())
		{
			form.cmbHadPatientConsumedAlcohol().setValue(episodeVo.getTiig().getHadPatientConsumedAlcohol());
			
			form.cmbAssaultWeapon().setValue(episodeVo.getTiig().getAssaultWeapon());
			form.txtAssaultWeapon().setValue(episodeVo.getTiig().getAssaultWeaponDetails());
			form.cmbAssaultLocation().setValue(episodeVo.getTiig().getAssaultLocation());
			form.txtAssaultLocation().setValue(episodeVo.getTiig().getAssaultLocationDetails());
			
			form.cmbAttackerHadConsumedAlcohol().setValue(episodeVo.getTiig().getAttackerHadConsumedAlcohol());
			form.cmbDrinkPriorIncident().setValue(episodeVo.getTiig().getConsumedOrPurchasedAlcoholFrom());
			form.cmbGenderOfAttacker().setValue(episodeVo.getTiig().getGenderofAttacker());
			
			
			form.cmbIntendedToInformPolice().setValue(episodeVo.getTiig().getIntendToInformPolice());
			form.cmbNumberOfAttackers().setValue(episodeVo.getTiig().getNumberOfAttackers());
			form.cmbPatientPreviously().setValue(episodeVo.getTiig().getPreviouslyAssulatedByAttacker());
			form.cmbRelationshipToAttacker().setValue(episodeVo.getTiig().getRelationshipToAttacker());
			form.txtDrinkPriorIncident().setValue(episodeVo.getTiig().getLastDrinkLocationDetails());
			
			
		}
		
	}
	private void clear()
	{
		form.cmbHadPatientConsumedAlcohol().setValue(null);
		form.dtimIncidentDateTime().setValue(null);
		form.cmbIncidentLocation().setValue(null);
		
		form.cmbAssaultLocation().setValue(null);
		form.cmbAssaultWeapon().setValue(null);
		form.cmbAttackerHadConsumedAlcohol().setValue(null);
		form.cmbDrinkPriorIncident().setValue(null);
		form.cmbGenderOfAttacker().setValue(null);
		form.cmbHadPatientConsumedAlcohol().setValue(null);
		form.cmbIncidentLocation().setValue(null);
		form.cmbIntendedToInformPolice().setValue(null);
		form.cmbNumberOfAttackers().setValue(null);
		form.cmbPatientPreviously().setValue(null);
		form.cmbRelationshipToAttacker().setValue(null);
		form.txtAssaultLocation().setValue(null);
		form.txtAssaultWeapon().setValue(null);
		form.txtDrinkPriorIncident().setValue(null);
	}

	@Override
	//WDEV-16637
	protected void onBtnCloseClick() throws PresentationLogicException
	{
		engine.close(DialogResult.ABORT);
	}
}
