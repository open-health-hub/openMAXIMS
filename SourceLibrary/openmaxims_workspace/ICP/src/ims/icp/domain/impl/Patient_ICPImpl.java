//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 4091.21781)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.icp.domain.impl;

import ims.icp.domain.base.impl.BasePatient_ICPImpl;
import ims.icp.vo.PatientICPAction_PresentationVoCollection;
import ims.icp.vo.Patient_ICP_LiteVo;
import ims.icp.vo.domain.PatientICPAction_PresentationVoAssembler;
import ims.icp.vo.domain.Patient_ICP_LiteVoAssembler;
import ims.icps.instantiation.domain.objects.PatientICP;
import ims.icps.instantiation.vo.PatientICPActionRefVo;
import ims.icps.instantiation.vo.PatientICPRefVo;

import java.util.ArrayList;

public class Patient_ICPImpl extends BasePatient_ICPImpl
{
	private static final long serialVersionUID = 1L;

	
	public Patient_ICP_LiteVo getPatientICP(PatientICPRefVo icp)
	{
		if (icp == null || icp.getID_PatientICP() == null)
			return null;
		
		return Patient_ICP_LiteVoAssembler.create((ims.icps.instantiation.domain.objects.PatientICP) getDomainFactory().getDomainObject(PatientICP.class, icp.getID_PatientICP()));
	}

	
	public PatientICPAction_PresentationVoCollection getLinkedPatientICPActions(PatientICPActionRefVo patientAction)
	{
		if (patientAction == null || patientAction.getID_PatientICPAction() == null)
			return null;
		
		StringBuilder query = new StringBuilder();
		
		ArrayList<String> paramNames = new ArrayList<String>();
		ArrayList<Object> paramValues = new ArrayList<Object>();
		
		query.append("SELECT patAction FROM PatientICPAction AS patAction LEFT JOIN patAction.action AS action LEFT JOIN patAction.iCP AS icp, ");
		query.append(" PatientICPAction AS markPatAction LEFT JOIN markPatAction.action AS markAction LEFT JOIN markAction.clinicalDetailActions AS linkedAction LEFT JOIN markPatAction.iCP AS markICP ");
		query.append(" WHERE markPatAction.id = :MARK_ACTION_ID AND icp.id = markICP.id AND action.id = linkedAction.id");
		
		paramNames.add("MARK_ACTION_ID");
		paramValues.add(patientAction.getID_PatientICPAction());
		
		return PatientICPAction_PresentationVoAssembler.createPatientICPAction_PresentationVoCollectionFromPatientICPAction(getDomainFactory().find(query.toString(), paramNames, paramValues));
	}
}
