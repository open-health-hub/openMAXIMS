//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.70 build 3467.22451)
// Copyright (C) 1995-2009 IMS MAXIMS. All rights reserved.

package ims.icp.domain.impl;

import ims.core.vo.lookups.PreActiveActiveInactiveStatus;
import ims.framework.exceptions.CodingRuntimeException;
import ims.icp.domain.base.impl.BaseSelectOrderEntryTemplateImpl;
import ims.ocrr.vo.OrderEntryTemplateLiteVoCollection;
import ims.ocrr.vo.domain.OrderEntryTemplateLiteVoAssembler;

import java.util.List;

public class SelectOrderEntryTemplateImpl extends BaseSelectOrderEntryTemplateImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* listActiveOrderEntryTemplatesByName
	*/
	public OrderEntryTemplateLiteVoCollection listActiveOrderEntryTemplatesByName(String name)
	{
		if (name == null || name.equals(""))
			throw new CodingRuntimeException("name is null or empty in method listActiveOrderEntryTemplatesByName");
		
		name.replaceAll("%", "");
		List templates = getDomainFactory().find("from OrderEntryTemplate oet where oet.activeStatus = :status and upper(oet.formName) like :name", new String[]{"status", "name"}, new Object[]{getDomLookup(PreActiveActiveInactiveStatus.ACTIVE),name.toUpperCase() + "%"});
		return OrderEntryTemplateLiteVoAssembler.createOrderEntryTemplateLiteVoCollectionFromOrderEntryTemplate(templates);
	}
}
