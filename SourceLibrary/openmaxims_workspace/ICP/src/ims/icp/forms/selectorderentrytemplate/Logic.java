//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.70 build 3467.22451)
// Copyright (C) 1995-2009 IMS MAXIMS. All rights reserved.

package ims.icp.forms.selectorderentrytemplate;

import ims.framework.enumerations.DialogResult;
import ims.icp.forms.selectorderentrytemplate.GenForm.grdTemplatesRow;
import ims.ocrr.vo.OrderEntryTemplateBaseVo;
import ims.ocrr.vo.OrderEntryTemplateBaseVoCollection;
import ims.ocrr.vo.OrderEntryTemplateLiteVo;
import ims.ocrr.vo.OrderEntryTemplateLiteVoCollection;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		updateControlState();
	}
	
	private void updateControlState()
	{
		form.btnSelect().setVisible(form.grdTemplates().getValue() != null);
	}
	
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	@Override
	protected void onBtnSelectClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().ICP.setLinkedOrderEntryTemplate(form.grdTemplates().getValue());
		form.getGlobalContext().ICP.setLinkedItem(form.grdTemplates().getValue());
		
		engine.close(DialogResult.OK);
	}
	@Override
	protected void onGrdTemplatesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		updateControlState();
	}
	@Override
	protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.txtName().setValue(null);
		form.grdTemplates().getRows().clear();
		updateControlState();
	}
	@Override
	protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.grdTemplates().getRows().clear();
		
		if(form.txtName().getValue() == null)
		{
			engine.showErrors(new String[]{"Order Entry Template is mandatory"});
			return;
		}
		
		OrderEntryTemplateLiteVoCollection voCollTemplates = domain.listActiveOrderEntryTemplatesByName(form.txtName().getValue());
		if(voCollTemplates != null)
		{
			for(OrderEntryTemplateLiteVo voTemplate : voCollTemplates)
			{
				grdTemplatesRow row = form.grdTemplates().getRows().newRow();
				row.setcolName(voTemplate.getFormName());
				row.setValue(voTemplate);
			}
			
			if(voCollTemplates.size() == 0)
				engine.showMessage("No matching records found.");
		}
	}
}
