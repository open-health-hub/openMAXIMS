//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.52 build 2508.29436)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.core.domain.impl;

import ims.clinical.domain.objects.PatientHomeSituation;
import ims.core.admin.vo.CareContextRefVo;
import ims.core.domain.SocialHistory;
import ims.core.domain.base.impl.BasePatientHomeSituationImpl;
import ims.core.patient.vo.PatientRefVo;
import ims.core.vo.PatientHomeSituationVo;
import ims.core.vo.SocialHistoryVo;
import ims.core.vo.domain.PatientHomeSituationVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;

public class PatientHomeSituationImpl extends BasePatientHomeSituationImpl
{

	private static final long serialVersionUID = 1L;

	public ims.core.vo.PatientHomeSituationVo saveHomeSituation(ims.core.vo.PatientHomeSituationVo homesituation) throws ims.domain.exceptions.StaleObjectException
	{	
		if(homesituation == null)
			throw new CodingRuntimeException("Cannot save null homesituation");
		if(!homesituation.isValidated())
			throw new CodingRuntimeException("PatientHomeSituationVo has not been validated");
		
		if (homesituation.getID_PatientHomeSituation() == null && getHomeSituationByCareContext(homesituation.getCareContext()) != null)
			throw new StaleObjectException(null, "A Home Situation record already exists for this Care Context, the screen will be refreshed.");
		
		DomainFactory factory = getDomainFactory();
		PatientHomeSituation doHomeSituation = PatientHomeSituationVoAssembler.extractPatientHomeSituation(factory, homesituation);
		factory.save(doHomeSituation);
		
		return PatientHomeSituationVoAssembler.create(doHomeSituation);
	}

	public PatientHomeSituationVo getHomeSituationByCareContext(CareContextRefVo careContext)
	{
		if (careContext == null)
			throw new RuntimeException("Cannot get PatientHomeSituationVo for null CareContextRefVo");

		String hql = new String("from PatientHomeSituation p1_1 where p1_1.careContext.id = :CARECONTEXT_ID");

		java.util.List list = getDomainFactory().find(hql, "CARECONTEXT_ID", careContext.getID_CareContext());

		if (list.size() == 0)
			return null;
		else if (list.size() > 1)
			throw new RuntimeException("More than one Home Situation for current CareContext found");

		return PatientHomeSituationVoAssembler.createPatientHomeSituationVoCollectionFromPatientHomeSituation(list).get(0);
	}

	public SocialHistoryVo getSocialHistoryByPatient(PatientRefVo patient)
	{
		SocialHistory impl = (SocialHistory) getDomainImpl(SocialHistoryImpl.class);
		return impl.getSocialHistoryByPatient(patient);
	}
}
