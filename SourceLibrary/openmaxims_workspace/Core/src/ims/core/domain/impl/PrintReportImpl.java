//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.39 build 2166.24836)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.core.domain.impl;

import ims.admin.domain.FormReports;
import ims.admin.domain.impl.FormReportsImpl;
import ims.admin.vo.ReportVoCollection;
import ims.core.documents.domain.objects.PatientDocument;
import ims.core.vo.PatientDocumentVo;
import ims.core.vo.domain.PatientDocumentVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.impl.DomainImpl;

public class PrintReportImpl extends DomainImpl implements ims.core.domain.PrintReport, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	/**
	* listReports
	*/
	public ReportVoCollection listReports(Integer formId)
	{
		FormReports intf = (FormReports)this.getDomainImpl(FormReportsImpl.class);
		return intf.listAssignedReports(formId);
	}

	//WDEV-17772
	public Boolean savePatientDocument(PatientDocumentVo patientDocumentToSave) throws StaleObjectException 
	{
		if (patientDocumentToSave == null)
			throw new DomainRuntimeException("Invalid PatientDocument record");
		if (!patientDocumentToSave.isValidated())
			throw new DomainRuntimeException("PatientDocument record not validated");
		
		DomainFactory factory = getDomainFactory();

		// Save PatientDocumet record
		PatientDocument domainPatientDocument = PatientDocumentVoAssembler.extractPatientDocument(factory, patientDocumentToSave);
		factory.save(domainPatientDocument);
		
		return true;
	}	
}
