//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.adtdischargedetailscomponent;

public abstract class BaseLogic extends Handlers implements IComponent
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.core.domain.ADTDischargeDetailsComponent.class;
	}
	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form, ims.core.domain.ADTDischargeDetailsComponent domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	public void setMode(ims.framework.enumerations.FormMode mode)
	{
		form.setMode(mode);
	}
	public ims.framework.enumerations.FormMode getMode()
	{
		return form.getMode();
	}
	protected final void oncmbDischargeReasonValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.cmbDischargeReason().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.DischargeReason existingInstance = (ims.core.vo.lookups.DischargeReason)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbDischargeReasonLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.DischargeReason)
		{
			ims.core.vo.lookups.DischargeReason instance = (ims.core.vo.lookups.DischargeReason)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbDischargeReasonLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.DischargeReason existingInstance = (ims.core.vo.lookups.DischargeReason)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.cmbDischargeReason().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbDischargeReasonLookup()
	{
		this.form.cmbDischargeReason().clear();
		ims.core.vo.lookups.DischargeReasonCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getDischargeReason(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.cmbDischargeReason().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbDischargeReasonLookupValue(int id)
	{
		ims.core.vo.lookups.DischargeReason instance = ims.core.vo.lookups.LookupHelper.getDischargeReasonInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.cmbDischargeReason().setValue(instance);
	}
	protected final void defaultcmbDischargeReasonLookupValue()
	{
		this.form.cmbDischargeReason().setValue((ims.core.vo.lookups.DischargeReason)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.DischargeReason.class, engine.getFormName().getID(), ims.core.vo.lookups.DischargeReason.TYPE_ID));
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.core.domain.ADTDischargeDetailsComponent domain;
}
