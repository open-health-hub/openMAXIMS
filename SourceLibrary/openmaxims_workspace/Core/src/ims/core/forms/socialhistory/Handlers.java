//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.socialhistory;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbDietaryLookup();
	abstract protected void defaultcmbDietaryLookupValue();
	abstract protected void bindcmbOccupationStatusLookup();
	abstract protected void defaultcmbOccupationStatusLookupValue();
	abstract protected void bindcmbMaritalStatLookup();
	abstract protected void defaultcmbMaritalStatLookupValue();
	abstract protected void bindcmbFitToCareForPatientLookup();
	abstract protected void defaultcmbFitToCareForPatientLookupValue();
	abstract protected void bindcmbSomeoneToTakeHomeLookup();
	abstract protected void defaultcmbSomeoneToTakeHomeLookupValue();
	abstract protected void bindgrdSmokingDetailsColStatusLookup();
	abstract protected void bindgrdSmokingDetailsColWhatLookup();
	abstract protected void bindcmbSmokingStatusLookup();
	abstract protected void defaultcmbSmokingStatusLookupValue();
	abstract protected void bindcmbAlcoholStatusLookup();
	abstract protected void defaultcmbAlcoholStatusLookupValue();
	abstract protected void bindcmbOccupationLookup();
	abstract protected void defaultcmbOccupationLookupValue();
	abstract protected void bindcmbLivesWithLookup();
	abstract protected void defaultcmbLivesWithLookupValue();
	abstract protected void bindansIVUserLookup();
	abstract protected void defaultansIVUserLookupValue();
	abstract protected void bindgrdIllicitDrugsColumnStatusLookup();
	abstract protected void bindgrdIllicitDrugsColumnDrugLookup();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbDietaryValueSet(Object value);
	abstract protected void oncmbOccupationStatusValueSet(Object value);
	abstract protected void oncmbMaritalStatValueSet(Object value);
	abstract protected void onCmbMaritalStatValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbFitToCareForPatientValueSet(Object value);
	abstract protected void oncmbSomeoneToTakeHomeValueSet(Object value);
	abstract protected void onGrdSmokingDetailsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdSmokingDetailsGridComboBoxSelectionChanged(int column, GenForm.grdSmokingDetailsRow row, Object value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSmokingStatusValueSet(Object value);
	abstract protected void onCmbSmokingStatusValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbAlcoholStatusValueSet(Object value);
	abstract protected void onCmbAlcoholStatusValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbOccupationValueSet(Object value);
	abstract protected void onCmbOccupationValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbLivesWithValueSet(Object value);
	abstract protected void onBtnUpdateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onansIVUserValueSet(Object value);
	abstract protected void onGrdIllicitDrugsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdIllicitDrugsGridComboBoxSelectionChanged(int column, GenForm.grdIllicitDrugsRow row, Object value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRecbrSocialHistoryValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.cmbDietary().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDietaryValueSet(value);
			}
		});
		this.form.cmbOccupationStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOccupationStatusValueSet(value);
			}
		});
		this.form.cmbMaritalStat().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMaritalStatValueSet(value);
			}
		});
		this.form.cmbMaritalStat().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbMaritalStatValueChanged();
			}
		});
		this.form.cmbFitToCareForPatient().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbFitToCareForPatientValueSet(value);
			}
		});
		this.form.cmbSomeoneToTakeHome().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSomeoneToTakeHomeValueSet(value);
			}
		});
		this.form.grdSmokingDetails().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdSmokingDetailsSelectionChanged();
			}
		});
		this.form.grdSmokingDetails().setGridComboBoxSelectionChangedEvent(new GridComboBoxSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, Object value) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdSmokingDetailsGridComboBoxSelectionChanged(column, new GenForm.grdSmokingDetailsRow(row), value);
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.cmbSmokingStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSmokingStatusValueSet(value);
			}
		});
		this.form.cmbSmokingStatus().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSmokingStatusValueChanged();
			}
		});
		this.form.cmbAlcoholStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAlcoholStatusValueSet(value);
			}
		});
		this.form.cmbAlcoholStatus().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbAlcoholStatusValueChanged();
			}
		});
		this.form.cmbOccupation().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOccupationValueSet(value);
			}
		});
		this.form.cmbOccupation().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbOccupationValueChanged();
			}
		});
		this.form.cmbLivesWith().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLivesWithValueSet(value);
			}
		});
		this.form.btnUpdate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.ansIVUser().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansIVUserValueSet(value);
			}
		});
		this.form.grdIllicitDrugs().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdIllicitDrugsSelectionChanged();
			}
		});
		this.form.grdIllicitDrugs().setGridComboBoxSelectionChangedEvent(new GridComboBoxSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, Object value) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdIllicitDrugsGridComboBoxSelectionChanged(column, new GenForm.grdIllicitDrugsRow(row), value);
			}
		});
		this.form.recbrSocialHistory().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRecbrSocialHistoryValueChanged();
			}
		});
		this.form.getContextMenus().getGenericGridAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Add, sender);
			}
		});
		this.form.getContextMenus().getGenericGridUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Update, sender);
			}
		});
		this.form.getContextMenus().getGenericGridRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Remove, sender);
			}
		});
		this.form.getContextMenus().getGenericGridViewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.View, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveUpItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveUp, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveDownItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveDown, sender);
			}
		});
		this.form.getContextMenus().getGenericGridReplaceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Replace, sender);
			}
		});
		this.form.getContextMenus().getGenericGridConfirmItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Confirm, sender);
			}
		});
		this.form.getContextMenus().getGenericGridEDIT_VIEW_ICP_ACTIONSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.EDIT_VIEW_ICP_ACTIONS, sender);
			}
		});
		this.form.getContextMenus().Core.getSocialHistoryGridAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.SocialHistoryGrid.Add, sender);
			}
		});
		this.form.getContextMenus().Core.getSocialHistoryGridEditItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.SocialHistoryGrid.Edit, sender);
			}
		});
		this.form.getContextMenus().Core.getSocialHistoryGridRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.SocialHistoryGrid.Remove, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbDietaryLookup();
		bindcmbOccupationStatusLookup();
		bindcmbMaritalStatLookup();
		bindcmbFitToCareForPatientLookup();
		bindcmbSomeoneToTakeHomeLookup();
		bindgrdSmokingDetailsColStatusLookup();
		bindgrdSmokingDetailsColWhatLookup();
		bindcmbSmokingStatusLookup();
		bindcmbAlcoholStatusLookup();
		bindcmbOccupationLookup();
		bindcmbLivesWithLookup();
		bindansIVUserLookup();
		bindgrdIllicitDrugsColumnStatusLookup();
		bindgrdIllicitDrugsColumnDrugLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbDietaryLookup();
		bindcmbOccupationStatusLookup();
		bindcmbMaritalStatLookup();
		bindcmbFitToCareForPatientLookup();
		bindcmbSomeoneToTakeHomeLookup();
		bindgrdSmokingDetailsColStatusLookup();
		bindgrdSmokingDetailsColWhatLookup();
		bindcmbSmokingStatusLookup();
		bindcmbAlcoholStatusLookup();
		bindcmbOccupationLookup();
		bindcmbLivesWithLookup();
		bindansIVUserLookup();
		bindgrdIllicitDrugsColumnStatusLookup();
		bindgrdIllicitDrugsColumnDrugLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbDietaryLookupValue();
		defaultcmbOccupationStatusLookupValue();
		defaultcmbMaritalStatLookupValue();
		defaultcmbFitToCareForPatientLookupValue();
		defaultcmbSomeoneToTakeHomeLookupValue();
		defaultcmbSmokingStatusLookupValue();
		defaultcmbAlcoholStatusLookupValue();
		defaultcmbOccupationLookupValue();
		defaultcmbLivesWithLookupValue();
		defaultansIVUserLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
