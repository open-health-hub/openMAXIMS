//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.patienthomesituation;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbFitToCareLookup();
	abstract protected void defaultcmbFitToCareLookupValue();
	abstract protected void bindcmbTakeHomeLookup();
	abstract protected void defaultcmbTakeHomeLookupValue();
	abstract protected void bindcmbLivesLookup();
	abstract protected void defaultcmbLivesLookupValue();
	abstract protected void bindcmbShowerLocationLookup();
	abstract protected void defaultcmbShowerLocationLookupValue();
	abstract protected void bindcmbToiletLocationLookup();
	abstract protected void defaultcmbToiletLocationLookupValue();
	abstract protected void bindcmbBathroomLocationLookup();
	abstract protected void defaultcmbBathroomLocationLookupValue();
	abstract protected void bindcmbLiftLookup();
	abstract protected void defaultcmbLiftLookupValue();
	abstract protected void bindcmbSupervisedByLookup();
	abstract protected void defaultcmbSupervisedByLookupValue();
	abstract protected void bindcmbSideLookup();
	abstract protected void defaultcmbSideLookupValue();
	abstract protected void bindcmbRailsLookup();
	abstract protected void defaultcmbRailsLookupValue();
	abstract protected void bindcmbStairsLookup();
	abstract protected void defaultcmbStairsLookupValue();
	abstract protected void bindcmbFloorLookup();
	abstract protected void defaultcmbFloorLookupValue();
	abstract protected void bindcmbOwnershipLookup();
	abstract protected void defaultcmbOwnershipLookupValue();
	abstract protected void bindcmbTypeAccomLookup();
	abstract protected void defaultcmbTypeAccomLookupValue();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbFitToCareValueSet(Object value);
	abstract protected void oncmbTakeHomeValueSet(Object value);
	abstract protected void oncmbLivesValueSet(Object value);
	abstract protected void oncmbShowerLocationValueSet(Object value);
	abstract protected void oncmbToiletLocationValueSet(Object value);
	abstract protected void oncmbBathroomLocationValueSet(Object value);
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbLiftValueSet(Object value);
	abstract protected void oncmbSupervisedByValueSet(Object value);
	abstract protected void oncmbSideValueSet(Object value);
	abstract protected void oncmbRailsValueSet(Object value);
	abstract protected void oncmbStairsValueSet(Object value);
	abstract protected void oncmbFloorValueSet(Object value);
	abstract protected void oncmbOwnershipValueSet(Object value);
	abstract protected void oncmbTypeAccomValueSet(Object value);

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.cmbFitToCare().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbFitToCareValueSet(value);
			}
		});
		this.form.cmbTakeHome().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTakeHomeValueSet(value);
			}
		});
		this.form.cmbLives().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLivesValueSet(value);
			}
		});
		this.form.cmbShowerLocation().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbShowerLocationValueSet(value);
			}
		});
		this.form.cmbToiletLocation().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbToiletLocationValueSet(value);
			}
		});
		this.form.cmbBathroomLocation().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbBathroomLocationValueSet(value);
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnUpdate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateClick();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.cmbLift().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLiftValueSet(value);
			}
		});
		this.form.cmbSupervisedBy().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSupervisedByValueSet(value);
			}
		});
		this.form.cmbSide().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSideValueSet(value);
			}
		});
		this.form.cmbRails().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbRailsValueSet(value);
			}
		});
		this.form.cmbStairs().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStairsValueSet(value);
			}
		});
		this.form.cmbFloor().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbFloorValueSet(value);
			}
		});
		this.form.cmbOwnership().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOwnershipValueSet(value);
			}
		});
		this.form.cmbTypeAccom().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTypeAccomValueSet(value);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbFitToCareLookup();
		bindcmbTakeHomeLookup();
		bindcmbLivesLookup();
		bindcmbShowerLocationLookup();
		bindcmbToiletLocationLookup();
		bindcmbBathroomLocationLookup();
		bindcmbLiftLookup();
		bindcmbSupervisedByLookup();
		bindcmbSideLookup();
		bindcmbRailsLookup();
		bindcmbStairsLookup();
		bindcmbFloorLookup();
		bindcmbOwnershipLookup();
		bindcmbTypeAccomLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbFitToCareLookup();
		bindcmbTakeHomeLookup();
		bindcmbLivesLookup();
		bindcmbShowerLocationLookup();
		bindcmbToiletLocationLookup();
		bindcmbBathroomLocationLookup();
		bindcmbLiftLookup();
		bindcmbSupervisedByLookup();
		bindcmbSideLookup();
		bindcmbRailsLookup();
		bindcmbStairsLookup();
		bindcmbFloorLookup();
		bindcmbOwnershipLookup();
		bindcmbTypeAccomLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbFitToCareLookupValue();
		defaultcmbTakeHomeLookupValue();
		defaultcmbLivesLookupValue();
		defaultcmbShowerLocationLookupValue();
		defaultcmbToiletLocationLookupValue();
		defaultcmbBathroomLocationLookupValue();
		defaultcmbLiftLookupValue();
		defaultcmbSupervisedByLookupValue();
		defaultcmbSideLookupValue();
		defaultcmbRailsLookupValue();
		defaultcmbStairsLookupValue();
		defaultcmbFloorLookupValue();
		defaultcmbOwnershipLookupValue();
		defaultcmbTypeAccomLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
