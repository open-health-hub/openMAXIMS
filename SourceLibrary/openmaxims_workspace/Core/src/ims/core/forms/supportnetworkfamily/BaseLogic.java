//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.supportnetworkfamily;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.core.domain.SupportNetworkFamily.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.core.domain.SupportNetworkFamily domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void oncmbEmergencyValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnFamilySupport().cmbEmergency().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.SupportNetworkEmergencyContact existingInstance = (ims.core.vo.lookups.SupportNetworkEmergencyContact)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbEmergencyLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.SupportNetworkEmergencyContact)
		{
			ims.core.vo.lookups.SupportNetworkEmergencyContact instance = (ims.core.vo.lookups.SupportNetworkEmergencyContact)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbEmergencyLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.SupportNetworkEmergencyContact existingInstance = (ims.core.vo.lookups.SupportNetworkEmergencyContact)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnFamilySupport().cmbEmergency().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbEmergencyLookup()
	{
		this.form.ctnFamilySupport().cmbEmergency().clear();
		ims.core.vo.lookups.SupportNetworkEmergencyContactCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getSupportNetworkEmergencyContact(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnFamilySupport().cmbEmergency().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbEmergencyLookupValue(int id)
	{
		ims.core.vo.lookups.SupportNetworkEmergencyContact instance = ims.core.vo.lookups.LookupHelper.getSupportNetworkEmergencyContactInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnFamilySupport().cmbEmergency().setValue(instance);
	}
	protected final void defaultcmbEmergencyLookupValue()
	{
		this.form.ctnFamilySupport().cmbEmergency().setValue((ims.core.vo.lookups.SupportNetworkEmergencyContact)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.SupportNetworkEmergencyContact.class, engine.getFormName().getID(), ims.core.vo.lookups.SupportNetworkEmergencyContact.TYPE_ID));
	}
	protected final void oncmbRelationshipValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnFamilySupport().cmbRelationship().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.SupportNetworkRelationship existingInstance = (ims.core.vo.lookups.SupportNetworkRelationship)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbRelationshipLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.SupportNetworkRelationship)
		{
			ims.core.vo.lookups.SupportNetworkRelationship instance = (ims.core.vo.lookups.SupportNetworkRelationship)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbRelationshipLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.SupportNetworkRelationship existingInstance = (ims.core.vo.lookups.SupportNetworkRelationship)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnFamilySupport().cmbRelationship().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbRelationshipLookup()
	{
		this.form.ctnFamilySupport().cmbRelationship().clear();
		ims.core.vo.lookups.SupportNetworkRelationshipCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getSupportNetworkRelationship(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnFamilySupport().cmbRelationship().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbRelationshipLookupValue(int id)
	{
		ims.core.vo.lookups.SupportNetworkRelationship instance = ims.core.vo.lookups.LookupHelper.getSupportNetworkRelationshipInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnFamilySupport().cmbRelationship().setValue(instance);
	}
	protected final void defaultcmbRelationshipLookupValue()
	{
		this.form.ctnFamilySupport().cmbRelationship().setValue((ims.core.vo.lookups.SupportNetworkRelationship)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.SupportNetworkRelationship.class, engine.getFormName().getID(), ims.core.vo.lookups.SupportNetworkRelationship.TYPE_ID));
	}
	protected void clearScreen()
	{
		this.form.ctnFamilySupport().chkFit().setValue(false);
		this.form.ctnFamilySupport().chkPermission().setValue(false);
		this.form.ctnFamilySupport().chkAware().setValue(false);
		this.form.ctnFamilySupport().txtName().setValue("");
		this.form.ctnFamilySupport().txtAddress().setValue("");
		this.form.ctnFamilySupport().txtEmailAddress().setValue("");
		this.form.ctnFamilySupport().txtWorkPhone().setValue("");
		this.form.ctnFamilySupport().txtHomePhone().setValue("");
		this.form.ctnFamilySupport().chkCarer().setValue(false);
		this.form.ctnFamilySupport().cmbEmergency().setValue(null);
		this.form.ctnFamilySupport().txtMobilrPhone().setValue("");
		this.form.ctnFamilySupport().cmbRelationship().setValue(null);
	}
	protected void populateScreenFromData(ims.core.vo.SupportNetworkFamily value)
	{
		clearScreen();
		if(value == null)
			return;

		if(value.getFitAndWellIsNotNull())
			this.form.ctnFamilySupport().chkFit().setValue(value.getFitAndWell().booleanValue());
		if(value.getPermissionToContactIsNotNull())
			this.form.ctnFamilySupport().chkPermission().setValue(value.getPermissionToContact().booleanValue());
		if(value.getAwareClientPositionIsNotNull())
			this.form.ctnFamilySupport().chkAware().setValue(value.getAwareClientPosition().booleanValue());
		this.form.ctnFamilySupport().txtName().setValue(value.getCarerNameIsNotNull() ? value.getCarerName(): null);
		this.form.ctnFamilySupport().txtAddress().setValue(value.getCarerAddressIsNotNull() ? value.getCarerAddress(): null);
		this.form.ctnFamilySupport().txtEmailAddress().setValue(value.getCarerEmailIsNotNull() ? value.getCarerEmail(): null);
		this.form.ctnFamilySupport().txtWorkPhone().setValue(value.getCarerWorkPhoneIsNotNull() ? value.getCarerWorkPhone(): null);
		this.form.ctnFamilySupport().txtHomePhone().setValue(value.getCarerHomePhoneIsNotNull() ? value.getCarerHomePhone(): null);
		if(value.getIsMainCarerIsNotNull())
			this.form.ctnFamilySupport().chkCarer().setValue(value.getIsMainCarer().booleanValue());
		this.form.ctnFamilySupport().cmbEmergency().setValue(value.getEmergencyContactOrderIsNotNull() ? value.getEmergencyContactOrder() : null);
		this.form.ctnFamilySupport().txtMobilrPhone().setValue(value.getCarerMobilePhoneIsNotNull() ? value.getCarerMobilePhone(): null);
		this.form.ctnFamilySupport().cmbRelationship().setValue(value.getCarerRelationshipIsNotNull() ? value.getCarerRelationship() : null);
	}
	protected ims.core.vo.SupportNetworkFamily populateDataFromScreen(ims.core.vo.SupportNetworkFamily value)
	{
		if(value == null)
			value = new ims.core.vo.SupportNetworkFamily();

		value.setFitAndWell(new Boolean(this.form.ctnFamilySupport().chkFit().getValue()));
		value.setPermissionToContact(new Boolean(this.form.ctnFamilySupport().chkPermission().getValue()));
		value.setAwareClientPosition(new Boolean(this.form.ctnFamilySupport().chkAware().getValue()));
		value.setCarerName(this.form.ctnFamilySupport().txtName().getValue());
		value.setCarerAddress(this.form.ctnFamilySupport().txtAddress().getValue());
		value.setCarerEmail(this.form.ctnFamilySupport().txtEmailAddress().getValue());
		value.setCarerWorkPhone(this.form.ctnFamilySupport().txtWorkPhone().getValue());
		value.setCarerHomePhone(this.form.ctnFamilySupport().txtHomePhone().getValue());
		value.setIsMainCarer(new Boolean(this.form.ctnFamilySupport().chkCarer().getValue()));
		value.setEmergencyContactOrder(this.form.ctnFamilySupport().cmbEmergency().getValue());
		value.setCarerMobilePhone(this.form.ctnFamilySupport().txtMobilrPhone().getValue());
		value.setCarerRelationship(this.form.ctnFamilySupport().cmbRelationship().getValue());

		return value;
	}
	protected ims.core.vo.SupportNetworkFamily populateDataFromScreen()
	{
		return populateDataFromScreen(new ims.core.vo.SupportNetworkFamily());
	}
	public void initialize() throws ims.framework.exceptions.FormOpenException
	{
	}
	public boolean allowNew()
	{
		return form.getMode() == ims.framework.enumerations.FormMode.VIEW && !form.isReadOnly();
	}
	public boolean allowUpdate()
	{
		return form.getMode() == ims.framework.enumerations.FormMode.VIEW && !form.isReadOnly();
	}
	public String[] validateUIRules()
	{
		return null;
	}
	public void clear()
	{
	}
	public void search()
	{
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.core.domain.SupportNetworkFamily domain;
}
