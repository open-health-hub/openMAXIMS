//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Sean Nesbitt using IMS Development Environment (version 1.39 build 2173.29356)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.therapies.domain.impl;

import java.util.ArrayList;
import ims.core.admin.vo.CareContextRefVo;
import ims.domain.impl.DomainImpl;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.DomainFactory;
import ims.therapies.vo.AdaptationsVoCollection;
import ims.therapies.vo.domain.AdaptationsVoAssembler;

public class AdaptationsImpl extends DomainImpl implements ims.therapies.domain.Adaptations, ims.domain.impl.Transactional
{
	/**
	* save an adaptation
	*/
	public ims.therapies.vo.AdaptationsVo save(ims.therapies.vo.AdaptationsVo voAdaptation) throws ims.domain.exceptions.StaleObjectException
	{
		if(!voAdaptation.isValidated())
		{
			throw new DomainRuntimeException("Adaptation Value Object has not been validated");
		}
		
		DomainFactory factory = getDomainFactory();		
		ims.therapies.domain.objects.Adaptations adaptBo = AdaptationsVoAssembler.extractAdaptations(factory,voAdaptation);
				 
		factory.save(adaptBo);
					
		return AdaptationsVoAssembler.create(adaptBo);		
		
	}
	public AdaptationsVoCollection listByCareContext(CareContextRefVo voCareContextRef)
	{
		DomainFactory factory = getDomainFactory();
		StringBuffer hql = new StringBuffer();
		String query = "from Adaptations ad ";
		ArrayList markers= new ArrayList();
		ArrayList values = new ArrayList();
		String andStr = " ";

		if(voCareContextRef != null)
		{
			hql.append(andStr + " ad.careContext.id = :cc");
			markers.add("cc");
			values.add(voCareContextRef.getID_CareContext());
		}
		
		if (markers.size() > 0) query += " where ";
		query += hql.toString();	
		
		java.util.List Adaptations = factory.find(query,markers,values);
		AdaptationsVoCollection voAdaptationsColl = AdaptationsVoAssembler.createAdaptationsVoCollectionFromAdaptations(Adaptations);
		
		return voAdaptationsColl;
	
	}
}
