//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.52 build 2508.29436)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.therapies.domain.impl;

import ims.admin.domain.MosAdmin;
import ims.admin.domain.impl.MosAdminImpl;
import ims.clinical.domain.ClinicalNoteDrawing;
import ims.clinical.domain.ClinicalNotes;
import ims.clinical.domain.impl.ClinicalNoteDrawingImpl;
import ims.clinical.domain.impl.ClinicalNotesImpl;
import ims.core.admin.vo.ClinicalContactRefVo;
import ims.core.clinical.vo.ClinicalNotesRefVo;
import ims.core.vo.ClinicalContactShortVo;
import ims.core.vo.ClinicalContactVo;
import ims.core.vo.ClinicalNotesVo;
import ims.core.vo.ClinicalNotesVoCollection;
import ims.core.vo.MemberOfStaffShortVo;
import ims.core.vo.MemberOfStaffVo;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.therapies.domain.base.impl.BaseSOAPNoteImpl;

public class SOAPNoteImpl extends BaseSOAPNoteImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* saveClinicalNotes
	 * @throws DomainInterfaceException 
	 * @throws UniqueKeyViolationException 
	*/
	public ims.core.vo.ClinicalNotesVo saveClinicalNotes(ims.core.vo.ClinicalNotesVo clinicalNotesVo) throws ims.domain.exceptions.StaleObjectException, DomainInterfaceException, UniqueKeyViolationException
	{
		ClinicalNoteDrawing impl = (ClinicalNoteDrawing) getDomainImpl(ClinicalNoteDrawingImpl.class);
		return impl.saveClinicalNotesOnly(clinicalNotesVo);
	}

	/**
	* getClinicalNotes
	*/
	public ims.core.vo.ClinicalNotesVo getClinicalNotes(ims.core.admin.vo.ClinicalContactRefVo contactVo)
	{
		ClinicalNotes impl = (ClinicalNotes) getDomainImpl(ClinicalNotesImpl.class);
		
		ClinicalNotesVoCollection ClinicalNotes = impl.getClinicalNotes(contactVo); //WDEV-15382
		
		if (ClinicalNotes != null && ClinicalNotes.size() > 0) //WDEV-16953
			return ClinicalNotes.get(0);
		
		return null;
	}

	/**
	* Save the SOAPVo
	*/
	public void saveSOAPsVo(ims.core.vo.SOAPVo voSOAP) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException
	{
		ClinicalNoteDrawing impl = (ClinicalNoteDrawing) getDomainImpl(ClinicalNoteDrawingImpl.class);
		impl.saveSOAPsVo(voSOAP);
	}

	/**
	* Get SOAPVo
	*/
	public ims.core.vo.SOAPVo getSOAPsVo(ims.core.clinical.vo.ClinicalNotesRefVo clinnoteRefVo)
	{
		ClinicalNoteDrawing impl = (ClinicalNoteDrawing) getDomainImpl(ClinicalNoteDrawingImpl.class);
		return impl.getSOAPsVo(clinnoteRefVo);
	}

	public ClinicalContactVo getClinicalContact(Integer nId) 
	{
		ClinicalNoteDrawing clinImpl = (ClinicalNoteDrawing)getDomainImpl(ClinicalNoteDrawingImpl.class);
		return clinImpl.getClinicalContact(nId);
	}
	
	public MemberOfStaffVo getMemberOfStaff(MemberOfStaffShortVo mos)
	{
		MosAdmin mosAdmin = (MosAdmin)getDomainImpl(MosAdminImpl.class);
		return mosAdmin.getMemberOfStaff(mos);
	}

	public ClinicalContactShortVo saveClinicalContact(ClinicalContactShortVo clinicalContactVo) throws StaleObjectException 
	{
		ClinicalNoteDrawing clinImpl = (ClinicalNoteDrawing)getDomainImpl(ClinicalNoteDrawingImpl.class);
		return clinImpl.saveClinicalContact(clinicalContactVo);
	}
	
	public ClinicalNotesVo getClinicalNotesForContact(ClinicalContactRefVo clinicalContactRefId) 
	{
		ClinicalNoteDrawing impl = (ClinicalNoteDrawing)getDomainImpl(ClinicalNoteDrawingImpl.class);
		return impl.getClinicalNotesForContact(clinicalContactRefId);
	}

	public ims.core.vo.ClinicalNotesVo getClinicalNote(ClinicalNotesRefVo clinicalNoteRefVo)
	{
		ClinicalNoteDrawing impl = (ClinicalNoteDrawing)getDomainImpl(ClinicalNoteDrawingImpl.class);
		return impl.getClinicalNotes(clinicalNoteRefVo.getID_ClinicalNotes());

	}

}
