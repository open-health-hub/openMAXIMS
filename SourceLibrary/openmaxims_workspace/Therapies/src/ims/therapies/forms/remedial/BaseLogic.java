//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.therapies.forms.remedial;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.therapies.domain.Remedial.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.therapies.domain.Remedial domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void oncmbLocationValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabHeader().cmbLocation().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialLocation existingInstance = (ims.spinalinjuries.vo.lookups.RemedialLocation)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbLocationLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialLocation)
		{
			ims.spinalinjuries.vo.lookups.RemedialLocation instance = (ims.spinalinjuries.vo.lookups.RemedialLocation)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbLocationLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialLocation existingInstance = (ims.spinalinjuries.vo.lookups.RemedialLocation)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabHeader().cmbLocation().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbLocationLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabHeader().cmbLocation().clear();
		ims.spinalinjuries.vo.lookups.RemedialLocationCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialLocation(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabHeader().cmbLocation().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbLocationLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialLocation instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialLocationInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabHeader().cmbLocation().setValue(instance);
	}
	protected final void defaultcmbLocationLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabHeader().cmbLocation().setValue((ims.spinalinjuries.vo.lookups.RemedialLocation)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialLocation.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialLocation.TYPE_ID));
	}
	protected final void bindgrdMaterialColMaterialLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().grdMaterial().ColMaterialComboBox().clear();
		ims.spinalinjuries.vo.lookups.MaterialCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getMaterial(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().grdMaterial().ColMaterialComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void oncmbActPositionValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActPosition().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialActPosition existingInstance = (ims.spinalinjuries.vo.lookups.RemedialActPosition)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbActPositionLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialActPosition)
		{
			ims.spinalinjuries.vo.lookups.RemedialActPosition instance = (ims.spinalinjuries.vo.lookups.RemedialActPosition)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbActPositionLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialActPosition existingInstance = (ims.spinalinjuries.vo.lookups.RemedialActPosition)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActPosition().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbActPositionLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActPosition().clear();
		ims.spinalinjuries.vo.lookups.RemedialActPositionCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialActPosition(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActPosition().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbActPositionLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialActPosition instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialActPositionInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActPosition().setValue(instance);
	}
	protected final void defaultcmbActPositionLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActPosition().setValue((ims.spinalinjuries.vo.lookups.RemedialActPosition)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialActPosition.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialActPosition.TYPE_ID));
	}
	protected final void oncmbSeqValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSeq().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialSequence existingInstance = (ims.spinalinjuries.vo.lookups.RemedialSequence)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbSeqLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialSequence)
		{
			ims.spinalinjuries.vo.lookups.RemedialSequence instance = (ims.spinalinjuries.vo.lookups.RemedialSequence)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbSeqLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialSequence existingInstance = (ims.spinalinjuries.vo.lookups.RemedialSequence)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSeq().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbSeqLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSeq().clear();
		ims.spinalinjuries.vo.lookups.RemedialSequenceCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialSequence(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSeq().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbSeqLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialSequence instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialSequenceInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSeq().setValue(instance);
	}
	protected final void defaultcmbSeqLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSeq().setValue((ims.spinalinjuries.vo.lookups.RemedialSequence)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialSequence.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialSequence.TYPE_ID));
	}
	protected final void oncmbActivityValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActivity().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialActivity existingInstance = (ims.spinalinjuries.vo.lookups.RemedialActivity)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbActivityLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialActivity)
		{
			ims.spinalinjuries.vo.lookups.RemedialActivity instance = (ims.spinalinjuries.vo.lookups.RemedialActivity)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbActivityLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialActivity existingInstance = (ims.spinalinjuries.vo.lookups.RemedialActivity)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActivity().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbActivityLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActivity().clear();
		ims.spinalinjuries.vo.lookups.RemedialActivityCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialActivity(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActivity().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbActivityLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialActivity instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialActivityInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActivity().setValue(instance);
	}
	protected final void defaultcmbActivityLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbActivity().setValue((ims.spinalinjuries.vo.lookups.RemedialActivity)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialActivity.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialActivity.TYPE_ID));
	}
	protected final void oncmbPatPositionValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabDetails().cmbPatPosition().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialPatPosition existingInstance = (ims.spinalinjuries.vo.lookups.RemedialPatPosition)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbPatPositionLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialPatPosition)
		{
			ims.spinalinjuries.vo.lookups.RemedialPatPosition instance = (ims.spinalinjuries.vo.lookups.RemedialPatPosition)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbPatPositionLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialPatPosition existingInstance = (ims.spinalinjuries.vo.lookups.RemedialPatPosition)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbPatPosition().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbPatPositionLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbPatPosition().clear();
		ims.spinalinjuries.vo.lookups.RemedialPatPositionCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialPatPosition(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbPatPosition().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbPatPositionLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialPatPosition instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialPatPositionInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbPatPosition().setValue(instance);
	}
	protected final void defaultcmbPatPositionLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbPatPosition().setValue((ims.spinalinjuries.vo.lookups.RemedialPatPosition)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialPatPosition.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialPatPosition.TYPE_ID));
	}
	protected final void oncmbIndependenceValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabDetails().cmbIndependence().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialIndependence existingInstance = (ims.spinalinjuries.vo.lookups.RemedialIndependence)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbIndependenceLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialIndependence)
		{
			ims.spinalinjuries.vo.lookups.RemedialIndependence instance = (ims.spinalinjuries.vo.lookups.RemedialIndependence)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbIndependenceLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialIndependence existingInstance = (ims.spinalinjuries.vo.lookups.RemedialIndependence)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbIndependence().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbIndependenceLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbIndependence().clear();
		ims.spinalinjuries.vo.lookups.RemedialIndependenceCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialIndependence(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbIndependence().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbIndependenceLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialIndependence instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialIndependenceInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbIndependence().setValue(instance);
	}
	protected final void defaultcmbIndependenceLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbIndependence().setValue((ims.spinalinjuries.vo.lookups.RemedialIndependence)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialIndependence.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialIndependence.TYPE_ID));
	}
	protected final void oncmbSubObValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSubOb().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs existingInstance = (ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbSubObLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs)
		{
			ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs instance = (ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbSubObLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs existingInstance = (ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSubOb().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbSubObLookup()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSubOb().clear();
		ims.spinalinjuries.vo.lookups.RemedialSubjectiveObsCollection lookupCollection = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialSubjectiveObs(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSubOb().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbSubObLookupValue(int id)
	{
		ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs instance = ims.spinalinjuries.vo.lookups.LookupHelper.getRemedialSubjectiveObsInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSubOb().setValue(instance);
	}
	protected final void defaultcmbSubObLookupValue()
	{
		this.form.ctnRemedial().lyrRemedial().tabDetails().cmbSubOb().setValue((ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs)domain.getLookupService().getDefaultInstance(ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs.class, engine.getFormName().getID(), ims.spinalinjuries.vo.lookups.RemedialSubjectiveObs.TYPE_ID));
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.therapies.domain.Remedial domain;
}
