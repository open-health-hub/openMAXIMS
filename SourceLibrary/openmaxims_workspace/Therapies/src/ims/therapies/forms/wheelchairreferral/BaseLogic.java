//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.therapies.forms.wheelchairreferral;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.therapies.domain.WheelchairReferral.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.therapies.domain.WheelchairReferral domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void onansContactValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ansContact().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.YesNoUnknown existingInstance = (ims.core.vo.lookups.YesNoUnknown)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindansContactLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.YesNoUnknown)
		{
			ims.core.vo.lookups.YesNoUnknown instance = (ims.core.vo.lookups.YesNoUnknown)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindansContactLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.YesNoUnknown existingInstance = (ims.core.vo.lookups.YesNoUnknown)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ansContact().addOption(instance);
		}
	}
	protected final void bindansContactLookup()
	{
		this.form.ansContact().clear();
		ims.core.vo.lookups.YesNoUnknownCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getYesNoUnknown(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ansContact().addOption(lookupCollection.get(x));
		}
	}
	protected final void defaultansContactLookupValue()
	{
		this.form.ansContact().setValue((ims.core.vo.lookups.YesNoUnknown)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.YesNoUnknown.class, engine.getFormName().getID(), ims.core.vo.lookups.YesNoUnknown.TYPE_ID));
	}
	protected void clearScreen()
	{
		this.form.qmbHCP().setValue(null);
		this.form.dtimRecording().setValue(null);
		this.form.ansContact().setValue(null);
		this.form.dteDischarge().setValue(null);
		this.form.txtDischargeDetails().setValue("");
		this.form.txtInformation().setValue("");
		this.form.txtTherapist().setValue("");
		this.form.dteAssess().setValue(null);
		this.form.dteReferral().setValue(null);
		this.form.txtOutcome().setValue("");
		this.form.txtAuthority().setValue("");
		this.form.cmbType().setValue(null);
	}
	protected void populateScreenFromData(ims.therapies.vo.WheelchairReferralVo value)
	{
		clearScreen();
		if(value == null)
			return;

		this.form.qmbHCP().setValue(value.getAuthoringCPIsNotNull() ? value.getAuthoringCP() : null);
		this.form.dtimRecording().setValue(value.getAuthoringDateTimeIsNotNull() ? value.getAuthoringDateTime() : null);
		this.form.ansContact().setValue(value.getPatientInformedIsNotNull() ? value.getPatientInformed() : null);
		this.form.dteDischarge().setValue(value.getDischargeDateIsNotNull() ? value.getDischargeDate() : null);
		this.form.txtDischargeDetails().setValue(value.getDischargeDetailsIsNotNull() ? value.getDischargeDetails(): null);
		this.form.txtInformation().setValue(value.getOtherAssessmentInfoIsNotNull() ? value.getOtherAssessmentInfo(): null);
		this.form.txtTherapist().setValue(value.getWheelchairTherapistIsNotNull() ? value.getWheelchairTherapist(): null);
		this.form.dteAssess().setValue(value.getAssessmentDateIsNotNull() ? value.getAssessmentDate() : null);
		this.form.dteReferral().setValue(value.getReferralDateIsNotNull() ? value.getReferralDate() : null);
		this.form.txtOutcome().setValue(value.getOutcomeOfAssessmentIsNotNull() ? value.getOutcomeOfAssessment(): null);
		this.form.txtAuthority().setValue(value.getWheelchairAuthorityIsNotNull() ? value.getWheelchairAuthority(): null);
		this.form.cmbType().setValue(value.getChairTypeIsNotNull() ? value.getChairType() : null);
	}
	protected ims.therapies.vo.WheelchairReferralVo populateDataFromScreen(ims.therapies.vo.WheelchairReferralVo value)
	{
		if(value == null)
			value = new ims.therapies.vo.WheelchairReferralVo();

		value.setAuthoringCP(this.form.qmbHCP().getValue());
		value.setAuthoringDateTime(this.form.dtimRecording().getValue());
		value.setPatientInformed(this.form.ansContact().getValue());
		value.setDischargeDate(this.form.dteDischarge().getValue());
		value.setDischargeDetails(this.form.txtDischargeDetails().getValue());
		value.setOtherAssessmentInfo(this.form.txtInformation().getValue());
		value.setWheelchairTherapist(this.form.txtTherapist().getValue());
		value.setAssessmentDate(this.form.dteAssess().getValue());
		value.setReferralDate(this.form.dteReferral().getValue());
		value.setOutcomeOfAssessment(this.form.txtOutcome().getValue());
		value.setWheelchairAuthority(this.form.txtAuthority().getValue());
		value.setChairType(this.form.cmbType().getValue());

		return value;
	}
	protected ims.therapies.vo.WheelchairReferralVo populateDataFromScreen()
	{
		return populateDataFromScreen(new ims.therapies.vo.WheelchairReferralVo());
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.therapies.domain.WheelchairReferral domain;
}
