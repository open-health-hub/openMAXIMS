//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pathways.forms.patientjourney;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		Pathways = new PathwaysContext(context);
		RefMan = new RefManContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getGenericDateIsNotNull()
		{
			return !cx_CoreGenericDate.getValueIsNull(context);
		}
		public ims.framework.utils.Date getGenericDate()
		{
			return (ims.framework.utils.Date)cx_CoreGenericDate.getValue(context);
		}
		public void setGenericDate(ims.framework.utils.Date value)
		{
			cx_CoreGenericDate.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGenericDate = new ims.framework.ContextVariable("Core.GenericDate", "_cv_Core.GenericDate");

		private ims.framework.Context context;
	}
	public final class PathwaysContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private PathwaysContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSelectedPatientPathwayJourneyIsNotNull()
		{
			return !cx_PathwaysSelectedPatientPathwayJourney.getValueIsNull(context);
		}
		public ims.pathways.vo.PatientPathwayJourneyRefVo getSelectedPatientPathwayJourney()
		{
			return (ims.pathways.vo.PatientPathwayJourneyRefVo)cx_PathwaysSelectedPatientPathwayJourney.getValue(context);
		}
		public void setSelectedPatientPathwayJourney(ims.pathways.vo.PatientPathwayJourneyRefVo value)
		{
			cx_PathwaysSelectedPatientPathwayJourney.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysSelectedPatientPathwayJourney = new ims.framework.ContextVariable("Pathways.SelectedPatientPathwayJourney", "_cv_Pathways.SelectedPatientPathwayJourney");
		public boolean getSelectedPatientJourneyTargetsIsNotNull()
		{
			return !cx_PathwaysSelectedPatientJourneyTargets.getValueIsNull(context);
		}
		public ims.pathways.vo.PatientJourneyTargetInterfaceVoCollection getSelectedPatientJourneyTargets()
		{
			return (ims.pathways.vo.PatientJourneyTargetInterfaceVoCollection)cx_PathwaysSelectedPatientJourneyTargets.getValue(context);
		}
		public void setSelectedPatientJourneyTargets(ims.pathways.vo.PatientJourneyTargetInterfaceVoCollection value)
		{
			cx_PathwaysSelectedPatientJourneyTargets.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysSelectedPatientJourneyTargets = new ims.framework.ContextVariable("Pathways.SelectedPatientJourneyTargets", "_cv_Pathways.SelectedPatientJourneyTargets");
		public boolean getWorkListSearchCriteriaIsNotNull()
		{
			return !cx_PathwaysWorkListSearchCriteria.getValueIsNull(context);
		}
		public ims.pathways.vo.WorkListSearchCriteriaVo getWorkListSearchCriteria()
		{
			return (ims.pathways.vo.WorkListSearchCriteriaVo)cx_PathwaysWorkListSearchCriteria.getValue(context);
		}

		private ims.framework.ContextVariable cx_PathwaysWorkListSearchCriteria = new ims.framework.ContextVariable("Pathways.WorkListSearchCriteria", "_cv_Pathways.WorkListSearchCriteria");
		public boolean getSelectedPathwayIsNotNull()
		{
			return !cx_PathwaysSelectedPathway.getValueIsNull(context);
		}
		public ims.pathways.configuration.vo.PathwayRefVo getSelectedPathway()
		{
			return (ims.pathways.configuration.vo.PathwayRefVo)cx_PathwaysSelectedPathway.getValue(context);
		}
		public void setSelectedPathway(ims.pathways.configuration.vo.PathwayRefVo value)
		{
			cx_PathwaysSelectedPathway.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysSelectedPathway = new ims.framework.ContextVariable("Pathways.SelectedPathway", "_cv_Pathways.SelectedPathway");
		public boolean getSelectedPatientJourneyTargetIsNotNull()
		{
			return !cx_PathwaysSelectedPatientJourneyTarget.getValueIsNull(context);
		}
		public ims.pathways.vo.PatientJourneyTargetVo getSelectedPatientJourneyTarget()
		{
			return (ims.pathways.vo.PatientJourneyTargetVo)cx_PathwaysSelectedPatientJourneyTarget.getValue(context);
		}
		public void setSelectedPatientJourneyTarget(ims.pathways.vo.PatientJourneyTargetVo value)
		{
			cx_PathwaysSelectedPatientJourneyTarget.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysSelectedPatientJourneyTarget = new ims.framework.ContextVariable("Pathways.SelectedPatientJourneyTarget", "_cv_Pathways.SelectedPatientJourneyTarget");
		public boolean getPatientJourneySelectedIsNotNull()
		{
			return !cx_PathwaysPatientJourneySelected.getValueIsNull(context);
		}
		public ims.pathways.vo.PatientJourneyJourneyTargetInterfaceVo getPatientJourneySelected()
		{
			return (ims.pathways.vo.PatientJourneyJourneyTargetInterfaceVo)cx_PathwaysPatientJourneySelected.getValue(context);
		}
		public void setPatientJourneySelected(ims.pathways.vo.PatientJourneyJourneyTargetInterfaceVo value)
		{
			cx_PathwaysPatientJourneySelected.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysPatientJourneySelected = new ims.framework.ContextVariable("Pathways.PatientJourneySelected", "_cv_Pathways.PatientJourneySelected");
		public boolean getTargetReadjustmentsIsNotNull()
		{
			return !cx_PathwaysTargetReadjustments.getValueIsNull(context);
		}
		public ims.pathways.vo.TargetReadjustmentVoCollection getTargetReadjustments()
		{
			return (ims.pathways.vo.TargetReadjustmentVoCollection)cx_PathwaysTargetReadjustments.getValue(context);
		}
		public void setTargetReadjustments(ims.pathways.vo.TargetReadjustmentVoCollection value)
		{
			cx_PathwaysTargetReadjustments.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysTargetReadjustments = new ims.framework.ContextVariable("Pathways.TargetReadjustments", "_cv_Pathways.TargetReadjustments");
		public boolean getTargetReadjustmentsActionIsNotNull()
		{
			return !cx_PathwaysTargetReadjustmentsAction.getValueIsNull(context);
		}
		public ims.pathways.vo.enums.TargetReadjustmentsAction getTargetReadjustmentsAction()
		{
			return (ims.pathways.vo.enums.TargetReadjustmentsAction)cx_PathwaysTargetReadjustmentsAction.getValue(context);
		}
		public void setTargetReadjustmentsAction(ims.pathways.vo.enums.TargetReadjustmentsAction value)
		{
			cx_PathwaysTargetReadjustmentsAction.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysTargetReadjustmentsAction = new ims.framework.ContextVariable("Pathways.TargetReadjustmentsAction", "_cv_Pathways.TargetReadjustmentsAction");
		public boolean getPatientJourneyCommentsIsNotNull()
		{
			return !cx_PathwaysPatientJourneyComments.getValueIsNull(context);
		}
		public ims.pathways.vo.PatientJourneyCommentsVo getPatientJourneyComments()
		{
			return (ims.pathways.vo.PatientJourneyCommentsVo)cx_PathwaysPatientJourneyComments.getValue(context);
		}
		public void setPatientJourneyComments(ims.pathways.vo.PatientJourneyCommentsVo value)
		{
			cx_PathwaysPatientJourneyComments.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_PathwaysPatientJourneyComments = new ims.framework.ContextVariable("Pathways.PatientJourneyComments", "_cv_Pathways.PatientJourneyComments");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public PathwaysContext Pathways;
	public RefManContext RefMan;
}
