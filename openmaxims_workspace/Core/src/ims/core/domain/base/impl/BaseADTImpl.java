//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseADTImpl extends DomainImpl implements ims.core.domain.ADT, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validateadmitPatient(ims.core.vo.PatientShort patVo, ims.core.vo.InpatientEpisodeVo episVo, ims.framework.utils.DateTime transactionDT)
	{
	}

	@SuppressWarnings("unused")
	public void validatetransferPatient(ims.core.patient.vo.PatientRefVo patVo, ims.core.resource.people.vo.HcpRefVo consultant, ims.core.resource.place.vo.LocationRefVo location, Integer stay)
	{
	}

	@SuppressWarnings("unused")
	public void validatedischargePatient(ims.core.vo.PatientShort patVo, ims.core.vo.DischargedEpisodeVo dischEpisVo, ims.core.vo.CareContextInterfaceVo voCareContext)
	{
	}

	@SuppressWarnings("unused")
	public void validaterecordOPAttendance(ims.core.vo.PatientShort patVo, ims.core.vo.OutPatientAttendanceVo attVo, ims.core.vo.CareContextInterfaceVo careContext)
	{
	}

	@SuppressWarnings("unused")
	public void validaterecordAEAttendance(ims.core.vo.AneAttendanceVo attendance, ims.core.vo.PatientShort patient, Boolean bCancelDischarge)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAppointment(ims.core.vo.OutPatientAttendanceVo attendance, ims.core.vo.CareContextInterfaceVo voCareContext)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateInpatient(ims.core.vo.InpatientEpisodeVo inpatientRecord, ims.core.vo.CareContextInterfaceVo voCareContext)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAdmission(ims.core.vo.PatientShort patVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelDischarge(ims.core.vo.PatientShort patVo, ims.core.vo.DischargedEpisodeVo dischEpisVo, ims.core.vo.CareContextInterfaceVo voCareContext)
	{
	}

	@SuppressWarnings("unused")
	public void validaterecordInpatientLeave(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelInpatientLeave(ims.core.vo.PatientShort patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOutpatientAppointment(ims.core.vo.PasEventVo pasEvent)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCurrentAdmissionRecord(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPasEventByUnqIdx(ims.core.patient.vo.PatientRefVo voPatientRef, String pasEventId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPasEvent(ims.core.admin.pas.vo.PASEventRefVo voPasEventRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatecreatePasEvent(ims.framework.utils.DateTime eventDateTime, ims.core.patient.vo.PatientRefVo voRefPatient, ims.correspondence.vo.PasContactVo voPasContact)
	{
	}

	@SuppressWarnings("unused")
	public void validategetAnEAttendance(ims.core.vo.PasEventVo pasEvent)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCurrentDischarge(ims.core.vo.PatientShort patVo, ims.core.vo.DischargedEpisodeVo dischEpisVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPendingEmergencyAdmission(ims.core.vo.PasEventVo pasEventVo)
	{
	}

	@SuppressWarnings("unused")
	public void validaterecordPendingEmergencyAdmission(ims.core.vo.PasEventVo pasEventVo, ims.core.vo.PendingEmergencyAdmissionVo pendingEmergencyAdmission)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPendingElectiveAdmission(ims.core.vo.PasEventVo pasEventVo)
	{
	}

	@SuppressWarnings("unused")
	public void validaterecordPendingElectiveAdmission(ims.core.vo.PasEventVo pasEventVo, ims.core.vo.PendingElectiveAdmissionHl7Vo pendingElectiveAdmissionVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatetransferPatient(ims.core.patient.vo.PatientRefVo patVo, ims.core.resource.people.vo.HcpRefVo consultant, ims.core.resource.place.vo.LocationRefVo location)
	{
	}

	@SuppressWarnings("unused")
	public void validatetransferPatient(ims.core.patient.vo.PatientRefVo patVo, ims.core.resource.people.vo.HcpRefVo consultant, ims.core.resource.place.vo.LocationRefVo location, Integer stay, ims.core.resource.place.vo.LocationRefVo fromWard, ims.framework.utils.DateTime transferDateTime, ims.framework.utils.DateTime transactionDT, ims.vo.LookupInstVo specialty)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextByPasEvent(ims.core.admin.pas.vo.PASEventRefVo pasEvent)
	{
		if(pasEvent == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'pasEvent' of type 'ims.core.admin.pas.vo.PASEventRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatereadmitPatient(ims.core.vo.PatientShort patVo, ims.core.vo.InpatientEpisodeVo episVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetEDAttendanceDetails(ims.core.admin.vo.EmergencyAttendanceRefVo attendanceRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPrivateInsuranceCompany(String extId, ims.core.vo.lookups.TaxonomyType taxonomyType)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPartialAdmissionDetails(ims.hl7adtout.vo.InPatientADTMessageQueueRefVo queueItem)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelPartialAdmission(String partialAdmissionId)
	{
	}
}
