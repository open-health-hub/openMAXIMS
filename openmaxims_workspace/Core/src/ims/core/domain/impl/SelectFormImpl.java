//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Ander Telleria using IMS Development Environment (version 1.70 build 3425.24971)
// Copyright (C) 1995-2009 IMS MAXIMS plc. All rights reserved.

package ims.core.domain.impl;

import java.util.List;

import ims.admin.vo.AppFormVoCollection;
import ims.admin.vo.domain.AppFormVoAssembler;
import ims.core.configuration.domain.objects.AppForm;
import ims.core.domain.base.impl.BaseSelectFormImpl;
import ims.domain.DomainFactory;
import ims.domain.hibernate3.IMSCriteria;

public class SelectFormImpl extends BaseSelectFormImpl
{

	private static final long serialVersionUID = 1L;

	public ims.admin.vo.AppFormVoCollection listForms(String form, Boolean includeAliases, Boolean includeDialogs)
	{
		DomainFactory factory = getDomainFactory();
		
		IMSCriteria imsc = new IMSCriteria(AppForm.class,factory);
		imsc.like(AppForm.FieldNames.Name, "%" + form + "%");
		
		// Include aliases
		if (!Boolean.TRUE.equals(includeAliases))
		{
			imsc.equal(AppForm.FieldNames.IsAlias, false);
		}
		
		// Include dialogs
		if (!Boolean.TRUE.equals(includeDialogs))
		{
			imsc.equal(AppForm.FieldNames.IsDialog, false);
		}
		
		
		List<AppForm> forms = imsc.find();
		
		if (forms != null && forms.size() > 0)
			return AppFormVoAssembler.createAppFormVoCollectionFromAppForm(forms);
		
		return null;
	}
}
