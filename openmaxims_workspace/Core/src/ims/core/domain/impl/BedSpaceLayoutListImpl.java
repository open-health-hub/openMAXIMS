//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.70 build 3341.28572)
// Copyright (C) 1995-2009 IMS MAXIMS plc. All rights reserved.

package ims.core.domain.impl;

import ims.core.domain.base.impl.BaseBedSpaceLayoutListImpl;
import ims.core.vo.domain.FloorBedSpaceLayoutLiteVoAssembler;
import ims.core.vo.lookups.PreActiveActiveInactiveStatus;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

import java.util.ArrayList;

public class BedSpaceLayoutListImpl extends BaseBedSpaceLayoutListImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* Lists all floor layouts
	*/
	public ims.core.vo.FloorBedSpaceLayoutLiteVoCollection list(Boolean templatesOnly, PreActiveActiveInactiveStatus status)
	{
		if (templatesOnly == null)
			throw new CodingRuntimeException("templatesOnly is null or id not provided in method list");
		
		DomainFactory factory = getDomainFactory();
		String hql = " from FloorBedSpaceLayout fbl ";
		
		ArrayList markers = new ArrayList();
		ArrayList values = new ArrayList();
		
		StringBuffer sb = new StringBuffer();
		String andStr = "";
		
		if(templatesOnly)
		{
			sb.append(andStr + "fbl.isTemplate = :isTemplate");
			markers.add("isTemplate");
			values.add(templatesOnly);
			andStr = " and ";
		}
		
		if(status != null)
		{
			sb.append(andStr + "fbl.status = :activeStatus");
			markers.add("activeStatus");
			values.add(getDomLookup(status));
			andStr = " and ";
		}
		
		if(markers.size() > 0)
		{
			hql += "where ";
			hql += sb.toString();
		}
		
		return FloorBedSpaceLayoutLiteVoAssembler.createFloorBedSpaceLayoutLiteVoCollectionFromFloorBedSpaceLayout(factory.find(hql, markers, values));
	}
}
