//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.62 build 2971.25997)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.core.domain.impl;

import java.util.List;

import ims.admin.vo.domain.ReportVoAssembler;
import ims.core.admin.domain.objects.ReportBo;
import ims.core.domain.ReportRunnerDialog;
import ims.core.domain.base.impl.BaseReportViewerImpl;
import ims.core.vo.GpShortVoCollection;
import ims.core.vo.HcpLiteVoCollection;
import ims.core.vo.LocSiteLiteVoCollection;
import ims.core.vo.LocationLiteVoCollection;
import ims.core.vo.MemberOfStaffShortVo;
import ims.core.vo.MemberOfStaffShortVoCollection;
import ims.core.vo.OrgShortVo;
import ims.core.vo.OrgShortVoCollection;
import ims.core.vo.lookups.HcpDisType;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

public class ReportViewerImpl extends BaseReportViewerImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* getReport
	*/
	@SuppressWarnings("unchecked")
	public ims.admin.vo.ReportVo getReport(ims.core.admin.vo.TemplateBoRefVo templateRef)
	{
		if(templateRef == null || templateRef.getID_TemplateBo() == null)
			throw new CodingRuntimeException("The TemplateBoRefVo cannot be null !");
		
		DomainFactory domainFactory = getDomainFactory();
		
		List list = domainFactory.find("select r from ReportBo as r join r.templates as t where (t.id = :tid)", new String[] {"tid"}, new Object[] {templateRef.getID_TemplateBo()}, 1);

		if(list == null || list.size() == 0)
			return null;
		
		return ReportVoAssembler.create((ReportBo)list.get(0));
	}

	public GpShortVoCollection listGPsBySurname(String surname)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.listGPsBySurname(surname);
	}

	public HcpLiteVoCollection listHcpLiteByNameAndDisciplineType(String hcpName, HcpDisType hcpDisciplineType)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.listHcpLiteByNameAndDisciplineType(hcpName, hcpDisciplineType);
	}

	public LocSiteLiteVoCollection listLocSite(String locationName)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.listLocSite(locationName);
	}

	public LocationLiteVoCollection listLocationByName(String locationName)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.listLocationByName(locationName);
	}

	public MemberOfStaffShortVoCollection listMembersOfStaff(MemberOfStaffShortVo filter)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.listMembersOfStaff(filter);
	}

	public OrgShortVoCollection listOrganisationsShort(OrgShortVo filter)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.listOrganisationsShort(filter);
	}

	public Integer getLokupType(String lookupType)
	{
		ReportRunnerDialog impl = (ReportRunnerDialog) getDomainImpl(ReportRunnerDialogImpl.class);
		return impl.getLokupType(lookupType);
	}
}
