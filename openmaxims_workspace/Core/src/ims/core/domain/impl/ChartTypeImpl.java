//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.45 build 2420.16410)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.core.domain.impl;

import ims.core.charting.vo.ChartTypeRefVo;
import ims.core.domain.ChartTypeDetails;
import ims.core.domain.DataSetType;
import ims.core.domain.base.impl.BaseChartTypeListImpl;
import ims.core.vo.ChartTypeVo;
import ims.core.vo.domain.ChartTypeShortVoAssembler;
import ims.domain.DomainFactory;

import java.util.ArrayList;

public class ChartTypeImpl extends BaseChartTypeListImpl
{

	private static final long serialVersionUID = 1L; 

	/**
	* listDataset
	*/
	public ims.core.vo.DataSetTypeVoCollection listDataset(String name)
	{
		DataSetType impl = (DataSetType)getDomainImpl(DataSetTypeImpl.class);
		
		return impl.listDataSetType(name, null, null);
	}

	/**
	* listChartType
	*/
	public ims.core.vo.ChartTypeShortVoCollection listChartType(String name, ims.core.charting.vo.DatasetTypeRefVo refDataset)
	{
		DomainFactory factory = getDomainFactory();
		
		String hql = " from ChartType as c1_1 join fetch c1_1.datasetTypes as d1_1 "; 
		StringBuffer condStr = new StringBuffer();
		String andStr = " ";
	
		ArrayList markers = new ArrayList();
		ArrayList values = new ArrayList();

		if(name != null)
		{	
			condStr.append(andStr + " upper(c1_1.name) like upper(:NAME)"); 
			markers.add("NAME");
			values.add(name);
			andStr = " and ";
		}
		
		if(refDataset != null)
		{	
			condStr.append(andStr + " d1_1.datasetType.id = :DATASET "); 
			markers.add("DATASET");
			values.add(refDataset.getID_DatasetType());
			andStr = " and ";
		}
		
		if (andStr.equals(" and "))
			hql += " where ";

		hql += condStr.toString();

		return ChartTypeShortVoAssembler.createChartTypeShortVoCollectionFromChartType(
				factory.find(hql, markers, values)).sort();
	}

	public ChartTypeVo getChartType(ChartTypeRefVo refObj)
	{
		ChartTypeDetails impl = (ChartTypeDetails) getDomainImpl(ChartTypeDetailsImpl.class);
		return impl.getChartType(refObj);
	}
}
