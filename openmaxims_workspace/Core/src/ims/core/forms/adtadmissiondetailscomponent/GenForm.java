//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.adtadmissiondetailscomponent;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbAdmittedCountyComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.ntpf.vo.lookups.County value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.ntpf.vo.lookups.County value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.ntpf.vo.lookups.County value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.ntpf.vo.lookups.County value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.ntpf.vo.lookups.County value)
		{
			return super.control.removeRow(value);
		}
		public ims.ntpf.vo.lookups.County getValue()
		{
			return (ims.ntpf.vo.lookups.County)super.control.getValue();
		}
		public void setValue(ims.ntpf.vo.lookups.County value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbReferrerCountyComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.ntpf.vo.lookups.County value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.ntpf.vo.lookups.County value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.ntpf.vo.lookups.County value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.ntpf.vo.lookups.County value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.ntpf.vo.lookups.County value)
		{
			return super.control.removeRow(value);
		}
		public ims.ntpf.vo.lookups.County getValue()
		{
			return (ims.ntpf.vo.lookups.County)super.control.getValue();
		}
		public void setValue(ims.ntpf.vo.lookups.County value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbAdmittedFromComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.ExternalResourceType value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.ExternalResourceType getValue()
		{
			return (ims.core.vo.lookups.ExternalResourceType)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.ExternalResourceType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbAdmissionWardComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.LocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.LocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.LocationLiteVo getValue()
		{
			return (ims.core.vo.LocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.LocationLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbReferredFromComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.ExternalResourceType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.ExternalResourceType value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.ExternalResourceType getValue()
		{
			return (ims.core.vo.lookups.ExternalResourceType)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.ExternalResourceType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbSpecialtyComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.Specialty value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.Specialty value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.Specialty value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.Specialty value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.Specialty value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.Specialty getValue()
		{
			return (ims.core.vo.lookups.Specialty)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.Specialty value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbAdmissionTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.AdmissionType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.AdmissionType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.AdmissionType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.AdmissionType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.AdmissionType value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.AdmissionType getValue()
		{
			return (ims.core.vo.lookups.AdmissionType)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.AdmissionType value)
		{
			super.control.setValue(value);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.core.vo.EpisodeofCareShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.EpisodeofCareShortVo' of the global context variable 'Core.EpisodeofCareShort' is not supported.");
		if(!context.isValidContextType(ims.core.vo.CareContextShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.CareContextShortVo' of the global context variable 'Core.CurrentCareContext' is not supported.");
	}
	private void validateMandatoryContext(Context context)
	{
		if(new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort").getValueIsNull(context))
			throw new ims.framework.exceptions.FormMandatoryContextMissingException("The required context data 'Core.PatientShort' is not available.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
			validateMandatoryContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(824, 590);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 144, 72, 240, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ims.framework.FormUiLogic m_ccAdmittingConsultantForm = loader.loadComponent(102256, appForm, startControlID * 10 + 1000, anchoringHelper1.getSize(), instance1, startTabIndex.intValue() + 3, skipContextValidation);
		//ims.framework.Control m_ccAdmittingConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(144), new Integer(72), new Integer(240), new Integer(20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 3), m_ccAdmittingConsultantForm, instance1 } );
		ims.framework.Control m_ccAdmittingConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1001),  new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 3), m_ccAdmittingConsultantForm, instance1, Boolean.FALSE } );
		super.addControl(m_ccAdmittingConsultantControl);
		Menu[] menus1 = m_ccAdmittingConsultantForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}

		// Label Controls
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 424, 150, 38, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "From:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 424, 266, 90, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Telephone No.:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 424, 137, 105, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Address Admitted", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 424, 74, 93, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Admitted From:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 424, 42, 79, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Bed Number:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 424, 10, 101, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Admission Ward:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 8, 138, 91, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referred From:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 8, 74, 130, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Admitting Consultant:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 8, 330, 126, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referrer Contact No.:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 8, 170, 99, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referrer Details:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 8, 106, 60, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Specialty:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 8, 42, 97, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Admission Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 8, 10, 131, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Admission Date/Time:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 8, 558, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(startTabIndex.intValue() + 1023), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "New", Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 8, 558, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), new Integer(startTabIndex.intValue() + 1024), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 741, 558, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), new Integer(startTabIndex.intValue() + 1026), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 661, 558, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), new Integer(startTabIndex.intValue() + 1025), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 546, 104, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), new Integer(startTabIndex.intValue() + 1017), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(70), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 546, 136, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 1018), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 546, 168, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 1019), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 546, 200, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 1020), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 546, 264, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), new Integer(startTabIndex.intValue() + 1022), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 143, 168, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), new Integer(startTabIndex.intValue() + 1007), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 143, 328, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), new Integer(startTabIndex.intValue() + 1012), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(20), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 143, 200, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), new Integer(startTabIndex.intValue() + 1008), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 143, 232, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), new Integer(startTabIndex.intValue() + 1009), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 143, 264, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), new Integer(startTabIndex.intValue() + 1010), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 143, 8, 193, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.TRUE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 546, 232, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbAdmittedCountyTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), new Integer(startTabIndex.intValue() + 1021), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbAdmittedCountyTemp);
		cmbAdmittedCountyComboBox cmbAdmittedCounty = (cmbAdmittedCountyComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbAdmittedCountyComboBox.class, m_cmbAdmittedCountyTemp);
		super.addComboBox(cmbAdmittedCounty);
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 143, 296, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbReferrerCountyTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), new Integer(startTabIndex.intValue() + 1011), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbReferrerCountyTemp);
		cmbReferrerCountyComboBox cmbReferrerCounty = (cmbReferrerCountyComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbReferrerCountyComboBox.class, m_cmbReferrerCountyTemp);
		super.addComboBox(cmbReferrerCounty);
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 546, 72, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbAdmittedFromTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), new Integer(startTabIndex.intValue() + 1015), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbAdmittedFromTemp);
		cmbAdmittedFromComboBox cmbAdmittedFrom = (cmbAdmittedFromComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbAdmittedFromComboBox.class, m_cmbAdmittedFromTemp);
		super.addComboBox(cmbAdmittedFrom);
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 546, 8, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbAdmissionWardTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), new Integer(startTabIndex.intValue() + 1013), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbAdmissionWardTemp);
		cmbAdmissionWardComboBox cmbAdmissionWard = (cmbAdmissionWardComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbAdmissionWardComboBox.class, m_cmbAdmissionWardTemp);
		super.addComboBox(cmbAdmissionWard);
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 143, 136, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbReferredFromTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(startTabIndex.intValue() + 1005), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbReferredFromTemp);
		cmbReferredFromComboBox cmbReferredFrom = (cmbReferredFromComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbReferredFromComboBox.class, m_cmbReferredFromTemp);
		super.addComboBox(cmbReferredFrom);
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 143, 104, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbSpecialtyTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 1004), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbSpecialtyTemp);
		cmbSpecialtyComboBox cmbSpecialty = (cmbSpecialtyComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSpecialtyComboBox.class, m_cmbSpecialtyTemp);
		super.addComboBox(cmbSpecialty);
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 143, 40, 225, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbAdmissionTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbAdmissionTypeTemp);
		cmbAdmissionTypeComboBox cmbAdmissionType = (cmbAdmissionTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbAdmissionTypeComboBox.class, m_cmbAdmissionTypeTemp);
		super.addComboBox(cmbAdmissionType);

		// IntBox Controls
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 546, 40, 87, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(IntBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 1014), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, new Integer(9)}));

		// Image Buttons Controls
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 783, 72, 21, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 1016), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.FindEnabled16, this.getImages().Core.FindDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 381, 136, 21, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 1006), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.FindEnabled16, this.getImages().Core.FindDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public ims.core.forms.mosquery.IComponent ccAdmittingConsultant()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
	}
	public void setccAdmittingConsultantValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
	}
	public void setccAdmittingConsultantVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setVisible(value);
	}
	public boolean isccAdmittingConsultantVisible()
	{
		return ((ims.framework.Control)super.getControl(0)).isVisible();
	}
	public void setccAdmittingConsultantEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setEnabled(value);
	}
	public boolean isccAdmittingConsultantEnabled()
	{
		return ((ims.framework.Control)super.getControl(0)).isEnabled();
	}
	public Label lblTelephoneNr()
	{
		return (Label)super.getControl(2);
	}
	public Label lblAdressAdmittedFrom()
	{
		return (Label)super.getControl(3);
	}
	public Label lblAdmittedFrom()
	{
		return (Label)super.getControl(4);
	}
	public Label lblBedNumber()
	{
		return (Label)super.getControl(5);
	}
	public Label lblAdmissionWard()
	{
		return (Label)super.getControl(6);
	}
	public Label lblReferredFrom()
	{
		return (Label)super.getControl(7);
	}
	public Label lblAdmittingConsultant()
	{
		return (Label)super.getControl(8);
	}
	public Label lblReferrerContactNr()
	{
		return (Label)super.getControl(9);
	}
	public Label lblReferrerDetails()
	{
		return (Label)super.getControl(10);
	}
	public Label lblSpecialty()
	{
		return (Label)super.getControl(11);
	}
	public Label lblAdmissionType()
	{
		return (Label)super.getControl(12);
	}
	public Label lblAdmissionDateTime()
	{
		return (Label)super.getControl(13);
	}
	public Button btnNew()
	{
		return (Button)super.getControl(14);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(15);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(16);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(17);
	}
	public TextBox txtAdmittedFromName()
	{
		return (TextBox)super.getControl(18);
	}
	public TextBox txtAdrAdmittedFromLine1()
	{
		return (TextBox)super.getControl(19);
	}
	public TextBox txtAdrAdmittedFromLine2()
	{
		return (TextBox)super.getControl(20);
	}
	public TextBox txtAdrAdmittedFromLine3()
	{
		return (TextBox)super.getControl(21);
	}
	public TextBox txtTelephoneNr()
	{
		return (TextBox)super.getControl(22);
	}
	public TextBox txtReferrerNameOrganisation()
	{
		return (TextBox)super.getControl(23);
	}
	public TextBox txtReferrerContactNr()
	{
		return (TextBox)super.getControl(24);
	}
	public TextBox txtReferrerAdr1()
	{
		return (TextBox)super.getControl(25);
	}
	public TextBox txtReferrerAdr2()
	{
		return (TextBox)super.getControl(26);
	}
	public TextBox txtReferrerAdr3()
	{
		return (TextBox)super.getControl(27);
	}
	public DateTimeControl dtimAdmissionDateTime()
	{
		return (DateTimeControl)super.getControl(28);
	}
	public cmbAdmittedCountyComboBox cmbAdmittedCounty()
	{
		return (cmbAdmittedCountyComboBox)super.getComboBox(0);
	}
	public cmbReferrerCountyComboBox cmbReferrerCounty()
	{
		return (cmbReferrerCountyComboBox)super.getComboBox(1);
	}
	public cmbAdmittedFromComboBox cmbAdmittedFrom()
	{
		return (cmbAdmittedFromComboBox)super.getComboBox(2);
	}
	public cmbAdmissionWardComboBox cmbAdmissionWard()
	{
		return (cmbAdmissionWardComboBox)super.getComboBox(3);
	}
	public cmbReferredFromComboBox cmbReferredFrom()
	{
		return (cmbReferredFromComboBox)super.getComboBox(4);
	}
	public cmbSpecialtyComboBox cmbSpecialty()
	{
		return (cmbSpecialtyComboBox)super.getComboBox(5);
	}
	public cmbAdmissionTypeComboBox cmbAdmissionType()
	{
		return (cmbAdmissionTypeComboBox)super.getComboBox(6);
	}
	public IntBox intBedNumber()
	{
		return (IntBox)super.getControl(36);
	}
	public ImageButton imbAdmittedFromSearch()
	{
		return (ImageButton)super.getControl(37);
	}
	public ImageButton imbReferredFromSearch()
	{
		return (ImageButton)super.getControl(38);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				ExternalResourceSearch = new LocalFormName(102412);
			}
			public final FormName ExternalResourceSearch;
		}

		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				FindEnabled24 = new ImageHelper(102175, "Images/Core/Find_24.png", new Integer(24), new Integer(24));
				FindEnabled16 = new ImageHelper(102164, "Images/Core/Find.gif", new Integer(16), new Integer(16));
				FindDisabled24 = new ImageHelper(102172, "Images/Core/FindDisabled_24.png", new Integer(24), new Integer(24));
				FindDisabled16 = new ImageHelper(102165, "Images/Core/FindDisabled16.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image FindEnabled24;
			public final ims.framework.utils.Image FindEnabled16;
			public final ims.framework.utils.Image FindDisabled24;
			public final ims.framework.utils.Image FindDisabled16;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_Patient = new ims.framework.ContextVariable("Patient", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier + "");
			cxl_CareContext = new ims.framework.ContextVariable("CareContext", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier + "");
			cxl_EpisodeOfCare = new ims.framework.ContextVariable("EpisodeOfCare", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier + "");
			cxl_CurrentAdmissionDetail = new ims.framework.ContextVariable("CurrentAdmissionDetail", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier + "");
			cxl_SelectedEvent = new ims.framework.ContextVariable("SelectedEvent", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedEvent_" + componentIdentifier + "");
			cxl_SelectedExternalResourceForReferredFrom = new ims.framework.ContextVariable("SelectedExternalResourceForReferredFrom", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForReferredFrom_" + componentIdentifier + "");
			cxl_SelectedExternalResourceForAdmittedFrom = new ims.framework.ContextVariable("SelectedExternalResourceForAdmittedFrom", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForAdmittedFrom_" + componentIdentifier + "");
			cxl_CurrentInpatientEpisode = new ims.framework.ContextVariable("CurrentInpatientEpisode", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier + "");
			cxl_CareSpell = new ims.framework.ContextVariable("CareSpell", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareSpell_" + componentIdentifier + "");
			cxl_listEpisodesOfCare = new ims.framework.ContextVariable("listEpisodesOfCare", prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__listEpisodesOfCare_" + componentIdentifier + "");
		}
		
		public boolean getPatientIsNotNull()
		{
			return !cxl_Patient.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatient()
		{
			return (ims.core.vo.PatientShort)cxl_Patient.getValue(context);
		}
		public void setPatient(ims.core.vo.PatientShort value)
		{
			cxl_Patient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Patient = null;
		public boolean getCareContextIsNotNull()
		{
			return !cxl_CareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextVo getCareContext()
		{
			return (ims.core.vo.CareContextVo)cxl_CareContext.getValue(context);
		}
		public void setCareContext(ims.core.vo.CareContextVo value)
		{
			cxl_CareContext.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CareContext = null;
		public boolean getEpisodeOfCareIsNotNull()
		{
			return !cxl_EpisodeOfCare.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareVo getEpisodeOfCare()
		{
			return (ims.core.vo.EpisodeofCareVo)cxl_EpisodeOfCare.getValue(context);
		}
		public void setEpisodeOfCare(ims.core.vo.EpisodeofCareVo value)
		{
			cxl_EpisodeOfCare.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_EpisodeOfCare = null;
		public boolean getCurrentAdmissionDetailIsNotNull()
		{
			return !cxl_CurrentAdmissionDetail.getValueIsNull(context);
		}
		public ims.core.vo.AdmissionDetailVo getCurrentAdmissionDetail()
		{
			return (ims.core.vo.AdmissionDetailVo)cxl_CurrentAdmissionDetail.getValue(context);
		}
		public void setCurrentAdmissionDetail(ims.core.vo.AdmissionDetailVo value)
		{
			cxl_CurrentAdmissionDetail.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentAdmissionDetail = null;
		public boolean getSelectedEventIsNotNull()
		{
			return !cxl_SelectedEvent.getValueIsNull(context);
		}
		public ims.core.vo.enums.ADTAdmissionDetailEvent getSelectedEvent()
		{
			return (ims.core.vo.enums.ADTAdmissionDetailEvent)cxl_SelectedEvent.getValue(context);
		}
		public void setSelectedEvent(ims.core.vo.enums.ADTAdmissionDetailEvent value)
		{
			cxl_SelectedEvent.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedEvent = null;
		public boolean getSelectedExternalResourceForReferredFromIsNotNull()
		{
			return !cxl_SelectedExternalResourceForReferredFrom.getValueIsNull(context);
		}
		public ims.core.vo.ExternalResourceVo getSelectedExternalResourceForReferredFrom()
		{
			return (ims.core.vo.ExternalResourceVo)cxl_SelectedExternalResourceForReferredFrom.getValue(context);
		}
		public void setSelectedExternalResourceForReferredFrom(ims.core.vo.ExternalResourceVo value)
		{
			cxl_SelectedExternalResourceForReferredFrom.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedExternalResourceForReferredFrom = null;
		public boolean getSelectedExternalResourceForAdmittedFromIsNotNull()
		{
			return !cxl_SelectedExternalResourceForAdmittedFrom.getValueIsNull(context);
		}
		public ims.core.vo.ExternalResourceVo getSelectedExternalResourceForAdmittedFrom()
		{
			return (ims.core.vo.ExternalResourceVo)cxl_SelectedExternalResourceForAdmittedFrom.getValue(context);
		}
		public void setSelectedExternalResourceForAdmittedFrom(ims.core.vo.ExternalResourceVo value)
		{
			cxl_SelectedExternalResourceForAdmittedFrom.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedExternalResourceForAdmittedFrom = null;
		public boolean getCurrentInpatientEpisodeIsNotNull()
		{
			return !cxl_CurrentInpatientEpisode.getValueIsNull(context);
		}
		public ims.core.vo.InpatientEpisodeVo getCurrentInpatientEpisode()
		{
			return (ims.core.vo.InpatientEpisodeVo)cxl_CurrentInpatientEpisode.getValue(context);
		}
		public void setCurrentInpatientEpisode(ims.core.vo.InpatientEpisodeVo value)
		{
			cxl_CurrentInpatientEpisode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentInpatientEpisode = null;
		public boolean getCareSpellIsNotNull()
		{
			return !cxl_CareSpell.getValueIsNull(context);
		}
		public ims.core.vo.CareSpellVo getCareSpell()
		{
			return (ims.core.vo.CareSpellVo)cxl_CareSpell.getValue(context);
		}
		public void setCareSpell(ims.core.vo.CareSpellVo value)
		{
			cxl_CareSpell.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CareSpell = null;
		public boolean getlistEpisodesOfCareIsNotNull()
		{
			return !cxl_listEpisodesOfCare.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareShortVoCollection getlistEpisodesOfCare()
		{
			return (ims.core.vo.EpisodeofCareShortVoCollection)cxl_listEpisodesOfCare.getValue(context);
		}
		public void setlistEpisodesOfCare(ims.core.vo.EpisodeofCareShortVoCollection value)
		{
			cxl_listEpisodesOfCare.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_listEpisodesOfCare = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[148];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[71] = new ims.framework.ReportField(this.context, "_cv_Core.ExternalResourceSelected", "BO-1005100008-ID", "ID_ExternalResource");
			fields[72] = new ims.framework.ReportField(this.context, "_cv_Core.ExternalResourceSelected", "BO-1005100008-EXTERNALRESOURCETYPE", "ExternalResourceType");
			fields[73] = new ims.framework.ReportField(this.context, "_cv_Core.ExternalResourceSelected", "BO-1005100008-HCPTYPE", "HCPType");
			fields[74] = new ims.framework.ReportField(this.context, "_cv_Core.ExternalResourceSelected", "BO-1005100008-RESOURCESTATUS", "ResourceStatus");
			fields[75] = new ims.framework.ReportField(this.context, "_cv_Core.ExternalResourceSelected", "BO-1005100008-RESOURCENAME", "Resourcename");
			fields[76] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[77] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[78] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[79] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[80] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[81] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[82] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[83] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[84] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[85] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[86] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[87] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[88] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[89] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-ID", "ID_CareContext");
			fields[90] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-CONTEXT", "Context");
			fields[91] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[92] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[93] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[94] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[95] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[96] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[97] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-BEDNUMBER", "BedNumber");
			fields[98] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareContext_" + componentIdentifier, "BO-1004100019-DISCHARGEREASON", "DischargeReason");
			fields[99] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[100] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-CARESPELL", "CareSpell");
			fields[101] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-SPECIALTY", "Specialty");
			fields[102] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[103] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-STARTDATE", "StartDate");
			fields[104] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-ENDDATE", "EndDate");
			fields[105] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__EpisodeOfCare_" + componentIdentifier, "BO-1004100018-CURRENTREFERRAL", "CurrentReferral");
			fields[106] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-ID", "ID_AdmissionDetail");
			fields[107] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[108] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-BED", "Bed");
			fields[109] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-CONSULTANT", "Consultant");
			fields[110] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-SPECIALTY", "Specialty");
			fields[111] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-WARDTYPE", "WardType");
			fields[112] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-METHODOFADMISSION", "MethodOfAdmission");
			fields[113] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-SOURCEOFADMISSION", "SourceOfAdmission");
			fields[114] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-REASONFORADMISSION", "ReasonForAdmission");
			fields[115] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[116] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-ISCHAPLAINREQUIRED", "IsChaplainRequired");
			fields[117] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-REFERRINGCONSULTANT", "ReferringConsultant");
			fields[118] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-PATIENTSTATUS", "PatientStatus");
			fields[119] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-UPDATECFL", "UpdateCFL");
			fields[120] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-ANTICIPATEDSTAY", "AnticipatedStay");
			fields[121] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentAdmissionDetail_" + componentIdentifier, "BO-1014100008-CASEFOLDERCOMMENTS", "CaseFolderComments");
			fields[122] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForReferredFrom_" + componentIdentifier, "BO-1005100008-ID", "ID_ExternalResource");
			fields[123] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForReferredFrom_" + componentIdentifier, "BO-1005100008-EXTERNALRESOURCETYPE", "ExternalResourceType");
			fields[124] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForReferredFrom_" + componentIdentifier, "BO-1005100008-HCPTYPE", "HCPType");
			fields[125] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForReferredFrom_" + componentIdentifier, "BO-1005100008-RESOURCESTATUS", "ResourceStatus");
			fields[126] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForReferredFrom_" + componentIdentifier, "BO-1005100008-RESOURCENAME", "Resourcename");
			fields[127] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForAdmittedFrom_" + componentIdentifier, "BO-1005100008-ID", "ID_ExternalResource");
			fields[128] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForAdmittedFrom_" + componentIdentifier, "BO-1005100008-EXTERNALRESOURCETYPE", "ExternalResourceType");
			fields[129] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForAdmittedFrom_" + componentIdentifier, "BO-1005100008-HCPTYPE", "HCPType");
			fields[130] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForAdmittedFrom_" + componentIdentifier, "BO-1005100008-RESOURCESTATUS", "ResourceStatus");
			fields[131] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__SelectedExternalResourceForAdmittedFrom_" + componentIdentifier, "BO-1005100008-RESOURCENAME", "Resourcename");
			fields[132] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[133] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-ISONLEAVE", "IsOnLeave");
			fields[134] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-COMMENTS", "Comments");
			fields[135] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[136] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[137] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-BEDNO", "BedNo");
			fields[138] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-ADMISSIONTYPE", "AdmissionType");
			fields[139] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-ISMATERNITYINPATIENT", "IsMaternityInpatient");
			fields[140] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-REASONFORADMISSION", "ReasonForAdmission");
			fields[141] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-WARDTYPE", "WardType");
			fields[142] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-READMISSIONTYPE", "ReadmissionType");
			fields[143] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CurrentInpatientEpisode_" + componentIdentifier, "BO-1014100000-DISCHARGEREADYDATE", "DischargeReadyDate");
			fields[144] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareSpell_" + componentIdentifier, "BO-1004100017-ID", "ID_CareSpell");
			fields[145] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareSpell_" + componentIdentifier, "BO-1004100017-STARTDATE", "StartDate");
			fields[146] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareSpell_" + componentIdentifier, "BO-1004100017-ENDDATE", "EndDate");
			fields[147] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.ADTAdmissionDetailsComponent.__internal_x_context__CareSpell_" + componentIdentifier, "BO-1004100017-PATIENT", "Patient");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
