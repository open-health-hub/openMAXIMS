//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.adtadmissiondetailscomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbAdmittedCountyLookup();
	abstract protected void defaultcmbAdmittedCountyLookupValue();
	abstract protected void bindcmbReferrerCountyLookup();
	abstract protected void defaultcmbReferrerCountyLookupValue();
	abstract protected void bindcmbAdmittedFromLookup();
	abstract protected void defaultcmbAdmittedFromLookupValue();
	abstract protected void bindcmbReferredFromLookup();
	abstract protected void defaultcmbReferredFromLookupValue();
	abstract protected void bindcmbSpecialtyLookup();
	abstract protected void defaultcmbSpecialtyLookupValue();
	abstract protected void bindcmbAdmissionTypeLookup();
	abstract protected void defaultcmbAdmissionTypeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbAdmittedCountyValueSet(Object value);
	abstract protected void oncmbReferrerCountyValueSet(Object value);
	abstract protected void onImbAdmittedFromSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbReferredFromSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcAdmittingConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbAdmittedFromValueSet(Object value);
	abstract protected void onCmbAdmittedFromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbReferredFromValueSet(Object value);
	abstract protected void onCmbReferredFromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSpecialtyValueSet(Object value);
	abstract protected void oncmbAdmissionTypeValueSet(Object value);

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.cmbAdmittedCounty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAdmittedCountyValueSet(value);
			}
		});
		this.form.cmbReferrerCounty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReferrerCountyValueSet(value);
			}
		});
		this.form.imbAdmittedFromSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbAdmittedFromSearchClick();
			}
		});
		this.form.imbReferredFromSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbReferredFromSearchClick();
			}
		});
		this.form.setccAdmittingConsultantValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcAdmittingConsultantValueChanged();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.cmbAdmittedFrom().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAdmittedFromValueSet(value);
			}
		});
		this.form.cmbAdmittedFrom().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbAdmittedFromValueChanged();
			}
		});
		this.form.cmbReferredFrom().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReferredFromValueSet(value);
			}
		});
		this.form.cmbReferredFrom().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbReferredFromValueChanged();
			}
		});
		this.form.cmbSpecialty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSpecialtyValueSet(value);
			}
		});
		this.form.cmbAdmissionType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAdmissionTypeValueSet(value);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbAdmittedCountyLookup();
		bindcmbReferrerCountyLookup();
		bindcmbAdmittedFromLookup();
		bindcmbReferredFromLookup();
		bindcmbSpecialtyLookup();
		bindcmbAdmissionTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbAdmittedCountyLookup();
		bindcmbReferrerCountyLookup();
		bindcmbAdmittedFromLookup();
		bindcmbReferredFromLookup();
		bindcmbSpecialtyLookup();
		bindcmbAdmissionTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbAdmittedCountyLookupValue();
		defaultcmbReferrerCountyLookupValue();
		defaultcmbAdmittedFromLookupValue();
		defaultcmbReferredFromLookupValue();
		defaultcmbSpecialtyLookupValue();
		defaultcmbAdmissionTypeLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
