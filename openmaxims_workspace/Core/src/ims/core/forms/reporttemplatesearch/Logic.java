//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Florin Blindu using IMS Development Environment (version 1.80 build 4342.23748)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.core.forms.reporttemplatesearch;

import ims.core.forms.reporttemplatesearch.GenForm.grdResultRow;
import ims.core.vo.TemplateForReportTemplateSearchVo;
import ims.core.vo.TemplateForReportTemplateSearchVoCollection;
import ims.core.vo.enums.ReportTemplateSearchEvent;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onGrdResultSelectionChanged()
	{
		form.getLocalContext().setselectedTemplate(form.grdResult().getValue());
		form.getLocalContext().setselectedEvent(ReportTemplateSearchEvent.GRIDSELECTIONEVENT);
		form.fireCustomControlValueChanged();
	}

	@Override
	protected void onBtnSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getLocalContext().setselectedEvent(ReportTemplateSearchEvent.BTNSEARCHEVENT);
		form.getLocalContext().setselectedTemplate(null);
		form.fireCustomControlValueChanged();
		doSearch();
	}

	private void doSearch()
	{
		clearControls();
		TemplateForReportTemplateSearchVoCollection coll = domain.listTemplates(form.txtReportName().getValue(), form.txtTemplateName().getValue());

		if (coll == null || coll.size() == 0)
		{
			engine.showMessage("No results matching your search criteria were found !");
			return;
		}

		populateScreenFromData(coll);

	}

	private void populateScreenFromData(TemplateForReportTemplateSearchVoCollection coll)
	{

		if (coll == null)
			return;

		for (int i = 0; i < coll.size(); i++)
		{
			TemplateForReportTemplateSearchVo template = coll.get(i);

			grdResultRow row = form.grdResult().getRows().newRow();
			row.setcolReport(template.getReport().getReportName());
			row.setcolTemplate(template.getName());
			row.setValue(template);
		}

	}

	private void clearControls()
	{
		form.grdResult().setValue(null);
		form.grdResult().getRows().clear();
	}

	public void setEnabled(Boolean argument)
	{
		form.txtReportName().setEnabled(argument);
		form.txtTemplateName().setEnabled(argument);
		form.btnSearch().setEnabled(argument);	
		form.grdResult().setEnabled(argument);
		
	}

	public TemplateForReportTemplateSearchVo getSelectedTemplate()
	{
		return form.getLocalContext().getselectedTemplate();
	}

//	@Override
	public ReportTemplateSearchEvent getSelectedEvent()
	{
		return form.getLocalContext().getselectedEvent();
	}

//	@Override
	public void refresh()
	{
		if (form.txtReportName().getValue() != null && form.txtTemplateName().getValue() != null)
		{
			doSearch();
		}

		form.grdResult().setValue(form.getLocalContext().getselectedTemplate());
		form.getLocalContext().setselectedEvent(ReportTemplateSearchEvent.GRIDSELECTIONEVENT);
		form.fireCustomControlValueChanged();

	}
}
