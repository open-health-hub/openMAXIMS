//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
//This code is generated, please do not modify it.
//ReapptRds.java : Generated by vpurdila on 06 Jul 2004 14:58.
//Java DTO script

package ims.rds.dto.script;

import java.util.ArrayList;
import ims.rds.dto.*;
import ims.dto.client.Sd_appt;
import ims.dto.client.Patient;
import ims.dto.client.Sd_session;
import ims.dto.client.Lkup;
import ims.dto.client.Resource;
import ims.dto.client.Sd_appt_dts;
import ims.dto.client.Sd_appt_hist;

public final class ReapptRds extends IMSReportDataSourceDTO
{
    public ReapptRds(ims.dto.DTODomain domain, String seed1, String seed2, String seed3)
    {
        super(domain);
        SEED_VALUE[0] = seed1;
        SEED_VALUE[1] = seed2;
        SEED_VALUE[2] = seed3;
    }

    //Seeds
    private String[] SEED = new String[] {"TODAY", "APPTID", "SD_APPT.APPT_HEAD_ID"};
    private String[] SEED_VALUE = new String[3];

    //User variables declaration
    private String[] IMS_USERVAR = new String[] {"TRANSPORT_TXT", "TODAY", "LIST_OWNER_TXT", "APPTID", "PAT_ADR1", "PAT_ADR2", "PAT_ADR3", "PAT_ADR4", "PAT_POST", "PAT_DTEL", "PAT_NTEL"};
    private String[] IMS_USERVAR_ALIAS = new String[] {"TRANSPORT_TXT", "TODAY", "LIST_OWNER_TXT", "APPTID", "PAT_ADR1", "PAT_ADR2", "PAT_ADR3", "PAT_ADR4", "PAT_POST", "PAT_DTEL", "PAT_NTEL"};
    private String[] IMS_USERVAR_DESC = new String[] {"__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__"};
    private ArrayList IMS_USERVAR_VALUE = new ArrayList();

    //Services declarations
    private String[] SD_APPT = new String[] {"APPT_HEAD_ID", "PKEY", "FIRST_APPT_ID", "LAST_APPT_ID", "NO_CANCELLED", "NO_DNA", "BOOKING_SYS_TYPE", "REL_APPT_HEAD_ID", "PAT_LET", "GP_LET", "CMTS", "HCP_BOOKING", "DATEBKD", "PRIORDATOFF", "HEAD_STAT", "HOSPNUM", "SURNAME", "FORNAME", "TITLE", "DOB", "SEX", "TSTP", "TREATPL_ACT_ID", "FIRST_APPT_ACTIVITY_GR", "FIRST_APPT_ACTIVITY", "FIRST_APPT_DATE", "FIRST_APPT_ACTIVITYTXT", "LAST_APPT_DATE", "TRAN_ARRNGE_REQ", "ACT_CONSULT", "ACT_CONSULTTXT", "FIRST_APPT_ATT_TIME", "APPT_ID", "ACT_COMP_FLG", "APPT_STAT_REASON", "LO_ID", "MC_ID", "DATE_CHNGD", "ACT_COMPLETE_TM", "HCP_PRESENT", "HCP_SEEN", "TM_SEEN", "DISP_CDE", "ACT_LOC_ATT", "PRIORTY", "APPT_CMTS", "MODALITY_ID", "HCP_BOOKING1", "PRFILEASS_ID", "TRANS_TYP", "APPT_STAT", "ARR_TME", "ATT_STAT", "ATT_TM", "APP_DUR", "APP_ETM", "APP_STM", "PRFILED_SESS_ID", "PRFILE_SESS_ID", "PKEY1", "APPT_DT", "CONFIRM_STAT", "ACTION_DETS", "APPT_HIST_ID", "HIST_CDATE", "FIRST_FLAG", "ORIGSESSD", "HIST_DT", "ORIGSESS", "ENDSESS", "HCP_BOOKING3", "HIST_REAS", "HIST_TYPE", "APPT_ID3", "TRANS_SEQ", "REFEND_DT", "REFSTART_DT", "OUTREF", "IN_REF", "SPEC_REQ_SEQ", "SPEC_REQ_ID", "ACT_IND", "SEQNO", "ACTION_STAT", "APPT_ID1", "ACTION_ID"};
    private String[] SD_APPT_ALIAS = new String[] {"SD_APPT.APPT_HEAD_ID", "SD_APPT.PKEY", "SD_APPT.FIRST_APPT_ID", "SD_APPT.LAST_APPT_ID", "SD_APPT.NO_CANCELLED", "SD_APPT.NO_DNA", "SD_APPT.BOOKING_SYS_TYPE", "SD_APPT.REL_APPT_HEAD_ID", "SD_APPT.PAT_LET", "SD_APPT.GP_LET", "SD_APPT.CMTS", "SD_APPT.HCP_BOOKING", "SD_APPT.DATEBKD", "SD_APPT.PRIORDATOFF", "SD_APPT.HEAD_STAT", "SD_APPT.HOSPNUM", "SD_APPT.SURNAME", "SD_APPT.FORNAME", "SD_APPT.TITLE", "SD_APPT.DOB", "SD_APPT.SEX", "SD_APPT.TSTP", "SD_APPT.TREATPL_ACT_ID", "SD_APPT.FIRST_APPT_ACTIVITY_GR", "SD_APPT.FIRST_APPT_ACTIVITY", "SD_APPT.FIRST_APPT_DATE", "SD_APPT.FIRST_APPT_ACTIVITYTXT", "SD_APPT.LAST_APPT_DATE", "SD_APPT.TRAN_ARRNGE_REQ", "SD_APPT.ACT_CONSULT", "SD_APPT.ACT_CONSULTTXT", "SD_APPT.FIRST_APPT_ATT_TIME", "SD_APPT.APPT_ID", "SD_APPT.ACT_COMP_FLG", "SD_APPT.APPT_STAT_REASON", "SD_APPT.LO_ID", "SD_APPT.MC_ID", "SD_APPT.DATE_CHNGD", "SD_APPT.ACT_COMPLETE_TM", "SD_APPT.HCP_PRESENT", "SD_APPT.HCP_SEEN", "SD_APPT.TM_SEEN", "SD_APPT.DISP_CDE", "SD_APPT.ACT_LOC_ATT", "SD_APPT.PRIORTY", "SD_APPT.APPT_CMTS", "SD_APPT.MODALITY_ID", "SD_APPT.HCP_BOOKING1", "SD_APPT.PRFILEASS_ID", "SD_APPT.TRANS_TYP", "SD_APPT.APPT_STAT", "SD_APPT.ARR_TME", "SD_APPT.ATT_STAT", "SD_APPT.ATT_TM", "SD_APPT.APP_DUR", "SD_APPT.APP_ETM", "SD_APPT.APP_STM", "SD_APPT.PRFILED_SESS_ID", "SD_APPT.PRFILE_SESS_ID", "SD_APPT.PKEY1", "SD_APPT.APPT_DT", "SD_APPT.CONFIRM_STAT", "SD_APPT.ACTION_DETS", "SD_APPT.APPT_HIST_ID", "SD_APPT.HIST_CDATE", "SD_APPT.FIRST_FLAG", "SD_APPT.ORIGSESSD", "SD_APPT.HIST_DT", "SD_APPT.ORIGSESS", "SD_APPT.ENDSESS", "SD_APPT.HCP_BOOKING3", "SD_APPT.HIST_REAS", "SD_APPT.HIST_TYPE", "SD_APPT.APPT_ID3", "SD_APPT.TRANS_SEQ", "SD_APPT.REFEND_DT", "SD_APPT.REFSTART_DT", "SD_APPT.OUTREF", "SD_APPT.IN_REF", "SD_APPT.SPEC_REQ_SEQ", "SD_APPT.SPEC_REQ_ID", "SD_APPT.ACT_IND", "SD_APPT.SEQNO", "SD_APPT.ACTION_STAT", "SD_APPT.APPT_ID1", "SD_APPT.ACTION_ID"};
    private String[] SD_APPT_ATTR_DESC = new String[] {};
    private ArrayList SD_APPT_VALUE = new ArrayList();
    private ArrayList SD_APPT_FILTERS = new ArrayList();
    private ims.dto.client.Sd_appt sd_apptRds = null;
    private String[] PATIENT = new String[] {"PKEY", "SNM", "FNM1", "FNM2", "TITLTXT", "DOB", "DOD", "NHSN", "HOSPNUM", "ADR1", "ADR2", "ADR3", "ADR4", "ADR5", "POST", "NTEL", "DTEL", "GPCD", "GPCDNAME", "GPADR1", "GPADR2", "GPADR3", "GPADR4", "GPADR5", "GPPOST", "GPTEL", "TADR1", "TADR2", "TADR3", "TADR4", "TPOST", "TDTEL", "TNTEL", "SEXTXT"};
    private String[] PATIENT_ALIAS = new String[] {"PATIENT.PKEY", "PATIENT.SNM", "PATIENT.FNM1", "PATIENT.FNM2", "PATIENT.TITLTXT", "PATIENT.DOB", "PATIENT.DOD", "PATIENT.NHSN", "PATIENT.HOSPNUM", "PATIENT.ADR1", "PATIENT.ADR2", "PATIENT.ADR3", "PATIENT.ADR4", "PATIENT.ADR5", "PATIENT.POST", "PATIENT.NTEL", "PATIENT.DTEL", "PATIENT.GPCD", "PATIENT.GPCDNAME", "PATIENT.GPADR1", "PATIENT.GPADR2", "PATIENT.GPADR3", "PATIENT.GPADR4", "PATIENT.GPADR5", "PATIENT.GPPOST", "PATIENT.GPTEL", "PATIENT.TADR1", "PATIENT.TADR2", "PATIENT.TADR3", "PATIENT.TADR4", "PATIENT.TPOST", "PATIENT.TDTEL", "PATIENT.TNTEL", "PATIENT.SEXTXT"};
    private String[] PATIENT_ATTR_DESC = new String[] {"__", "__", "__", "__", "__", "_D", "_D", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__"};
    private ArrayList PATIENT_VALUE = new ArrayList();
    private ArrayList PATIENT_FILTERS = new ArrayList();
    private ims.dto.client.Patient patientRds = null;
    private String[] SD_SESSION = new String[] {"PRFILE_SESS_ID", "PRFILE_ID", "GRP_ID", "ACTIV_ID", "SESS_DT", "STM", "ETM", "SESS_DESC", "MAX_APP", "LASTAPPTINT", "REM_APPS", "INT_LOC_ID", "TCI_RNDING_INT", "PRFILE_SESS_STAT", "PRFILE_SESS_DUR", "REM_TM", "ACT_IND", "ACT_STM", "ACT_ETM", "STAT_REAS", "MIN_INT", "MOD_IND", "TSTP", "SCHED_CAT", "ACTIV_NAME", "ADHOC"};
    private String[] SD_SESSION_ALIAS = new String[] {"SD_SESSION.PRFILE_SESS_ID", "SD_SESSION.PRFILE_ID", "SD_SESSION.GRP_ID", "SD_SESSION.ACTIV_ID", "SD_SESSION.SESS_DT", "SD_SESSION.STM", "SD_SESSION.ETM", "SD_SESSION.SESS_DESC", "SD_SESSION.MAX_APP", "SD_SESSION.LASTAPPTINT", "SD_SESSION.REM_APPS", "SD_SESSION.INT_LOC_ID", "SD_SESSION.TCI_RNDING_INT", "SD_SESSION.PRFILE_SESS_STAT", "SD_SESSION.PRFILE_SESS_DUR", "SD_SESSION.REM_TM", "SD_SESSION.ACT_IND", "SD_SESSION.ACT_STM", "SD_SESSION.ACT_ETM", "SD_SESSION.STAT_REAS", "SD_SESSION.MIN_INT", "SD_SESSION.MOD_IND", "SD_SESSION.TSTP", "SD_SESSION.SCHED_CAT", "SD_SESSION.ACTIV_NAME", "SD_SESSION.ADHOC"};
    private String[] SD_SESSION_ATTR_DESC = new String[] {"__", "__", "__", "__", "_D", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__", "__"};
    private ArrayList SD_SESSION_VALUE = new ArrayList();
    private ArrayList SD_SESSION_FILTERS = new ArrayList();
    private ims.dto.client.Sd_session sd_sessionRds = null;
    private String[] LKUP = new String[] {"LKUP_ID", "LKUP_TYP", "LKUP_NM", "LKUP_DESC", "LKUP_STAT", "TSTP"};
    private String[] LKUP_ALIAS = new String[] {"LKUP.LKUP_ID", "LKUP.LKUP_TYP", "LKUP.LKUP_NM", "LKUP.LKUP_DESC", "LKUP.LKUP_STAT", "LKUP.TSTP"};
    private String[] LKUP_ATTR_DESC = new String[] {"__", "__", "__", "__", "__", "__"};
    private ArrayList LKUP_VALUE = new ArrayList();
    private ArrayList LKUP_FILTERS = new ArrayList();
    private ims.dto.client.Lkup lkupRds = null;
    private String[] RESOURCE = new String[] {"RSNO", "NAME", "ADR1", "ADR2", "ADR3", "ADR4"};
    private String[] RESOURCE_ALIAS = new String[] {"RESOURCE.RSNO", "RESOURCE.NAME", "RESOURCE.ADR1", "RESOURCE.ADR2", "RESOURCE.ADR3", "RESOURCE.ADR4"};
    private String[] RESOURCE_ATTR_DESC = new String[] {"__", "__", "__", "__", "__", "__"};
    private ArrayList RESOURCE_VALUE = new ArrayList();
    private ArrayList RESOURCE_FILTERS = new ArrayList();
    private ims.dto.client.Resource resourceRds = null;
    private String[] SD_APPT_DTS = new String[] {"APPT_ID", "APPT_HEAD_ID", "PRFILE_SESS_ID", "MODIDTXT", "MODENRGY", "MODENRGYUNITTXT", "ATTND_ASTXT", "TXCATTYPETXT", "ATT_TM", "LO_IDTXT", "APPT_STATTXT", "ATT_STATTXT", "APPT_CMTS", "SESS_DT", "ACTION_IDTXT", "ACTIVITYTXT", "TRANS_TYPTXT", "PRFILE_SESS_IDTXT", "MC_NM", "CONFIRM_STATTXT", "ACT_CONSULTTXT"};
    private String[] SD_APPT_DTS_ALIAS = new String[] {"SD_APPT_DTS.APPT_ID", "SD_APPT_DTS.APPT_HEAD_ID", "SD_APPT_DTS.PRFILE_SESS_ID", "SD_APPT_DTS.MODIDTXT", "SD_APPT_DTS.MODENRGY", "SD_APPT_DTS.MODENRGYUNITTXT", "SD_APPT_DTS.ATTND_ASTXT", "SD_APPT_DTS.TXCATTYPETXT", "SD_APPT_DTS.ATT_TM", "SD_APPT_DTS.LO_IDTXT", "SD_APPT_DTS.APPT_STATTXT", "SD_APPT_DTS.ATT_STATTXT", "SD_APPT_DTS.APPT_CMTS", "SD_APPT_DTS.SESS_DT", "SD_APPT_DTS.ACTION_IDTXT", "SD_APPT_DTS.ACTIVITYTXT", "SD_APPT_DTS.TRANS_TYPTXT", "SD_APPT_DTS.PRFILE_SESS_IDTXT", "SD_APPT_DTS.MC_NM", "SD_APPT_DTS.CONFIRM_STATTXT", "SD_APPT_DTS.ACT_CONSULTTXT"};
    private String[] SD_APPT_DTS_ATTR_DESC = new String[] {"__", "__", "__", "__", "__", "__", "__", "__", "_T", "__", "__", "__", "__", "_D", "__", "__", "__", "__", "__", "__", "__"};
    private ArrayList SD_APPT_DTS_VALUE = new ArrayList();
    private ArrayList SD_APPT_DTS_FILTERS = new ArrayList();
    private ims.dto.client.Sd_appt_dts sd_appt_dtsRds = null;
    private String[] SD_APPT_HIST = new String[] {"APPT_HEAD_ID", "APPT_ID", "APPT_HIST_ID", "HIST_CDATE", "FIRST_FLAG", "ORIGSESSD", "HIST_DT", "ORIGSESS", "ENDSESS", "HCP_BOOKING3", "HIST_REAS", "HIST_TYPE", "APPT_ID3", "HIST_REASTXT", "HIST_TYPETXT"};
    private String[] SD_APPT_HIST_ALIAS = new String[] {"SD_APPT_HIST.APPT_HEAD_ID", "SD_APPT_HIST.APPT_ID", "SD_APPT_HIST.APPT_HIST_ID", "SD_APPT_HIST.HIST_CDATE", "SD_APPT_HIST.FIRST_FLAG", "SD_APPT_HIST.ORIGSESSD", "SD_APPT_HIST.HIST_DT", "SD_APPT_HIST.ORIGSESS", "SD_APPT_HIST.ENDSESS", "SD_APPT_HIST.HCP_BOOKING3", "SD_APPT_HIST.HIST_REAS", "SD_APPT_HIST.HIST_TYPE", "SD_APPT_HIST.APPT_ID3", "SD_APPT_HIST.HIST_REASTXT", "SD_APPT_HIST.HIST_TYPETXT"};
    private String[] SD_APPT_HIST_ATTR_DESC = new String[] {"__", "__", "__", "_D", "__", "__", "_D", "__", "__", "__", "__", "__", "__", "__", "__"};
    private ArrayList SD_APPT_HIST_VALUE = new ArrayList();
    private ArrayList SD_APPT_HIST_FILTERS = new ArrayList();
    private ims.dto.client.Sd_appt_hist sd_appt_histRds = null;

    //Init default values
    private void InitDefaultValues()
    {
        int i;

        sd_apptRds = (Sd_appt)domain.getDTOInstance(Sd_appt.class);
        patientRds = (Patient)domain.getDTOInstance(Patient.class);
        sd_sessionRds = (Sd_session)domain.getDTOInstance(Sd_session.class);
        lkupRds = (Lkup)domain.getDTOInstance(Lkup.class);
        resourceRds = (Resource)domain.getDTOInstance(Resource.class);
        sd_appt_dtsRds = (Sd_appt_dts)domain.getDTOInstance(Sd_appt_dts.class);
        sd_appt_histRds = (Sd_appt_hist)domain.getDTOInstance(Sd_appt_hist.class);

        //init user variables
        IMS_USERVAR_VALUE.clear();
        for(i = 0; i < 11; i++)
        {
            IMS_USERVAR_VALUE.add(new ArrayList());

            for(int j = 0; j < SEED.length; j++)
            {
                if(SEED[j].equalsIgnoreCase(IMS_USERVAR[i]) == true)
                {
                    ArrayList al = (ArrayList)IMS_USERVAR_VALUE.get(i);
                    al.add(SEED_VALUE[j]);
                    IMS_USERVAR_VALUE.set(i,al);
                    break;
                }
            }
        }

        //init variables
        SD_APPT_VALUE.clear();
        for(i = 0; i < 86; i++)
            SD_APPT_VALUE.add(new ArrayList());
        PATIENT_VALUE.clear();
        for(i = 0; i < 34; i++)
            PATIENT_VALUE.add(new ArrayList());
        SD_SESSION_VALUE.clear();
        for(i = 0; i < 26; i++)
            SD_SESSION_VALUE.add(new ArrayList());
        LKUP_VALUE.clear();
        for(i = 0; i < 6; i++)
            LKUP_VALUE.add(new ArrayList());
        RESOURCE_VALUE.clear();
        for(i = 0; i < 6; i++)
            RESOURCE_VALUE.add(new ArrayList());
        SD_APPT_DTS_VALUE.clear();
        for(i = 0; i < 21; i++)
            SD_APPT_DTS_VALUE.add(new ArrayList());
        SD_APPT_HIST_VALUE.clear();
        for(i = 0; i < 15; i++)
            SD_APPT_HIST_VALUE.add(new ArrayList());

        int ix = 0;
        ix = GetIndexByName("SD_APPT.APPT_HEAD_ID", SD_APPT);
        ArrayList al = (ArrayList)SD_APPT_VALUE.get(ix);
        al.add(SEED_VALUE[GetIndexByName("SD_APPT.APPT_HEAD_ID", SEED)]);
        SD_APPT_VALUE.set(ix,al);
    }

    public void SetSeeds(String seed1, String seed2, String seed3)
    {
        SEED_VALUE[0] = seed1;
        SEED_VALUE[1] = seed2;
        SEED_VALUE[2] = seed3;
    }

    private boolean _internalGetData()
    {
        boolean bRet = true;

        //clear internal collections
        Clear();

        //init the default values first
        InitDefaultValues();

        //GET SD_APPT
        SD_APPT_FILTERS.clear();
        SD_APPT_FILTERS.add("APPT_HEAD_ID");
        bRet = CallService(sd_apptRds, "SD_APPT", "GET", SD_APPT, SD_APPT_ATTR_DESC, SD_APPT_VALUE, SD_APPT_FILTERS, false);
        //GET PATIENT
        PATIENT_FILTERS.clear();
        PATIENT_FILTERS.add("PKEY");
        CopyValue(PATIENT_VALUE, GetIndexByName("PKEY", PATIENT), (ArrayList)SD_APPT_VALUE.get(GetIndexByName("PKEY",SD_APPT)));
        bRet = CallService(patientRds, "PATIENT", "GET", PATIENT, PATIENT_ATTR_DESC, PATIENT_VALUE, PATIENT_FILTERS, false);
        //LIST SD_APPT_DTS
        SD_APPT_DTS_FILTERS.clear();
        SD_APPT_DTS_FILTERS.add("APPT_HEAD_ID");
        SD_APPT_DTS_FILTERS.add("APPT_ID");
        CopyValue(SD_APPT_DTS_VALUE, GetIndexByName("APPT_HEAD_ID", SD_APPT_DTS), (ArrayList)SD_APPT_VALUE.get(GetIndexByName("APPT_HEAD_ID",SD_APPT)));
        CopyValue(SD_APPT_DTS_VALUE, GetIndexByName("APPT_ID", SD_APPT_DTS), (ArrayList)IMS_USERVAR_VALUE.get(GetIndexByName("APPTID", IMS_USERVAR)));
        bRet = CallService(sd_appt_dtsRds, "SD_APPT_DTS", "LIST", SD_APPT_DTS, SD_APPT_DTS_ATTR_DESC, SD_APPT_DTS_VALUE, SD_APPT_DTS_FILTERS, true);
        //Initialisation variable
        CopyValue(IMS_USERVAR_VALUE, GetIndexByName("TRANSPORT_TXT", IMS_USERVAR) , (ArrayList)SD_APPT_DTS_VALUE.get(GetIndexByName("TRANS_TYPTXT",SD_APPT_DTS)));
        //Initialisation variable
        CopyValue(IMS_USERVAR_VALUE, GetIndexByName("LIST_OWNER_TXT", IMS_USERVAR) , (ArrayList)SD_APPT_DTS_VALUE.get(GetIndexByName("LO_IDTXT",SD_APPT_DTS)));
        //GET RESOURCE
        RESOURCE_FILTERS.clear();
        RESOURCE_FILTERS.add("RSNO");
        CopyValue(RESOURCE_VALUE, GetIndexByName("RSNO", RESOURCE), (ArrayList)PATIENT_VALUE.get(GetIndexByName("GPCD",PATIENT)));
        bRet = CallService(resourceRds, "RESOURCE", "GET", RESOURCE, RESOURCE_ATTR_DESC, RESOURCE_VALUE, RESOURCE_FILTERS, false);
        //Initialisation variable
        CopyValue(PATIENT_VALUE, GetIndexByName("GPADR1",PATIENT) , (ArrayList)RESOURCE_VALUE.get(GetIndexByName("ADR1",RESOURCE)));
        //Initialisation variable
        CopyValue(PATIENT_VALUE, GetIndexByName("GPADR2",PATIENT) , (ArrayList)RESOURCE_VALUE.get(GetIndexByName("ADR2",RESOURCE)));
        //Initialisation variable
        CopyValue(PATIENT_VALUE, GetIndexByName("GPADR3",PATIENT) , (ArrayList)RESOURCE_VALUE.get(GetIndexByName("ADR3",RESOURCE)));
        //Initialisation variable
        CopyValue(PATIENT_VALUE, GetIndexByName("GPADR4",PATIENT) , (ArrayList)RESOURCE_VALUE.get(GetIndexByName("ADR4",RESOURCE)));

        return bRet;
    }

    public String GetData()
    {
        boolean bRet = _internalGetData();

        //build results
        BuildResult(SD_APPT_ALIAS, SD_APPT_ATTR_DESC, SD_APPT_VALUE);
        BuildResult(PATIENT_ALIAS, PATIENT_ATTR_DESC, PATIENT_VALUE);
        BuildResult(SD_SESSION_ALIAS, SD_SESSION_ATTR_DESC, SD_SESSION_VALUE);
        BuildResult(LKUP_ALIAS, LKUP_ATTR_DESC, LKUP_VALUE);
        BuildResult(RESOURCE_ALIAS, RESOURCE_ATTR_DESC, RESOURCE_VALUE);
        BuildResult(SD_APPT_DTS_ALIAS, SD_APPT_DTS_ATTR_DESC, SD_APPT_DTS_VALUE);
        BuildResult(SD_APPT_HIST_ALIAS, SD_APPT_HIST_ATTR_DESC, SD_APPT_HIST_VALUE);
        BuildResult(IMS_USERVAR_ALIAS, IMS_USERVAR_DESC, IMS_USERVAR_VALUE);

        return Serialize();
    }

    public String GetStructuredData(String sName)
    {
        boolean bRet = _internalGetData();

        //build results
        BuildStructuredResult("SD_APPT", SD_APPT_ALIAS, SD_APPT_ATTR_DESC, SD_APPT_VALUE);
        BuildStructuredResult("PATIENT", PATIENT_ALIAS, PATIENT_ATTR_DESC, PATIENT_VALUE);
        BuildStructuredResult("SD_SESSION", SD_SESSION_ALIAS, SD_SESSION_ATTR_DESC, SD_SESSION_VALUE);
        BuildStructuredResult("LKUP", LKUP_ALIAS, LKUP_ATTR_DESC, LKUP_VALUE);
        BuildStructuredResult("RESOURCE", RESOURCE_ALIAS, RESOURCE_ATTR_DESC, RESOURCE_VALUE);
        BuildStructuredResult("SD_APPT_DTS", SD_APPT_DTS_ALIAS, SD_APPT_DTS_ATTR_DESC, SD_APPT_DTS_VALUE);
        BuildStructuredResult("SD_APPT_HIST", SD_APPT_HIST_ALIAS, SD_APPT_HIST_ATTR_DESC, SD_APPT_HIST_VALUE);
        BuildStructuredResult("IMS_USERVAR", IMS_USERVAR_ALIAS, IMS_USERVAR_DESC, IMS_USERVAR_VALUE);

        return SerializeStructuredData(sName);
    }
}
