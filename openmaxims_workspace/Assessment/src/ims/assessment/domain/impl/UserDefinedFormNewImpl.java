//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.45 build 2389.16953)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.assessment.domain.impl;

import ims.assessment.domain.base.impl.BaseUserDefinedFormNewImpl;
import ims.assessment.configuration.domain.objects.UserDefinedObject;
import ims.assessment.domain.UserDefinedForm;
import ims.assessment.vo.UserDefinedObjectVo;
import ims.assessment.vo.domain.UserDefinedObjectVoAssembler;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

public class UserDefinedFormNewImpl extends BaseUserDefinedFormNewImpl
{
	public ims.assessment.vo.UserDefinedObjectVo saveUserDefinedObjects(ims.assessment.vo.UserDefinedObjectVo voUserDefinedObject) throws ims.domain.exceptions.StaleObjectException
	{
		if(voUserDefinedObject == null)
			throw new RuntimeException("Cannot save null value for UserDefinedObjectVo");
		if(voUserDefinedObject.isValidated() == false)
			throw new CodingRuntimeException("UserDefinedObjectVo has not been validated");
			
		DomainFactory factory = getDomainFactory();
		UserDefinedObject doUserDefinedObject = UserDefinedObjectVoAssembler.extractUserDefinedObject(factory, voUserDefinedObject);
		factory.save(doUserDefinedObject);
		
		return UserDefinedObjectVoAssembler.create(doUserDefinedObject);
	}

	public UserDefinedObjectVo getUserDefinedObject(Integer id)
	{
		if(id == null)
			throw new CodingRuntimeException("Cannot get UserDefinedObjectVo for null id");
		UserDefinedForm userImpl = (UserDefinedForm) getDomainImpl(UserDefinedFormImpl.class);
		return userImpl.getUserDefinedObject(id);
	}
}
