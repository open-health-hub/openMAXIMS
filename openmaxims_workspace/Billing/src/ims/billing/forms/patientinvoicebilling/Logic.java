//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Catalin Tomozei using IMS Development Environment (version 1.80 build 3999.26423)
// Copyright (C) 1995-2010 IMS MAXIMS. All rights reserved.

package ims.billing.forms.patientinvoicebilling;

import java.text.ParseException;

import ims.billing.forms.patientinvoicebilling.GenForm.lyr1Layer.tabBillingContainer.Group1Enumeration;
import ims.billing.forms.patientinvoicebilling.GenForm.lyr1Layer.tabBillingContainer.grd2Row;
import ims.billing.forms.patientinvoicebilling.GenForm.lyr1Layer.tabInvoicesContainer.grd1Row;
import ims.framework.utils.DateTime;


public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.getContextMenus().Billing.getPatientInvoiceBillingAddItemItem().setVisible(true);
		form.getContextMenus().Billing.getPatientInvoiceBillingEditItemItem().setVisible(true);
		form.getContextMenus().Billing.getPatientInvoiceBillingRemoveItemItem().setVisible(true);
		form.getContextMenus().Billing.getPatientInvoiceBillingAddPaymentItem().setVisible(true);
		form.getContextMenus().Billing.getPatientInvoiceBillingAddDiscountItem().setVisible(true);
		form.getContextMenus().Billing.getPatientInvoiceBillingTrackInsuranceItem().setVisible(true);
		
		try {
			populateScreen();
			populateTabInvoice();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	private void populateTabInvoice() 
	{
		grd1Row row = form.lyr1().tabInvoices().grd1().getRows().newRow();
		row.setColImg(form.getImages().Admin.Assign);
		row.setColInvoiceNo("000012");
		row.setColInvoiceDate("16/12/2010");
		row.setColDueDate("16/12/2010");
		row.setColPayor("0");
		row.setColInvoice("X-12123");
		row.setColAmount("1500");
		row.setColOpen("0");		
	}
	@Override
	protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
	{
		// TODO Add your code here.
	}
	@Override
	protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
	{
		switch (menuItemID)
		{
			case GenForm.ContextMenus.BillingNamespace.PatientInvoiceBilling.AddItem:
				addItem();
				break;
			case GenForm.ContextMenus.BillingNamespace.PatientInvoiceBilling.EditItem:
				editItem();
				break;	
			case GenForm.ContextMenus.BillingNamespace.PatientInvoiceBilling.RemoveItem:
				removeItem();
				break;
			case GenForm.ContextMenus.BillingNamespace.PatientInvoiceBilling.AddPayment:
				addPayment();
				break;	
			case GenForm.ContextMenus.BillingNamespace.PatientInvoiceBilling.AddDiscount:
				addDiscount();
				break;		
			case GenForm.ContextMenus.BillingNamespace.PatientInvoiceBilling.TrackInsurance:
				trackInsurance();
				break;	
		}
		
	}
	private void addItem() 
	{	
		engine.open(form.getForms().Clinical.PackagesAndConsumables);
	}
	private void editItem() 
	{	
		engine.open(form.getForms().Clinical.PackagesAndConsumables);
	}
	private void removeItem() 
	{	
		engine.open(form.getForms().Clinical.PackagesAndConsumables);
	}
	private void addPayment() 
	{	
		engine.open(form.getForms().Billing.AddPayment);
	}
	private void addDiscount() 
	{	
		engine.open(form.getForms().Billing.AddDiscountDialog);
	}
	private void trackInsurance() 
	{	
		engine.open(form.getForms().Billing.TrackInsuranceAndProviderBilling);
	}
	
	private void populateScreen() throws ParseException
	{
		form.lyr1().tabBilling().txt1().setValue("000012");
		form.lyr1().tabBilling().dtim1().setValue(new DateTime("20101216152034134"));
		form.lyr1().tabBilling().txt11().setValue("X-12123");
		form.lyr1().tabBilling().txt12().setValue("Total Prosthetic Replacement of HIP Joint");
		form.lyr1().tabBilling().int1().setValue(7);
		form.lyr1().tabBilling().Group1().setValue(Group1Enumeration.rdo2);
		form.lyr1().tabBilling().dec1().setValue(new Float(100.00));
		form.lyr1().tabBilling().dec2().setValue(new Float(1500.00));
		form.lyr1().tabBilling().dec3().setValue(new Float(0.00));
		form.lyr1().tabBilling().dec4().setValue(new Float(315.00));
		form.lyr1().tabBilling().dtim2().setValue(new DateTime("20100916152034134"));
		form.lyr1().tabBilling().dtim3().setValue(new DateTime("20101616152034134"));
		form.lyr1().tabBilling().txt2().setValue("1500");
		form.lyr1().tabBilling().txt7().setValue("1500");
		form.lyr1().tabBilling().txt8().setValue("0");
		form.lyr1().tabBilling().txt9().setValue("1500");
		form.lyr1().tabBilling().txt10().setValue("1500");
		
		populateGrid();
	}
	
	private void populateGrid()
	{
		grd2Row row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("09/12/2010");
		row.setColQuantity("7");
		row.setColDescription("Inpatient Night");
		row.setColUnitPrice("100");
		row.setColSubTotal("0");
		row.setColPST(new Float(21.0));
		row.setColGST(new Float(147));
		row.setColTotal("700");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("10/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Total Prosthetic Replacement of HIP Joint");
		row.setColUnitPrice("90");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("90");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("10/12/2010");
		row.setColQuantity("3");
		row.setColDescription("Morphine 5mgs, 10mgs");
		row.setColUnitPrice("3.30");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("9.90");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("10/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Oral Analgesia – co-codamol, paracetamol");
		row.setColUnitPrice("0.45");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("0.90");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("10/12/2010");
		row.setColQuantity("12");
		row.setColDescription("Gentamicin 80mgs IV");
		row.setColUnitPrice("0.8");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("9.20");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("11/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Gauze packs");
		row.setColUnitPrice("18");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("18");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("11/12/2010");
		row.setColQuantity("2");
		row.setColDescription("Swab packs");
		row.setColUnitPrice("6");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("12");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("12/12/2010");
		row.setColQuantity("2");
		row.setColDescription("Dressing pack – Small, Large");
		row.setColUnitPrice("21");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("42");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("13/12/2010");
		row.setColQuantity("10");
		row.setColDescription("Normal Saline satchets");
		row.setColUnitPrice("0.3");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("3");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("14/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Dexon  1/0, 2/0");
		row.setColUnitPrice("90");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("90");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("14/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Nasal oxygen cannula");
		row.setColUnitPrice("45");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("45");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("14/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Oxygen facemask");
		row.setColUnitPrice("42");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("42");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("15/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Rebreather oxygen mask");
		row.setColUnitPrice("35");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("35");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("15/12/2010");
		row.setColQuantity("1");
		row.setColDescription("Wound Dressing pack");
		row.setColUnitPrice("68");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("68");
		
		row = form.lyr1().tabBilling().grd2().getRows().newRow();
		row.setColDate("16/12/2010");
		row.setColQuantity("3");
		row.setColDescription("X-Ray – 1 joint, 3 views");
		row.setColUnitPrice("20");
		row.setColSubTotal("0");
		row.setColPST(new Float(0));
		row.setColGST(new Float(0));
		row.setColTotal("60");
	}
	
}
