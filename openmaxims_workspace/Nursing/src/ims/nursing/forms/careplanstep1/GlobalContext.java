//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.careplanstep1;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		COE = new COEContext(context);
		Core = new CoreContext(context);
	}
	public final class COEContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private COEContext(ims.framework.Context context)
		{
			this.context = context;

			CarePlan = new CarePlanContext(context);
		}
		public final class CarePlanContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private CarePlanContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getCarePlanTemplatesIsNotNull()
			{
				return !cx_COECarePlanCarePlanTemplates.getValueIsNull(context);
			}
			public ims.nursing.vo.CarePlanTemplateCollection getCarePlanTemplates()
			{
				return (ims.nursing.vo.CarePlanTemplateCollection)cx_COECarePlanCarePlanTemplates.getValue(context);
			}
		public void setCarePlanTemplates(ims.nursing.vo.CarePlanTemplateCollection value)
		{
				cx_COECarePlanCarePlanTemplates.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COECarePlanCarePlanTemplates = new ims.framework.ContextVariable("COE.CarePlan.CarePlanTemplates", "_cv_COE.CarePlan.CarePlanTemplates");
			public boolean getSearchToggleIsNotNull()
			{
				return !cx_COECarePlanSearchToggle.getValueIsNull(context);
			}
			public String getSearchToggle()
			{
				return (String)cx_COECarePlanSearchToggle.getValue(context);
			}
		public void setSearchToggle(String value)
		{
				cx_COECarePlanSearchToggle.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COECarePlanSearchToggle = new ims.framework.ContextVariable("COE.CarePlan.SearchToggle", "_cv_COE.CarePlan.SearchToggle");
			public boolean getSearchCriteriaIsNotNull()
			{
				return !cx_COECarePlanSearchCriteria.getValueIsNull(context);
			}
			public String getSearchCriteria()
			{
				return (String)cx_COECarePlanSearchCriteria.getValue(context);
			}
		public void setSearchCriteria(String value)
		{
				cx_COECarePlanSearchCriteria.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_COECarePlanSearchCriteria = new ims.framework.ContextVariable("COE.CarePlan.SearchCriteria", "_cv_COE.CarePlan.SearchCriteria");
			private ims.framework.Context context;
		}

		public boolean getCarePlanTemplateTitleIsNotNull()
		{
			return !cx_COECarePlanTemplateTitle.getValueIsNull(context);
		}
		public ims.nursing.vo.CarePlanTemplateTitle getCarePlanTemplateTitle()
		{
			return (ims.nursing.vo.CarePlanTemplateTitle)cx_COECarePlanTemplateTitle.getValue(context);
		}
		public void setCarePlanTemplateTitle(ims.nursing.vo.CarePlanTemplateTitle value)
		{
			cx_COECarePlanTemplateTitle.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlanTemplateTitle = new ims.framework.ContextVariable("COE.CarePlanTemplateTitle", "_cv_COE.CarePlanTemplateTitle");
		public boolean getCarePlanObjectiveIsNotNull()
		{
			return !cx_COECarePlanObjective.getValueIsNull(context);
		}
		public String getCarePlanObjective()
		{
			return (String)cx_COECarePlanObjective.getValue(context);
		}
		public void setCarePlanObjective(String value)
		{
			cx_COECarePlanObjective.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlanObjective = new ims.framework.ContextVariable("COE.CarePlanObjective", "_cv_COE.CarePlanObjective");
		public boolean getCarePlanTitleIsNotNull()
		{
			return !cx_COECarePlanTitle.getValueIsNull(context);
		}
		public String getCarePlanTitle()
		{
			return (String)cx_COECarePlanTitle.getValue(context);
		}
		public void setCarePlanTitle(String value)
		{
			cx_COECarePlanTitle.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlanTitle = new ims.framework.ContextVariable("COE.CarePlanTitle", "_cv_COE.CarePlanTitle");

		public CarePlanContext CarePlan;
		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");

		private ims.framework.Context context;
	}

	public COEContext COE;
	public CoreContext Core;
}
