//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.18 build 40707.1000)
// Copyright (C) 1995-2004 IMS MAXIMS plc. All rights reserved.

package ims.nursing.forms.careplannotecorrect;

import ims.nursing.vo.CarePlanEvaluationNote;
import ims.framework.enumerations.DialogResult;
import ims.framework.utils.DateTime;

public class Logic extends BaseLogic
{
	protected void onFormOpen() throws ims.framework.exceptions.FormOpenException
	{
		CarePlanEvaluationNote note = form.getGlobalContext().COE.getCarePlanEvaluation();

		if(note == null)
			note = new CarePlanEvaluationNote();

		form.getLocalContext().setCarePlanEvalNote(note);
	
		form.dateNote().setValue(note.getRecordedDateTime().getDate());
		form.timeNote().setValue(note.getRecordedDateTime().getTime());
		if (note.getRecordedBy() != null)
			form.textBoxHCP().setValue(note.getRecordedBy().getName().toString());
		form.textBoxNote().setValue(note.getNote());
	}
	protected void onBCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	protected void onBSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		if(validateUserInput())
		{
			CarePlanEvaluationNote note = form.getLocalContext().getCarePlanEvalNote();

			if(note == null)
				note = new CarePlanEvaluationNote();
			
			note.setCorrectedBy((ims.core.vo.HcpLiteVo)domain.getHcpLiteUser());
			note.setCorrectionReason(form.textBoxCorrection().getValue());
			note.setCorrectionDateTime(new DateTime());
			note.setActive(new Boolean(false));
			
			form.getGlobalContext().COE.setCarePlanEvaluation(note);
			engine.close(DialogResult.OK);
		}	
	}
	
	boolean validateUserInput()
	{
		if(form.checkBoxConfirmed().getValue() == false)
		{	
			engine.showMessage("Please Confirm Correction");
			return false;
		}
	
		return true;
	}
}
