//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.careplandetails;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		COE = new COEContext(context);
		Nursing = new NursingContext(context);
		Core = new CoreContext(context);
	}
	public final class COEContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private COEContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCarePlanTemplateInterventionsIsNotNull()
		{
			return !cx_COECarePlanTemplateInterventions.getValueIsNull(context);
		}
		public ims.nursing.vo.CarePlanTemplateInterventionCollection getCarePlanTemplateInterventions()
		{
			return (ims.nursing.vo.CarePlanTemplateInterventionCollection)cx_COECarePlanTemplateInterventions.getValue(context);
		}
		public void setCarePlanTemplateInterventions(ims.nursing.vo.CarePlanTemplateInterventionCollection value)
		{
			cx_COECarePlanTemplateInterventions.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlanTemplateInterventions = new ims.framework.ContextVariable("COE.CarePlanTemplateInterventions", "_cv_COE.CarePlanTemplateInterventions");
		public boolean getCarePlanIsNotNull()
		{
			return !cx_COECarePlan.getValueIsNull(context);
		}
		public ims.nursing.vo.CarePlan getCarePlan()
		{
			return (ims.nursing.vo.CarePlan)cx_COECarePlan.getValue(context);
		}
		public void setCarePlan(ims.nursing.vo.CarePlan value)
		{
			cx_COECarePlan.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlan = new ims.framework.ContextVariable("COE.CarePlan", "_cv_COE.CarePlan");
		public boolean getCarePlanIDIsNotNull()
		{
			return !cx_COECarePlanID.getValueIsNull(context);
		}
		public Integer getCarePlanID()
		{
			return (Integer)cx_COECarePlanID.getValue(context);
		}
		public void setCarePlanID(Integer value)
		{
			cx_COECarePlanID.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlanID = new ims.framework.ContextVariable("COE.CarePlanID", "_cv_COE.CarePlanID");
		public boolean getCarePlanEvaluationIsNotNull()
		{
			return !cx_COECarePlanEvaluation.getValueIsNull(context);
		}
		public ims.nursing.vo.CarePlanEvaluationNote getCarePlanEvaluation()
		{
			return (ims.nursing.vo.CarePlanEvaluationNote)cx_COECarePlanEvaluation.getValue(context);
		}
		public void setCarePlanEvaluation(ims.nursing.vo.CarePlanEvaluationNote value)
		{
			cx_COECarePlanEvaluation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_COECarePlanEvaluation = new ims.framework.ContextVariable("COE.CarePlanEvaluation", "_cv_COE.CarePlanEvaluation");

		private ims.framework.Context context;
	}
	public final class NursingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private NursingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getShowCarePlanRvwDialogIsNotNull()
		{
			return !cx_NursingShowCarePlanRvwDialog.getValueIsNull(context);
		}
		public Boolean getShowCarePlanRvwDialog()
		{
			return (Boolean)cx_NursingShowCarePlanRvwDialog.getValue(context);
		}
		public void setShowCarePlanRvwDialog(Boolean value)
		{
			cx_NursingShowCarePlanRvwDialog.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingShowCarePlanRvwDialog = new ims.framework.ContextVariable("Nursing.ShowCarePlanRvwDialog", "_cv_Nursing.ShowCarePlanRvwDialog");
		public boolean getCarePlanInterventionsIsNotNull()
		{
			return !cx_NursingCarePlanInterventions.getValueIsNull(context);
		}
		public ims.nursing.vo.CarePlanInterventionsCollection getCarePlanInterventions()
		{
			return (ims.nursing.vo.CarePlanInterventionsCollection)cx_NursingCarePlanInterventions.getValue(context);
		}
		public void setCarePlanInterventions(ims.nursing.vo.CarePlanInterventionsCollection value)
		{
			cx_NursingCarePlanInterventions.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingCarePlanInterventions = new ims.framework.ContextVariable("Nursing.CarePlanInterventions", "_cv_Nursing.CarePlanInterventions");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getHospitalIsNotNull()
		{
			return !cx_CoreHospital.getValueIsNull(context);
		}
		public ims.core.vo.LocMostVo getHospital()
		{
			return (ims.core.vo.LocMostVo)cx_CoreHospital.getValue(context);
		}
		public void setHospital(ims.core.vo.LocMostVo value)
		{
			cx_CoreHospital.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreHospital = new ims.framework.ContextVariable("Core.Hospital", "_cv_Core.Hospital");
		public boolean getWardIsNotNull()
		{
			return !cx_CoreWard.getValueIsNull(context);
		}
		public ims.core.vo.LocMostVo getWard()
		{
			return (ims.core.vo.LocMostVo)cx_CoreWard.getValue(context);
		}
		public void setWard(ims.core.vo.LocMostVo value)
		{
			cx_CoreWard.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreWard = new ims.framework.ContextVariable("Core.Ward", "_cv_Core.Ward");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getCurrentClinicalContactIsNotNull()
		{
			return !cx_CoreCurrentClinicalContact.getValueIsNull(context);
		}
		public ims.core.vo.ClinicalContactShortVo getCurrentClinicalContact()
		{
			return (ims.core.vo.ClinicalContactShortVo)cx_CoreCurrentClinicalContact.getValue(context);
		}
		public void setCurrentClinicalContact(ims.core.vo.ClinicalContactShortVo value)
		{
			cx_CoreCurrentClinicalContact.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentClinicalContact = new ims.framework.ContextVariable("Core.CurrentClinicalContact", "_cvp_Core.CurrentClinicalContact");
		public boolean getReportIDIsNotNull()
		{
			return !cx_CoreReportID.getValueIsNull(context);
		}
		public Integer getReportID()
		{
			return (Integer)cx_CoreReportID.getValue(context);
		}
		public void setReportID(Integer value)
		{
			cx_CoreReportID.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreReportID = new ims.framework.ContextVariable("Core.ReportID", "_cv_Core.ReportID");
		public boolean getTemplateIDIsNotNull()
		{
			return !cx_CoreTemplateID.getValueIsNull(context);
		}
		public Integer getTemplateID()
		{
			return (Integer)cx_CoreTemplateID.getValue(context);
		}
		public void setTemplateID(Integer value)
		{
			cx_CoreTemplateID.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreTemplateID = new ims.framework.ContextVariable("Core.TemplateID", "_cv_Core.TemplateID");
		public boolean getYesNoDialogMessageIsNotNull()
		{
			return !cx_CoreYesNoDialogMessage.getValueIsNull(context);
		}
		public String getYesNoDialogMessage()
		{
			return (String)cx_CoreYesNoDialogMessage.getValue(context);
		}
		public void setYesNoDialogMessage(String value)
		{
			cx_CoreYesNoDialogMessage.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreYesNoDialogMessage = new ims.framework.ContextVariable("Core.YesNoDialogMessage", "_cv_Core.YesNoDialogMessage");

		private ims.framework.Context context;
	}

	public COEContext COE;
	public NursingContext Nursing;
	public CoreContext Core;
}
