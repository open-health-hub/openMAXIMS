//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.dailypatientprogressdlg;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Nursing = new NursingContext(context);
		Core = new CoreContext(context);
	}
	public final class NursingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private NursingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPlanOfCareCollectionIsNotNull()
		{
			return !cx_NursingPlanOfCareCollection.getValueIsNull(context);
		}
		public ims.nursing.vo.PlanOfCareVoCollection getPlanOfCareCollection()
		{
			return (ims.nursing.vo.PlanOfCareVoCollection)cx_NursingPlanOfCareCollection.getValue(context);
		}
		public void setPlanOfCareCollection(ims.nursing.vo.PlanOfCareVoCollection value)
		{
			cx_NursingPlanOfCareCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingPlanOfCareCollection = new ims.framework.ContextVariable("Nursing.PlanOfCareCollection", "_cv_Nursing.PlanOfCareCollection");
		public boolean getDPPQuestionGroupListVoCollectionIsNotNull()
		{
			return !cx_NursingDPPQuestionGroupListVoCollection.getValueIsNull(context);
		}
		public ims.assessment.vo.DPPQuestionGroupListVoCollection getDPPQuestionGroupListVoCollection()
		{
			return (ims.assessment.vo.DPPQuestionGroupListVoCollection)cx_NursingDPPQuestionGroupListVoCollection.getValue(context);
		}
		public void setDPPQuestionGroupListVoCollection(ims.assessment.vo.DPPQuestionGroupListVoCollection value)
		{
			cx_NursingDPPQuestionGroupListVoCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingDPPQuestionGroupListVoCollection = new ims.framework.ContextVariable("Nursing.DPPQuestionGroupListVoCollection", "_cv_Nursing.DPPQuestionGroupListVoCollection");
		public boolean getIsFirstDppInstantiationIsNotNull()
		{
			return !cx_NursingIsFirstDppInstantiation.getValueIsNull(context);
		}
		public Boolean getIsFirstDppInstantiation()
		{
			return (Boolean)cx_NursingIsFirstDppInstantiation.getValue(context);
		}
		public void setIsFirstDppInstantiation(Boolean value)
		{
			cx_NursingIsFirstDppInstantiation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingIsFirstDppInstantiation = new ims.framework.ContextVariable("Nursing.IsFirstDppInstantiation", "_cv_Nursing.IsFirstDppInstantiation");
		public boolean getIsDppAdmissionAssessmentAddedIsNotNull()
		{
			return !cx_NursingIsDppAdmissionAssessmentAdded.getValueIsNull(context);
		}
		public Boolean getIsDppAdmissionAssessmentAdded()
		{
			return (Boolean)cx_NursingIsDppAdmissionAssessmentAdded.getValue(context);
		}
		public void setIsDppAdmissionAssessmentAdded(Boolean value)
		{
			cx_NursingIsDppAdmissionAssessmentAdded.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingIsDppAdmissionAssessmentAdded = new ims.framework.ContextVariable("Nursing.IsDppAdmissionAssessmentAdded", "_cv_Nursing.IsDppAdmissionAssessmentAdded");
		public boolean getUserAssessmentDPPIsNotNull()
		{
			return !cx_NursingUserAssessmentDPP.getValueIsNull(context);
		}
		public ims.assessment.vo.UserAssessmentVo getUserAssessmentDPP()
		{
			return (ims.assessment.vo.UserAssessmentVo)cx_NursingUserAssessmentDPP.getValue(context);
		}
		public void setUserAssessmentDPP(ims.assessment.vo.UserAssessmentVo value)
		{
			cx_NursingUserAssessmentDPP.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingUserAssessmentDPP = new ims.framework.ContextVariable("Nursing.UserAssessmentDPP", "_cv_Nursing.UserAssessmentDPP");
		public boolean getPatientAssessmentVoIsNotNull()
		{
			return !cx_NursingPatientAssessmentVo.getValueIsNull(context);
		}
		public ims.assessment.vo.PatientAssessmentVo getPatientAssessmentVo()
		{
			return (ims.assessment.vo.PatientAssessmentVo)cx_NursingPatientAssessmentVo.getValue(context);
		}
		public void setPatientAssessmentVo(ims.assessment.vo.PatientAssessmentVo value)
		{
			cx_NursingPatientAssessmentVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingPatientAssessmentVo = new ims.framework.ContextVariable("Nursing.PatientAssessmentVo", "_cv_Nursing.PatientAssessmentVo");
		public boolean getIsDppCompletedIsNotNull()
		{
			return !cx_NursingIsDppCompleted.getValueIsNull(context);
		}
		public Boolean getIsDppCompleted()
		{
			return (Boolean)cx_NursingIsDppCompleted.getValue(context);
		}
		public void setIsDppCompleted(Boolean value)
		{
			cx_NursingIsDppCompleted.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingIsDppCompleted = new ims.framework.ContextVariable("Nursing.IsDppCompleted", "_cv_Nursing.IsDppCompleted");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getYesNoDialogMessageIsNotNull()
		{
			return !cx_CoreYesNoDialogMessage.getValueIsNull(context);
		}
		public String getYesNoDialogMessage()
		{
			return (String)cx_CoreYesNoDialogMessage.getValue(context);
		}
		public void setYesNoDialogMessage(String value)
		{
			cx_CoreYesNoDialogMessage.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreYesNoDialogMessage = new ims.framework.ContextVariable("Core.YesNoDialogMessage", "_cv_Core.YesNoDialogMessage");
		public boolean getCurrentClinicalContactIsNotNull()
		{
			return !cx_CoreCurrentClinicalContact.getValueIsNull(context);
		}
		public ims.core.vo.ClinicalContactShortVo getCurrentClinicalContact()
		{
			return (ims.core.vo.ClinicalContactShortVo)cx_CoreCurrentClinicalContact.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentClinicalContact = new ims.framework.ContextVariable("Core.CurrentClinicalContact", "_cvp_Core.CurrentClinicalContact");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getEpisodeofCareShortIsNotNull()
		{
			return !cx_CoreEpisodeofCareShort.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareShortVo getEpisodeofCareShort()
		{
			return (ims.core.vo.EpisodeofCareShortVo)cx_CoreEpisodeofCareShort.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreEpisodeofCareShort = new ims.framework.ContextVariable("Core.EpisodeofCareShort", "_cvp_Core.EpisodeofCareShort");

		private ims.framework.Context context;
	}

	public NursingContext Nursing;
	public CoreContext Core;
}
