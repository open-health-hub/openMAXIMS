//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.patientmovement;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.nursing.domain.PatientMovement.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.nursing.domain.PatientMovement domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void bindgridScreeningcolStatusLookup()
	{
		this.form.layerControl1().screening().gridScreening().answerBoxColumnClear(1);
		ims.core.vo.lookups.YesNoUnknownCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getYesNoUnknown(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.layerControl1().screening().gridScreening().answerBoxColumnNewOption(1, lookupCollection.get(x));
		}
	}
	protected final void bindgridMovementcolEquipmentLookup()
	{
		this.form.layerControl1().movement().gridMovement().colEquipmentComboBox().clear();
		ims.coe.vo.lookups.MechanicalEquipmentCollection lookupCollection = ims.coe.vo.lookups.LookupHelper.getMechanicalEquipment(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.layerControl1().movement().gridMovement().colEquipmentComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void bindgridMovementColOtherEquipmentLookup()
	{
		this.form.layerControl1().movement().gridMovement().ColOtherEquipmentComboBox().clear();
		ims.coe.vo.lookups.EquipmentOtherCollection lookupCollection = ims.coe.vo.lookups.LookupHelper.getEquipmentOther(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.layerControl1().movement().gridMovement().ColOtherEquipmentComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.nursing.domain.PatientMovement domain;
}
