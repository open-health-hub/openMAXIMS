//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.correspondence.forms.noletterrequiredadmin;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.correspondence.domain.NoLetterRequiredAdmin.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.correspondence.domain.NoLetterRequiredAdmin domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void bindgrdConsultantcolExcludeLookup()
	{
		this.form.grdConsultant().answerBoxColumnClear(4);
		ims.correspondence.vo.lookups.YesCollection lookupCollection = ims.correspondence.vo.lookups.LookupHelper.getYes(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.grdConsultant().answerBoxColumnNewOption(4, lookupCollection.get(x));
		}
	}
	protected final void bindgrdCliniccolExcludeNewLookup()
	{
		this.form.grdClinic().answerBoxColumnClear(4);
		ims.correspondence.vo.lookups.YesCollection lookupCollection = ims.correspondence.vo.lookups.LookupHelper.getYes(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.grdClinic().answerBoxColumnNewOption(4, lookupCollection.get(x));
		}
	}
	protected final void bindgrdCliniccolExcludeReviewLookup()
	{
		this.form.grdClinic().answerBoxColumnClear(5);
		ims.correspondence.vo.lookups.YesCollection lookupCollection = ims.correspondence.vo.lookups.LookupHelper.getYes(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.grdClinic().answerBoxColumnNewOption(5, lookupCollection.get(x));
		}
	}
	protected final void bindgrdSpecialtycolExcludeLookup()
	{
		this.form.grdSpecialty().answerBoxColumnClear(4);
		ims.correspondence.vo.lookups.YesCollection lookupCollection = ims.correspondence.vo.lookups.LookupHelper.getYes(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.grdSpecialty().answerBoxColumnNewOption(4, lookupCollection.get(x));
		}
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.correspondence.domain.NoLetterRequiredAdmin domain;
}
