//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Dara Hickey using IMS Development Environment (version 1.32 build 2074.21380)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.correspondence.domain.impl;


import ims.core.admin.pas.vo.PASEventRefVo;
import ims.core.domain.ADT;
import ims.core.domain.impl.ADTImpl;
import ims.core.vo.PasEventVo;
import ims.correspondence.domain.CorrespondenceDetails;
import ims.correspondence.vo.CorrespondenceDetailsRefVo;
import ims.correspondence.vo.CorrespondenceDetailsVo;
import ims.correspondence.vo.CorrespondenceStatusHistoryVoCollection;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.domain.impl.DomainImpl;
import ims.framework.exceptions.CodingRuntimeException;
import ims.vo.LookupInstVo;


public class DocumentStatusDlgImpl extends DomainImpl implements ims.correspondence.domain.DocumentStatusDlg, ims.domain.impl.Transactional
{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/* (non-Javadoc)
	 * @see ims.dischargeletters.domain.DocumentStatusHistoryDlg#listDocumentStatusHistory(java.lang.Integer)
	 */
	public CorrespondenceStatusHistoryVoCollection getCorrespondenceStatusHistory(CorrespondenceDetailsRefVo voCorrespDetRef) 
	{	
		CorrespondenceDetails impl = (CorrespondenceDetails) getDomainImpl(CorrespondenceDetailsImpl.class);
		return impl.getCorrespondenceStatusHistory(voCorrespDetRef);
	}

	public ims.correspondence.vo.CorrespondenceDetailsVo saveCorrespondenceDetails(CorrespondenceDetailsVo voDocumentDetails, LookupInstVo pasEventType) throws DomainInterfaceException, StaleObjectException, UniqueKeyViolationException  
	{
		CorrespondenceDetails impl = (CorrespondenceDetails) getDomainImpl(CorrespondenceDetailsImpl.class);
		return impl.saveCorrespondenceDetails(voDocumentDetails,pasEventType);
	}

	public CorrespondenceDetailsVo getCorrespondenceDetails(CorrespondenceDetailsRefVo voRefCorrespondence) 
	{
		CorrespondenceDetails impl = (CorrespondenceDetails) getDomainImpl(CorrespondenceDetailsImpl.class);
		return impl.getCorrespondenceDetails(voRefCorrespondence);
	}

	public PasEventVo getPasEvent(PASEventRefVo voPasEventRef) 
	{
		if (voPasEventRef == null)
			throw new CodingRuntimeException("Mandatory Argument - PAS Event Required");
		
		ADT impl = (ADT)getDomainImpl(ADTImpl.class);
		return impl.getPasEvent(voPasEventRef);
	}

}
