//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Sean Nesbitt using IMS Development Environment (version 1.28 build 2000.23325)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.correspondence.domain.impl;

import ims.admin.domain.FormReports;
import ims.admin.domain.impl.FormReportsImpl;
import ims.admin.vo.ReportSeedVoCollection;
import ims.admin.vo.ReportVo;
import ims.core.domain.ViewReport;
import ims.core.domain.impl.ViewReportImpl;
import ims.core.documents.domain.objects.Document;
import ims.core.vo.domain.DocumentVoAssembler;
import ims.core.vo.DocumentVo;
import ims.domain.DomainFactory;
import ims.domain.impl.DomainImpl;
import ims.core.admin.domain.objects.ReportBo;
import ims.correspondence.vo.domain.DocReportVoAssembler;

public class ProcessReportImpl extends DomainImpl implements ims.correspondence.domain.ProcessReport, ims.domain.impl.Transactional
{
	/**
	* get report and template
	*/
	public String[] getReportAndTemplate(Integer nReportId, Integer nTemplateId) throws ims.domain.exceptions.DomainInterfaceException
	{
		ViewReport impl = (ViewReport)getDomainImpl(ViewReportImpl.class);
		return impl.getReportAndTemplate(nReportId,nTemplateId);
	}

	/**
	* get selected report to get seed name
	*/
	public ims.correspondence.vo.DocReportVo getReport(Integer reportId)
	{
		DomainFactory factory = getDomainFactory();
		ReportBo domReport = (ReportBo) factory.getDomainObject(ReportBo.class, reportId.intValue());
		return DocReportVoAssembler.create(domReport);
	}

	/* (non-Javadoc)
	 * @see ims.dischargeletters.domain.ProcessReport#getDocument(ims.core.vo.DocumentVo)
	 */
	public DocumentVo getDocument(DocumentVo voDocFilter) {
		DomainFactory factory = getDomainFactory();
		Document domDoc = (Document) factory.getDomainObject(Document.class, voDocFilter.getID_Document());
		return DocumentVoAssembler.create(domDoc);
	}

	public ReportSeedVoCollection getReportSeeds(ReportVo reportVo) 
	{
	    FormReports formReportsImpl = (FormReports)getDomainImpl(FormReportsImpl.class);
        return formReportsImpl.getReportSeeds(reportVo);
 
	}	
}
