//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.domain;

// Generated from form domain impl
public interface Hl7Admin extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.admin.vo.HL7AdminVo getInboundInfo() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.admin.vo.HL7AdminVo getOutboundInfo() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public void startInbound() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public void stopInbound() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public void startOutbound() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public void stopOutbound() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.admin.vo.QryOrderMsgVoCollection listOrdersByDateTimeRange(ims.core.vo.PatientId patIdVo, ims.framework.utils.DateTime dtFrom, ims.framework.utils.DateTime dtTo);

	// Generated from form domain interface definition
	public void setInboundFlag(Boolean bStart) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public void setOutboundFlag(Boolean bStart) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public void clearOutboundRegistration();

	// Generated from form domain interface definition
	public String getIpAddress() throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	/**
	* Returns a list of Outbound Feed records
	*/
	public ims.admin.vo.DemographicFeedVoCollection getOBFeedEntries(ims.framework.utils.DateTime startDate, ims.framework.utils.DateTime endDate, ims.core.vo.PatientId patientId, ims.core.vo.lookups.MsgEventType msgType, ims.core.admin.vo.ProviderSystemRefVo providerSystem);

	// Generated from form domain interface definition
	/**
	* Lists the Provider Systems
	*/
	public ims.ocrr.vo.ProviderSystemLiteVoCollection listProviderSystems();

	// Generated from form domain interface definition
	/**
	* Saves a ConfigFlag
	*/
	public String saveConfigFlag(ims.configuration.IFlag flag, String flagValue) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.ocs_if.vo.OutboundTriggersVoCollection listOutboundTriggers();

	// Generated from form domain interface definition
	public void saveOutBoundTriggers(ims.ocs_if.vo.OutboundTriggersVo outboundTriggers) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public void deleteOutBoundTriggers(ims.ocs_if.vo.OutboundTriggersVo outBoundTriggers) throws ims.domain.exceptions.ForeignKeyViolationException;
}
