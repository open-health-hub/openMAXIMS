//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseTaxonomyCodeAdminImpl extends DomainImpl implements ims.admin.domain.TaxonomyCodeAdmin, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatesaveCodeLoaderDef(ims.admin.vo.TaxonomyUploadVo codeLoaderDef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCodeLoaderDef(ims.core.admin.vo.TaxonomyUploadRefVo codeLoaderDefRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCodeLoaderDef(Integer externalCodeTypeId, Integer taxonomyElementId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOpcs4Code(String code)
	{
	}

	@SuppressWarnings("unused")
	public void validategetIcd10Code(String code)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveOpcs4Record(ims.admin.vo.Opcs4Vo vo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveIcd10Record(ims.admin.vo.Icd10AmProcVo vo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSnomedConcept(String code)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveSnomedConceptRecord(ims.admin.vo.TaxonomySnomedConceptVo snomedConceptVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSnomedConceptWrdIdx(String keyword, String conceptId)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveSnomedConceptWrdIdx(ims.admin.vo.TaxonomySnomedConWrdIdxVo vo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePracticeRecord(ims.core.vo.OrgVo vo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPracticeCode(String code)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveGPRecord(ims.core.vo.GpVo vo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetGPCode(String code)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLkpPersonTitle(String text)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveSurgeryRecord(ims.core.vo.LocSiteUpprNameVo surgery)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSurgeryCode(String code)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSurgery(ims.core.vo.AddressVo address, ims.core.vo.OrgVo parent_org)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCCGRecord(ims.core.vo.CCGPCTPCCodesVo ccgVO)
	{
		if(ccgVO == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'ccgVO' of type 'ims.core.vo.CCGPCTPCCodesVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCCGRecord(String postcode)
	{
		if(postcode == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'postcode' of type 'String' cannot be null.");
	}
}
