//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseServiceImpl extends DomainImpl implements ims.admin.domain.Service, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistService(ims.core.vo.ServiceShortVo filter)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveService(ims.core.vo.ServiceVo voService)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServiceActivity(ims.core.vo.ServiceShortVo voService)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServiceFunction(ims.core.vo.ServiceShortVo voService)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveServiceFunction(ims.core.vo.ServiceFunctionVoCollection vocollServiceFunction, ims.core.vo.ServiceFunctionVoCollection voCollServiceFunctionDelete)
	{
	}

	@SuppressWarnings("unused")
	public void validateremoveServiceFunction(ims.core.vo.ServiceFunctionVo voServiceFunction)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistService(Boolean bActive)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistService(Integer[] nServiceIds)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActivity(String nameFilter, ims.core.vo.lookups.ActivityType activityType, Boolean bActive)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveServiceActivity(ims.core.vo.ServiceActivityVoCollection voCollServiceActivity, ims.core.vo.ServiceActivityVoCollection voCollServiceActivityDelete)
	{
	}

	@SuppressWarnings("unused")
	public void validateremoveServiceActivity(ims.core.vo.ServiceActivityVo voServiceActivity)
	{
	}

	@SuppressWarnings("unused")
	public void validategetServiceActivity(ims.core.clinical.vo.ServiceRefVo serviceRefVo, ims.core.resource.place.vo.ActivityRefVo activityRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatecheckLSALinks(ims.core.vo.ServiceActivityVo voServiceActivity)
	{
	}

	@SuppressWarnings("unused")
	public void validategetProcedureForActivity(ims.core.resource.place.vo.ActivityRefVo activityRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validateisServiceActivityUnique(ims.core.vo.TaxonomyMapCollection map, ims.core.vo.ServiceVo voService)
	{
	}

	@SuppressWarnings("unused")
	public void validategetServiceById(ims.core.vo.ServiceVo voService)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActiveServiceLiteByNameAndCategories(String name, ims.core.vo.lookups.ServiceCategoryCollection categoryCollection)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActiveServiceLiteByName(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServiceLite(ims.core.vo.ServiceShortVo filter)
	{
	}
}
