//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.70 build 3300.22643)
// Copyright (C) 1995-2009 IMS MAXIMS plc. All rights reserved.

package ims.admin.domain.impl;

import ims.admin.domain.base.impl.BaseAppSiteConfigImpl;
import ims.core.configuration.domain.objects.AppSite;
import ims.core.vo.domain.AppSiteVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;

import java.util.List;

public class AppSiteConfigImpl extends BaseAppSiteConfigImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* getSite
	*/
	public ims.core.vo.AppSiteVo getSite() throws ims.domain.exceptions.DomainInterfaceException
	{
		DomainFactory factory = getDomainFactory();	
		
		List list = factory.find("from AppSite");

		if(list.size() > 1)
		{
			throw new ims.domain.exceptions.DomainInterfaceException("There is more than 1 record in core_appsite table !");
		}
		
		if(list.size() == 1)
			return AppSiteVoAssembler.create((AppSite) list.get(0));
		
		return null;
	}

	/**
	* saveSite
	*/
	public ims.core.vo.AppSiteVo saveSite(ims.core.vo.AppSiteVo siteVo) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException
	{
		if (!siteVo.isValidated())
		{
			throw new DomainRuntimeException("AppSiteVo has not been validated");
		}
				
		DomainFactory factory = getDomainFactory();
		
		if(siteVo.getID_AppSite() == null)
		{
			//there must be only one record
			List list = factory.find("from AppSite");

			if(list.size() > 0)
			{
				throw new ims.domain.exceptions.DomainInterfaceException("There is already one record in core_appsite table !");
			}			
		}

		AppSite domAppSite = AppSiteVoAssembler.extractAppSite(factory, siteVo);				
		
		factory.save(domAppSite);
		
		return AppSiteVoAssembler.create(domAppSite);
	}
}
