//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.28 build 2005.15580)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.admin.forms.gppracticeupdate;

import ims.configuration.gen.ConfigFlag;
import ims.core.vo.OrganisationVo;
import ims.core.vo.PersonAddress;
import ims.core.vo.lookups.OrganisationType;
import ims.framework.enumerations.DialogResult;

public class Logic extends BaseLogic {
	// Protected methods
	protected void onFormOpen() throws ims.framework.exceptions.FormOpenException 
	{
		initialize();
		populateScreenFromData();
	}

	private void initialize() 
	{
		if (ConfigFlag.UI.DEMOGRAPHICS_TYPE.getValue().equals("UK"))
		{
			form.cmbCounty().setVisible(false);
			form.lblCounty().setVisible(false);
			form.txtPostCode().setVisible(true);
			form.lblPostCode().setVisible(true);
		}		
		else
		{
			form.cmbCounty().setVisible(true);
			form.lblCounty().setVisible(true);
			
			form.txtPostCode().setVisible(false);
			form.lblPostCode().setVisible(false);
		}
	}

	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException 
	{
		engine.close(DialogResult.CANCEL);
	}

	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException 
	{
		if (checkMandatory() == false)
			return;
		populateDataFromScreen();
		engine.close(DialogResult.OK);
	}

	private boolean checkMandatory() 
	{
		String orgName = form.txtOrgName().getValue();
		if (orgName == null || orgName.trim().equals("")) 
		{
			engine.showMessage("Please enter 'Practice Name'");
			form.txtOrgName().setFocus();
			return false;
		}
		return true;
	}

	private void populateDataFromScreen() 
	{
		OrganisationVo voOrganisation = form.getGlobalContext().Admin
				.getOrganisationVoIsNotNull() ? form.getGlobalContext().Admin
				.getOrganisationVo() : new OrganisationVo();
		PersonAddress voAddress = voOrganisation.getAddressIsNotNull() ? voOrganisation
				.getAddress()
				: new PersonAddress();
		voAddress.setLine1(form.txtOrgAdd1().getValue());
		voAddress.setLine2(form.txtOrgAdd2().getValue());
		voAddress.setLine3(form.txtOrgAdd3().getValue());
		voAddress.setLine4(form.txtOrgAdd4().getValue());
		voAddress.setLine5(form.txtOrgAdd5().getValue());
		voAddress.setCounty(form.cmbCounty().getValue());
		voAddress.setPhone(form.txtOrgPhone().getValue());
		voAddress.setFax(form.txtOrgFax().getValue());
		voAddress.setPostCode(form.txtPostCode().getValue());
		
		voOrganisation.setAddress(voAddress);

		voOrganisation.setIsActive(Boolean.TRUE);
		voOrganisation.setName(form.txtOrgName().getValue());
		voOrganisation.setType(OrganisationType.GPP);

		form.getGlobalContext().Admin.setOrganisationVo(voOrganisation);
	}

	// Private Methods
	private void populateScreenFromData() 
	{
		clearScreen();
		if (form.getGlobalContext().Admin.getOrganisationVoIsNotNull()) 
		{
			OrganisationVo voOrganisation = form.getGlobalContext().Admin
					.getOrganisationVo();
			form.txtOrgName().setValue(voOrganisation.getName());
			if (voOrganisation.getAddressIsNotNull()) 
			{
				PersonAddress voPersonAddr = voOrganisation.getAddress();
				form.txtOrgAdd1().setValue(voPersonAddr.getLine1());
				form.txtOrgAdd2().setValue(voPersonAddr.getLine2());
				form.txtOrgAdd3().setValue(voPersonAddr.getLine3());
				form.txtOrgAdd4().setValue(voPersonAddr.getLine4());
				form.txtOrgAdd5().setValue(voPersonAddr.getLine5());
				form.cmbCounty().setValue(voPersonAddr.getCounty());
				form.txtOrgPhone().setValue(voPersonAddr.getPhone());
				form.txtOrgFax().setValue(voPersonAddr.getFax());
				form.txtPostCode().setValue(voPersonAddr.getPostCode());
			}
		} 
		else 
		{
			form.txtOrgName().setFocus();
		}
	}

	private void clearScreen() 
	{
		form.txtOrgName().setValue("");
		form.txtOrgAdd1().setValue("");
		form.txtOrgAdd2().setValue("");
		form.txtOrgAdd3().setValue("");
		form.txtOrgAdd4().setValue("");
		form.txtOrgAdd5().setValue("");
		form.cmbCounty().setValue(null);
		form.txtOrgPhone().setValue("");
		form.txtOrgFax().setValue("");
	}
}
