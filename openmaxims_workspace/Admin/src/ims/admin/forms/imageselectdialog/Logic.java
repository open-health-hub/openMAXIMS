//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by John MacEnri using IMS Development Environment (version 1.42 build 2208.27685)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.admin.forms.imageselectdialog;

import ims.admin.vo.AppImageVo;
import ims.admin.vo.AppImageVoCollection;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	protected void onFormOpen() throws PresentationLogicException
	{
		setViewMode();
		clearDetails();
		form.txtFilter().setFocus();
	}
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Admin.setSelectedImage(null);
		engine.close(DialogResult.CANCEL);
	}
	protected void onBtnOkClick() throws ims.framework.exceptions.PresentationLogicException
	{
		AppImageVo voImage = form.getGlobalContext().Admin.getSelectedImage();
		if(voImage != null)
		{
			form.getGlobalContext().Admin.setSelectedImage(voImage);
			engine.close(DialogResult.OK);
		}
		else
		{
			engine.showMessage("Please select an image");
		}
	}
	protected void onBtnSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		populateImageGrid();	
	}
	protected void onChkSiteOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		//populateImageGrid();
	}
	protected void onGrdImagesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		AppImageVo image = form.grdImages().getValue();
		form.getGlobalContext().Admin.setSelectedImage(image);
		fillDetails(image);
	}

	private void setViewMode() 
	{
		form.setMode(FormMode.VIEW);
	}

	private void fillDetails(AppImageVo image) 
	{
		form.imgPreview().setVisible(true);
		form.imgPreview().setValue(engine.getRegisteredImage(image.getID_AppImage().intValue()));
	}
	private void clearDetails() 
	{
		form.imgPreview().setVisible(false);
		form.imgPreview().setValue(null);
	}
	private void populateImageGrid()
	{
		populateImageGrid(null);
	}
	
	private void populateImageGrid(String imageName) 
	{
		if(imageName == null)
			imageName = form.txtFilter().getValue();

		clearDetails();
		form.grdImages().getRows().clear();
		
		AppImageVo vo = new AppImageVo();
		vo.setImagePath(imageName);
		if (form.chkSystemOnly().getValue())
		{
			vo.setIsSystem(Boolean.FALSE);			
		}
		AppImageVoCollection images = domain.listImages(vo);
		
		if (images != null)
		{
			GenForm.grdImagesRow row = null;
			
			for (int i = 0; i < images.size(); i++)
			{
				AppImageVo image = images.get(i);
				row = form.grdImages().getRows().newRow();
				row.setInternalID(image.getID_AppImage());
				row.setImagePath(image.getImagePath());
				row.setSystem(image.getIsSystem().booleanValue());
				row.setTooltipForImagePath(image.getImagePath());
				row.setValue(image);
			}
		}
		form.lblTotal().setValue("Total : " + form.grdImages().getRows().size());
	}

}
