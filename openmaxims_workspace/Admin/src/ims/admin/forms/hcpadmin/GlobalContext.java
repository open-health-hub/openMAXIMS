//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.hcpadmin;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Admin = new AdminContext(context);
	}
	public final class AdminContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private AdminContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getNursingHcpIsNotNull()
		{
			return !cx_AdminNursingHcp.getValueIsNull(context);
		}
		public ims.core.vo.NurseVo getNursingHcp()
		{
			return (ims.core.vo.NurseVo)cx_AdminNursingHcp.getValue(context);
		}
		public void setNursingHcp(ims.core.vo.NurseVo value)
		{
			cx_AdminNursingHcp.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminNursingHcp = new ims.framework.ContextVariable("Admin.NursingHcp", "_cv_Admin.NursingHcp");
		public boolean getMedicHcpIsNotNull()
		{
			return !cx_AdminMedicHcp.getValueIsNull(context);
		}
		public ims.core.vo.MedicVo getMedicHcp()
		{
			return (ims.core.vo.MedicVo)cx_AdminMedicHcp.getValue(context);
		}
		public void setMedicHcp(ims.core.vo.MedicVo value)
		{
			cx_AdminMedicHcp.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminMedicHcp = new ims.framework.ContextVariable("Admin.MedicHcp", "_cv_Admin.MedicHcp");
		public boolean getTherapistHcpIsNotNull()
		{
			return !cx_AdminTherapistHcp.getValueIsNull(context);
		}
		public ims.core.vo.TherapistVo getTherapistHcp()
		{
			return (ims.core.vo.TherapistVo)cx_AdminTherapistHcp.getValue(context);
		}
		public void setTherapistHcp(ims.core.vo.TherapistVo value)
		{
			cx_AdminTherapistHcp.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminTherapistHcp = new ims.framework.ContextVariable("Admin.TherapistHcp", "_cv_Admin.TherapistHcp");
		public boolean getCanReferPatientIsNotNull()
		{
			return !cx_AdminCanReferPatient.getValueIsNull(context);
		}
		public Boolean getCanReferPatient()
		{
			return (Boolean)cx_AdminCanReferPatient.getValue(context);
		}
		public void setCanReferPatient(Boolean value)
		{
			cx_AdminCanReferPatient.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminCanReferPatient = new ims.framework.ContextVariable("Admin.CanReferPatient", "_cv_Admin.CanReferPatient");

		private ims.framework.Context context;
	}
	public boolean getHcpTypeIsNotNull()
	{
		return !cx_HcpType.getValueIsNull(context);
	}
	public ims.core.vo.lookups.HcpDisType getHcpType()
	{
		return (ims.core.vo.lookups.HcpDisType)cx_HcpType.getValue(context);
	}
		public void setHcpType(ims.core.vo.lookups.HcpDisType value)
		{
		cx_HcpType.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_HcpType = new ims.framework.ContextVariable("HcpType", "_cv_HcpType");
	public boolean getHcpIsNotNull()
	{
		return !cx_Hcp.getValueIsNull(context);
	}
	public ims.core.vo.Hcp getHcp()
	{
		return (ims.core.vo.Hcp)cx_Hcp.getValue(context);
	}
		public void setHcp(ims.core.vo.Hcp value)
		{
		cx_Hcp.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_Hcp = new ims.framework.ContextVariable("Hcp", "_cv_Hcp");
	public boolean getMosFormModeIsNotNull()
	{
		return !cx_MosFormMode.getValueIsNull(context);
	}
	public ims.framework.enumerations.FormMode getMosFormMode()
	{
		return (ims.framework.enumerations.FormMode)cx_MosFormMode.getValue(context);
	}
		public void setMosFormMode(ims.framework.enumerations.FormMode value)
		{
		cx_MosFormMode.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_MosFormMode = new ims.framework.ContextVariable("MosFormMode", "_cv_MosFormMode");
	public boolean getMosFullNameIsNotNull()
	{
		return !cx_MosFullName.getValueIsNull(context);
	}
	public ims.core.vo.PersonName getMosFullName()
	{
		return (ims.core.vo.PersonName)cx_MosFullName.getValue(context);
	}
		public void setMosFullName(ims.core.vo.PersonName value)
		{
		cx_MosFullName.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_MosFullName = new ims.framework.ContextVariable("MosFullName", "_cv_MosFullName");

	public AdminContext Admin;
}
