//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.22 build 50223.1030)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.admin.forms.organisationandlocation;

import ims.admin.forms.organisationandlocation.GenForm.ctn1Container.lyr1Layer.tabLocContainer.grdLocMappingsGrid;
import ims.admin.forms.organisationandlocation.GenForm.ctn1Container.lyr1Layer.tabLocContainer.grdLocMappingsRow;
import ims.admin.forms.organisationandlocation.GenForm.ctn1Container.lyr1Layer.tabLocSiteContainer.grdSiteMappingsGrid;
import ims.admin.forms.organisationandlocation.GenForm.ctn1Container.lyr1Layer.tabLocSiteContainer.grdSiteMappingsRow;
import ims.admin.forms.organisationandlocation.GenForm.ctn1Container.lyr1Layer.tabOrgContainer.grdOrgMappingsGrid;
import ims.admin.forms.organisationandlocation.GenForm.ctn1Container.lyr1Layer.tabOrgContainer.grdOrgMappingsRow;
import ims.admin.helper.NTPFExchequerCodingChecks;
import ims.admin.helper.OrgTreeHelper;
import ims.admin.vo.PrinterVoCollection;
import ims.configuration.gen.ConfigFlag;
import ims.core.vo.LocMostVo;
import ims.core.vo.LocSiteVo;
import ims.core.vo.OrganisationVo;
import ims.core.vo.OrganisationVoCollection;
import ims.core.vo.PersonAddress;
import ims.core.vo.TaxonomyMap;
import ims.core.vo.TaxonomyMapCollection;
import ims.core.vo.lookups.AddressType;
import ims.core.vo.lookups.LocationType;
import ims.core.vo.lookups.TaxonomyType;
import ims.domain.exceptions.ForeignKeyViolationException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.framework.Control;
import ims.framework.FormName;
import ims.framework.controls.TreeNode;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.CodingRuntimeException;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.interfaces.IPrinter;
import ims.vo.ValueObjectRef;

public class Logic extends BaseLogic
{
	private final static int	TABORG		= 1;
	private final static int	TABLOC		= 2;
	private final static int	TABLOCSITE	= 3;
	private final static int	TABALL		= 4;
	
	protected void onFormOpen() throws ims.framework.exceptions.FormOpenException
	{
		initialize();
		open();
	}

	private void initialize()
	{
		if (!ConfigFlag.UI.ORG_LOC_SHOW_CHECKS.getValue())
		{
			form.ctn1().lyr1().tabLoc().lblReferringHospLoc().setVisible(false);
			form.ctn1().lyr1().tabLoc().lblTreatingHospLoc().setVisible(false);
			form.ctn1().lyr1().tabLoc().chkReferringHosp().setVisible(false);			
			form.ctn1().lyr1().tabLoc().chkTreatingHosp().setVisible(false);
			form.ctn1().lyr1().tabLocSite().lblAllSecure().setVisible(false);
			form.ctn1().lyr1().tabLocSite().lblRefHospLocSite().setVisible(false);
			form.ctn1().lyr1().tabLocSite().lblSecure().setVisible(false);
			form.ctn1().lyr1().tabLocSite().lblTreatHospLocSite().setVisible(false);
			form.ctn1().lyr1().tabLocSite().chkLocSiteAllSecure().setVisible(false);
			form.ctn1().lyr1().tabLocSite().chkLocSiteReferringHos().setVisible(false);
			form.ctn1().lyr1().tabLocSite().chkLocSiteSecure().setVisible(false);
			form.ctn1().lyr1().tabLocSite().chkLocSiteTreatingHos().setVisible(false);			
		}
	
		form.chkActiveOnly().setValue(true);
				
		//if we are using postcode - we are not using county(ireland only)
		if (ConfigFlag.UI.DEMOGRAPHICS_USE_POSTCODE.getValue())
		{
			form.ctn1().lyr1().tabOrg().cmbOrgCounty().setVisible(false);
			form.ctn1().lyr1().tabLoc().cmbLocCounty().setVisible(false);
			form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().setVisible(false);
		}
		else
		{
			form.ctn1().lyr1().tabOrg().lblOrgPostCodeOrCounty().setVisible(false);
			form.ctn1().lyr1().tabOrg().txtOrgPostCode().setVisible(false);
			
			form.ctn1().lyr1().tabLoc().lblLocPostCodeOrCounty().setVisible(false);
			form.ctn1().lyr1().tabLoc().txtLocPostCode().setVisible(false);
			
			form.ctn1().lyr1().tabLocSite().lblLocSitePostCode().setVisible(false);
			form.ctn1().lyr1().tabLocSite().txtLocSitePostCode().setVisible(false);
		}
		
		// Remove the GP PRACTICE LOOKUP INSTANCE and SURGERY from type combos
		form.ctn1().lyr1().tabOrg().cmbOrgType().removeRow(ims.core.vo.lookups.OrganisationType.GPP);
		form.ctn1().lyr1().tabOrg().cmbOrgType().removeRow(ims.core.vo.lookups.OrganisationType.NHS_PCT);
		form.ctn1().lyr1().tabOrg().cmbOrgType().removeRow(ims.core.vo.lookups.OrganisationType.SUPPLIER);
		form.ctn1().lyr1().tabLoc().cmbLocType().removeRow(ims.core.vo.lookups.LocationType.SURGERY);
		form.ctn1().lyr1().tabLocSite().cmbLocSiteType().removeRow(ims.core.vo.lookups.LocationType.SURGERY);
		
		form.ctn1().lyr1().tabLoc().cmbLocType().removeRow(LocationType.CCA);//wdev-5131

		//WDEV-6881 Bays now created and configured on BayLayoutConfig
		form.ctn1().lyr1().tabLoc().cmbLocType().removeRow(ims.core.vo.lookups.LocationType.BAY);
		form.ctn1().lyr1().tabLocSite().cmbLocSiteType().removeRow(ims.core.vo.lookups.LocationType.BAY);
		
		//WDEV-9731
		form.ctn1().lyr1().tabLoc().cmbLocType().removeRow(ims.core.vo.lookups.LocationType.CLINIC);
		form.ctn1().lyr1().tabLocSite().cmbLocSiteType().removeRow(ims.core.vo.lookups.LocationType.CLINIC);
		
		// legend
		form.ctn1().lyr1().tabBlank().imgOrganisation().setValue(form.getImages().Admin.Organisation);
		form.ctn1().lyr1().tabBlank().imgLocSite().setValue(form.getImages().Admin.LocationSite);
		form.ctn1().lyr1().tabBlank().imgLocation().setValue(form.getImages().Admin.Location);
		form.imgOrganisationLeg().setValue(form.getImages().Admin.Organisation);
		form.imgLocationSiteLeg().setValue(form.getImages().Admin.LocationSite);
		form.imgLocationLeg().setValue(form.getImages().Admin.Location);
		
		//WDEV-5792
		form.treOrgLoc().setAllowDragDrop(ConfigFlag.UI.ORGANISATION_CONFIG_ALLOW_DRAG_AND_DROP.getValue());
		
		//wdev-17000
		form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setVisible(false);
		form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setEnabled(false);
		
		form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setVisible(false);
		form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setEnabled(false);
		//---------
	}

	private void open()
	{
		form.getLocalContext().setEditObject(null);
		form.getLocalContext().setSavingRootOrg(null);
		form.ctn1().lyr1().showtabBlank();
		clearTab(TABALL);
		defaultContextMenus();
		populateOrganisationTree();		
		form.ctn1().setCollapsed(true);
	}

	private void defaultContextMenus()
	{
		form.getContextMenus().getOrganisationLocationCREATEORGHEREItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationCREATELOCItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationCREATEROOTORGItem().setVisible(true);
		form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationREMOVEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationEDITItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationRENAMEItem().setVisible(false);

		form.getContextMenus().getGenericGridAddItem().setVisible(false);
		form.getContextMenus().getGenericGridRemoveItem().setVisible(false);
	}

	private void hideContextMenus()
	{
		form.getContextMenus().getOrganisationLocationCREATEORGHEREItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationCREATELOCItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationCREATEROOTORGItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationREMOVEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationEDITItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationRENAMEItem().setVisible(false);

		form.getContextMenus().getGenericGridAddItem().setVisible(false);
		form.getContextMenus().getGenericGridRemoveItem().setVisible(false);
	}
	
	private void populateOrganisationTree()
	{
		OrganisationVoCollection voColl = null;
		voColl = domain.listRootOrgsNoGpp();	

		new OrgTreeHelper(form.getImages().Admin.Organisation, form.getImages().Admin.OrgDisabled, form.getImages().Admin.LocationSite, form.getImages().Admin.LocSiteDisabled, form.getImages().Admin.Location, form.getImages().Admin.LocDisabled).populateOrgTree(form.treOrgLoc(), voColl, false, !form.chkActiveOnly().getValue(), false);
		form.treOrgLoc().expandAll();
		
		
		
	}

	protected void onTreOrgLocTreeViewSelectionChanged(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException
	{
		treeOrgLocTreeViewSelectionChanged(node);
	}

	private void treeOrgLocTreeViewSelectionChanged(ims.framework.controls.TreeNode node)
	{
		if (node == null)
			return;
		
		form.getContextMenus().hideAllOrganisationLocationMenuItems();
		
		form.getContextMenus().getOrganisationLocationCREATEROOTORGItem().setVisible(true);
		form.getContextMenus().getOrganisationLocationREMOVEItem().setVisible(false);
		form.getContextMenus().getOrganisationLocationEDITItem().setVisible(true);
		form.getContextMenus().getOrganisationLocationRENAMEItem().setVisible(true);
		
		if (node.getValue() instanceof OrganisationVo)
		{
			OrganisationVo vo = (OrganisationVo)node.getValue();
			if( vo.getIsActive().booleanValue() == true)
			{
				if (hasActiveChildren(vo))
				{
					form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(false);
					form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(false);
				}
				else
				{
					form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(true);
				}
			}			
			else if (vo.getIsActive().booleanValue() == false)
			{
				if (isParentInactive(node))
				{
					form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(false);	
					form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(false);	
				}
				else
				{
					form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(true);	
				}
			}

			form.getLocalContext().setEditObject((OrganisationVo) node.getValue());
			populateScreenFromData((OrganisationVo) node.getValue());
			form.ctn1().lyr1().showtabOrg();
			if (vo.getIsActiveIsNotNull())
				if (vo.getIsActive())
				{
					form.getContextMenus().getOrganisationLocationCREATEORGHEREItem().setVisible(true);
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setVisible(true);
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setText("Create Location Site here");
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setIcon(form.getImages().Admin.LocationSite);
				}
				else
				{
					form.getContextMenus().getOrganisationLocationCREATEORGHEREItem().setVisible(false);
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setVisible(false);
				}

			if ((vo.getRelatedOrganisations() == null || vo.getRelatedOrganisations().size() == 0) &&
					(vo.getLocationSites() == null || vo.getLocationSites().size() == 0))
				form.getContextMenus().getOrganisationLocationREMOVEItem().setVisible(true);
		}
		else
		{
			LocMostVo vo = (LocMostVo)node.getValue();
			if( vo.getIsActive().booleanValue() == true)
			{
				if (hasActiveChildren(vo))
				{
					form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(false);
					form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(false);
				}
				else
				{
					form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(true);
				}
			}			
			else if (vo.getIsActive().booleanValue() == false)
			{
				if (isParentInactive(node))
				{
					form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(false);	
					form.getContextMenus().getOrganisationLocationINACTIVATEItem().setVisible(false);	
				}
				else
				{
					form.getContextMenus().getOrganisationLocationACTIVATEItem().setVisible(true);	
				}
			}
			
			if (vo.getIsActiveIsNotNull())
				if (vo.getIsActive()&& !vo.getIsVirtual())
				{
					form.getContextMenus().getOrganisationLocationCREATEORGHEREItem().setVisible(false);
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setVisible(true);
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setText("Create Location here");
					form.getContextMenus().getOrganisationLocationCREATELOCItem().setIcon(form.getImages().Admin.Location);
				}
			
			if (vo.getLocations() == null || vo.getLocations().size() == 0)
			{
				form.getContextMenus().getOrganisationLocationREMOVEItem().setVisible(true);
			}
			
			if (node.getValue() instanceof LocSiteVo)
			{
				form.getLocalContext().setEditObject((LocSiteVo) node.getValue());
				populateScreenFromData((LocSiteVo) node.getValue());
				form.ctn1().lyr1().showtabLocSite();

			}
			else if (node.getValue() instanceof LocMostVo)
			{
				form.getLocalContext().setEditObject((LocMostVo) node.getValue());
				populateScreenFromData((LocMostVo) node.getValue());
				form.ctn1().lyr1().showtabLoc();
			}
			
			//WDEV-7083
			if (node.getValue() instanceof LocMostVo)
			{
				if( ((LocMostVo)node.getValue()).getType().equals(LocationType.BAY))
				{
					form.getContextMenus().hideAllOrganisationLocationMenuItems();
					form.getContextMenus().getOrganisationLocationCREATEROOTORGItem().setVisible(true);
					
				}
			}
			
		}
		form.ctn1().setCollapsed(false);
	}

	private boolean isParentInactive(TreeNode node)
	{
		if (node.getParent() == null)
			return false;
		
		if (node.getParent().getValue() == null)
			return false;
		
		if (node.getParent().getValue() instanceof OrganisationVo)
		{
			OrganisationVo vo = (OrganisationVo)node.getParent().getValue();
			if (vo.getIsActive().booleanValue() == false)
				return true;
		}
		else if (node.getParent().getValue() instanceof LocMostVo)
		{
			LocMostVo vo = (LocMostVo)node.getParent().getValue();
			if (vo.getIsActive().booleanValue() == false)
				return true;
		}
		return false;
	}

	private boolean hasActiveChildren(LocMostVo vo)
	{
		if (vo.getLocations() == null || vo.getLocations().size() == 0)
			return false;
		
		for (int i = 0; i < vo.getLocations().size(); i++)
		{
			LocMostVo locVo = vo.getLocations().get(i);
			if (locVo.getIsActive().booleanValue())
				return true;
			if (hasActiveChildren(locVo))
				return true;			
		}
		return false;
	}

	private boolean hasActiveChildren(OrganisationVo vo)
	{
		if ((vo.getRelatedOrganisations() == null || vo.getRelatedOrganisations().size() == 0) &&
			(vo.getLocationSites() == null || vo.getLocationSites().size() == 0))
			return false;

		for (int i = 0; i < vo.getRelatedOrganisations().size(); i++)
		{
			OrganisationVo orgVo = vo.getRelatedOrganisations().get(i);
			if (orgVo.getIsActive().booleanValue())
				return true;
			if (hasActiveChildren(orgVo))
				return true;			
		}
		for (int i = 0; i < vo.getLocationSites().size(); i++)
		{
			LocMostVo locVo = vo.getLocationSites().get(i);
			if (locVo.getIsActive().booleanValue())
				return true;
			if (hasActiveChildren(locVo))
				return true;			
		}
		return false;
	}

	private void populateScreenFromData(OrganisationVo value)
	{
		clearTab(TABORG);
		PersonAddress voAddress = value.getAddress();
		if (voAddress != null)
		{
			form.ctn1().lyr1().tabOrg().txtOrgAdd1().setValue(voAddress.getLine1());
			form.ctn1().lyr1().tabOrg().txtOrgAdd2().setValue(voAddress.getLine2());
			form.ctn1().lyr1().tabOrg().txtOrgAdd3().setValue(voAddress.getLine3());
			form.ctn1().lyr1().tabOrg().txtOrgAdd4().setValue(voAddress.getLine4());
			form.ctn1().lyr1().tabOrg().txtOrgAdd5().setValue(voAddress.getLine5());
			form.ctn1().lyr1().tabOrg().txtOrgPhone().setValue(voAddress.getPhone());
			form.ctn1().lyr1().tabOrg().txtOrgFax().setValue(voAddress.getFax());
			form.ctn1().lyr1().tabOrg().txtOrgPostCode().setValue(voAddress.getPostCode());
			form.ctn1().lyr1().tabOrg().cmbOrgCounty().setValue(voAddress.getCounty());
		}

		populateOrgMappingsGrid(value.getCodeMappings());
		form.ctn1().lyr1().tabOrg().txtOrgComment().setValue(value.getComment());
		form.ctn1().lyr1().tabOrg().txtOrgName().setValue(value.getName());
		form.ctn1().lyr1().tabOrg().cmbOrgType().setValue(value.getType());
	}

	private void populateOrgMappingsGrid(TaxonomyMapCollection coll)
	{
		form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().clear();
		if (coll == null) return;
		
		for (int i = 0; i < coll.size(); i++)
		{
			TaxonomyMap map = coll.get(i);
			grdOrgMappingsRow row = form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().newRow();
			row.setcolExtCodeType(map.getTaxonomyName());
			row.setcolCode(map.getTaxonomyCode());
			row.setTooltipForcolCode(map.getTaxonomyCode());
			row.setValue(map);
		}		
	}

	private void populateScreenFromData(LocMostVo value)
	{
		clearTab(TABLOC);
		PersonAddress voAddress = value.getAddress();

		if (voAddress != null)
		{
			form.ctn1().lyr1().tabLoc().txtLocAdd1().setValue(voAddress.getLine1());
			form.ctn1().lyr1().tabLoc().txtLocAdd2().setValue(voAddress.getLine2());
			form.ctn1().lyr1().tabLoc().txtLocAdd3().setValue(voAddress.getLine3());
			form.ctn1().lyr1().tabLoc().txtLocAdd4().setValue(voAddress.getLine4());
			form.ctn1().lyr1().tabLoc().txtLocAdd5().setValue(voAddress.getLine5());
			form.ctn1().lyr1().tabLoc().txtLocPhone().setValue(voAddress.getPhone());
			form.ctn1().lyr1().tabLoc().txtLocFaxNo().setValue(voAddress.getFax());
			form.ctn1().lyr1().tabLoc().txtLocPostCode().setValue(voAddress.getPostCode());
			form.ctn1().lyr1().tabLoc().cmbLocCounty().setValue(voAddress.getCounty());
		}
		form.ctn1().lyr1().tabLoc().chkVirtualLocation().setValue(value.getIsVirtualIsNotNull() ? value.getIsVirtual().booleanValue() : false);//wdev-2730

		populateLocMappingsGrid(value.getCodeMappings());
		form.ctn1().lyr1().tabLoc().txtLocName().setValue(value.getName());
		form.ctn1().lyr1().tabLoc().cmbLocType().setValue(value.getType());
		form.ctn1().lyr1().tabLoc().chkReferringHosp().setValue(value.getReferringHospitalIsNotNull() ? value.getReferringHospital().booleanValue() : false);
		form.ctn1().lyr1().tabLoc().chkTreatingHosp().setValue(value.getTreatingHospIsNotNull() ? value.getTreatingHosp().booleanValue() : false);
		
		//wdev-17000
		if( LocationType.WARD.equals(form.ctn1().lyr1().tabLoc().cmbLocType().getValue()) )
		{
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setValue(value.getDisplayInEDTracking());
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setVisible(true);
		}
		else
		{
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setVisible(false);
		}
		//------------
		
		PrinterVoCollection printersVoColl = value.getPrinters();
		if (printersVoColl != null && printersVoColl.size() > 0)
		{			
			StringBuffer printers = new StringBuffer();
			for (int i = 0; i < printersVoColl.size(); i++)
			{
				printers.append(printersVoColl.get(i).getName());
				if (i < printersVoColl.size() -1)
				{
					printers.append(",");
				}
			}
			//WDEV-15817 space is displayed for tooltip as a workaround
			form.ctn1().lyr1().tabLoc().txtLocPrinters().setValue(printers.toString());
			form.ctn1().lyr1().tabLoc().txtLocPrinters().setTooltip(printers.toString() != null && printers.toString().length() > 0 ? printers.toString() : " ");
									
			form.ctn1().lyr1().tabLoc().lblDefaultPrintForLocation().setValue(value.getDefaultPrinterIsNotNull() ? value.getDefaultPrinter().getName() : "No default printer selected ");
			form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForNewResultsForLocation().setValue(value.getDesignatedPrinterForNewResultsIsNotNull() ? value.getDesignatedPrinterForNewResults().getName() : "No designated printer for new results selected");
			form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForOCSOrderToBeSetForLocation().setValue(value.getDesignatedPrinterForOCSOrderIsNotNull() ? value.getDesignatedPrinterForOCSOrder().getName() : "No designated printer for ocs order selected");			
			form.getGlobalContext().setCurrentLocationID(value.getID_Location());
		}
		else
		{
			form.ctn1().lyr1().tabLoc().lblDefaultPrintForLocation().setValue("No default printer selected ");			
			form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForNewResultsForLocation().setValue("No designated printer for new results selected");
			form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForOCSOrderToBeSetForLocation().setValue("No designated printer for ocs order selected");
			form.getGlobalContext().setCurrentLocationID(null);
		}
		
		PrinterVoCollection printers = new PrinterVoCollection();
		for (int i = 0; i < value.getPrinters().size(); i++)
		{
			printers.add(value.getPrinters().get(i));
		}		
		form.getGlobalContext().setPrintersSelected(printers.size() > 0 ? printers : null);
		
		form.getGlobalContext().setDefaultPrinter(value.getDefaultPrinterIsNotNull() ? value.getDefaultPrinter() : null);
		form.getGlobalContext().setDesignatedPrinterForNewResults(value.getDesignatedPrinterForNewResultsIsNotNull() ? value.getDesignatedPrinterForNewResults() : null);
		form.getGlobalContext().setDesignatedPrinterForOCSOrder(value.getDesignatedPrinterForOCSOrderIsNotNull() ? value.getDesignatedPrinterForOCSOrder() : null);
	}

	private void populateLocMappingsGrid(TaxonomyMapCollection coll)
	{
		form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().clear();
		if (coll == null) return;
		
		for (int i = 0; i < coll.size(); i++)
		{
			TaxonomyMap map = coll.get(i);
			grdLocMappingsRow row = form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().newRow();
			row.setcolExtCodeType(map.getTaxonomyName());
			row.setcolCode(map.getTaxonomyCode());
			row.setTooltipForcolCode(map.getTaxonomyCode());
			row.setValue(map);
		}		
	}

	private void populateScreenFromData(LocSiteVo value)
	{
		clearTab(TABLOCSITE);
		PersonAddress voAddress = value.getAddress();
		if (voAddress != null)
		{
			form.ctn1().lyr1().tabLocSite().txtLocSiteAdd1().setValue(voAddress.getLine1());
			form.ctn1().lyr1().tabLocSite().txtLocSiteAdd2().setValue(voAddress.getLine2());
			form.ctn1().lyr1().tabLocSite().txtLocSiteAdd3().setValue(voAddress.getLine3());
			form.ctn1().lyr1().tabLocSite().txtLocSiteAdd4().setValue(voAddress.getLine4());
			form.ctn1().lyr1().tabLocSite().txtLocSiteAdd5().setValue(voAddress.getLine5());
			form.ctn1().lyr1().tabLocSite().txtLocSitePhone().setValue(voAddress.getPhone());
			form.ctn1().lyr1().tabLocSite().txtLocSiteFaxNo().setValue(voAddress.getFax());
			form.ctn1().lyr1().tabLocSite().txtLocSitePostCode().setValue(voAddress.getPostCode());
			form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().setValue(voAddress.getCounty());
		}
		form.ctn1().lyr1().tabLocSite().chkVirtualLocationSite().setValue(value.getIsVirtualIsNotNull() ? value.getIsVirtual().booleanValue() : false);//wdev-2730

		populateSiteMappingsGrid(value.getCodeMappings());
		form.ctn1().lyr1().tabLocSite().txtLocSiteName().setValue(value.getName());
		form.ctn1().lyr1().tabLocSite().cmbLocSiteType().setValue(value.getType());
		form.ctn1().lyr1().tabLocSite().chkLocSiteSecure().setValue(value.getSecureAccommodationIsNotNull() ? value.getSecureAccommodation().booleanValue() : false);
		form.ctn1().lyr1().tabLocSite().chkLocSiteAllSecure().setValue(value.getAllSecureAccommodationIsNotNull() ? value.getAllSecureAccommodation().booleanValue() : false);
		form.ctn1().lyr1().tabLocSite().chkLocSiteReferringHos().setValue(value.getReferringHospitalIsNotNull() ? value.getReferringHospital().booleanValue() : false);
		form.ctn1().lyr1().tabLocSite().chkLocSiteTreatingHos().setValue(value.getTreatingHospIsNotNull() ? value.getTreatingHosp().booleanValue() : false);
		
		//wdev-17000
		if( LocationType.WARD.equals(form.ctn1().lyr1().tabLocSite().cmbLocSiteType().getValue()) )
		{
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setValue(value.getDisplayInEDTracking());
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setVisible(true);
			
		}
		else
		{
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setVisible(false);
		}
			
		
		//----------
		
		PrinterVoCollection printersVoColl = value.getPrinters();
		if (printersVoColl != null && printersVoColl.size() > 0)
		{			
			StringBuffer printers = new StringBuffer();
			for (int i = 0; i < printersVoColl.size(); i++)
			{
				printers.append(printersVoColl.get(i).getName());
				if (i < printersVoColl.size() -1)
				{
					printers.append(",");
				}
			}
			
			form.ctn1().lyr1().tabLocSite().lblDefaultPrinterToBeSetForLocSite().setValue(value.getDefaultPrinterIsNotNull() ? value.getDefaultPrinter().getName() : "No default printer selected ");
			form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForNewResultsToBeSetForLocSite().setValue(value.getDesignatedPrinterForNewResultsIsNotNull() ? value.getDesignatedPrinterForNewResults().getName() : "No designated printer for new results selected");
			form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForOCSOrderToBeSetForLocSite().setValue(value.getDesignatedPrinterForOCSOrderIsNotNull() ? value.getDesignatedPrinterForOCSOrder().getName() : "No designated printer for ocs order selected");
			//WDEV-15817 G.M. space added as a workaround
			form.ctn1().lyr1().tabLocSite().txtLsPrinters().setValue(printers.toString());
			form.ctn1().lyr1().tabLocSite().txtLsPrinters().setTooltip(printers.toString() != null && printers.toString().length() > 0 ? printers.toString() : " ");	//wdev-15817
			form.ctn1().lyr1().tabLoc().txtLocPrinters().setTooltip(printers.toString() != null && printers.toString().length() > 0 ? printers.toString() : " ");
			
			form.getGlobalContext().setCurrentLocationID(value.getID_Location());
		}
		else
		{
			form.ctn1().lyr1().tabLocSite().lblDefaultPrinterToBeSetForLocSite().setValue("No default printer selected ");
			form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForNewResultsToBeSetForLocSite().setValue("No designated printer for new results selected");
			form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForOCSOrderToBeSetForLocSite().setValue("No designated printer for ocs order selected");
			form.getGlobalContext().setCurrentLocationID(null);
		}
				
		PrinterVoCollection printers = new PrinterVoCollection();
		for (int i = 0; i < value.getPrinters().size(); i++)
		{
			printers.add(value.getPrinters().get(i));
		}		
		form.getGlobalContext().setPrintersSelected(printers.size() > 0 ? printers : null);
		
		form.getGlobalContext().setDefaultPrinter(value.getDefaultPrinterIsNotNull() ? value.getDefaultPrinter() : null);
		form.getGlobalContext().setDesignatedPrinterForNewResults(value.getDesignatedPrinterForNewResultsIsNotNull() ? value.getDesignatedPrinterForNewResults() : null);
		form.getGlobalContext().setDesignatedPrinterForOCSOrder(value.getDesignatedPrinterForOCSOrderIsNotNull() ? value.getDesignatedPrinterForOCSOrder() : null);
	}
	
	private void populateSiteMappingsGrid(TaxonomyMapCollection coll)
	{
		form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().clear();
		if (coll == null) return;
		
		for (int i = 0; i < coll.size(); i++)
		{
			TaxonomyMap map = coll.get(i);
			grdSiteMappingsRow row = form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().newRow();
			row.setcolExtCodeType(map.getTaxonomyName());
			row.setcolCode(map.getTaxonomyCode());
			row.setTooltipForcolCode(map.getTaxonomyCode());
			row.setValue(map);
		}		
	}

	private void createOrganisationHere()
	{
		TreeNode node = form.treOrgLoc().getSelectedNode();
		if (node == null)
			return;

		if (!(node.getValue() instanceof OrganisationVo))
		{
			throw new CodingRuntimeException("Trying to add an Organistation under the wrong type");			
		}
		
		form.getLocalContext().setEditObject(new OrganisationVo());
		clearTab(TABORG);
		form.ctn1().lyr1().showtabOrg();		
		hideContextMenus();
		setFormMode(FormMode.EDIT);
		form.getContextMenus().getGenericGridAddItem().setVisible(true);
		form.getGlobalContext().setPrintersSelected(null);
		form.ctn1().lyr1().tabOrg().txtOrgName().setFocus();
		form.getLocalContext().setSavingRootOrg(null);

	}

	private void createRootOrganisation()
	{
		form.getLocalContext().setSavingRootOrg(Boolean.TRUE);
		clearTab(TABORG);
		form.ctn1().lyr1().showtabOrg();		
		form.getLocalContext().setEditObject(new OrganisationVo());
		hideContextMenus();
		setFormMode(FormMode.EDIT);
		form.getContextMenus().getGenericGridAddItem().setVisible(true);
		form.ctn1().setCollapsed(false);
		form.getGlobalContext().setPrintersSelected(null);
		form.ctn1().lyr1().tabOrg().txtOrgName().setFocus();

	}

	private void createLocation()
	{
		TreeNode node = form.treOrgLoc().getSelectedNode();
		if (node == null)
			return;

		if (node.getValue() instanceof OrganisationVo)
		{
			form.getLocalContext().setEditObject(new LocSiteVo());
			clearTab(TABLOCSITE);
			form.ctn1().lyr1().showtabLocSite();
			form.ctn1().lyr1().tabLocSite().txtLocSiteName().setFocus();
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setVisible(false);	//wdev-17000
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setValue(null);		//wdev-17000
		}
		else
		{
			form.getLocalContext().setEditObject(new LocMostVo());
			clearTab(TABLOC);
			form.ctn1().lyr1().showtabLoc();	
			form.ctn1().lyr1().tabLoc().txtLocName().setFocus();
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setVisible(false);  //wdev-17000
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setValue(null);		//wdev-17000
		}

		hideContextMenus();
		setFormMode(FormMode.EDIT);
		form.getContextMenus().getGenericGridAddItem().setVisible(true);
		form.getGlobalContext().setPrintersSelected(null);		
		form.getLocalContext().setSavingRootOrg(null);
						
		form.getGlobalContext().setDefaultPrinter(null);
		form.getGlobalContext().setDesignatedPrinterForNewResults(null);
	}

	private void editItem()
	{
		TreeNode node = form.treOrgLoc().getSelectedNode();
		if (node == null)
			return;

		if (node.getValue() instanceof OrganisationVo)
		{
			form.getLocalContext().setEditObject((OrganisationVo) node.getValue());
			form.ctn1().lyr1().tabOrg().txtOrgName().setFocus();
		}
		else if (node.getValue() instanceof LocSiteVo)
		{
			form.getLocalContext().setEditObject((LocSiteVo) node.getValue());
			form.ctn1().lyr1().tabLocSite().txtLocSiteName().setFocus();
		}
		else if (node.getValue() instanceof LocMostVo)
		{
			form.getLocalContext().setEditObject((LocMostVo) node.getValue());
			form.ctn1().lyr1().tabLoc().txtLocName().setFocus();
		}

		hideContextMenus();
		setFormMode(FormMode.EDIT);
		form.getContextMenus().getGenericGridAddItem().setVisible(true);		
	}

	private void setFormMode(FormMode mode)
	{
		form.setMode(mode);
		if (mode.equals(FormMode.EDIT))
		{
			if (ConfigFlag.UI.ORG_LOC_SHOW_CHECKS.getValue())
			{
				form.ctn1().lyr1().tabLoc().chkReferringHosp().setEnabled(true);			
				form.ctn1().lyr1().tabLoc().chkTreatingHosp().setEnabled(true);
				form.ctn1().lyr1().tabLocSite().chkLocSiteAllSecure().setEnabled(true);
				form.ctn1().lyr1().tabLocSite().chkLocSiteReferringHos().setEnabled(true);
				form.ctn1().lyr1().tabLocSite().chkLocSiteSecure().setEnabled(true);
				form.ctn1().lyr1().tabLocSite().chkLocSiteTreatingHos().setEnabled(true);			
			}
		}
		else
		{
			if (ConfigFlag.UI.ORG_LOC_SHOW_CHECKS.getValue())
			{
				form.ctn1().lyr1().tabLoc().chkReferringHosp().setEnabled(false);			
				form.ctn1().lyr1().tabLoc().chkTreatingHosp().setEnabled(false);
				form.ctn1().lyr1().tabLocSite().chkLocSiteAllSecure().setEnabled(false);
				form.ctn1().lyr1().tabLocSite().chkLocSiteReferringHos().setEnabled(false);
				form.ctn1().lyr1().tabLocSite().chkLocSiteSecure().setEnabled(false);
				form.ctn1().lyr1().tabLocSite().chkLocSiteTreatingHos().setEnabled(false);			
			}
		}		
	}

	private void populateDataFromScreen(OrganisationVo value)
	{
		PersonAddress voAddress = value.getAddress();
		if(voAddress == null)
			voAddress = new PersonAddress();
		voAddress.setLine1(form.ctn1().lyr1().tabOrg().txtOrgAdd1().getValue());
		voAddress.setLine2(form.ctn1().lyr1().tabOrg().txtOrgAdd2().getValue());
		voAddress.setLine3(form.ctn1().lyr1().tabOrg().txtOrgAdd3().getValue());
		voAddress.setLine4(form.ctn1().lyr1().tabOrg().txtOrgAdd4().getValue());
		voAddress.setLine5(form.ctn1().lyr1().tabOrg().txtOrgAdd5().getValue());
		voAddress.setPhone(form.ctn1().lyr1().tabOrg().txtOrgPhone().getValue());
		voAddress.setFax(form.ctn1().lyr1().tabOrg().txtOrgFax().getValue());
		voAddress.setPostCode(form.ctn1().lyr1().tabOrg().txtOrgPostCode().getValue());
		voAddress.setCounty(form.ctn1().lyr1().tabOrg().cmbOrgCounty().getValue());
		voAddress.setAddressType(AddressType.ORGANISATION);
		value.setAddress(voAddress.countFieldsWithValue() > 0 ? voAddress : null);
		
		
		if(value.getID_Organisation() == null)
			value.setIsActive(Boolean.TRUE);
		
		value.setCodeMappings(getCodeMappings(form.ctn1().lyr1().tabOrg().grdOrgMappings()));
		value.setComment(form.ctn1().lyr1().tabOrg().txtOrgComment().getValue());
		value.setName(form.ctn1().lyr1().tabOrg().txtOrgName().getValue());
		value.setType(form.ctn1().lyr1().tabOrg().cmbOrgType().getValue());
	}

	private TaxonomyMapCollection getCodeMappings(grdOrgMappingsGrid grid)
	{
		TaxonomyMapCollection coll = new TaxonomyMapCollection();
		for (int i = 0; i < grid.getRows().size(); i++)
		{
			grdOrgMappingsRow row = grid.getRows().get(i);
			if (row.getcolExtCodeType() != null && row.getcolCode() != null)
			{
				TaxonomyMap map = new TaxonomyMap();
				map.setTaxonomyName(row.getcolExtCodeType());
				map.setTaxonomyCode(row.getcolCode());
				coll.add(map);
			}
		}
		return coll.size() > 0 ? coll : null;
	}
		

	private void populateDataFromScreen(LocSiteVo value)
	{
		
		PersonAddress voAddress = new PersonAddress();			//wdev-16387
		
		voAddress.setLine1(form.ctn1().lyr1().tabLocSite().txtLocSiteAdd1().getValue());
		voAddress.setLine2(form.ctn1().lyr1().tabLocSite().txtLocSiteAdd2().getValue());
		voAddress.setLine3(form.ctn1().lyr1().tabLocSite().txtLocSiteAdd3().getValue());
		voAddress.setLine4(form.ctn1().lyr1().tabLocSite().txtLocSiteAdd4().getValue());
		voAddress.setLine5(form.ctn1().lyr1().tabLocSite().txtLocSiteAdd5().getValue());
		voAddress.setPhone(form.ctn1().lyr1().tabLocSite().txtLocSitePhone().getValue());
		voAddress.setFax(form.ctn1().lyr1().tabLocSite().txtLocSiteFaxNo().getValue());
		voAddress.setPostCode(form.ctn1().lyr1().tabLocSite().txtLocSitePostCode().getValue());
		voAddress.setCounty(form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().getValue());
		voAddress.setAddressType(AddressType.LOC_SITE);
		value.setAddress(voAddress.countFieldsWithValue() > 0 ? voAddress : null);

		value.setIsVirtual(new Boolean(form.ctn1().lyr1().tabLocSite().chkVirtualLocationSite().getValue()));//wdev-2730
		if(value.getID_Location() == null)
			value.setIsActive(Boolean.TRUE);
		
		value.setCodeMappings(getCodeMappings(form.ctn1().lyr1().tabLocSite().grdSiteMappings()));
		
		value.setName(form.ctn1().lyr1().tabLocSite().txtLocSiteName().getValue());
		value.setType(form.ctn1().lyr1().tabLocSite().cmbLocSiteType().getValue());
		value.setSecureAccommodation(new Boolean(form.ctn1().lyr1().tabLocSite().chkLocSiteSecure().getValue()));
		value.setAllSecureAccommodation(new Boolean(form.ctn1().lyr1().tabLocSite().chkLocSiteAllSecure().getValue()));
		value.setReferringHospital(new Boolean(form.ctn1().lyr1().tabLocSite().chkLocSiteReferringHos().getValue()));
		value.setTreatingHosp(new Boolean(form.ctn1().lyr1().tabLocSite().chkLocSiteTreatingHos().getValue()));
		
		//wdev-17000
		if( LocationType.WARD.equals(form.ctn1().lyr1().tabLocSite().cmbLocSiteType().getValue()) )
		{
			value.setDisplayInEDTracking(form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().getValue());
		}
		else
		{
			value.setDisplayInEDTracking(null);
		}
		
		/*WDEV-11885
		PrinterVoCollection printers = value.getPrinters();
		if(printers == null) {			
			printers = new PrinterVoCollection();
		}
		*/
		
		//If Printers were deleted clear printers collection and delete default, newResult and OCS defaults printers
		if (form.getGlobalContext().getPrintersSelected() == null || 
				(form.getGlobalContext().getPrintersSelectedIsNotNull() && form.getGlobalContext().getPrintersSelected().size() == 0))
		{
			value.setPrinters(null);	//WDEV-11885
			value.setDefaultPrinter(null);
			value.setDesignatedPrinterForNewResults(null);
			value.setDesignatedPrinterForOCSOrder(null);
			
			return;
		}
		
		/*WDEV-11885
		for (int i = 0; i < form.getGlobalContext().getPrintersSelected().size(); i++)
		{
			printers.add(form.getGlobalContext().getPrintersSelected().get(i));
		}
		*/
		
		value.setPrinters(form.getGlobalContext().getPrintersSelected());	//WDEV-11885
				
		value.setDefaultPrinter(form.getGlobalContext().getDefaultPrinterIsNotNull() ? domain.getPrinter(form.getGlobalContext().getDefaultPrinter()) : null);									
		value.setDesignatedPrinterForNewResults(form.getGlobalContext().getDesignatedPrinterForNewResultsIsNotNull() ? domain.getPrinter(form.getGlobalContext().getDesignatedPrinterForNewResults()) : null);									
		value.setDesignatedPrinterForOCSOrder(form.getGlobalContext().getDesignatedPrinterForOCSOrderIsNotNull() ? domain.getPrinter(form.getGlobalContext().getDesignatedPrinterForOCSOrder()) : null);
		
		
	}

	private TaxonomyMapCollection getCodeMappings(grdSiteMappingsGrid grid)
	{
		TaxonomyMapCollection coll = new TaxonomyMapCollection();
		for (int i = 0; i < grid.getRows().size(); i++)
		{
			grdSiteMappingsRow row = grid.getRows().get(i);
			if (row.getcolExtCodeType() != null && row.getcolCode() != null)
			{
				TaxonomyMap map = new TaxonomyMap();
				map.setTaxonomyName(row.getcolExtCodeType());
				map.setTaxonomyCode(row.getcolCode());
				coll.add(map);
			}
		}
		return coll.size() > 0 ? coll : null;
	}

	private void populateDataFromScreen(LocMostVo value)
	{
		PersonAddress voAddress = new PersonAddress();
		voAddress.setLine1(form.ctn1().lyr1().tabLoc().txtLocAdd1().getValue());
		voAddress.setLine2(form.ctn1().lyr1().tabLoc().txtLocAdd2().getValue());
		voAddress.setLine3(form.ctn1().lyr1().tabLoc().txtLocAdd3().getValue());
		voAddress.setLine4(form.ctn1().lyr1().tabLoc().txtLocAdd4().getValue());
		voAddress.setLine5(form.ctn1().lyr1().tabLoc().txtLocAdd5().getValue());
		voAddress.setPhone(form.ctn1().lyr1().tabLoc().txtLocPhone().getValue());
		voAddress.setFax(form.ctn1().lyr1().tabLoc().txtLocFaxNo().getValue());
		voAddress.setPostCode(form.ctn1().lyr1().tabLoc().txtLocPostCode().getValue());
		voAddress.setCounty(form.ctn1().lyr1().tabLoc().cmbLocCounty().getValue());
		voAddress.setAddressType(AddressType.LOCATION);

		value.setAddress(voAddress.countFieldsWithValue() > 0 ? voAddress : null);

		value.setIsVirtual(new Boolean(form.ctn1().lyr1().tabLoc().chkVirtualLocation().getValue()));//wdev-2730

		if(value.getID_Location() == null)
			value.setIsActive(Boolean.TRUE);

		value.setCodeMappings(getCodeMappings(form.ctn1().lyr1().tabLoc().grdLocMappings()));

		value.setName(form.ctn1().lyr1().tabLoc().txtLocName().getValue());
		value.setType(form.ctn1().lyr1().tabLoc().cmbLocType().getValue());
		value.setReferringHospital(new Boolean(form.ctn1().lyr1().tabLoc().chkReferringHosp().getValue()));
		value.setTreatingHosp(new Boolean(form.ctn1().lyr1().tabLoc().chkTreatingHosp().getValue()));
		
		//wdev-17000
		if( LocationType.WARD.equals(form.ctn1().lyr1().tabLoc().cmbLocType().getValue()) )
		{
			value.setDisplayInEDTracking(form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().getValue());
		}
		else
			value.setDisplayInEDTracking(null);
				
		/*WDEV-11885
		PrinterVoCollection printers = value.getPrinters();
		if(printers == null) {			
			printers = new PrinterVoCollection();
		}*/
		
		//If Printers were deleted clear printers collection and delete default, newResult and OCS defaults printers
		if (form.getGlobalContext().getPrintersSelected() == null || 
				(form.getGlobalContext().getPrintersSelectedIsNotNull() && form.getGlobalContext().getPrintersSelected().size() == 0))
		{
			value.setPrinters(null); //WDEV-11885
			value.setDefaultPrinter(null);
			value.setDesignatedPrinterForNewResults(null);
			value.setDesignatedPrinterForOCSOrder(null);
			
			return;
		}
		
		/*WDEV-11885
		for (int i = 0; i < form.getGlobalContext().getPrintersSelected().size(); i++)
		{
			printers.add(form.getGlobalContext().getPrintersSelected().get(i));
		}
		*/
		
		value.setPrinters(form.getGlobalContext().getPrintersSelected());	//WDEV-11885
				
		value.setDefaultPrinter(form.getGlobalContext().getDefaultPrinterIsNotNull() ? domain.getPrinter(form.getGlobalContext().getDefaultPrinter()) : null);									
		value.setDesignatedPrinterForNewResults(form.getGlobalContext().getDesignatedPrinterForNewResultsIsNotNull() ? domain.getPrinter(form.getGlobalContext().getDesignatedPrinterForNewResults()) : null);									
		value.setDesignatedPrinterForOCSOrder(form.getGlobalContext().getDesignatedPrinterForOCSOrderIsNotNull() ? domain.getPrinter(form.getGlobalContext().getDesignatedPrinterForOCSOrder()) : null);
		
		
	}

	private TaxonomyMapCollection getCodeMappings(grdLocMappingsGrid grid)
	{
		TaxonomyMapCollection coll = new TaxonomyMapCollection();
		for (int i = 0; i < grid.getRows().size(); i++)
		{
			grdLocMappingsRow row = grid.getRows().get(i);
			if (row.getcolExtCodeType() != null && row.getcolCode() != null)
			{
				TaxonomyMap map = new TaxonomyMap();
				map.setTaxonomyName(row.getcolExtCodeType());
				map.setTaxonomyCode(row.getcolCode());
				coll.add(map);
			}
		}
		return coll.size() > 0 ? coll : null;
	}

	protected void onBtnSaveClick() throws PresentationLogicException
	{
		OrganisationVo voOrg = null;
		LocSiteVo voLocSite = null;
		LocMostVo voLoc = null;
		LocSiteVo childLs = null;
		LocMostVo childLoc = null;

		TreeNode node = null;
		
		//WDEV-2578 
		//need to validate the Taxonomy code is of type AAANNN 
		if(ConfigFlag.DOM.ENABLE_EXCHEQUER_CODES_VALIDATION.getValue())
		{
			if ( ! checkMandatorySpecEXCHCode())
				return;
		}
		
		//Test first if save is for a New Root Org
		if (form.getLocalContext().getSavingRootOrg() != null && form.getLocalContext().getSavingRootOrg().booleanValue())
		{
			voOrg = (OrganisationVo)form.getLocalContext().getEditObject();
			populateDataFromScreen(voOrg);
			
			if(voOrg.countFieldsWithValue() > 0)
			{
				String dupOrgNameMessage = checkOrganisationNameIsUnique(voOrg);
				if (dupOrgNameMessage != null)
				{
					engine.showMessage(dupOrgNameMessage);
					return;
				}
				
				String dupExchequerMessage = checkExchequerCodeIsUnique(voOrg, voOrg.getCodeMappings());
				if (dupExchequerMessage != null)
				{
					engine.showMessage(dupExchequerMessage);
					return;
				}	
			}
		}
		else
		{
			node = form.treOrgLoc().getSelectedNode();
			if (node == null)
			{
				throw new CodingRuntimeException("Can only save new Root Org when nothing selected. This is a bug.");
			}
			
			//Next test to see if just editing an existing Object. No parent/child relationships are changed
			//i.e. the value at the selected node IS the object currently being edited.
			if (node.getValue().equals(form.getLocalContext().getEditObject()))
			{
				if (form.getLocalContext().getEditObject() instanceof OrganisationVo)
				{
					voOrg = (OrganisationVo)form.getLocalContext().getEditObject();
					populateDataFromScreen(voOrg);
					
					if(voOrg.countFieldsWithValue() > 0)
					{
						String dupOrgNameMessage = checkOrganisationNameIsUnique(voOrg);
						if (dupOrgNameMessage != null)
						{
							engine.showMessage(dupOrgNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(voOrg, voOrg.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}
				else if (form.getLocalContext().getEditObject() instanceof LocSiteVo)
				{
					//voLocSite = (LocSiteVo)form.getLocalContext().getEditObject();
					//wdev-12885
					voLocSite = domain.getLocSite(((LocSiteVo)form.getLocalContext().getEditObject()).getID_Location());
					//---------
					populateDataFromScreen(voLocSite);
					if(voLocSite.countFieldsWithValue() > 0)
					{
						String dupLocSiteNameMessage = checkLocSiteNameIsUnique(voLocSite);
						if (dupLocSiteNameMessage != null)
						{
							engine.showMessage(dupLocSiteNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(voLocSite, voLocSite.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}
				else if (form.getLocalContext().getEditObject() instanceof LocMostVo)
				{
					//voLoc = (LocMostVo)form.getLocalContext().getEditObject();
					//wdev-12855
					voLoc = domain.getLocMost(((LocMostVo)form.getLocalContext().getEditObject()).getID_Location());
					//---------
					populateDataFromScreen(voLoc);
					if(voLoc.countFieldsWithValue() > 0)
					{
						String dupLocNameMessage = checkLocationNameIsUnique(voLoc);
						if (dupLocNameMessage != null)
						{
							engine.showMessage(dupLocNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(voLoc, voLoc.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}
			}
			else
			{
				//The currently select node must be the parent of the currently edited object
				//Four situations must be checked for :-
				// 1. node == ORG and Edited == ORG
				// 2. node == ORG and Edited == LOC_SITE
				// 3. node == LOC_SITE and Edited == LOCATION
				// 4. node == LOCATION and Edited == LOCATION
				
		
				
				if (node.getValue() instanceof OrganisationVo && form.getLocalContext().getEditObject() instanceof OrganisationVo)
				{
					OrganisationVo childOrg = (OrganisationVo)form.getLocalContext().getEditObject();
					voOrg = (OrganisationVo)node.getValue();
					populateDataFromScreen(childOrg);
					childOrg.setParent(voOrg);
					if(childOrg.countFieldsWithValue() > 0)
					{
						String dupOrdNameMessage = checkOrganisationNameIsUnique(childOrg);
						if (dupOrdNameMessage != null)
						{
							engine.showMessage(dupOrdNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(childOrg, childOrg.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}
				else if (node.getValue() instanceof OrganisationVo && form.getLocalContext().getEditObject() instanceof LocSiteVo)
				{
					childLs = (LocSiteVo)form.getLocalContext().getEditObject();
					voOrg = (OrganisationVo)node.getValue();
					populateDataFromScreen(childLs);
					childLs.setParent(voOrg);
					if(childLs.countFieldsWithValue() > 0)
					{
						String dupLocSiteNameMessage = checkLocSiteNameIsUnique(childLs);
						if (dupLocSiteNameMessage != null)
						{
							engine.showMessage(dupLocSiteNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(childLs, childLs.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}				
				else if (node.getValue() instanceof LocSiteVo && form.getLocalContext().getEditObject() instanceof LocMostVo)
				{
					childLoc = (LocMostVo)form.getLocalContext().getEditObject();
					voLocSite = (LocSiteVo)node.getValue();
					populateDataFromScreen(childLoc);
					childLoc.setParent(voLocSite);
					if(childLoc.countFieldsWithValue() > 0)
					{
						String dupLocationNameMessage = checkLocationNameIsUnique(childLoc);
						if (dupLocationNameMessage != null)
						{
							engine.showMessage(dupLocationNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(childLoc, childLoc.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}
				else if (node.getValue() instanceof LocMostVo && form.getLocalContext().getEditObject() instanceof LocMostVo)
				{
					childLoc = (LocMostVo)form.getLocalContext().getEditObject();
					voLoc = (LocMostVo)node.getValue();
					populateDataFromScreen(childLoc);
					childLoc.setParent(voLoc);	
					if(childLoc.countFieldsWithValue() > 0)
					{
						String dupLocationNameMessage = checkLocationNameIsUnique(childLoc);
						if (dupLocationNameMessage != null)
						{
							engine.showMessage(dupLocationNameMessage);
							return;
						}
						String dupExchequerMessage = checkExchequerCodeIsUnique(childLoc, childLoc.getCodeMappings());
						if (dupExchequerMessage != null)
						{
							engine.showMessage(dupExchequerMessage);
							return;
						}
					}
				}				
			}	
		}
		
		String[] arrErrors = null;
		if (voOrg != null)
		{
			arrErrors = voOrg.validate();
		}
		else if (voLocSite != null)
		{
			arrErrors = voLocSite.validate();
		}
		else if (voLoc != null)
		{
			arrErrors = voLoc.validate();
		}

		if (arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}
			
		try
		{
			save(voOrg, voLocSite, voLoc);
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());		
		}
		catch (UniqueKeyViolationException e)
		{
			engine.showMessage(e.getMessage());
			return;
		}
		open();
		setFormMode(FormMode.VIEW);
		
	}

	private String checkLocationNameIsUnique(LocMostVo locMostVo)
	{
		if (locMostVo != null && locMostVo.getName() != null)
		{
			String dupMessage = domain.checkLocationNameIsUnique(locMostVo.getName(), locMostVo.getID_Location());
			
			if(dupMessage != null)
				return dupMessage;
		}
		return null;
	
	}

	private String checkLocSiteNameIsUnique(LocSiteVo locSiteVo)
	{
		if (locSiteVo != null && locSiteVo.getName() != null)
		{
			String dupMessage = domain.checkLocationSiteNameIsUnique(locSiteVo.getName(), locSiteVo.getID_Location());
			
			if(dupMessage != null)
				return dupMessage;
		}
		return null;
	}

	private String checkOrganisationNameIsUnique(OrganisationVo voOrg)
	{
		if (voOrg != null && voOrg.getName() != null)
		{
			String dupMessage = domain.checkOrganisationNameisUnique(voOrg.getName(), voOrg);
			
			if(dupMessage != null)
				return dupMessage;
		}
		return null;
	}

	private String checkExchequerCodeIsUnique(ValueObjectRef voRef, TaxonomyMapCollection collTaxMap)
	{
		if(ConfigFlag.DOM.ENABLE_EXCHEQUER_CODES_VALIDATION.getValue())
		{
			if (voRef != null && collTaxMap != null)
			{
				for (int i = 0; i < collTaxMap.size(); i++)
				{
					if (collTaxMap.get(i) != null
						&& collTaxMap.get(i).getTaxonomyNameIsNotNull() 
						&& collTaxMap.get(i).getTaxonomyName().equals(TaxonomyType.EXCH))
					{
						String dupExchequer = domain.checkExchequerCodeIsUnique(collTaxMap.get(i).getTaxonomyCode(), voRef);
						
						if(dupExchequer != null)
							return dupExchequer;
					}
	
				}
					
			}
		}
		return null;
		
		
	}

	private void save(OrganisationVo voOrg, LocSiteVo voLocSite, LocMostVo voLoc) throws UniqueKeyViolationException, StaleObjectException 
	{
		if (voOrg != null)
		{	
			domain.saveOrganisation(voOrg);
		}
		else if (voLocSite != null)
		{	
			//wdev-12855
			if(form.getLocalContext().getEditObject() instanceof LocSiteVo && ((LocSiteVo)form.getLocalContext().getEditObject()).getID_LocationIsNotNull() && voLocSite.getVersion_Location() != ((LocSiteVo)form.getLocalContext().getEditObject()).getVersion_Location())
				throw new StaleObjectException(null);
			
			domain.saveLocationSite(voLocSite);
		}
		else if (voLoc != null)
		{
			//wdev-12855
			if(form.getLocalContext().getEditObject() instanceof LocMostVo && ((LocMostVo)form.getLocalContext().getEditObject()).getID_LocationIsNotNull() && voLoc.getVersion_Location() != ((LocMostVo)form.getLocalContext().getEditObject()).getVersion_Location())
				throw new StaleObjectException(null);
			domain.saveLocation(voLoc);
		}
		form.getLocalContext().setSavingRootOrg(null);
	}
	
	protected void onBtnCancelClick() throws PresentationLogicException
	{
		open();
		setFormMode(FormMode.VIEW);
	}
	
	private void clearOrgTab()
	{
		form.ctn1().lyr1().tabOrg().txtOrgName().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgAdd1().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgAdd2().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgAdd3().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgAdd4().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgAdd5().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgPostCode().setValue(null);
		form.ctn1().lyr1().tabOrg().cmbOrgCounty().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgPhone().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgFax().setValue(null);
		form.ctn1().lyr1().tabOrg().txtOrgComment().setValue(null);
		form.ctn1().lyr1().tabOrg().cmbOrgType().setValue(null);
		form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().clear();		
	}
	
	private void clearLocSiteTab()
	{
		form.ctn1().lyr1().tabLocSite().txtLocSiteName().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSiteAdd1().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSiteAdd2().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSiteAdd3().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSiteAdd4().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSiteAdd5().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSitePostCode().setValue(null);
		form.ctn1().lyr1().tabLocSite().chkVirtualLocationSite().setValue(false);//wdev-2730
		form.ctn1().lyr1().tabLocSite().txtLocSiteFaxNo().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLocSitePhone().setValue(null);
		form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().setValue(null);
		form.ctn1().lyr1().tabLocSite().cmbLocSiteType().setValue(null);
		form.ctn1().lyr1().tabLocSite().chkLocSiteSecure().setValue(false);
		form.ctn1().lyr1().tabLocSite().chkLocSiteAllSecure().setValue(false);
		form.ctn1().lyr1().tabLocSite().chkLocSiteReferringHos().setValue(false);
		form.ctn1().lyr1().tabLocSite().chkLocSiteTreatingHos().setValue(false);
		form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().clear();
		form.ctn1().lyr1().tabLocSite().txtLsPrinters().setValue(null);
		form.ctn1().lyr1().tabLocSite().txtLsPrinters().setTooltip(" "); 		//wdev-15817 G.M. space added as a workaround
		form.ctn1().lyr1().tabLocSite().lblDefaultPrinterToBeSetForLocSite().setValue(null);
		form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForNewResultsToBeSetForLocSite().setValue(null);
		form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForOCSOrderToBeSetForLocSite().setValue(null);
	}
	
	private void clearLocTab()
	{
		form.ctn1().lyr1().tabLoc().txtLocName().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocAdd1().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocAdd2().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocAdd3().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocAdd4().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocAdd5().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocPostCode().setValue(null);
		form.ctn1().lyr1().tabLoc().chkVirtualLocation().setValue(false);//wdev-2730
		form.ctn1().lyr1().tabLoc().cmbLocCounty().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocPhone().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocFaxNo().setValue(null);
		form.ctn1().lyr1().tabLoc().cmbLocType().setValue(null);
		form.ctn1().lyr1().tabLoc().chkReferringHosp().setValue(false);
		form.ctn1().lyr1().tabLoc().chkTreatingHosp().setValue(false);
		form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().clear();
		form.ctn1().lyr1().tabLoc().txtLocPrinters().setValue(null);
		form.ctn1().lyr1().tabLoc().txtLocPrinters().setTooltip(" ");	//wdev-15817 G.M. space added as a workaround
		form.ctn1().lyr1().tabLoc().lblDefaultPrintForLocation().setValue(null);
		form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForNewResultsForLocation().setValue(null);
		form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForOCSOrderToBeSetForLocation().setValue(null);
	}

	private void clearTab(int iTab)
	{
		switch (iTab)
		{
			case TABORG :
			{
				clearOrgTab();
				break;
			}
			case TABLOC :
			{
				clearLocTab();
				break;
			}
			case TABLOCSITE :
			{
				clearLocSiteTab();
				break;
			}
			case TABALL :
			{
				clearOrgTab();
				clearLocTab();
				clearLocSiteTab();				
				break;
			}
			default :
			break;
		}
	}

	protected void onContextMenuItemClick(int menuItemID, Control sender) throws PresentationLogicException
	{
		switch (menuItemID)
		{
			case GenForm.ContextMenus.OrganisationLocation.CREATELOC :
				createLocation();
			break;

			case GenForm.ContextMenus.OrganisationLocation.CREATEORGHERE :
				createOrganisationHere();
			break;

			case GenForm.ContextMenus.OrganisationLocation.CREATEROOTORG :
				createRootOrganisation();
			break;

			case GenForm.ContextMenus.OrganisationLocation.ACTIVATE :
				toggleActiveState();
			break;
			
			case GenForm.ContextMenus.OrganisationLocation.INACTIVATE :
				toggleActiveState();
			break;

			case GenForm.ContextMenus.OrganisationLocation.EDIT :
				editItem();
			break;

			case GenForm.ContextMenus.OrganisationLocation.RENAME :
				renameItem();
			break;

			case GenForm.ContextMenus.OrganisationLocation.REMOVE :
				removeItem();
			break;

			case GenForm.ContextMenus.GenericGrid.Add :
				if (sender.equals(form.ctn1().lyr1().tabOrg().grdOrgMappings()))
				{
					form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().newRow();
				}
				else if (sender.equals(form.ctn1().lyr1().tabLoc().grdLocMappings()))
				{
					form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().newRow();
				}
				else if (sender.equals(form.ctn1().lyr1().tabLocSite().grdSiteMappings()))
				{
					form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().newRow();
				}
				break;
			case GenForm.ContextMenus.GenericGrid.Remove :
				if (sender.equals(form.ctn1().lyr1().tabOrg().grdOrgMappings()))
				{
					form.ctn1().lyr1().tabOrg().grdOrgMappings().removeSelectedRow();
					form.getContextMenus().getGenericGridRemoveItem().setVisible(false);//WDEV-17642
				}
				else if (sender.equals(form.ctn1().lyr1().tabLoc().grdLocMappings()))
				{
					form.ctn1().lyr1().tabLoc().grdLocMappings().removeSelectedRow();
					form.getContextMenus().getGenericGridRemoveItem().setVisible(false);
				}
				else if (sender.equals(form.ctn1().lyr1().tabLocSite().grdSiteMappings()))
				{
					form.ctn1().lyr1().tabLocSite().grdSiteMappings().removeSelectedRow();
					form.getContextMenus().getGenericGridRemoveItem().setVisible(false);
				}
				break;
			default :
			break;
		}
	}

	private void renameItem()
	{
		form.treOrgLoc().beginEditSelectedNode();		
	}

	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException
	{
		if (formName.equals(form.getForms().Admin.PrinterSelectDialog))
		{
			if (result.equals(DialogResult.OK))
			{
				PrinterVoCollection printersVoColl = form.getGlobalContext().getPrintersSelected();
				IPrinter defaultPrinter = form.getGlobalContext().getDefaultPrinter();
				IPrinter designatedPrinterForNewResults = form.getGlobalContext().getDesignatedPrinterForNewResults();
				IPrinter designatedPrinterForOCSOrder = form.getGlobalContext().getDesignatedPrinterForOCSOrder();
				
				if (form.ctn1().lyr1().tabLocSite().isVisible())
				{		
					StringBuffer printers = new StringBuffer();
					for (int i = 0; i < printersVoColl.size(); i++)
					{						
						printers.append(printersVoColl.get(i).getName());
						if (i < printersVoColl.size() -1)
						{
							printers.append(",");
						}
					}
					
					if (defaultPrinter != null)
						form.ctn1().lyr1().tabLocSite().lblDefaultPrinterToBeSetForLocSite().setValue(defaultPrinter.getIPrinterName());
					else
						form.ctn1().lyr1().tabLocSite().lblDefaultPrinterToBeSetForLocSite().setValue("No default printer selected ");
					if (designatedPrinterForNewResults != null)
						form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForNewResultsToBeSetForLocSite().setValue(designatedPrinterForNewResults.getIPrinterName());	
					else
						form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForNewResultsToBeSetForLocSite().setValue("No designated printer for new results selected");
					if (designatedPrinterForOCSOrder != null)
						form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForOCSOrderToBeSetForLocSite().setValue(designatedPrinterForOCSOrder.getIPrinterName());	
					else
						form.ctn1().lyr1().tabLocSite().lblDesignatedPrinterForOCSOrderToBeSetForLocSite().setValue("No designated printer for ocs order selected");
					//WDEV-15817 - workaround until FWUI-1759 is fixed, set tooltip to one space
					form.ctn1().lyr1().tabLocSite().txtLsPrinters().setValue(printers.toString());
					form.ctn1().lyr1().tabLocSite().txtLsPrinters().setTooltip(printers.toString() != null && printers.toString().length() > 0 ? printers.toString() : " ");					
				}
				else if(form.ctn1().lyr1().tabLoc().isVisible())
				{	
					StringBuffer printers = new StringBuffer();
					for (int i = 0; i < printersVoColl.size(); i++)
					{
						printers.append(printersVoColl.get(i).getName());
						if (i < printersVoColl.size() -1)
						{
							printers.append(",");
						}
					}
					
					if (defaultPrinter != null)
						form.ctn1().lyr1().tabLoc().lblDefaultPrintForLocation().setValue(defaultPrinter.getIPrinterName());						
					else
						form.ctn1().lyr1().tabLoc().lblDefaultPrintForLocation().setValue("No default printer selected ");
					if (designatedPrinterForNewResults != null)
						form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForNewResultsForLocation().setValue(designatedPrinterForNewResults.getIPrinterName());
					else
						form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForNewResultsForLocation().setValue("No designated printer for new results selected");
					if (designatedPrinterForOCSOrder != null)
						form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForOCSOrderToBeSetForLocation().setValue(designatedPrinterForOCSOrder.getIPrinterName());
					else
						form.ctn1().lyr1().tabLoc().lblDesignatedPrinterForOCSOrderToBeSetForLocation().setValue("No designated printer for ocs order selected");
					//WDEV-15817 - workaround until FWUI-1759 is fixed, set tooltip to one space
					form.ctn1().lyr1().tabLoc().txtLocPrinters().setValue(printers.toString());
					form.ctn1().lyr1().tabLoc().txtLocPrinters().setTooltip(printers.toString() != null && printers.toString().length() > 0 ? printers.toString() : " ");
					
				}
			}
			//form.getGlobalContext().setPrintersSelected(null);
		}
	}

	protected void onBtnLocPrinterSelectClick() throws PresentationLogicException
	{
		engine.open(form.getForms().Admin.PrinterSelectDialog);
	}

	protected void onBtnLsPrinterSelectClick() throws PresentationLogicException
	{		
		engine.open(form.getForms().Admin.PrinterSelectDialog);
	}

	protected void onChkActiveOnlyValueChanged() throws PresentationLogicException
	{
		open();
	}

	protected void onTreOrgLocTreeViewNodeExpandCollapse(TreeNode node) throws PresentationLogicException
	{
		form.treOrgLoc().clearSelection();
		form.ctn1().setCollapsed(true);
		form.ctn1().lyr1().showtabBlank();		
	}

	protected void onTreOrgLocTreeViewSelectionCleared() throws PresentationLogicException
	{
		form.treOrgLoc().clearSelection();
		defaultContextMenus();
		form.ctn1().setCollapsed(true);		
		form.ctn1().lyr1().showtabBlank();
	}
	
	/**
	 * Toggle an Org,LocSite or Location from Active --> Inactive or Inactive --> Active
	 *
	 */
	private void toggleActiveState()
	{
		TreeNode node = form.treOrgLoc().getSelectedNode();
		if (node == null) 
			return;
		
		if(node.getValue() instanceof OrganisationVo)
		{
			OrganisationVo orgVo = (OrganisationVo)node.getValue();
			try
			{
				domain.setOrgActiveState(orgVo, new Boolean(!(orgVo.getIsActive().booleanValue())));
			}
			catch (StaleObjectException e)
			{
				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			}
		}
		else
		{
			LocMostVo locVo = (LocMostVo)node.getValue();
			try
			{
				domain.setLocationActiveState(locVo, new Boolean(!(locVo.getIsActive().booleanValue())));
			}
			catch (StaleObjectException e)
			{
				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			}
		}		
		open();
	}
	
	/**
	 * This will attempt to perform a complete delete of the selected item.
	 * It it's still referenced from anywhere in the database, the delete will fail.
	 */
	private void removeItem()
	{
		TreeNode node = form.treOrgLoc().getSelectedNode();
		if (node == null) 
			return;
		
		if(node.getValue() instanceof OrganisationVo)
		{
			OrganisationVo orgVo = (OrganisationVo)node.getValue();
			try
			{
				domain.deleteOrganisation(orgVo);
			}
			catch (ForeignKeyViolationException e) 
			{
				engine.showMessage(e.getMessage());
			}
		}
		else if(node.getValue() instanceof LocSiteVo)
		{
			LocSiteVo lsVo = (LocSiteVo)node.getValue();
			try
			{
				domain.deleteLocSite(lsVo);
			}
			catch (ForeignKeyViolationException e)
			{
				engine.showMessage(e.getMessage());
			}			
		}
		else if(node.getValue() instanceof LocMostVo)
		{
			LocMostVo loc = (LocMostVo)node.getValue();
			try
			{
				domain.deleteLocation(loc);
			}
			catch (ForeignKeyViolationException e)
			{
				engine.showMessage(e.getMessage());
			}
		}
		open();
	}

	/**
	 * There are 5 potential drop scenarios to be catered for
	 * 1. ORG dropped to root
	 * 2. ORG dropped on ORG
	 * 3. LOC_SITE dropped on ORG
	 * 4. LOCATION dropped on LOC_SITE
	 * 5. LOCATION dropped on LOCATION
	 * 
	 * The way the tree was populated has dictated that no other unsupported drops can occur.
	 */
	protected void onTreOrgLocTreeViewNodeDropped(TreeNode node, TreeNode oldParent)
	{		
		
		OrganisationVo voOrg = null;
		LocSiteVo voLocSite = null;
		LocMostVo voLoc = null;

		//1. ORG dropped to root
		if(node.getParent() == null && node.getValue() instanceof OrganisationVo )
		{
			voOrg = (OrganisationVo)node.getValue();
			voOrg.setParent(null);
		}
		//2. ORG dropped on ORG
		else if (node.getValue() instanceof OrganisationVo && node.getParent().getValue() instanceof OrganisationVo)
		{
			OrganisationVo childOrg = (OrganisationVo)node.getValue();
			voOrg = (OrganisationVo)node.getParent().getValue();
			childOrg.setParent(voOrg);			
		}
		//3. LOC_SITE dropped on ORG
		else if (node.getValue() instanceof LocSiteVo && node.getParent().getValue() instanceof OrganisationVo)
		{
			LocSiteVo childLs = (LocSiteVo)node.getValue();
			voOrg = (OrganisationVo)node.getParent().getValue();
			childLs.setParent(voOrg);			
		}
		//4. LOCATION dropped on LOC_SITE
		else if (node.getValue() instanceof LocMostVo && node.getParent().getValue() instanceof LocSiteVo)
		{
			LocMostVo childLoc = (LocMostVo)node.getValue();
			voLocSite = (LocSiteVo)node.getParent().getValue();
			childLoc.setParent(voLocSite);			
		}
		//5. LOCATION dropped on LOCATION
		else if (node.getValue() instanceof LocMostVo && node.getParent().getValue() instanceof LocMostVo)
		{
			LocMostVo childLoc = (LocMostVo)node.getValue();
			voLoc = (LocMostVo)node.getParent().getValue();
			childLoc.setParent(voLoc);						
		}
		
		//WDEV-7083
		if(node.getValue() instanceof LocMostVo)
		{
			if( ((LocMostVo)node.getValue()).getType().equals(LocationType.BAY) )
			{
				engine.showErrors(new String[]{"Bay Configuation can not be edited on this screen"});
				open();
				return;
			}
		}
		
		String[] arrErrors = null;
		if (voOrg != null)
		{
			arrErrors = voOrg.validate();
		}
		else if (voLocSite != null)
		{
			arrErrors = voLocSite.validate();
		}
		else if (voLoc != null)
		{
			arrErrors = voLoc.validate();
		}

		if (arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}

		try
		{
			if (voOrg != null)
				domain.saveOrganisation(voOrg);
			else if (voLocSite != null)
				domain.saveLocationSite(voLocSite);
			else if (voLoc != null)
				domain.saveLocation(voLoc);
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		catch (UniqueKeyViolationException e)
		{
			engine.showMessage(e.getMessage());
			return;
		}

		setFormMode(FormMode.VIEW);
		open();
	}

	protected void onTreOrgLocTreeViewNodeEdited(TreeNode node) throws PresentationLogicException
	{
		OrganisationVo voOrg = null;
		LocMostVo voLoc = null;

		if(node.getValue() instanceof OrganisationVo )
		{
			voOrg = (OrganisationVo)node.getValue();
			voOrg.setName(node.getText());
		}
		else 
		{
			voLoc = (LocMostVo)node.getValue();			
			voLoc.setName(node.getText());
		}
			
		String[] arrErrors = null;
		if (voOrg != null)
		{
			arrErrors = voOrg.validate();
		}
		else if (voLoc != null)
		{
			arrErrors = voLoc.validate();
		}

		if (arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}

		try
		{
			if (voOrg != null)
				domain.saveOrganisation(voOrg);
			else if (voLoc != null)
				domain.saveLocation(voLoc);
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		catch (UniqueKeyViolationException e)
		{
			engine.showMessage(e.getMessage());
		}
		setFormMode(FormMode.VIEW);
		open();
	}

	protected void onFormModeChanged()
	{
		updateControlsState();
		
	}

	private void updateControlsState()
	{
		boolean isEditable = form.getMode().equals(FormMode.EDIT);
		
		//wdev-17000
					
		form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setEnabled(false);
		form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setEnabled(false);
			
		
		//-----------------------
		
		if (ConfigFlag.UI.DEMOGRAPHICS_USE_POSTCODE.getValue())
		{
			form.ctn1().lyr1().tabOrg().txtOrgPostCode().setEnabled(isEditable);
			form.ctn1().lyr1().tabLoc().txtLocPostCode().setEnabled(isEditable);
			form.ctn1().lyr1().tabLocSite().txtLocSitePostCode().setEnabled(isEditable);
		}
		else
		{
			form.ctn1().lyr1().tabOrg().cmbOrgCounty().setEnabled(isEditable);
			form.ctn1().lyr1().tabLoc().cmbLocCounty().setEnabled(isEditable);
			form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().setEnabled(isEditable);
		}
		
		if(isEditable)
		{
			//WDEV-7083 Bays now created and configured on BayLayoutConfig
			form.ctn1().lyr1().tabLoc().cmbLocType().removeRow(ims.core.vo.lookups.LocationType.BAY);
			form.ctn1().lyr1().tabLocSite().cmbLocSiteType().removeRow(ims.core.vo.lookups.LocationType.BAY);
			
			if (form.getLocalContext().getEditObject() instanceof LocMostVo)
			{
				LocMostVo loc = (LocMostVo)form.getLocalContext().getEditObject();
				
				boolean hasNoChilds = !loc.getLocationsIsNotNull() || loc.getLocations().size() == 0;
				
				form.ctn1().lyr1().tabLoc().chkVirtualLocation().setEnabled(hasNoChilds);
				form.ctn1().lyr1().tabLocSite().chkVirtualLocationSite().setEnabled(hasNoChilds);
			}
			//wdev-17000
			if( LocationType.WARD.equals(form.ctn1().lyr1().tabLoc().cmbLocType().getValue()) )
			{
				form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setEnabled(true);
			}
			if( LocationType.WARD.equals(form.ctn1().lyr1().tabLocSite().cmbLocSiteType().getValue()) )
			{
				form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setEnabled(true);
			}
			
		}
		
			
	}
	
	//WDEV-2578 
	private boolean checkMandatorySpecEXCHCode()
	{
		if (form.ctn1().lyr1().tabLocSite().isVisible() == true)
		{
			if ( form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().size() > 0)
			{
				for(int x = 0; x < form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().size(); x++)
				{
					if (form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().get(x).getcolExtCodeType() != null &&
							form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().get(x).getcolExtCodeType().equals(TaxonomyType.EXCH))
					{		
						if ( ! NTPFExchequerCodingChecks.checkCodeIsAAANNN(form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().get(x).getcolCode()) )
						{
							engine.showMessage("The Location Site Exchequer code is not of the format AAANNN.");
							return false;
						}
						if (x == form.ctn1().lyr1().tabLocSite().grdSiteMappings().getRows().size()-1)
							return true;
					}
				}
			}
		}
		
		if (form.ctn1().lyr1().tabLoc().isVisible())
		{
			if ( form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().size() > 0)
			{
				for(int x = 0; x < form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().size(); x++)
				{
					if (form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().get(x).getcolExtCodeType()!=null && form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().get(x).getcolExtCodeType().equals(TaxonomyType.EXCH))//WDEV-15637
					{		
						if ( ! NTPFExchequerCodingChecks.checkCodeIsAAANNN(form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().get(x).getcolCode()) )
						{
							engine.showMessage("The Location Exchequer code is not of the format AAANNN.");
							return false;
						}
						if (x == form.ctn1().lyr1().tabLoc().grdLocMappings().getRows().size()-1)
							return true;
					}
				}
			}
		}
		
		if (form.ctn1().lyr1().tabOrg().isVisible())
		{
			if ( form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().size() > 0)
			{
				for(int x = 0; x < form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().size(); x++)
				{
					if (form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().get(x).getcolExtCodeType()!=null && form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().get(x).getcolExtCodeType().equals(TaxonomyType.EXCH))//WDEV-15637
					{		
						if ( ! NTPFExchequerCodingChecks.checkCodeIsAAANNN(form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().get(x).getcolCode()) )
						{
							engine.showMessage("The Organization Exchequer code is not of the format AAANNN.");
							return false;
						}
						if (x == form.ctn1().lyr1().tabOrg().grdOrgMappings().getRows().size()-1)
							return true;
					}
				}
			}
		}
		
		return true;
	}

	@Override
	protected void onGrdLocMappingsSelectionChanged() throws PresentationLogicException
	{
		form.getContextMenus().getGenericGridRemoveItem().setVisible(true);	
	}

	@Override
	protected void onGrdOrgMappingsSelectionChanged() throws PresentationLogicException
	{
		form.getContextMenus().getGenericGridRemoveItem().setVisible(true);
	}

	@Override
	protected void onGrdSiteMappingsSelectionChanged() throws PresentationLogicException
	{
		form.getContextMenus().getGenericGridRemoveItem().setVisible(true);	
	}
		
	protected void onCmbLocTypeValueChanged() throws PresentationLogicException 
	{
		//wdev-17000
		if( LocationType.WARD.equals(form.ctn1().lyr1().tabLoc().cmbLocType().getValue()) )
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setVisible(true);
		else
		{
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setVisible(false);
			form.ctn1().lyr1().tabLoc().chkDisplayInEDTrackingLoc().setValue(null);
		}
		
		updateControlsState();
		
	}

	
	protected void onCmbLocSiteTypeValueChanged() throws PresentationLogicException 
	{
		
		//wdev-17000
		if( LocationType.WARD.equals(form.ctn1().lyr1().tabLocSite().cmbLocSiteType().getValue()) )
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setVisible(true);
		else
		{
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setVisible(false);
			form.ctn1().lyr1().tabLocSite().chkDisplayInEDTrackingLocSite().setValue(null);
		}
		
		updateControlsState();
	}
}
