//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.organisationandlocation;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.admin.domain.OrganisationAndLocation.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.admin.domain.OrganisationAndLocation domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	public void clearContextInformation()
	{
		engine.clearPatientContextInformation();
	}
	protected final void bindgrdOrgMappingscolExtCodeTypeLookup()
	{
		this.form.ctn1().lyr1().tabOrg().grdOrgMappings().colExtCodeTypeComboBox().clear();
		ims.core.vo.lookups.TaxonomyTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getTaxonomyType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabOrg().grdOrgMappings().colExtCodeTypeComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void oncmbOrgCountyValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctn1().lyr1().tabOrg().cmbOrgCounty().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.ntpf.vo.lookups.County existingInstance = (ims.ntpf.vo.lookups.County)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbOrgCountyLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.ntpf.vo.lookups.County)
		{
			ims.ntpf.vo.lookups.County instance = (ims.ntpf.vo.lookups.County)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbOrgCountyLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.ntpf.vo.lookups.County existingInstance = (ims.ntpf.vo.lookups.County)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctn1().lyr1().tabOrg().cmbOrgCounty().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbOrgCountyLookup()
	{
		this.form.ctn1().lyr1().tabOrg().cmbOrgCounty().clear();
		ims.ntpf.vo.lookups.CountyCollection lookupCollection = ims.ntpf.vo.lookups.LookupHelper.getCounty(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabOrg().cmbOrgCounty().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbOrgCountyLookupValue(int id)
	{
		ims.ntpf.vo.lookups.County instance = ims.ntpf.vo.lookups.LookupHelper.getCountyInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctn1().lyr1().tabOrg().cmbOrgCounty().setValue(instance);
	}
	protected final void defaultcmbOrgCountyLookupValue()
	{
		this.form.ctn1().lyr1().tabOrg().cmbOrgCounty().setValue((ims.ntpf.vo.lookups.County)domain.getLookupService().getDefaultInstance(ims.ntpf.vo.lookups.County.class, engine.getFormName().getID(), ims.ntpf.vo.lookups.County.TYPE_ID));
	}
	protected final void oncmbOrgTypeValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctn1().lyr1().tabOrg().cmbOrgType().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.OrganisationType existingInstance = (ims.core.vo.lookups.OrganisationType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbOrgTypeLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.OrganisationType)
		{
			ims.core.vo.lookups.OrganisationType instance = (ims.core.vo.lookups.OrganisationType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbOrgTypeLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.OrganisationType existingInstance = (ims.core.vo.lookups.OrganisationType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctn1().lyr1().tabOrg().cmbOrgType().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbOrgTypeLookup()
	{
		this.form.ctn1().lyr1().tabOrg().cmbOrgType().clear();
		ims.core.vo.lookups.OrganisationTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getOrganisationType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabOrg().cmbOrgType().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbOrgTypeLookupValue(int id)
	{
		ims.core.vo.lookups.OrganisationType instance = ims.core.vo.lookups.LookupHelper.getOrganisationTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctn1().lyr1().tabOrg().cmbOrgType().setValue(instance);
	}
	protected final void defaultcmbOrgTypeLookupValue()
	{
		this.form.ctn1().lyr1().tabOrg().cmbOrgType().setValue((ims.core.vo.lookups.OrganisationType)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.OrganisationType.class, engine.getFormName().getID(), ims.core.vo.lookups.OrganisationType.TYPE_ID));
	}
	protected final void bindgrdLocMappingscolExtCodeTypeLookup()
	{
		this.form.ctn1().lyr1().tabLoc().grdLocMappings().colExtCodeTypeComboBox().clear();
		ims.core.vo.lookups.TaxonomyTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getTaxonomyType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabLoc().grdLocMappings().colExtCodeTypeComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void oncmbLocCountyValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctn1().lyr1().tabLoc().cmbLocCounty().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.ntpf.vo.lookups.County existingInstance = (ims.ntpf.vo.lookups.County)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbLocCountyLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.ntpf.vo.lookups.County)
		{
			ims.ntpf.vo.lookups.County instance = (ims.ntpf.vo.lookups.County)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbLocCountyLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.ntpf.vo.lookups.County existingInstance = (ims.ntpf.vo.lookups.County)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctn1().lyr1().tabLoc().cmbLocCounty().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbLocCountyLookup()
	{
		this.form.ctn1().lyr1().tabLoc().cmbLocCounty().clear();
		ims.ntpf.vo.lookups.CountyCollection lookupCollection = ims.ntpf.vo.lookups.LookupHelper.getCounty(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabLoc().cmbLocCounty().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbLocCountyLookupValue(int id)
	{
		ims.ntpf.vo.lookups.County instance = ims.ntpf.vo.lookups.LookupHelper.getCountyInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctn1().lyr1().tabLoc().cmbLocCounty().setValue(instance);
	}
	protected final void defaultcmbLocCountyLookupValue()
	{
		this.form.ctn1().lyr1().tabLoc().cmbLocCounty().setValue((ims.ntpf.vo.lookups.County)domain.getLookupService().getDefaultInstance(ims.ntpf.vo.lookups.County.class, engine.getFormName().getID(), ims.ntpf.vo.lookups.County.TYPE_ID));
	}
	protected final void oncmbLocTypeValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctn1().lyr1().tabLoc().cmbLocType().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.LocationType existingInstance = (ims.core.vo.lookups.LocationType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbLocTypeLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.LocationType)
		{
			ims.core.vo.lookups.LocationType instance = (ims.core.vo.lookups.LocationType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbLocTypeLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.LocationType existingInstance = (ims.core.vo.lookups.LocationType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctn1().lyr1().tabLoc().cmbLocType().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbLocTypeLookup()
	{
		this.form.ctn1().lyr1().tabLoc().cmbLocType().clear();
		ims.core.vo.lookups.LocationTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getLocationType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabLoc().cmbLocType().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbLocTypeLookupValue(int id)
	{
		ims.core.vo.lookups.LocationType instance = ims.core.vo.lookups.LookupHelper.getLocationTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctn1().lyr1().tabLoc().cmbLocType().setValue(instance);
	}
	protected final void defaultcmbLocTypeLookupValue()
	{
		this.form.ctn1().lyr1().tabLoc().cmbLocType().setValue((ims.core.vo.lookups.LocationType)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.LocationType.class, engine.getFormName().getID(), ims.core.vo.lookups.LocationType.TYPE_ID));
	}
	protected final void bindgrdSiteMappingscolExtCodeTypeLookup()
	{
		this.form.ctn1().lyr1().tabLocSite().grdSiteMappings().colExtCodeTypeComboBox().clear();
		ims.core.vo.lookups.TaxonomyTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getTaxonomyType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabLocSite().grdSiteMappings().colExtCodeTypeComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void oncmbLocSiteCountyValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.ntpf.vo.lookups.County existingInstance = (ims.ntpf.vo.lookups.County)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbLocSiteCountyLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.ntpf.vo.lookups.County)
		{
			ims.ntpf.vo.lookups.County instance = (ims.ntpf.vo.lookups.County)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbLocSiteCountyLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.ntpf.vo.lookups.County existingInstance = (ims.ntpf.vo.lookups.County)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbLocSiteCountyLookup()
	{
		this.form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().clear();
		ims.ntpf.vo.lookups.CountyCollection lookupCollection = ims.ntpf.vo.lookups.LookupHelper.getCounty(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbLocSiteCountyLookupValue(int id)
	{
		ims.ntpf.vo.lookups.County instance = ims.ntpf.vo.lookups.LookupHelper.getCountyInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().setValue(instance);
	}
	protected final void defaultcmbLocSiteCountyLookupValue()
	{
		this.form.ctn1().lyr1().tabLocSite().cmbLocSiteCounty().setValue((ims.ntpf.vo.lookups.County)domain.getLookupService().getDefaultInstance(ims.ntpf.vo.lookups.County.class, engine.getFormName().getID(), ims.ntpf.vo.lookups.County.TYPE_ID));
	}
	protected final void oncmbLocSiteTypeValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctn1().lyr1().tabLocSite().cmbLocSiteType().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.LocationType existingInstance = (ims.core.vo.lookups.LocationType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbLocSiteTypeLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.LocationType)
		{
			ims.core.vo.lookups.LocationType instance = (ims.core.vo.lookups.LocationType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbLocSiteTypeLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.LocationType existingInstance = (ims.core.vo.lookups.LocationType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctn1().lyr1().tabLocSite().cmbLocSiteType().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbLocSiteTypeLookup()
	{
		this.form.ctn1().lyr1().tabLocSite().cmbLocSiteType().clear();
		ims.core.vo.lookups.LocationTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getLocationType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctn1().lyr1().tabLocSite().cmbLocSiteType().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbLocSiteTypeLookupValue(int id)
	{
		ims.core.vo.lookups.LocationType instance = ims.core.vo.lookups.LookupHelper.getLocationTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctn1().lyr1().tabLocSite().cmbLocSiteType().setValue(instance);
	}
	protected final void defaultcmbLocSiteTypeLookupValue()
	{
		this.form.ctn1().lyr1().tabLocSite().cmbLocSiteType().setValue((ims.core.vo.lookups.LocationType)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.LocationType.class, engine.getFormName().getID(), ims.core.vo.lookups.LocationType.TYPE_ID));
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.admin.domain.OrganisationAndLocation domain;
}
