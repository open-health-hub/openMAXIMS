//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.service;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode, ims.framework.interfaces.IClearInfo
{
	abstract protected void bindcmbTurnAroundMeasureLookup();
	abstract protected void defaultcmbTurnAroundMeasureLookupValue();
	abstract protected void bindcmbSpecialtyLookup();
	abstract protected void defaultcmbSpecialtyLookupValue();
	abstract protected void bindcmbCategoryLookup();
	abstract protected void defaultcmbCategoryLookupValue();
	abstract protected void bindgrdTaxonomycolExtCodeTypeLookup();
	abstract protected void bindcmbActivityTypeLookup();
	abstract protected void defaultcmbActivityTypeLookupValue();
	abstract protected void bindgrdActivityTaxonomycolExtCodeTypeLookup();
	abstract protected void bindgrdFunctionTaxonomycolExtCodeTypeLookup();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onLnkBackClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkActiveServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTreServiceTreeViewNodeExpandCollapse(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTreServiceTreeViewSelectionChanged(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTurnAroundMeasureValueSet(Object value);
	abstract protected void oncmbSpecialtyValueSet(Object value);
	abstract protected void oncmbCategoryValueSet(Object value);
	abstract protected void onCmbCategoryValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTaxonomySelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbActivityTypeValueSet(Object value);
	abstract protected void onCmbActivityTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbActivityTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbAddListClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdActivitySelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdActivityGridCheckBoxClicked(int column, GenForm.lyr1Layer.EditContainer.lyrActivityFunctionLayer.tabPageActivityContainer.grdActivityRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdActivityTaxonomySelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFunctionSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFunctionGridCheckBoxClicked(int column, GenForm.lyr1Layer.EditContainer.lyrActivityFunctionLayer.tabPageFunctionContainer.grdFunctionRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.lnkBack().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onLnkBackClick();
			}
		});
		this.form.chkActiveService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkActiveServiceValueChanged();
			}
		});
		this.form.btnSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSearchClick();
			}
		});
		this.form.treService().setTreeViewNodeExpandedCollapsedEvent(new TreeViewNodeExpandedCollapsed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException
			{
				onTreServiceTreeViewNodeExpandCollapse(node);
			}
		});
		this.form.treService().setTreeViewSelectionChangedEvent(new TreeViewSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException
			{
				onTreServiceTreeViewSelectionChanged(node);
			}
		});
		this.form.lyr1().Edit().cmbTurnAroundMeasure().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTurnAroundMeasureValueSet(value);
			}
		});
		this.form.lyr1().Edit().cmbSpecialty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSpecialtyValueSet(value);
			}
		});
		this.form.lyr1().Edit().cmbCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCategoryValueSet(value);
			}
		});
		this.form.lyr1().Edit().cmbCategory().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbCategoryValueChanged();
			}
		});
		this.form.lyr1().Edit().grdTaxonomy().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTaxonomySelectionChanged();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrActivityFunctiontabPageActivityActivated();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageFunction().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrActivityFunctiontabPageFunctionActivated();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().cmbActivityType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbActivityTypeValueSet(value);
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().cmbActivityType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbActivityTypeValueChanged();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().qmbActivity().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbActivityTextSubmited(value);
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().imbAddList().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbAddListClick();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().grdActivity().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdActivitySelectionChanged();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().grdActivity().setGridCheckBoxClickedEvent(new GridCheckBoxClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdActivityGridCheckBoxClicked(column, new GenForm.lyr1Layer.EditContainer.lyrActivityFunctionLayer.tabPageActivityContainer.grdActivityRow(row), isChecked);
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageActivity().grdActivityTaxonomy().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdActivityTaxonomySelectionChanged();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageFunction().grdFunction().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFunctionSelectionChanged();
			}
		});
		this.form.lyr1().Edit().lyrActivityFunction().tabPageFunction().grdFunction().setGridCheckBoxClickedEvent(new GridCheckBoxClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, boolean isChecked) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFunctionGridCheckBoxClicked(column, new GenForm.lyr1Layer.EditContainer.lyrActivityFunctionLayer.tabPageFunctionContainer.grdFunctionRow(row), isChecked);
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnUpdate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.getContextMenus().getServiceActivityNEWSERVICEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.NEWSERVICE, sender);
			}
		});
		this.form.getContextMenus().getServiceActivityUPDATEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.UPDATE, sender);
			}
		});
		this.form.getContextMenus().getServiceActivityNEWACTIVITYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.NEWACTIVITY, sender);
			}
		});
		this.form.getContextMenus().getServiceActivityUPDATEACTIVITYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.UPDATEACTIVITY, sender);
			}
		});
		this.form.getContextMenus().getServiceActivityNEWFUNCTIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.NEWFUNCTION, sender);
			}
		});
		this.form.getContextMenus().getServiceActivityUPDATEFUNCTIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.UPDATEFUNCTION, sender);
			}
		});
		this.form.getContextMenus().getServiceActivityLINKLOCItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ServiceActivity.LINKLOC, sender);
			}
		});
		this.form.getContextMenus().getAddRemoveItemsADDItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AddRemoveItems.ADD, sender);
			}
		});
		this.form.getContextMenus().getAddRemoveItemsREMOVEITEMItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AddRemoveItems.REMOVEITEM, sender);
			}
		});
		this.form.getContextMenus().getGenericGridAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Add, sender);
			}
		});
		this.form.getContextMenus().getGenericGridUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Update, sender);
			}
		});
		this.form.getContextMenus().getGenericGridRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Remove, sender);
			}
		});
		this.form.getContextMenus().getGenericGridViewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.View, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveUpItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveUp, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveDownItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveDown, sender);
			}
		});
		this.form.getContextMenus().getGenericGridReplaceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Replace, sender);
			}
		});
		this.form.getContextMenus().getGenericGridConfirmItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Confirm, sender);
			}
		});
		this.form.getContextMenus().getGenericGridEDIT_VIEW_ICP_ACTIONSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.EDIT_VIEW_ICP_ACTIONS, sender);
			}
		});
		this.form.getContextMenus().Admin.getTaxonomyGridAddTaxonomyItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AdminNamespace.TaxonomyGrid.AddTaxonomy, sender);
			}
		});
		this.form.getContextMenus().Admin.getTaxonomyGridUpdateTaxonomyItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AdminNamespace.TaxonomyGrid.UpdateTaxonomy, sender);
			}
		});
		this.form.getContextMenus().Admin.getTaxonomyGridRemoveTaxonomyItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.AdminNamespace.TaxonomyGrid.RemoveTaxonomy, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbTurnAroundMeasureLookup();
		bindcmbSpecialtyLookup();
		bindcmbCategoryLookup();
		bindgrdTaxonomycolExtCodeTypeLookup();
		bindcmbActivityTypeLookup();
		bindgrdActivityTaxonomycolExtCodeTypeLookup();
		bindgrdFunctionTaxonomycolExtCodeTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbTurnAroundMeasureLookup();
		bindcmbSpecialtyLookup();
		bindcmbCategoryLookup();
		bindgrdTaxonomycolExtCodeTypeLookup();
		bindcmbActivityTypeLookup();
		bindgrdActivityTaxonomycolExtCodeTypeLookup();
		bindgrdFunctionTaxonomycolExtCodeTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbTurnAroundMeasureLookupValue();
		defaultcmbSpecialtyLookupValue();
		defaultcmbCategoryLookupValue();
		defaultcmbActivityTypeLookupValue();
	}
	private void onlyrActivityFunctiontabPageActivityActivated()
	{
		this.form.lyr1().Edit().lyrActivityFunction().showtabPageActivity();
	}
	private void onlyrActivityFunctiontabPageFunctionActivated()
	{
		this.form.lyr1().Edit().lyrActivityFunction().showtabPageFunction();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	public abstract void clearContextInformation();
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
