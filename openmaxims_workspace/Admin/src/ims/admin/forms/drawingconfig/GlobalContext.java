//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.drawingconfig;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		Admin = new AdminContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getYesNoDialogMessageIsNotNull()
		{
			return !cx_CoreYesNoDialogMessage.getValueIsNull(context);
		}
		public String getYesNoDialogMessage()
		{
			return (String)cx_CoreYesNoDialogMessage.getValue(context);
		}
		public void setYesNoDialogMessage(String value)
		{
			cx_CoreYesNoDialogMessage.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreYesNoDialogMessage = new ims.framework.ContextVariable("Core.YesNoDialogMessage", "_cv_Core.YesNoDialogMessage");
		public boolean getDrawingGraphicImageVoIsNotNull()
		{
			return !cx_CoreDrawingGraphicImageVo.getValueIsNull(context);
		}
		public ims.core.vo.DrawingGraphicImageVo getDrawingGraphicImageVo()
		{
			return (ims.core.vo.DrawingGraphicImageVo)cx_CoreDrawingGraphicImageVo.getValue(context);
		}
		public void setDrawingGraphicImageVo(ims.core.vo.DrawingGraphicImageVo value)
		{
			cx_CoreDrawingGraphicImageVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreDrawingGraphicImageVo = new ims.framework.ContextVariable("Core.DrawingGraphicImageVo", "_cv_Core.DrawingGraphicImageVo");

		private ims.framework.Context context;
	}
	public final class AdminContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private AdminContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getDrawingConfigFormModeIsNotNull()
		{
			return !cx_AdminDrawingConfigFormMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getDrawingConfigFormMode()
		{
			return (ims.framework.enumerations.FormMode)cx_AdminDrawingConfigFormMode.getValue(context);
		}
		public void setDrawingConfigFormMode(ims.framework.enumerations.FormMode value)
		{
			cx_AdminDrawingConfigFormMode.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminDrawingConfigFormMode = new ims.framework.ContextVariable("Admin.DrawingConfigFormMode", "_cv_Admin.DrawingConfigFormMode");
		public boolean getDrawingGraphicImageShortVoIsNotNull()
		{
			return !cx_AdminDrawingGraphicImageShortVo.getValueIsNull(context);
		}
		public ims.core.vo.DrawingGraphicImageShortVo getDrawingGraphicImageShortVo()
		{
			return (ims.core.vo.DrawingGraphicImageShortVo)cx_AdminDrawingGraphicImageShortVo.getValue(context);
		}
		public void setDrawingGraphicImageShortVo(ims.core.vo.DrawingGraphicImageShortVo value)
		{
			cx_AdminDrawingGraphicImageShortVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminDrawingGraphicImageShortVo = new ims.framework.ContextVariable("Admin.DrawingGraphicImageShortVo", "_cv_Admin.DrawingGraphicImageShortVo");
		public boolean getSelectedImageIsNotNull()
		{
			return !cx_AdminSelectedImage.getValueIsNull(context);
		}
		public ims.admin.vo.AppImageVo getSelectedImage()
		{
			return (ims.admin.vo.AppImageVo)cx_AdminSelectedImage.getValue(context);
		}
		public void setSelectedImage(ims.admin.vo.AppImageVo value)
		{
			cx_AdminSelectedImage.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminSelectedImage = new ims.framework.ContextVariable("Admin.SelectedImage", "_cv_Admin.SelectedImage");
		public boolean getDrawingImageVoIsNotNull()
		{
			return !cx_AdminDrawingImageVo.getValueIsNull(context);
		}
		public ims.core.vo.DrawingImageVo getDrawingImageVo()
		{
			return (ims.core.vo.DrawingImageVo)cx_AdminDrawingImageVo.getValue(context);
		}
		public void setDrawingImageVo(ims.core.vo.DrawingImageVo value)
		{
			cx_AdminDrawingImageVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminDrawingImageVo = new ims.framework.ContextVariable("Admin.DrawingImageVo", "_cv_Admin.DrawingImageVo");
		public boolean getDrawingConfigListFilterIsNotNull()
		{
			return !cx_AdminDrawingConfigListFilter.getValueIsNull(context);
		}
		public ims.assessment.vo.GraphicAssessmentFilterVo getDrawingConfigListFilter()
		{
			return (ims.assessment.vo.GraphicAssessmentFilterVo)cx_AdminDrawingConfigListFilter.getValue(context);
		}
		public void setDrawingConfigListFilter(ims.assessment.vo.GraphicAssessmentFilterVo value)
		{
			cx_AdminDrawingConfigListFilter.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminDrawingConfigListFilter = new ims.framework.ContextVariable("Admin.DrawingConfigListFilter", "_cv_Admin.DrawingConfigListFilter");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public AdminContext Admin;
}
