// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.selectprocedure;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		RefMan = new RefManContext(context);
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getprocedureListForActivityIsNotNull()
		{
			return !cx_RefManprocedureListForActivity.getValueIsNull(context);
		}
		public ims.core.vo.ProcedureLiteVoCollection getprocedureListForActivity()
		{
			return (ims.core.vo.ProcedureLiteVoCollection)cx_RefManprocedureListForActivity.getValue(context);
		}
		public void setprocedureListForActivity(ims.core.vo.ProcedureLiteVoCollection value)
		{
			cx_RefManprocedureListForActivity.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManprocedureListForActivity = new ims.framework.ContextVariable("RefMan.procedureListForActivity", "_cv_RefMan.procedureListForActivity");
		public boolean getunavailableProceduresIsNotNull()
		{
			return !cx_RefManunavailableProcedures.getValueIsNull(context);
		}
		public ims.core.vo.ProcedureLiteVoCollection getunavailableProcedures()
		{
			return (ims.core.vo.ProcedureLiteVoCollection)cx_RefManunavailableProcedures.getValue(context);
		}
		public void setunavailableProcedures(ims.core.vo.ProcedureLiteVoCollection value)
		{
			cx_RefManunavailableProcedures.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManunavailableProcedures = new ims.framework.ContextVariable("RefMan.unavailableProcedures", "_cv_RefMan.unavailableProcedures");
		public boolean getAssociatedProceduresIsNotNull()
		{
			return !cx_RefManAssociatedProcedures.getValueIsNull(context);
		}
		public ims.core.vo.ProcedureLiteVoCollection getAssociatedProcedures()
		{
			return (ims.core.vo.ProcedureLiteVoCollection)cx_RefManAssociatedProcedures.getValue(context);
		}
		public void setAssociatedProcedures(ims.core.vo.ProcedureLiteVoCollection value)
		{
			cx_RefManAssociatedProcedures.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManAssociatedProcedures = new ims.framework.ContextVariable("RefMan.AssociatedProcedures", "_cv_RefMan.AssociatedProcedures");

		private ims.framework.Context context;
	}

	public RefManContext RefMan;
}
