// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referraloutcomecomponent;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		RefMan = new RefManContext(context);
		Core = new CoreContext(context);
		OCRR = new OCRRContext(context);
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getSelectedSpecialtyIsNotNull()
		{
			return !cx_RefManSelectedSpecialty.getValueIsNull(context);
		}
		public ims.core.vo.lookups.Specialty getSelectedSpecialty()
		{
			return (ims.core.vo.lookups.Specialty)cx_RefManSelectedSpecialty.getValue(context);
		}
		public void setSelectedSpecialty(ims.core.vo.lookups.Specialty value)
		{
			cx_RefManSelectedSpecialty.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedSpecialty = new ims.framework.ContextVariable("RefMan.SelectedSpecialty", "_cv_RefMan.SelectedSpecialty");
		public boolean getIsComponentInEditModeIsNotNull()
		{
			return !cx_RefManIsComponentInEditMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getIsComponentInEditMode()
		{
			return (ims.framework.enumerations.FormMode)cx_RefManIsComponentInEditMode.getValue(context);
		}
		public void setIsComponentInEditMode(ims.framework.enumerations.FormMode value)
		{
			cx_RefManIsComponentInEditMode.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsComponentInEditMode = new ims.framework.ContextVariable("RefMan.IsComponentInEditMode", "_cv_RefMan.IsComponentInEditMode");
		public boolean getIsProviderCancellationIsNotNull()
		{
			return !cx_RefManIsProviderCancellation.getValueIsNull(context);
		}
		public Boolean getIsProviderCancellation()
		{
			return (Boolean)cx_RefManIsProviderCancellation.getValue(context);
		}
		public void setIsProviderCancellation(Boolean value)
		{
			cx_RefManIsProviderCancellation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsProviderCancellation = new ims.framework.ContextVariable("RefMan.IsProviderCancellation", "_cvp_RefMan.IsProviderCancellation");
		public boolean getSelectedReferralOutcomeVoIsNotNull()
		{
			return !cx_RefManSelectedReferralOutcomeVo.getValueIsNull(context);
		}
		public ims.RefMan.vo.ReferralOutcomeVo getSelectedReferralOutcomeVo()
		{
			return (ims.RefMan.vo.ReferralOutcomeVo)cx_RefManSelectedReferralOutcomeVo.getValue(context);
		}
		public void setSelectedReferralOutcomeVo(ims.RefMan.vo.ReferralOutcomeVo value)
		{
			cx_RefManSelectedReferralOutcomeVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedReferralOutcomeVo = new ims.framework.ContextVariable("RefMan.SelectedReferralOutcomeVo", "_cv_RefMan.SelectedReferralOutcomeVo");
		public boolean getReferralOutcomeReportTypeIsNotNull()
		{
			return !cx_RefManReferralOutcomeReportType.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.ReferralOutcomeReportType getReferralOutcomeReportType()
		{
			return (ims.RefMan.vo.enums.ReferralOutcomeReportType)cx_RefManReferralOutcomeReportType.getValue(context);
		}
		public void setReferralOutcomeReportType(ims.RefMan.vo.enums.ReferralOutcomeReportType value)
		{
			cx_RefManReferralOutcomeReportType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralOutcomeReportType = new ims.framework.ContextVariable("RefMan.ReferralOutcomeReportType", "_cv_RefMan.ReferralOutcomeReportType");
		public boolean getShowTLTTabsIsNotNull()
		{
			return !cx_RefManShowTLTTabs.getValueIsNull(context);
		}
		public Boolean getShowTLTTabs()
		{
			return (Boolean)cx_RefManShowTLTTabs.getValue(context);
		}
		public void setShowTLTTabs(Boolean value)
		{
			cx_RefManShowTLTTabs.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManShowTLTTabs = new ims.framework.ContextVariable("RefMan.ShowTLTTabs", "_cv_RefMan.ShowTLTTabs");
		public boolean getCatsReferralReportsIsNotNull()
		{
			return !cx_RefManCatsReferralReports.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralReportsVo getCatsReferralReports()
		{
			return (ims.RefMan.vo.CatsReferralReportsVo)cx_RefManCatsReferralReports.getValue(context);
		}
		public void setCatsReferralReports(ims.RefMan.vo.CatsReferralReportsVo value)
		{
			cx_RefManCatsReferralReports.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferralReports = new ims.framework.ContextVariable("RefMan.CatsReferralReports", "_cv_RefMan.CatsReferralReports");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

			SelectMedication = new SelectMedicationContext(context);
		}
		public final class SelectMedicationContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private SelectMedicationContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getSelectedMedicationIsNotNull()
			{
				return !cx_CoreSelectMedicationSelectedMedication.getValueIsNull(context);
			}
			public ims.core.vo.MedicationVo getSelectedMedication()
			{
				return (ims.core.vo.MedicationVo)cx_CoreSelectMedicationSelectedMedication.getValue(context);
			}
		public void setSelectedMedication(ims.core.vo.MedicationVo value)
		{
				cx_CoreSelectMedicationSelectedMedication.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CoreSelectMedicationSelectedMedication = new ims.framework.ContextVariable("Core.SelectMedication.SelectedMedication", "_cv_Core.SelectMedication.SelectedMedication");
			public boolean getHotlistSearchOnlyIsNotNull()
			{
				return !cx_CoreSelectMedicationHotlistSearchOnly.getValueIsNull(context);
			}
			public Boolean getHotlistSearchOnly()
			{
				return (Boolean)cx_CoreSelectMedicationHotlistSearchOnly.getValue(context);
			}
		public void setHotlistSearchOnly(Boolean value)
		{
				cx_CoreSelectMedicationHotlistSearchOnly.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CoreSelectMedicationHotlistSearchOnly = new ims.framework.ContextVariable("Core.SelectMedication.HotlistSearchOnly", "_cv_Core.SelectMedication.HotlistSearchOnly");
			private ims.framework.Context context;
		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		public SelectMedicationContext SelectMedication;
		private ims.framework.Context context;
	}
	public final class OCRRContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private OCRRContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSelectedInvIdsIsNotNull()
		{
			return !cx_OCRRSelectedInvIds.getValueIsNull(context);
		}
		public ims.ocrr.orderingresults.vo.OrderInvestigationRefVoCollection getSelectedInvIds()
		{
			return (ims.ocrr.orderingresults.vo.OrderInvestigationRefVoCollection)cx_OCRRSelectedInvIds.getValue(context);
		}
		public void setSelectedInvIds(ims.ocrr.orderingresults.vo.OrderInvestigationRefVoCollection value)
		{
			cx_OCRRSelectedInvIds.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRSelectedInvIds = new ims.framework.ContextVariable("OCRR.SelectedInvIds", "_cv_OCRR.SelectedInvIds");

		private ims.framework.Context context;
	}

	public RefManContext RefMan;
	public CoreContext Core;
	public OCRRContext OCRR;
}
