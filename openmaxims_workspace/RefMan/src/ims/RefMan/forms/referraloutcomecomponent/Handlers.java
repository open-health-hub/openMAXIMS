// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referraloutcomecomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbTLTTypeLookup();
	abstract protected void defaultcmbTLTTypeLookupValue();
	abstract protected void bindcmbMedicallyIncompleteLookup();
	abstract protected void defaultcmbMedicallyIncompleteLookupValue();
	abstract protected void bindcmbReasonNOLookup();
	abstract protected void defaultcmbReasonNOLookupValue();
	abstract protected void bindcmbAMTypeLookup();
	abstract protected void defaultcmbAMTypeLookupValue();
	abstract protected void bindcmbOnwardRefReasonLookup();
	abstract protected void defaultcmbOnwardRefReasonLookupValue();
	abstract protected void bindcmbOtherLookup();
	abstract protected void defaultcmbOtherLookupValue();
	abstract protected void bindcmbDischargeTypeLookup();
	abstract protected void defaultcmbDischargeTypeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditDateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateAMClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnGPReviewedClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGrpDischPatientValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnOnwardReferralCompletedClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUndoDischargeClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnReviewedClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPrintPrescriptionsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPrintFinalClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyr1TabChanged(ims.framework.LayerBridge tab);
	abstract protected void onChkFinalValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTLTTypeValueSet(Object value);
	abstract protected void onBtnCancelEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnOkClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroup2ValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdFurtherSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbProcedureTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbMedicallyIncompleteValueSet(Object value);
	abstract protected void oncmbReasonNOValueSet(Object value);
	abstract protected void onCmbReasonNOValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkAMGFinalReportValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntAMPeriodValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbAMTypeValueSet(Object value);
	abstract protected void oncmbOnwardRefReasonValueSet(Object value);
	abstract protected void oncmbOtherValueSet(Object value);
	abstract protected void onCmbOtherValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbDischargeTypeValueSet(Object value);
	abstract protected void onCmbDischargeTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnEditDate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditDateClick();
			}
		});
		this.form.btnUpdateAM().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateAMClick();
			}
		});
		this.form.btnGPReviewed().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnGPReviewedClick();
			}
		});
		this.form.GrpDischPatient().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGrpDischPatientValueChanged();
			}
		});
		this.form.btnOnwardReferralCompleted().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnOnwardReferralCompletedClick();
			}
		});
		this.form.btnUndoDischarge().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUndoDischargeClick();
			}
		});
		this.form.btnReviewed().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnReviewedClick();
			}
		});
		this.form.btnPrintPrescriptions().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPrintPrescriptionsClick();
			}
		});
		this.form.btnPrintFinal().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPrintFinalClick();
			}
		});
		this.form.lyr1().tabFurtherManagement().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabFurtherManagementActivated();
			}
		});
		this.form.lyr1().tabActiveMonitoring().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabActiveMonitoringActivated();
			}
		});
		this.form.lyr1().tabDischargePatient().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyr1tabDischargePatientActivated();
			}
		});
		this.form.lyr1().tabFurtherManagement().chkFinal().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkFinalValueChanged();
			}
		});
		this.form.lyr1().tabFurtherManagement().cmbTLTType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTLTTypeValueSet(value);
			}
		});
		this.form.lyr1().tabFurtherManagement().btnCancelEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelEditClick();
			}
		});
		this.form.lyr1().tabFurtherManagement().btnOk().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnOkClick();
			}
		});
		this.form.lyr1().tabFurtherManagement().Group2().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroup2ValueChanged();
			}
		});
		this.form.lyr1().tabFurtherManagement().grdFurther().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdFurtherSelectionChanged();
			}
		});
		this.form.lyr1().tabFurtherManagement().qmbProcedure().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbProcedureTextSubmited(value);
			}
		});
		this.form.lyr1().tabFurtherManagement().cmbMedicallyIncomplete().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMedicallyIncompleteValueSet(value);
			}
		});
		this.form.lyr1().tabFurtherManagement().cmbReasonNO().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReasonNOValueSet(value);
			}
		});
		this.form.lyr1().tabFurtherManagement().cmbReasonNO().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbReasonNOValueChanged();
			}
		});
		this.form.lyr1().tabActiveMonitoring().chkAMGFinalReport().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkAMGFinalReportValueChanged();
			}
		});
		this.form.lyr1().tabActiveMonitoring().intAMPeriod().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntAMPeriodValueChanged();
			}
		});
		this.form.lyr1().tabActiveMonitoring().cmbAMType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAMTypeValueSet(value);
			}
		});
		this.form.lyr1().tabDischargePatient().cmbOnwardRefReason().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOnwardRefReasonValueSet(value);
			}
		});
		this.form.lyr1().tabDischargePatient().cmbOther().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOtherValueSet(value);
			}
		});
		this.form.lyr1().tabDischargePatient().cmbOther().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbOtherValueChanged();
			}
		});
		this.form.lyr1().tabDischargePatient().cmbDischargeType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDischargeTypeValueSet(value);
			}
		});
		this.form.lyr1().tabDischargePatient().cmbDischargeType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbDischargeTypeValueChanged();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.getContextMenus().getGenericGridAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Add, sender);
			}
		});
		this.form.getContextMenus().getGenericGridUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Update, sender);
			}
		});
		this.form.getContextMenus().getGenericGridRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Remove, sender);
			}
		});
		this.form.getContextMenus().getGenericGridViewItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.View, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveUpItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveUp, sender);
			}
		});
		this.form.getContextMenus().getGenericGridMoveDownItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.MoveDown, sender);
			}
		});
		this.form.getContextMenus().getGenericGridReplaceItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Replace, sender);
			}
		});
		this.form.getContextMenus().getGenericGridConfirmItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.Confirm, sender);
			}
		});
		this.form.getContextMenus().getGenericGridEDIT_VIEW_ICP_ACTIONSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.GenericGrid.EDIT_VIEW_ICP_ACTIONS, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbTLTTypeLookup();
		bindcmbMedicallyIncompleteLookup();
		bindcmbReasonNOLookup();
		bindcmbAMTypeLookup();
		bindcmbOnwardRefReasonLookup();
		bindcmbOtherLookup();
		bindcmbDischargeTypeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbTLTTypeLookup();
		bindcmbMedicallyIncompleteLookup();
		bindcmbReasonNOLookup();
		bindcmbAMTypeLookup();
		bindcmbOnwardRefReasonLookup();
		bindcmbOtherLookup();
		bindcmbDischargeTypeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbTLTTypeLookupValue();
		defaultcmbMedicallyIncompleteLookupValue();
		defaultcmbReasonNOLookupValue();
		defaultcmbAMTypeLookupValue();
		defaultcmbOnwardRefReasonLookupValue();
		defaultcmbOtherLookupValue();
		defaultcmbDischargeTypeLookupValue();
	}
	private void onlyr1tabFurtherManagementActivated()
	{
		this.form.lyr1().showtabFurtherManagement();
		onlyr1TabChanged(this.form.lyr1().tabFurtherManagement());
	}
	private void onlyr1tabActiveMonitoringActivated()
	{
		this.form.lyr1().showtabActiveMonitoring();
		onlyr1TabChanged(this.form.lyr1().tabActiveMonitoring());
	}
	private void onlyr1tabDischargePatientActivated()
	{
		this.form.lyr1().showtabDischargePatient();
		onlyr1TabChanged(this.form.lyr1().tabDischargePatient());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
