// This code was generated by Catalin Tomozei using IMS Development Environment (version 1.71 build 3631.21133)
// Copyright (C) 1995-2009 IMS MAXIMS. All rights reserved.

package ims.RefMan.forms.linkreportnotetotemplate;


import ims.admin.vo.ReportTemplateLiteVo;
import ims.RefMan.forms.linkreportnotetotemplate.GenForm.grdReportNoteTypeRow;
import ims.RefMan.vo.ReportNotePrintTemplateVo;
import ims.RefMan.vo.lookups.ReportNoteTypeCollection;
import ims.domain.exceptions.ForeignKeyViolationException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.FormName;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		populateScreenFromData();
		updateContextMenu();
	}
	
	private void updateContextMenu() 
	{
		boolean isRowSelected = form.grdReportNoteType().getSelectedRow() != null ? true : false;
		boolean isTemplateLinked = isRowSelected && (form.grdReportNoteType().getSelectedRow().getValue() != null ? (form.grdReportNoteType().getSelectedRow().getValue() instanceof ReportNotePrintTemplateVo ? (((ReportNotePrintTemplateVo)form.grdReportNoteType().getSelectedRow().getValue()).getTemplateIsNotNull() ? true : false): false): false) ;
		
		form.getContextMenus().RefMan.hideAllLinkReportNoteToTemplateMenuItems();
		
		form.getContextMenus().RefMan.getLinkReportNoteToTemplateLinkReportTemplateItem().setVisible(form.grdReportNoteType().getSelectedRow() != null);		
		form.getContextMenus().RefMan.getLinkReportNoteToTemplateRemoveLinkReportTemplateItem().setVisible(isTemplateLinked);
	}

	private void populateScreenFromData() 
	{
		form.grdReportNoteType().getRows().clear();
		
		ReportNoteTypeCollection voColl = ims.RefMan.vo.lookups.LookupHelper.getReportNoteType(domain.getLookupService());
		for (int i = 0; i < voColl.size(); i++) 
		{
			grdReportNoteTypeRow row = form.grdReportNoteType().getRows().newRow();
			row.setColReportNoteType(voColl.get(i));
			
			ReportNotePrintTemplateVo vo = domain.getReportNotePrintTemplateByType(voColl.get(i));
			if (vo == null) {
				vo = new ReportNotePrintTemplateVo();
			}
			vo.setNoteType(voColl.get(i));
			
			ReportTemplateLiteVo template = vo.getTemplate();
			if (template != null) {
				row.setColTemplate("<table border='0'><tr><td WIDTH='6%'><img src='" +form.getImages().Core.Summary48.getImagePath() + "' height='24' width='24'><td>" + template.getName() + "</td></tr></table>");
			}							
			else {
				row.setColTemplate("<i><font color=red>No Template associate with this Report Note Type</font></i>");				
			}
			
			row.setValue(vo);
		}		
		
		updateContextMenu();
	}

	@Override
	protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
	{
		switch (menuItemID)
		{
			case GenForm.ContextMenus.RefManNamespace.LinkReportNoteToTemplate.LinkReportTemplate :
				linkReportTemplate();
				break;
			case GenForm.ContextMenus.RefManNamespace.LinkReportNoteToTemplate.RemoveLinkReportTemplate :
				removeLinkReportTemplate();
				break;	
			default :
		}
	}

	private void removeLinkReportTemplate() 
	{	
		if (form.grdReportNoteType().getSelectedRow() != null &&
				form.grdReportNoteType().getSelectedRow().getValue() != null &&
					form.grdReportNoteType().getSelectedRow().getValue() instanceof ReportNotePrintTemplateVo)
		{
			ReportNotePrintTemplateVo vo = form.grdReportNoteType().getSelectedRow().getValue();
			
			try {
				domain.removeLink(vo);
			} 
			catch (StaleObjectException e) 
			{
				engine.showMessage(e.toString());			
				return;
			}
			catch (ForeignKeyViolationException e) 
			{
				engine.showMessage(e.toString());			
				return;
			}	
			
			populateScreenFromData();
		}		
		updateContextMenu();
	}

	private void linkReportTemplate() 
	{	
		if (form.grdReportNoteType().getSelectedRow() != null &&
				form.grdReportNoteType().getSelectedRow().getValue() != null &&
					form.grdReportNoteType().getSelectedRow().getValue() instanceof ReportNotePrintTemplateVo)
		{		
			form.getGlobalContext().Core.setReportTemplateRef(((ReportNotePrintTemplateVo)form.grdReportNoteType().getSelectedRow().getValue()).getTemplate());			
		}
		
		if (form.grdReportNoteType().getSelectedRow() != null)
			engine.open(form.getForms().Core.ReportTemplate);
		else
			updateContextMenu();
	}

	@Override
	protected void onFormDialogClosed(FormName formName, DialogResult result)
			throws PresentationLogicException 
	{
		if(result.equals(DialogResult.OK) && formName.equals(form.getForms().Core.ReportTemplate))
		{
			if (form.getGlobalContext().Core.getReportTemplateRefIsNotNull() &&
					form.getGlobalContext().Core.getTemplateIsNotNull())
			{				
				ReportNotePrintTemplateVo vo = form.getLocalContext().getSelectedRecord();
				if (save(vo)) {
					populateScreenFromData();
				}
			}
		}
		updateContextMenu();
	}

	private boolean save(ReportNotePrintTemplateVo vo)
	{
		if (vo != null)
		{
			vo.setTemplate((ReportTemplateLiteVo)form.getGlobalContext().Core.getReportTemplateRef());					
		}
		
		String[] str 	= vo.validate();
		if (str != null && str.length > 0)
		{
			engine.showErrors(str);			
			return false;
		}
		
		try {
			vo = domain.save(vo);				
		} 
		catch (StaleObjectException e)
		{
			engine.showMessage(e.toString());			
			return false;
		}		
			
		return true;
	}
	
	@Override
	protected void onGrdReportNoteTypeSelectionChanged()
			throws PresentationLogicException 
	{	
		form.getLocalContext().setSelectedRecord(form.grdReportNoteType().getSelectedRow().getValue());
		updateContextMenu();
	}
}
