// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referralappointmentdetailscomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindgrdApptscolStatusLookup();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrSelectTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onBtnTheatreERODClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnOutpatientERODClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnActionedClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnBookSpecimenCollectClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnImportResultClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnOrderInvClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdInvestigationsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdApptsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelReviewedClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnDNAReviewedClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnBookTheatreClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnBookApptClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdWaitingListSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.lyrSelect().tabAppInvs().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSelecttabAppInvsActivated();
			}
		});
		this.form.lyrSelect().tabWaitingList().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSelecttabWaitingListActivated();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnTheatreEROD().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnTheatreERODClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnOutpatientEROD().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnOutpatientERODClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnActioned().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnActionedClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnBookSpecimenCollect().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnBookSpecimenCollectClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnImportResult().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnImportResultClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnOrderInv().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnOrderInvClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().grdInvestigations().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdInvestigationsSelectionChanged();
			}
		});
		this.form.lyrSelect().tabAppInvs().grdAppts().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdApptsSelectionChanged();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnCancelReviewed().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelReviewedClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnDNAReviewed().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnDNAReviewedClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnBookTheatre().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnBookTheatreClick();
			}
		});
		this.form.lyrSelect().tabAppInvs().btnBookAppt().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnBookApptClick();
			}
		});
		this.form.lyrSelect().tabWaitingList().grdWaitingList().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdWaitingListSelectionChanged();
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuCancelAppointmentItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.CancelAppointment, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuRebookAppointmentItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.RebookAppointment, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuViewOrderItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.ViewOrder, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuViewResultItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.ViewResult, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuViewRejectionDetailsItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.ViewRejectionDetails, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuENTER_APPT_DETAILSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.ENTER_APPT_DETAILS, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuEDIT_COLLECTION_DETAILSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.EDIT_COLLECTION_DETAILS, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuCHANGE_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.CHANGE_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getInvestigstionsMenuCANCEL_THEATRE_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.InvestigstionsMenu.CANCEL_THEATRE_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentBOOK_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.BOOK_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentCANCEL_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.CANCEL_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentREBOOK_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.REBOOK_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentORDER_INVESTIGATIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.ORDER_INVESTIGATION, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentBOOK_THEATRE_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.BOOK_THEATRE_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentCANCEL_THEATRE_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.CANCEL_THEATRE_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentREBOOK_THEATRE_APPTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.REBOOK_THEATRE_APPT, sender);
			}
		});
		this.form.getContextMenus().RefMan.getReferralAppointmentDetailsComponentVIEW_APPT_HISTORYItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.ReferralAppointmentDetailsComponent.VIEW_APPT_HISTORY, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuCANCEL_TCIItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.CANCEL_TCI, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuREMOVE_ELECTIVE_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.REMOVE_ELECTIVE_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuADD_NEW_WAITING_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.ADD_NEW_WAITING_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuADD_NEW_BOOKED_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.ADD_NEW_BOOKED_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuADD_NEW_PLANNED_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.ADD_NEW_PLANNED_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuVIEW_ELECTIVE_LISTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.VIEW_ELECTIVE_LIST, sender);
			}
		});
		this.form.getContextMenus().RefMan.getWaitingListForReferralDetailsCancelMenuBOOK_THEATREItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RefManNamespace.WaitingListForReferralDetailsCancelMenu.BOOK_THEATRE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindgrdApptscolStatusLookup();
	}
	protected void rebindAllLookups()
	{
		bindgrdApptscolStatusLookup();
	}
	protected void defaultAllLookupValues()
	{
	}
	private void onlyrSelecttabAppInvsActivated()
	{
		this.form.lyrSelect().showtabAppInvs();
		onlyrSelectTabChanged(this.form.lyrSelect().tabAppInvs());
	}
	private void onlyrSelecttabWaitingListActivated()
	{
		this.form.lyrSelect().showtabWaitingList();
		onlyrSelectTabChanged(this.form.lyrSelect().tabWaitingList());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
