// This code was generated by Sean Nesbitt using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.RefMan.forms.appointmentoutcomediagnosisselectiondialog;

import ims.RefMan.forms.appointmentoutcomediagnosisselectiondialog.GenForm.grdCareContextRow;
import ims.RefMan.forms.appointmentoutcomediagnosisselectiondialog.GenForm.grdOtherDiagnosisRow;
import ims.clinical.vo.PatientDiagnosisOpNotesVoCollection;
import ims.clinical.vo.PatientDiagnosisOpNotesVo;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		PatientDiagnosisOpNotesVoCollection vocoll = new PatientDiagnosisOpNotesVoCollection();
		
		for (int i = 0; i < form.grdCareContext().getRows().size(); i++)
		{			
			if (form.grdCareContext().getRows().get(i).getcolSelect())
			{
				vocoll.add(form.grdCareContext().getRows().get(i).getValue());
			}
		}	
		
		for (int i = 0; i < form.grdOtherDiagnosis().getRows().size(); i++)
		{			
			if (form.grdOtherDiagnosis().getRows().get(i).getcolSelect())
			{
				vocoll.add(form.grdOtherDiagnosis().getRows().get(i).getValue());
			}
		}			
		
		form.getGlobalContext().RefMan.setSelectedDiagnosisApptOutcomeList(vocoll);
		engine.close(DialogResult.OK);
	}

	protected void onFormModeChanged() 
	{
		updateControlState();
	}

	private void updateControlState() 
	{
		form.grdCareContext().setEnabled(form.getMode().equals(FormMode.EDIT));
		form.grdOtherDiagnosis().setEnabled(form.getMode().equals(FormMode.EDIT));
		form.btnSave().setVisible(form.getMode( ).equals(FormMode.EDIT));		
	}

	protected void onFormOpen(Object[] args) throws PresentationLogicException 
	{
		initalise();
		open();	
		updateControlState();
	}

	private void initalise() 
	{
		form.grdCareContext().getRows().clear();
		form.grdOtherDiagnosis().getRows().clear();				
	}

	private void open() 
	{
		populateScreenFromData(form.getGlobalContext().RefMan.getSelectedDiagnosisApptOutcomeList(),domain.listPatientDiagnosis(form.getGlobalContext().Core.getPatientShort()));
		form.setMode(FormMode.EDIT);
	}

	private void populateScreenFromData(PatientDiagnosisOpNotesVoCollection outcomeDiagCollection, PatientDiagnosisOpNotesVoCollection allDiagnosis) 
	{
		form.grdCareContext().getRows().clear();
		form.grdOtherDiagnosis().getRows().clear();
		
		if (allDiagnosis != null)
		{
			for (PatientDiagnosisOpNotesVo diag : allDiagnosis)
			{
				if (form.getGlobalContext().Core.getCurrentCareContext() != null && diag.getCareContext() != null && diag.getCareContext().equals(form.getGlobalContext().Core.getCurrentCareContext()))
				{
					grdCareContextRow row = form.grdCareContext().getRows().newRow();
					
					row.setcolDescription(diag.getDiagnosisDescription());
					row.setcolDiagnosisDate(diag.getDiagnosedDate() != null ? diag.getDiagnosedDate().toString(): "");
					
					if (diag.getAuthoringInfo() != null)
					{		
						row.setcolAuthoringHCPDateTime(diag.getAuthoringInfo().getIItemText());
					}
					
					row.setcolStatus((diag.getCurrentStatus() != null && diag.getCurrentStatus().getStatus() != null) ? diag.getCurrentStatus().getStatus().getText() : "");
					row.setValue(diag);
				}
				else
				{
					grdOtherDiagnosisRow otherDiagRow = form.grdOtherDiagnosis().getRows().newRow();
					otherDiagRow.setcolDescription(diag.getDiagnosisDescription());
					otherDiagRow.setcolDiagnosisDate(diag.getDiagnosedDate() != null ? diag.getDiagnosedDate().toString() : "");
					
					if (diag.getAuthoringInfo() != null)
					{		
						otherDiagRow.setcolAuthoringHCPDateTime(diag.getAuthoringInfo().getIItemText());
					}
					
					otherDiagRow.setcolStatus((diag.getCurrentStatus() != null && diag.getCurrentStatus().getStatus() != null) ? diag.getCurrentStatus().getStatus().getText() : "");
					otherDiagRow.setValue(diag);
				}
				
				//remove from all for display
			/*	for (int i = 0; i < allDiagnosis.size();i++)
				{
					if (allDiagnosis.get(i).equals(diag))
					{
						allDiagnosis.remove(i);
					}
				}*/
			}
		}
		
		markApptOutcomeDiagnosis(form.getGlobalContext().RefMan.getSelectedDiagnosisApptOutcomeList());
	}
	
	private void markApptOutcomeDiagnosis(PatientDiagnosisOpNotesVoCollection patientDiagnosisOpNotesVoCollection)
	{
		if (patientDiagnosisOpNotesVoCollection == null)
			return;

		//check Referral Diagnosis Grid
		for (PatientDiagnosisOpNotesVo diagnosis : patientDiagnosisOpNotesVoCollection)
		{
			for (int i = 0; i < form.grdCareContext().getRows().size(); i++)
			{
				grdCareContextRow diagnosisRow = form.grdCareContext().getRows().get(i);
				
				if (diagnosis.equals(diagnosisRow.getValue()))
					diagnosisRow.setcolSelect(true);
			}
		}
		
		//check Other Diagnosis Grid
		for (PatientDiagnosisOpNotesVo diagnosis : patientDiagnosisOpNotesVoCollection)
		{
			for (int i = 0; i < form.grdOtherDiagnosis().getRows().size(); i++)
			{
				 grdOtherDiagnosisRow otherDiagnosisRow = form.grdOtherDiagnosis().getRows().get(i);
				
				if (diagnosis.equals(otherDiagnosisRow.getValue()))
					otherDiagnosisRow.setcolSelect(true);
			}
		}
	}
	
}
