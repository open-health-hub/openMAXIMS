// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.65 build 3202.18140)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.forms.secondopiniondialog;

import ims.RefMan.vo.CatsReferralStatusVo;
import ims.RefMan.vo.lookups.ReferralApptStatus;
import ims.core.resource.people.vo.HcpRefVo;
import ims.core.vo.AuthoringInformationVo;
import ims.core.vo.HcpLiteVo;
import ims.core.vo.MemberOfStaffShortVo;
import ims.framework.MessageButtons;
import ims.framework.MessageIcon;
import ims.framework.enumerations.DialogResult;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.ccAuthoring().initializeComponent();
		form.ccAuthoring().setIsRequiredPropertyToControls(Boolean.TRUE);
		
		open();
	}
	private void open()
	{
		if (form.getGlobalContext().RefMan.getSecondOpinionReferralStatusIsNotNull()
			&& form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getReferralStatusIsNotNull()
			&& form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getReferralStatus().equals(ReferralApptStatus.PROVISIONAL_REJECTION))
		{
			form.txtComment().setValue(form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getComment());
			AuthoringInformationVo voA = new AuthoringInformationVo();
			voA.setAuthoringDateTime(form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getStatusDateTime());
			if (form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getAuthoringUserIsNotNull())
			{
				MemberOfStaffShortVo voMOS = new MemberOfStaffShortVo();
				voMOS.setID_MemberOfStaff(form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getAuthoringUser().getID_MemberOfStaff());
				HcpRefVo voHCPRef = new HcpRefVo();
				voHCPRef.setID_Hcp(domain.getMemberOfStaff(voMOS).getHcp().getID_Hcp());
				voA.setAuthoringHcp(domain.getHcpLiteById(voHCPRef));
			}
			form.ccAuthoring().setValue(voA);
			form.cmbReason().setValue(form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getSecondOpinionCategory());
			
			form.ccAuthoring().setEnabledAuthoringHCP(false);
			form.ccAuthoring().setEnabledDateTime(false);
		}
	}
	
	@Override
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		if (form.ccAuthoring().getValue() == null)
		{
			engine.showMessage("Authoring User / Date and Time for Second Opinion are Mandatory", "Error", MessageButtons.OK, MessageIcon.ERROR);
			return;
		}

		CatsReferralStatusVo voStat = null;
		if (form.getGlobalContext().RefMan.getSecondOpinionReferralStatusIsNotNull())
			voStat = form.getGlobalContext().RefMan.getSecondOpinionReferralStatus();
		else
			voStat = new CatsReferralStatusVo();
		
		voStat.setComment(form.txtComment().getValue());
		voStat.setAuthoringUser(form.ccAuthoring().getValue() != null && form.ccAuthoring().getValue().getAuthoringHcpIsNotNull() ? form.ccAuthoring().getValue().getAuthoringHcp().getMos() : null);
		voStat.setStatusDateTime(form.ccAuthoring().getValue() != null && form.ccAuthoring().getValue().getAuthoringDateTimeIsNotNull() ? form.ccAuthoring().getValue().getAuthoringDateTime() : null);
		voStat.setReferralStatus(ReferralApptStatus.PROVISIONAL_REJECTION);
		voStat.setSecondOpinionCategory(form.cmbReason().getValue());
		
		form.getGlobalContext().RefMan.setSecondOpinionReferralStatus(voStat);
		form.getGlobalContext().RefMan.setCatsReferralStatus(voStat);
		
		engine.close(DialogResult.OK);
	}
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
}
