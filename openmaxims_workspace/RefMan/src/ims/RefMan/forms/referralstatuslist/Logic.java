// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.62 build 3110.16630)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.forms.referralstatuslist;

import ims.RefMan.forms.referralstatuslist.GenForm.Group1Enumeration;
import ims.RefMan.vo.CATSReferralFilterVo;
import ims.RefMan.vo.CatsReferralListManualAssemblyVo;
import ims.RefMan.vo.CatsReferralListManualAssemblyVoCollection;
import ims.RefMan.vo.CatsReferralListVo;
import ims.RefMan.vo.CatsReferralRefVo;
import ims.RefMan.vo.CatsReferralStatusVo;
import ims.RefMan.vo.CatsReferralStatusVoCollection;
import ims.RefMan.vo.CatsReferralWizardVo;
import ims.RefMan.vo.ClinicalContactTimeVo;
import ims.RefMan.vo.ClinicalContactTimeVoCollection;
import ims.RefMan.vo.ConsultationDetailsVo;
import ims.RefMan.vo.ConsultationTimeVo;
import ims.RefMan.vo.ConsultationTimeVoCollection;
import ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection;
import ims.RefMan.vo.ContractServiceLocationsConfigVo;
import ims.RefMan.vo.ContractServiceLocationsConfigVoCollection;
import ims.RefMan.vo.OnwardReferralFromTriageVo;
import ims.RefMan.vo.ProviderCancellationVo;
import ims.RefMan.vo.ReferralServiceFullVo;
import ims.RefMan.vo.RejectReferralVo;
import ims.RefMan.vo.TLTContactTimeVo;
import ims.RefMan.vo.TLTContactTimeVoCollection;
import ims.RefMan.vo.enums.ReferralOutcomeReportType;
import ims.RefMan.vo.enums.ReferralReviewDetail;
import ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus;
import ims.RefMan.vo.lookups.OnwardReferralStatus;
import ims.RefMan.vo.lookups.ReferralApptStatus;
import ims.RefMan.vo.lookups.ReferralNoteType;
import ims.RefMan.vo.lookups.ReferralWorklistStatus;
import ims.configuration.AppRight;
import ims.configuration.gen.ConfigFlag;
import ims.core.helper.ResetPIDBarHelper;
import ims.core.resource.people.vo.MemberOfStaffRefVo;
import ims.core.resource.place.vo.LocationRefVo;
import ims.core.vo.AuthoringInformationVo;
import ims.core.vo.Hcp;
import ims.core.vo.HcpLiteVo;
import ims.core.vo.LocationLiteVo;
import ims.core.vo.LocationLiteVoCollection;
import ims.core.vo.MemberOfStaffLiteVo;
import ims.core.vo.MemberOfStaffVo;
import ims.core.vo.ProcedureLiteVo;
import ims.core.vo.ProcedureLiteVoCollection;
import ims.core.vo.ReferralNoteVo;
import ims.core.vo.ServiceFunctionLiteVoCollection;
import ims.core.vo.ServiceShortVo;
import ims.core.vo.enums.MosType;
import ims.core.vo.lookups.YesNo;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.ForeignKeyViolationException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.FormName;
import ims.framework.MessageButtons;
import ims.framework.MessageIcon;
import ims.framework.controls.DynamicGridCell;
import ims.framework.controls.DynamicGridColumn;
import ims.framework.controls.DynamicGridRow;
import ims.framework.enumerations.Alignment;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.DynamicCellType;
import ims.framework.enumerations.FormMode;
import ims.framework.enumerations.SortMode;
import ims.framework.enumerations.SortOrder;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.Date;
import ims.framework.utils.DateTime;
import ims.framework.utils.Time;
import ims.scheduling.vo.Appointment_StatusVo;
import ims.scheduling.vo.Appointment_StatusVoCollection;
import ims.scheduling.vo.Booking_AppointmentShortVo;
import ims.scheduling.vo.DirectoryOfServiceLiteVo;
import ims.scheduling.vo.DirectoryOfServiceLiteVoCollection;
import ims.scheduling.vo.DirectoryOfServiceVo;
import ims.scheduling.vo.lookups.Status_Reason;
import ims.vo.interfaces.IMos;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class Logic extends BaseLogic
{
	public static final Integer		COLICP				= new Integer(-12);
	public static final Integer		COLCAB				= new Integer(0);
	public static final Integer		COLLOC				= new Integer(1);
	public static final Integer		COLSERVICE			= new Integer(-1);
	public static final Integer		COLREVIEW			= new Integer(-2);
	public static final Integer		COL20KPI			= new Integer(-3);
	public static final Integer		COLIMAGE			= new Integer(-4);
	public static final Integer		COLNHSNO			= new Integer(-5);
	public static final Integer		COLNAME				= new Integer(-6);
	public static final Integer		COLALLOCATED		= new Integer(-7);
	public static final Integer		COLSTATUS			= new Integer(-8);
	public static final Integer		COLINV				= new Integer(-9);
	public static final Integer		COLINVNEEDAPPT		= new Integer(-10);
	public static final Integer		COLBOOKING			= new Integer(-11);
	public static final Integer		COLDAYSLEFT			= new Integer(-13);


	public static final Integer		REJ_ON_CAB			= new Integer(-100);
	public static final Integer		REJ_LETTER_SENT		= new Integer(-101);
	public static final Integer		REF_PROV_CANCEL		= new Integer(-102);
	public static final Integer		DOC_SENT			= new Integer(-103);
	public static final Integer		REVIEWED_SUITABLE	= new Integer(-104);
	public static final Integer		REVIEWED_FIT		= new Integer(-105);

	public static final Integer		START_TLT			= new Integer(-111);
	public static final Integer		START_CONS			= new Integer(-112);
	public static final Integer		START_CLIN			= new Integer(-113);

	public static final Integer		TWENTYFOURHOUR_REVIEW = new Integer(-114);

	public static final Integer		REFERRAL_TRIAGE 	= new Integer(-115); //wdev-12736

	public static final Integer		RESET_PROV			= new Integer(-89);
	public static final Integer		RESET_REJ			= new Integer(-90);
	private static final long serialVersionUID = 1L;	
	

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		initialize();
		initializeDynamicGrid();
		
		updateContextMenus(null);
		
		if (form.getGlobalContext().RefMan.getReferralStatusListFilterIsNotNull())
			refreshSearchCriteria();
		
		
	} 
	
	private void refreshSearchCriteria() 
	{
		CATSReferralFilterVo voFilter = form.getGlobalContext().RefMan.getReferralStatusListFilter();
		
		form.cmbSpec().setValue(voFilter.getService());
		specialtyValueChanged();
		
		if (voFilter.getIsCAB())
			form.Group1().setValue(Group1Enumeration.rdoCAB);
		else if (voFilter.getIsManual())
			form.Group1().setValue(Group1Enumeration.rdoManual);
		else
			form.Group1().setValue(Group1Enumeration.rdoAll);
		
		displayServiceDOSandClinicControls(); 

		form.cmbContract().setValue(voFilter.getContract());
		if (voFilter.getContractIsNotNull() && form.cmbContract().getValue() == null)
		{
			form.cmbContract().newRow(voFilter.getContract(), voFilter.getContract().getContractName().toString());
			form.cmbContract().setValue(voFilter.getContract());
		}
		
		
		if (form.cmbClinic().getVisible())
			form.cmbClinic().setValue(voFilter.getClinicType());
		if (form.cmbDOS().getVisible())
			form.cmbDOS().setValue(voFilter.getDOS());

		form.cmbWorklistStatus().setValue(voFilter.getStatus());
		
		
		
		form.dteApptFrom().setValue(voFilter.getFromDateIsNotNull() ? voFilter.getFromDate() : null);
		form.dteDateTo().setValue(voFilter.getToDateIsNotNull() ? voFilter.getToDate() : null);
		form.txtNHSNumber().setValue(voFilter.getNHSNumberIsNotNull() ? voFilter.getNHSNumber() : null);
				
		showExtraFilterControls();
		
		//wdev-13652
		if(ReferralWorklistStatus.CONSULTATION_APPOINTMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.OTHER_APPOINTMENTS_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.REVIEW_APPOINTMENTS.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.FURTHER_MANAGMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.ORDERINV_ACCEPTED_APPT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) )
		{
			if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
			{
				if(voFilter.getTreatmentCenterIsNotNull())
				{
					getLocationsServices();
					form.cmbTreatmentCentre().setValue(voFilter.getTreatmentCenter());
					if(voFilter.getTreatmentCenterIsNotNull() && form.cmbTreatmentCentre().getValue() == null)
					{
						form.cmbTreatmentCentre().newRow(voFilter.getTreatmentCenter(), voFilter.getTreatmentCenter().getLocation().getName());
						form.cmbTreatmentCentre().setValue(voFilter.getTreatmentCenter());
					}
				}
			}
		}
		//---------------

		if (form.cmbWorklistStatus().getValue() != null) 
		{
			if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FLAGGED_FOR_REVIEW))
				form.cmbReason().setValue(voFilter.getReviewType());//wdev-13469
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVIDER_CANCELLATION))
				form.chkExcludeProvCancel().setValue(voFilter.getExcludeProviderCancellation());
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.REPORTS_REQUIRED_WORKLIST)) 		//wdev-8433
				form.cmbReportsRequiredSubCategory().setValue(voFilter.getReportSubCategory());
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVISIONAL_REJECTION)) 		//wdev-8433
				form.cmbSecondOpinion().setValue(voFilter.getSecondOpinionReason());
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FURTHER_MANAGEMENT_REQUIRED_TLT)) 		//wdev-8433
				form.cmbTLTType().setValue(voFilter.getTLTType());
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.ONWARD_REFERRAL_WORKLIST)) 		//wdev-8433
				form.cmbOnwardReferralReason().setValue(voFilter.getOnwardReferralReason());
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.RefMan_REPORTS_REQUIRED_WORKLIST)) 		//wdev-8433
				form.cmbReportsRequired().setValue(voFilter.getNoteType());
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST)) 		//wdev-9383
			{
				form.ccMOS().clear();
				form.ccMOS().setValue( ((IMos)voFilter.getAllocatedTo()));
			}
			
			//wdev-11889
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.TWENTYFOUR_HOUR_POST_OP)) 		//wdev-9383
			{
				form.qmbProcedure().clear();
				if (voFilter.getProcedureIsNotNull())
				{
					ProcedureLiteVo voProc = domain.getProcedureLite(voFilter.getProcedure());
					form.qmbProcedure().newRow(voProc, voProc.getProcedureName());
					form.qmbProcedure().setValue(voProc);
				}
			}
			//WDEV-11692 - starts here
			else if (ReferralWorklistStatus.FIT_FOR_SURGERY_NEED_APPT.equals(form.cmbWorklistStatus().getValue()))
			{
				form.cmbOPDSite().setValue(voFilter.getOPDSite());
				form.dteSfSFrom().setValue(voFilter.getSfSFromDate());
				form.dteSfSTo().setValue(voFilter.getSfSToDate());
			}
			//WDEV-11692 - ends here
			//WDEV-12110 - starts here
			else if (ReferralWorklistStatus.DISCHARGE_REPORT_WORKLIST.equals(form.cmbWorklistStatus().getValue()))
			{
				form.dteDischargeDateFrom().setValue(voFilter.getDischargeFromDate());
				form.dteDischargeDateTo().setValue(voFilter.getDischargeToDate());
			}
			//WDEV-12110 - ends here
		}

		search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow() : null);
	}

	private void updateContextMenus(CatsReferralListVo voCatsRef) 
	{
		form.getContextMenus().RefMan.hideAllReferralStatusListMenuMenuItems();
		//wdev-6388
		if (form.dyngrdReferrals().getSelectedRow() != null)
			form.getContextMenus().RefMan.getReferralStatusListMenuCALL_ATTEMPTSItem().setVisible(true);
		
		/*if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getCells().get(getColumn(COLSTATUS)) != null
			&& form.dyngrdReferrals().getSelectedRow().getCells().get(getColumn(COLSTATUS)).getIdentifier() != null
			&& ((ReferralApptStatus)form.dyngrdReferrals().getSelectedRow().getCells().get(getColumn(COLSTATUS)).getIdentifier()).equals(ReferralApptStatus.REFERRAL_ACCEPTED) )
			form.getContextMenus().RefMan.getReferralStatusListMenuPresentationItem().setVisible(true);*/

		if (form.dyngrdReferrals().getSelectedRow() != null)
		{
			form.getContextMenus().RefMan.getReferralStatusListMenuEDIT_REFERRAL_DETAILSItem().setVisible(true);
			form.getContextMenus().RefMan.getReferralStatusListMenuViewDemographicsItem().setVisible(true);
		}

		if (form.dyngrdReferrals().getSelectedRow() != null)
		{
			if (voCatsRef != null 
				&& voCatsRef.getHasRejectedInvIsNotNull()
				&& voCatsRef.getHasRejectedInv().booleanValue())
				form.getContextMenus().RefMan.getReferralStatusListMenuReviewRejectedInvestigationsItem().setVisible(true);
			
			if (voCatsRef != null &&
				voCatsRef.getIsFlaggedForReviewIsNotNull())					
			{
				if (!voCatsRef.getIsFlaggedForReview().booleanValue())
				{
					form.getContextMenus().RefMan.getReferralStatusListMenuFlagForReviewItem().setVisible(true);
					form.getContextMenus().RefMan.getReferralStatusListMenuReviewFlagForReviewDetailItem().setVisible(false);
				}
				else
				{
					form.getContextMenus().RefMan.getReferralStatusListMenuFlagForReviewItem().setVisible(false);
					form.getContextMenus().RefMan.getReferralStatusListMenuReviewFlagForReviewDetailItem().setVisible(true);
				}				
			}
			else
			{
				form.getContextMenus().RefMan.getReferralStatusListMenuFlagForReviewItem().setVisible(true);
				form.getContextMenus().RefMan.getReferralStatusListMenuReviewFlagForReviewDetailItem().setVisible(false);
			}
			
			if (voCatsRef != null &&
					voCatsRef.getCurrentStatusIsNotNull() &&
						voCatsRef.getCurrentStatus().getReferralStatusIsNotNull())
			{
				if (!voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.DISCHARGED) ||
						!voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.CAB_CANCELLATION))
				{
					form.getContextMenus().RefMan.getReferralStatusListMenuNewProviderCancellationItem().setVisible(true);
					form.getContextMenus().RefMan.getReferralStatusListMenuEditProviderCancellationItem().setVisible(false);
					
					if(voCatsRef.getProviderCancellationIsNotNull())
					{
						form.getContextMenus().RefMan.getReferralStatusListMenuNewProviderCancellationItem().setVisible(false);
						form.getContextMenus().RefMan.getReferralStatusListMenuEditProviderCancellationItem().setVisible(true);
					}
				}
			}
			if (voCatsRef != null 
				&& voCatsRef.getHasAppointmentsIsNotNull()
				&& voCatsRef.getHasAppointments())
			{	
				//wdev-6315
				//Check to see if iITS a DAD referral, if so dont show these menu options
				
				form.getLocalContext().setbLessThenTodaysDate(null);

				if (voCatsRef.getReferralDetails() == null
					|| (voCatsRef.getReferralDetailsIsNotNull()
						&& 	voCatsRef.getReferralDetails().getIsDADReferral() == null)
					|| (voCatsRef.getReferralDetailsIsNotNull()
						&& voCatsRef.getReferralDetails().getIsDADReferralIsNotNull()
						&& ! voCatsRef.getReferralDetails().getIsDADReferral()) )
				{
					if (voCatsRef.getLastApptArrivedDateIsNotNull()
						&& voCatsRef.getLastApptArrivedDate().isLessOrEqualThan(new Date()))
					{
						form.getContextMenus().RefMan.getReferralStatusListMenuStartClinicalContactItem().setVisible(true);
						form.getContextMenus().RefMan.getReferralStatusListMenuStartConsultantContactItem().setVisible(true);
						form.getContextMenus().RefMan.getReferralStatusListMenuStartTLTContactItem().setVisible(true);

						form.getLocalContext().setbLessThenTodaysDate(! voCatsRef.getLastApptArrivedDate().getDate().equals(new Date().getDate()));
					}
					
					if (voCatsRef.getHasConsultationDetailsIsNotNull()
						&& 	voCatsRef.getHasConsultationDetails())
					{
						form.getContextMenus().RefMan.getReferralStatusListMenuEditConsultationDetailsItem().setVisible(true);
							
						if (voCatsRef.getHasTLTStartContactIsNotNull()) 
							form.getContextMenus().RefMan.getReferralStatusListMenuEND_TLT_CONTACTItem().setVisible(true);
					}
				}
			}
			
			//Undo Provider Cancellation
			
			form.getContextMenus().RefMan.getReferralStatusListMenuUNDO_PROVIDER_CANCELLATIONItem().setVisible(voCatsRef != null && voCatsRef.getCurrentStatusIsNotNull() 
					&& ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(voCatsRef.getCurrentStatus().getReferralStatus()));
			
			//Undo Referral Rejection
			
			form.getContextMenus().RefMan.getReferralStatusListMenuUNDO_REFERRAL_REJECTIONItem().setVisible(voCatsRef != null && voCatsRef.getCurrentStatusIsNotNull()
					&& ReferralApptStatus.REFERRAL_REJECTED.equals(voCatsRef.getCurrentStatus().getReferralStatus()));
			
			//WDEV-16165 Undo End Of Care
			form.getContextMenus().RefMan.getReferralStatusListMenuUNDO_END_OF_CAREItem().setVisible(voCatsRef != null && voCatsRef.getCurrentStatusIsNotNull()
					&& ReferralApptStatus.END_OF_CARE.equals(voCatsRef.getCurrentStatus().getReferralStatus()));
		}

		form.getContextMenus().RefMan.getReferralStatusListMenuNewReferralWizardItem().setVisible(true);
		form.getContextMenus().RefMan.getReferralStatusListMenuNEWREJECTEDONWARDREFERRALItem().setVisible(form.getMode().equals(FormMode.VIEW) 
				&& voCatsRef != null 
				&& voCatsRef.getOnwardReferralStatusIsNotNull() 
				&& voCatsRef.getOnwardReferralStatus().equals(OnwardReferralStatus.CURRENT_ONWARD_REFERRAL));
		
		form.getContextMenus().RefMan.getReferralStatusListMenuEDITREJECTONWARDREFERRALDETAILSItem().setVisible(form.getMode().equals(FormMode.VIEW) 
				&& voCatsRef != null 
				&& voCatsRef.getOnwardReferralStatusIsNotNull() 
				&& voCatsRef.getOnwardReferralStatus().equals(OnwardReferralStatus.ONWARD_REFERRAL_REJECTED));
		
		form.getContextMenus().RefMan.getReferralStatusListMenuNEWONWARDREFERRALItem().setVisible(form.getMode().equals(FormMode.VIEW) 
				&& voCatsRef != null 
				&& voCatsRef.getOnwardReferralStatusIsNotNull() 
				&& voCatsRef.getOnwardReferralStatus().equals(OnwardReferralStatus.ONWARD_REFERRAL_REJECTED));

		form.getContextMenus().RefMan.getReferralStatusListMenuViewRejectedReferralDetailsItem().setVisible(
				voCatsRef != null 
				&& form.getMode().equals(FormMode.VIEW) && form.dyngrdReferrals().getSelectedRow() != null 
				&& voCatsRef.getCurrentStatus().getReferralStatusIsNotNull()
				&& voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED));
		
		form.getContextMenus().RefMan.getReferralStatusListMenuBOOK_THEATRE_APPTItem().setVisible(		
			form.getMode().equals(FormMode.VIEW) 
			&& form.dyngrdReferrals().getSelectedRow() != null 
			&&  voCatsRef != null 
			&&  voCatsRef.getCurrentStatusIsNotNull()
			&&  voCatsRef.getCurrentStatus().getReferralStatusIsNotNull()
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.AWAITING_TRIAGE)
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_RECEIVED)
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.PROVISIONAL_REJECTION)
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER)
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.CAB_CANCELLATION)
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED)
			&&  ! voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.WAITING_ON_GP_REFERRAL)
			&&  voCatsRef.getIsFitForSurgeryIsNotNull()
			&&  voCatsRef.getIsFitForSurgery()
			&&  voCatsRef.getIsSuitableForSurgeryIsNotNull()
			&&  voCatsRef.getIsSuitableForSurgery()
		    && (voCatsRef.getHasTheatreAppt() == null || (voCatsRef.getHasTheatreApptIsNotNull() && !voCatsRef.getHasTheatreAppt()))
		    && ConfigFlag.UI.CAN_CONFIGURE_THEATRE_PROFILES.getValue()); // WDEV-12525

		//wdev-9600
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FIT_FOR_SURGERY_NEED_APPT))
			form.getContextMenus().RefMan.getReferralStatusListMenuREVIEW_SUITABLE_FOR_SURGERYItem().setVisible(true);
		
		//wdev-8064
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& voCatsRef != null 
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.REFERRAL_REJECTED))
		{
			if (voCatsRef.getIsCABIsNotNull()
				&& voCatsRef.getIsCAB().booleanValue())
				form.getContextMenus().RefMan.getReferralStatusListMenuREJECTED_ON_CABItem().setVisible(true);
			else
				form.getContextMenus().RefMan.getReferralStatusListMenuPATIENT_REJ_LETTER_SENTItem().setVisible(true);
		}
		
		if (form.dyngrdReferrals().getSelectedRow() != null
			&&  voCatsRef != null 
			&& voCatsRef.getCurrentStatusIsNotNull() 
			&& voCatsRef.getCurrentStatus().getReferralStatusIsNotNull()
			&& engine.hasRight(AppRight.CAN_RESET_PROV_CANC_AND_REF_REJECT))
		{
			if (voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED))
				form.getContextMenus().RefMan.getReferralStatusListMenuRESET_REJECT_REFERRALItem().setVisible(true);

			if (voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
					form.getContextMenus().RefMan.getReferralStatusListMenuRESET_PROVEIDER_CANCELLATIONItem().setVisible(true);
		}

		//wdev-8068
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& voCatsRef != null 
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVIDER_CANCELLATION))
		{
			if (voCatsRef.getIsCABIsNotNull()
				&& voCatsRef.getIsCAB().booleanValue())
				form.getContextMenus().RefMan.getReferralStatusListMenuREF_IS_PROV_CANC_ON_CABItem().setVisible(true);
			else
				form.getContextMenus().RefMan.getReferralStatusListMenuDOC_SENT_TO_PATIENTItem().setVisible(true);
		}
		
		//wdev-8305
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.DISCHARGE_REPORT_WORKLIST))
			form.getContextMenus().RefMan.getReferralStatusListMenuVIEW_DISCHARGE_SUMMARY_DETAILSItem().setVisible(true);

		//wdev-9600
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.NOT_FIT_OR_SUITABLE_FOR_SURGERY))
			form.getContextMenus().RefMan.getReferralStatusListMenuREVIEW_FITItem().setVisible(true);

		//wdev-11875
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& voCatsRef != null
			&& voCatsRef.getEndOfCareDate() == null
			&& voCatsRef.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED))
			form.getContextMenus().RefMan.getReferralStatusListMenuEND_OF_CAREItem().setVisible(true);
		
		//wdev-11889
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.TWENTYFOUR_HOUR_POST_OP))
			form.getContextMenus().RefMan.getReferralStatusListMenuREMOVE_FROM_24HOURItem().setVisible(true);

		////wdev-12736
		if (form.dyngrdReferrals().getSelectedRow() != null
			&& form.dyngrdReferrals().getSelectedRow().getValue() != null
			&& form.cmbWorklistStatus().getValue() != null
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.REFERRAL_TRIAGE_WORKLIST))
		{
			OnwardReferralFromTriageVo voOnward = domain.getOnwardReferralByCatsReferral(voCatsRef);
			if (voOnward != null
				&& voOnward.getReferralCompleteIsNotNull()
				&& voOnward.getReferralComplete().equals(YesNo.YES))
				form.getContextMenus().RefMan.getReferralStatusListMenuREMOVE_FROM_CATS_ONWARD_REFERRAL_WORKLISTItem().setVisible(true);
		}
		
	}

	private void initialize() 
	{
		// WDEV-12875
		// Check if the current location has diagnostic ContractConfiguration records on the branch of the organisation
		if (form.getGlobalContext().RefMan.getDiagnosticReferralForApplication() == null)
			form.getGlobalContext().RefMan.setDiagnosticReferralForApplication(domain.hasLocationDiagnosicContracts((LocationRefVo) engine.getCurrentLocation()));
		
		DirectoryOfServiceVo directoryOfService = new DirectoryOfServiceVo();
		directoryOfService.setIsActive(true);
		DirectoryOfServiceLiteVoCollection voColl = domain.listDirectoryOfService(directoryOfService);
		//wdev-10875
		if( voColl != null)
			voColl.sort(new DosComparator(SortOrder.ASCENDING));
		
		//
		for (int i = 0 ; voColl != null && i < voColl.size() ; i++)
			form.cmbDOS().newRow(voColl.get(i), voColl.get(i).getDoSName());
		
		// WDEV-12866
		// Use the new function to list active Contracts for a specific location
		// ContractConfigForReferralDetailsComponentVoCollection contracts = domain.listActiveContracts(voOrg);
		ContractConfigForReferralDetailsComponentVoCollection contracts = domain.listActiveContractsForLocation((LocationRefVo) engine.getCurrentLocation());
		for (int i = 0; contracts != null && i < contracts.size(); i++)
		{
			form.cmbContract().newRow(contracts.get(i), contracts.get(i).getContractName());
		}

		if (contracts != null
			&& contracts.size() == 1
			&& form.getGlobalContext().RefMan.getReferralStatusListFilter() == null)
			form.cmbContract().setValue(contracts.get(0));
			
		if (form.getGlobalContext().RefMan.getReferralStatusListFilterIsNotNull())
		{
			if (form.cmbContract().getVisible())
			{
				form.cmbContract().setValue(form.getGlobalContext().RefMan.getReferralStatusListFilter().getContract());
				
				if (form.getGlobalContext().RefMan.getReferralStatusListFilter().getContractIsNotNull() && form.cmbContract().getValue() == null)
				{
					form.cmbContract().newRow(form.getGlobalContext().RefMan.getReferralStatusListFilter().getContract(), form.getGlobalContext().RefMan.getReferralStatusListFilter().getContract().getContractName().toString());
					form.cmbContract().setValue(form.getGlobalContext().RefMan.getReferralStatusListFilter().getContract());
				}
			}
		}
		
		loadLocations();
		
		//WDEV-11692
		loadOPDSites();
		
		ReferralServiceFullVo services = domain.getReferralServices();
		if (services != null && services.getReferralServicesIsNotNull())
		{
			for (ServiceShortVo service : services.getReferralServices().sort())
			{
				form.cmbSpec().newRow(service,service.getServiceName());
			}
		}

		form.Group1().setValue(Group1Enumeration.rdoAll);
		displayServiceDOSandClinicControls();		
		
		hideExtraFilterControls();
		
		form.btnAllocate().setVisible(false);//wdev-8287
	}

	//WDEV-11692 - starts here
	private void loadOPDSites() 
	{
		form.cmbOPDSite().clear();
		
		LocationLiteVoCollection opdSites = domain.listOPDSite();
		
		if(opdSites == null || opdSites.size() == 0)
			return;
		
		for(int i=0; i<opdSites.size(); i++)
		{
			LocationLiteVo site = opdSites.get(i);
			
			if(site == null || site.getName() == null)
				continue;
			
			form.cmbOPDSite().newRow(site, site.getName());
		}
	}
	//WDEV-11692 - ends here

	private void loadLocations() 
	{
//		wdev-12682
		if( form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
		{			
			form.cmbLocation().clear();
			LocationLiteVoCollection voCollLocation = null;
			if(! ConfigFlag.UI.DISABLE_MULTI_SITE_CATS_FUNCTIONALITY.getValue())
			{
				if (form.cmbContract().getValue() != null)
					voCollLocation = domain.listLocationByOrganisation(form.cmbContract().getValue().getContractOrganisation(), "");
			}
			else
				voCollLocation = domain.listLocationLite();

			if (voCollLocation != null && voCollLocation.size() > 0)
			{
				for (LocationLiteVo voLoc : voCollLocation)
				{
					form.cmbLocation().newRow(voLoc,voLoc.getName());
				}
			}
						
			if(engine.getCurrentLocation() != null)
			{
				for(int i=0;i<form.cmbLocation().getValues().size(); i++)
				{
					if(((LocationLiteVo)form.cmbLocation().getValues().get(i)).getID_Location().equals(engine.getCurrentLocation().getID()))
					{
						form.cmbLocation().setValue((LocationLiteVo)form.cmbLocation().getValues().get(i));
						break;
					}
				}
			}	
		}
		else
		{
			form.lblLocation().setVisible(false);
			form.cmbLocation().setVisible(false);
		}
	}

	@Override
	protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException
	{
//		wdev-12682
		if( form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
			form.cmbLocation().setValue(null);
		
		form.cmbDOS().setValue(null);
		form.cmbSpec().setValue(null);
		form.cmbClinic().setValue(null);
		//form.customControlConsultant().setValue(null);
		form.cmbWorklistStatus().setValue(null);
		form.dteApptFrom().setValue(null);
		form.dteDateTo().setValue(null);
		form.txtNHSNumber().setValue(null);
		
		form.chkExcludeProvCancel().setValue(null);//wdev-7226

		form.cmbOnwardReferralReason().setValue(null);//wdev-8841
		form.cmbReportsRequiredSubCategory().setValue(null);
		form.cmbSecondOpinion().setValue(null);//wdev-9912
		form.cmbTLTType().setValue(null);
		form.cmbReason().setValue(null);
		
		form.Group1().setValue(Group1Enumeration.rdoAll);
		displayServiceDOSandClinicControls();
		
		form.dyngrdReferrals().getRows().clear();
		form.lblTotal().setValue("Total : 0");
		form.getGlobalContext().RefMan.setIsProviderCancellation(false);//wdev-6163

		form.cmbContract().setValue(null);
//		wdev-12682
		if( form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication()
			&& ! ConfigFlag.UI.DISABLE_MULTI_SITE_CATS_FUNCTIONALITY.getValue())
			form.cmbLocation().clear();

		updateContextMenus(null);

		form.getGlobalContext().Core.setPatientShort(null);
		form.getGlobalContext().Core.setPatientToBeDisplayed(null);//wdev-6615
		engine.setPatientInfo("Please enter Patient ID or Surname and/or Forename");
		
		form.getGlobalContext().RefMan.setReferralStatusListFilter(null);
		
		form.btnAllocate().setVisible(false);//wdev-8287
		form.getGlobalContext().RefMan.setCatsReferral(null);//wdev-6615
		form.getGlobalContext().RefMan.setReferralContractTypeForPatient(null);//wdev-12682
		form.qmbProcedure().setValue(null);//wdev-11889

		//WDEV-11692 - starts here
		form.cmbOPDSite().setValue(null);
		form.dteSfSFrom().setValue(null);
		form.dteSfSTo().setValue(null);
		//WDEV-11692 - ends here
		
		//WDEV-121102 - starts here
		form.dteDischargeDateFrom().setValue(null);
		form.dteDischargeDateTo().setValue(null);
		//WDEV-12110 - ends here
		
		hideExtraFilterControls();
	}
	
	private DynamicGridColumn getColumn(Integer identifier)
	{
		return form.dyngrdReferrals().getColumns().getByIdentifier(identifier);
	}


	@Override
	protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().RefMan.setIsProviderCancellation(false);//wdev-6163

		search(Boolean.TRUE, null);
	}

	private void search(Boolean bShowMessages, CatsReferralListManualAssemblyVo voCatsToFind) 
	{
		boolean searchCriteriaSpecified=false; 
		//WDEV-11692
		List<String> uiErrors = new ArrayList<String>();
		
		if (form.dteApptFrom().getValue() != null && form.dteDateTo().getValue() != null)
		{
			if (form.dteApptFrom().getValue().isGreaterThan(form.dteDateTo().getValue()))
			{
				//WDEV-11692
				uiErrors.add("Please enter From and To dates that are in chronological order.");
			}
			searchCriteriaSpecified=true;
		}
		
		String nospacesString = null;
		if (form.txtNHSNumber().getValue() != null)
		{
			nospacesString = form.txtNHSNumber().getValue().replace(" ", "");
			searchCriteriaSpecified=true;
		}

		//wdev-8433
		if (form.cmbWorklistStatus().getValue() != null 
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.REPORTS_REQUIRED_WORKLIST)
			&& form.cmbReportsRequiredSubCategory().getValue() == null)
		{
			//WDEV-11692
			uiErrors.add("Please select a Required Category.");
		}

		// WDEV-12870
		// Contract is now a mandatory search criteria
		if (form.cmbContract().getValue() == null)
		{
			uiErrors.add("Please select a Contract.");
		}
			

		//wdev-9477
		if (form.cmbWorklistStatus().getValue() != null 
			&& form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST)
			&& form.ccMOS().getValue() == null)
		{
			//WDEV-11692
			uiErrors.add("Please select a MOS to find a Worklist for.");
		}
		
		//WDEV-11692 - starts here
		if(form.dteSfSFrom().getValue() != null && form.dteSfSTo().getValue() != null)
		{
			if(form.dteSfSFrom().getValue().isGreaterThan(form.dteSfSTo().getValue()))
			{
				uiErrors.add("SfS From Date can not be greater than Sfs To Date.");
			}	
			searchCriteriaSpecified=true;
		}
		
		//WDEV-12110 - starts here
		if(form.dteDischargeDateFrom().getValue() != null && form.dteDischargeDateTo().getValue() != null)
		{
			if(form.dteDischargeDateFrom().getValue().isGreaterThan(form.dteDischargeDateTo().getValue()))
			{
				uiErrors.add("Discharge From Date can not be greater than Discharge To Date.");
			}	
			searchCriteriaSpecified=true;
		}
		
		String[] uiResults = new String[uiErrors.size()];
		uiErrors.toArray(uiResults);
		
		if(uiResults != null && uiResults.length > 0)
		{
			engine.showErrors(uiResults);
			return;
		}
		//WDEV-11692 - ends here
		
		form.dyngrdReferrals().getRows().clear();
		updateContextMenus(null);
		
		CATSReferralFilterVo voFilter = new CATSReferralFilterVo();
		voFilter.setService(form.cmbSpec().getValue());
		if (voFilter.getServiceIsNotNull())
			searchCriteriaSpecified=true;

		voFilter.setIsManual(Boolean.FALSE);
		if (form.Group1().getValue().equals(Group1Enumeration.rdoManual))
		{
			voFilter.setClinicType(form.cmbClinic().getValue());
			voFilter.setIsManual(Boolean.TRUE);
			searchCriteriaSpecified=true;
		}

		voFilter.setIsCAB(Boolean.FALSE);
		if (form.Group1().getValue().equals(Group1Enumeration.rdoCAB))
		{
			voFilter.setDOS(form.cmbDOS().getValue());
			voFilter.setIsCAB(Boolean.TRUE);
			searchCriteriaSpecified=true;
		}

		
		voFilter.setStatus(form.cmbWorklistStatus().getValue());
		if (form.cmbWorklistStatus().getValue() != null) 
		{
			if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FLAGGED_FOR_REVIEW))
			{
				voFilter.setReviewType(form.cmbReason().getValue());
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.REPORTS_REQUIRED_WORKLIST))
			{
			 	voFilter.setReportSubCategory(form.cmbReportsRequiredSubCategory().getValue());
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVISIONAL_REJECTION))
			{
			 	voFilter.setSecondOpinionReason(form.cmbSecondOpinion().getValue());
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FURTHER_MANAGEMENT_REQUIRED_TLT))
			{
			 	voFilter.setTLTType(form.cmbTLTType().getValue());//wdev-8484
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.ONWARD_REFERRAL_WORKLIST))
			{
			 	voFilter.setOnwardReferralReason(form.cmbOnwardReferralReason().getValue());//wdev-8484
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.RefMan_REPORTS_REQUIRED_WORKLIST))
			{
			 	voFilter.setNoteType(form.cmbReportsRequired().getValue());			
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.TWENTYFOUR_HOUR_POST_OP))
			{
			 	voFilter.setProcedure(form.qmbProcedure().getValue());			
			}
			searchCriteriaSpecified=true;
		}	
		voFilter.setFromDate(form.dteApptFrom().getValue());
		voFilter.setToDate(form.dteDateTo().getValue());
		
		//WDEV-11692
		voFilter.setOPDSite(form.cmbOPDSite().getValue());
		voFilter.setSfSFromDate(form.dteSfSFrom().getValue());
		voFilter.setSfSToDate(form.dteSfSTo().getValue());
		//WDEV-11692

		//WDEV-12110
		voFilter.setDischargeFromDate(form.dteDischargeDateFrom().getValue());
		voFilter.setDischargeToDate(form.dteDischargeDateTo().getValue());
		//WDEV-12110
		
		if(form.cmbWorklistStatus().getValue() != null && form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST))
		{
			if (form.ccMOS().getValue() == null)
				voFilter.setAllocatedTo((MemberOfStaffLiteVo)domain.getMosUser(engine.getLoggedInUser().getUsername()));
			else
			{
				MemberOfStaffVo mosVo = new MemberOfStaffVo();
				mosVo.setID_MemberOfStaff( ((IMos) form.ccMOS().getValue()).getIMosId());
				mosVo = domain.getMemberOfStaff(mosVo);
				voFilter.setAllocatedTo(mosVo);
			}
			searchCriteriaSpecified=true;
		}

		if (form.chkExcludeProvCancel().getValue())//wdev-7186
			voFilter.setExcludeProviderCancellation(form.chkExcludeProvCancel().getValue());
			
		voFilter.setNHSNumber(nospacesString);
		voFilter.setContract(form.cmbContract().getValue());
		
		if (voFilter.getContractIsNotNull())
			searchCriteriaSpecified=true;
		
		//wdev-13652
		if(ReferralWorklistStatus.CONSULTATION_APPOINTMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.OTHER_APPOINTMENTS_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.REVIEW_APPOINTMENTS.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.FURTHER_MANAGMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.ORDERINV_ACCEPTED_APPT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) )
		{
			if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
			{
				voFilter.setTreatmentCenter(form.cmbTreatmentCentre().getValue());
			}
			else
				voFilter.setTreatmentCenter(null);
		}
		else
			voFilter.setTreatmentCenter(null);
		//---------------------------
		
//		wdev-12682
		if( form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
			voFilter.setLocation(form.cmbLocation().getValue());
		
		voFilter.setContractsForOrg(domain.listAllContracts(domain.getOrganisationByLocation(engine.getCurrentLocation().getID())));
		
		form.getGlobalContext().RefMan.setReferralStatusListFilter(voFilter);
		form.btnAllocate().setVisible(false);//wdev-8287
		
		CatsReferralListManualAssemblyVoCollection voCatsRefColl;
//		if ( ((voFilter.countFieldsWithValue() > 4)						// this is not OK - it is hard to read, hard to maintain, bug prone - in short a nightmare - whoever did this should fix it
//				&& form.cmbWorklistStatus().getValue() != null && form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST))
//			|| ((voFilter.countFieldsWithValue() > 3) 					// this is not OK - it is hard to read, hard to maintain, bug prone - in short a nightmare - whoever did this should fix it
//				&& (form.cmbWorklistStatus().getValue() == null || (form.cmbWorklistStatus().getValue() != null && !form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST)) ) ))
//		{
		if (searchCriteriaSpecified)
		{
			voCatsRefColl = domain.listCATSReferrals(voFilter, ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue(), false);
		}
		else
		{
			if (bShowMessages)
			{
				if (voFilter.getAllocatedTo() == null && form.cmbWorklistStatus().getValue() != null && form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST))
				// WDEV-16681	
					engine.showMessage("No member of staff information was found to search for. The logged in user does not have a Member of Staff assigned.", "Invalid Search Criteria", MessageButtons.OK, MessageIcon.ERROR);
				else
				// WDEV-16681		
					engine.showMessage("Please enter at least one item of search criteria.", "Invalid Search Criteria", MessageButtons.OK, MessageIcon.ERROR);
			}

			return;
		}
		
		if ( bShowMessages && (voCatsRefColl == null || voCatsRefColl.size() == 0))
		{
			engine.showMessage("No records match your search criteria.", "No data found", MessageButtons.OK, MessageIcon.WARNING);
			form.lblTotal().setValue("Total : 0");
			return;
		}
		if (voCatsRefColl != null)
		{
			form.lblTotal().setValue("Total : " + String.valueOf(voCatsRefColl.size()));
			
			if (voCatsRefColl.size()>0 && engine.hasRight(AppRight.CAN_ALLOCATE_WORKLIST_TASKS) && (MemberOfStaffRefVo)domain.getMosUser(engine.getLoggedInUser().getUsername()) != null )//WDEV-12545
				form.btnAllocate().setVisible(true);//wdev-8287
		}
		else
			form.lblTotal().setValue("Total : 0");
		
		populateGrid(voCatsRefColl, voCatsToFind);
		
		if (form.dyngrdReferrals().getSelectedRow() != null)
			rowSelectionChanged();
	}

	private void populateGrid(CatsReferralListManualAssemblyVoCollection voCatsRefColl, CatsReferralListManualAssemblyVo voCatsToFind) 
	{
		form.dyngrdReferrals().getRows().clear();
		for (int i = 0 ; voCatsRefColl != null && i < voCatsRefColl.size() ; i++)
			addNewDynamicGridRow(voCatsRefColl.get(i), voCatsToFind);
	}

	private void addNewDynamicGridRow(CatsReferralListManualAssemblyVo voCatsRef, CatsReferralListManualAssemblyVo voCatsToFind)
	{
		DynamicGridRow newRow = form.dyngrdReferrals().getRows().newRow();
		if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
		{
			DynamicGridCell icpCell = newRow.getCells().newCell(getColumn(COLICP), DynamicCellType.IMAGE);
			icpCell.setReadOnly(false);
			icpCell.setValue(voCatsRef.getLinkedICPIDIsNotNull() ? form.getImages().ICP.ICP : null);
			icpCell.setTooltip(voCatsRef.getLinkedICPIDIsNotNull() ? "ICP" : "");
		}	
		
		if (voCatsRef.getIsCABIsNotNull() && voCatsRef.getIsCAB())
		{
			DynamicGridCell cabCell = newRow.getCells().newCell(getColumn(COLCAB), DynamicCellType.IMAGE);
			cabCell.setReadOnly(false);
			cabCell.setValue(form.getImages().OCRR.LetterC);
			cabCell.setTooltip("Choose and Book Referral");
		}	
				
//		wdev-12682
		if(form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
		{
			DynamicGridCell locCell = newRow.getCells().newCell(getColumn(COLLOC), DynamicCellType.LABEL);
			locCell.setValue(voCatsRef.getReferralLocationNameIsNotNull() ? voCatsRef.getReferralLocationName() : "");
		}
		
		DynamicGridCell serviceCell = newRow.getCells().newCell(getColumn(COLSERVICE), DynamicCellType.LABEL);
		serviceCell.setValue(voCatsRef.getServiceNameIsNotNull() ? voCatsRef.getServiceName() : "");
		
		if (voCatsRef.getIsFlaggedForReviewIsNotNull() && voCatsRef.getIsFlaggedForReview()) 
		{
			DynamicGridCell rdCell = newRow.getCells().newCell(getColumn(COLREVIEW), DynamicCellType.IMAGEBUTTON);
			rdCell.setValue(form.getImages().Core.RedFlag);
		}

		DynamicGridCell twentykpiCell = newRow.getCells().newCell(getColumn(COL20KPI), DynamicCellType.LABEL);
		twentykpiCell.setValue("");
		//WDEV-11713
		twentykpiCell.setValue(voCatsRef.getEnd18WWIsNotNull() ? voCatsRef.getEnd18WW().toString() : "");
		
		DynamicGridCell nhsCell = newRow.getCells().newCell(getColumn(COLNHSNO), DynamicCellType.LABEL);
		nhsCell.setValue(voCatsRef.getNHSValue());

		DynamicGridCell typeNameCell = newRow.getCells().newCell(getColumn(COLNAME), DynamicCellType.STRING);
		typeNameCell.setReadOnly(true);
		typeNameCell.setValue(voCatsRef.getPatientName());

		DynamicGridCell allocCell = null;
		if (voCatsRef.getIsCurrentlyAllocatedIsNotNull() && voCatsRef.getIsCurrentlyAllocated())
		{
			allocCell = newRow.getCells().newCell(getColumn(COLALLOCATED), DynamicCellType.IMAGEBUTTON);
			allocCell.setReadOnly(false);
			allocCell.setValue(form.getImages().Core.Users);
			allocCell.setAutoPostBack(true);
			allocCell.setTooltip("Allocated");
		}	
	
		if (voCatsRef.getHasInvestigationsIsNotNull() && voCatsRef.getHasInvestigations())
		{
			DynamicGridCell typeInvCell = newRow.getCells().newCell(getColumn(COLINV), DynamicCellType.IMAGEBUTTON);
			typeInvCell.setReadOnly(false);
			typeInvCell.setValue(form.getImages().OCRR.Accepted);
			typeInvCell.setAutoPostBack(true);
			typeInvCell.setTooltip("Investigations Ordered");
		}
		
		if (voCatsRef.getAdditionalInvStatusIsNotNull() 
			&& voCatsRef.getAdditionalInvStatus().equals(AdditionalInvestigationAppointmentsStatus.TOBEBOOKED))
		{
			DynamicGridCell typeInvCell = newRow.getCells().newCell(getColumn(COLINVNEEDAPPT), DynamicCellType.IMAGEBUTTON);
			typeInvCell.setReadOnly(false);
			typeInvCell.setValue(form.getImages().OCRR.SpecimenDetails16);
			typeInvCell.setAutoPostBack(true);
			typeInvCell.setTooltip("Investigation Requires an Appointment");
		}
		
		DynamicGridCell statCell = newRow.getCells().newCell(getColumn(COLSTATUS), DynamicCellType.LABEL);
		statCell.setValue(voCatsRef.getCatsCurrentStatusIsNotNull() ? voCatsRef.getCatsCurrentStatus().getText().toString() : "");
		statCell.setTooltip(voCatsRef.getCatsCurrentStatusIsNotNull() ? voCatsRef.getCatsCurrentStatus().getText().toString() : "");
		statCell.setIdentifier(voCatsRef.getCatsCurrentStatusIsNotNull() ? voCatsRef.getCatsCurrentStatus() : null);
		
		if (voCatsRef.getHasApointmentsIsNotNull() && voCatsRef.getHasApointments())
		{
			DynamicGridCell bookCell = newRow.getCells().newCell(getColumn(COLBOOKING), DynamicCellType.IMAGEBUTTON);
			bookCell.setReadOnly(false);
			bookCell.setValue(form.getImages().Core.CalendarMonth16);
			bookCell.setAutoPostBack(true);
			//WDEV-18014
			bookCell.setTooltip("Appointments");
		}

		DynamicGridCell daysLeftCell = newRow.getCells().newCell(getColumn(COLDAYSLEFT), DynamicCellType.INT);//wdev-12831
		daysLeftCell.setReadOnly(true);	//WDEV-12994
		if( voCatsRef.getConsultationApptStatusIsNotNull()
			&& voCatsRef.getConsultationApptStatus().equals(Status_Reason.BOOKED))
		{
			if (voCatsRef.getConsAppointmentDateIsNotNull())
			{
				Date today = new Date();
				
//				wdev-12831
				long lval;
				lval = Date.daysBetween(new Date(voCatsRef.getConsAppointmentDate()), new Date());

				daysLeftCell.setValue(-(int)lval);
				if (today.isGreaterThan(voCatsRef.getConsAppointmentDate()))
					daysLeftCell.setTooltip("Consultation Appointment date is in the Past: " + voCatsRef.getConsAppointmentDate().toString());
				else
					daysLeftCell.setTooltip("Days until Appointment. Date is : " + voCatsRef.getConsAppointmentDate().toString() + " " + (voCatsRef.getConsultationApptStartTime()!= null ? voCatsRef.getConsultationApptStartTime().toString() : ""));
//				wdev-12831
			}
		}

		newRow.setValue(voCatsRef);
		
		if (voCatsRef.getCatsCurrentStatusIsNotNull()
				&& voCatsRef.getCatsCurrentStatus().equals(ReferralApptStatus.FURTHER_MANAGEMENT_REQUIRED)) 
				newRow.setBackColor(ConfigFlag.UI.FURTHER_MANAGEMENT_REQUIRED_ROW_COLOUR.getValue());
				
		if (voCatsRef.getCatsCurrentStatusIsNotNull()
				&& voCatsRef.getCatsCurrentStatus().equals(ReferralApptStatus.DISCHARGED)) 
				newRow.setBackColor(ConfigFlag.UI.DISCHARGED_ROW_COLOUR.getValue());
				
		//WDEV-6195
		if (voCatsRef.getPatientNameIsNotNull())
		{
			if(voCatsRef.getAssociatedPatientIdIsNotNull())
			{
				newRow.setBackColor(ConfigFlag.UI.MERGED_COLOUR.getValue());

				if (voCatsRef.getCatsCurrentStatusIsNotNull()
					&& voCatsRef.getCatsCurrentStatus().equals(ReferralApptStatus.FURTHER_MANAGEMENT_REQUIRED)) 
					newRow.setTextColor(ConfigFlag.UI.FURTHER_MANAGEMENT_REQUIRED_ROW_COLOUR.getValue());

				if (voCatsRef.getCatsCurrentStatusIsNotNull()
						&& voCatsRef.getCatsCurrentStatus().equals(ReferralApptStatus.DISCHARGED)) 
					newRow.setTextColor(ConfigFlag.UI.DISCHARGED_ROW_COLOUR.getValue());
			}
			
			if (voCatsRef.getPatientDODIsNotNull())
			{
				newRow.setBackColor(ConfigFlag.UI.RIP_COLOUR.getValue());			
				
				if (voCatsRef.getCatsCurrentStatusIsNotNull()
						&& voCatsRef.getCatsCurrentStatus().equals(ReferralApptStatus.FURTHER_MANAGEMENT_REQUIRED)) 
					newRow.setTextColor(ConfigFlag.UI.FURTHER_MANAGEMENT_REQUIRED_ROW_COLOUR.getValue());

				if (voCatsRef.getCatsCurrentStatusIsNotNull()
						&& voCatsRef.getCatsCurrentStatus().equals(ReferralApptStatus.DISCHARGED)) 
					newRow.setTextColor(ConfigFlag.UI.DISCHARGED_ROW_COLOUR.getValue());
			}
		}

		if (voCatsToFind != null 
			&& voCatsToFind.getCatsReferralId().equals(voCatsRef.getCatsReferralId()))
			form.dyngrdReferrals().setSelectedRow(newRow);
	}

	private void initializeDynamicGrid()
	{
		form.dyngrdReferrals().clear();
		form.dyngrdReferrals().setSelectable(true);
		
		if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
		{
			DynamicGridColumn cabColumn = form.dyngrdReferrals().getColumns().newColumn("", COLICP);
			cabColumn.setWidth(40);	
		}	

		DynamicGridColumn cabColumn = form.dyngrdReferrals().getColumns().newColumn("", COLCAB);
		cabColumn.setWidth(32);	

		DynamicGridColumn serviceColumn = null;
//		wdev-12682
		if(form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
				&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
		{
			DynamicGridColumn locColumn = form.dyngrdReferrals().getColumns().newColumn("Location", COLLOC);
			locColumn.setWidth(70);	
			locColumn.setSortMode(SortMode.AUTOMATIC);

			serviceColumn = form.dyngrdReferrals().getColumns().newColumn("Service", COLSERVICE);
			serviceColumn.setWidth(85);	
			serviceColumn.setSortMode(SortMode.AUTOMATIC);
		}
		else
		{
			serviceColumn = form.dyngrdReferrals().getColumns().newColumn("Service", COLSERVICE);
			serviceColumn.setWidth(125);	
			serviceColumn.setSortMode(SortMode.AUTOMATIC);
		}	

		DynamicGridColumn recColumn = form.dyngrdReferrals().getColumns().newColumn("", COLREVIEW);
		recColumn.setWidth(40);	
		recColumn.setAlignment(Alignment.CENTER);

		DynamicGridColumn remainingColumn = form.dyngrdReferrals().getColumns().newColumn("RTT Breach", COL20KPI);//wdev-11713//WDEV-11779 Modified to "RTT BREACH DATE"
		remainingColumn.setWidth(80);//WDEV-11779 
		remainingColumn.setSortMode(SortMode.MANUAL);

		DynamicGridColumn ubrnColumn = form.dyngrdReferrals().getColumns().newColumn("", COLIMAGE);
		ubrnColumn.setWidth(32);	
		
		DynamicGridColumn nhsnoColumn = form.dyngrdReferrals().getColumns().newColumn("NHS No.", COLNHSNO);
		nhsnoColumn.setWidth(70);		
		nhsnoColumn.setSortMode(SortMode.AUTOMATIC);
			
		DynamicGridColumn nameColumn = form.dyngrdReferrals().getColumns().newColumn("Name", COLNAME);
//		wdev-12682
		if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue() 
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
			&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
			nameColumn.setWidth(85);		
		else if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue() 
				|| (form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
					&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication()) )
			nameColumn.setWidth(85);	
		else
			nameColumn.setWidth(130);		
				
		nameColumn.setSortMode(SortMode.AUTOMATIC);

		DynamicGridColumn allocColumn = form.dyngrdReferrals().getColumns().newColumn("", COLALLOCATED);
		allocColumn.setWidth(32);		

		DynamicGridColumn statusColumn = form.dyngrdReferrals().getColumns().newColumn("Status", COLSTATUS);
		statusColumn.setWidth(150);		
		statusColumn.setSortMode(SortMode.AUTOMATIC);

		DynamicGridColumn invColumn = form.dyngrdReferrals().getColumns().newColumn("", COLINV);
		invColumn.setWidth(32);		

		DynamicGridColumn invNeedApptColumn = form.dyngrdReferrals().getColumns().newColumn("", COLINVNEEDAPPT);
		invNeedApptColumn.setWidth(32);		
		
		DynamicGridColumn bookColumn = form.dyngrdReferrals().getColumns().newColumn("", COLBOOKING);
		bookColumn.setWidth(32);	
		
		DynamicGridColumn daysleftColumn = form.dyngrdReferrals().getColumns().newColumn("", COLDAYSLEFT);
		daysleftColumn.setWidth(25);	//wdev-12831
		daysleftColumn.setSortMode(SortMode.MANUAL);//WDEV-12994
		
		form.lblTotal().setValue("Total : 0");

	}

	@Override
	protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
	{
		switch (menuItemID)
		{
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.NewReferralWizard :
				launchNewReferralWizard();
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.EDIT_REFERRAL_DETAILS :
				editReferralDetails();
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.AtConsultation :
				onConsultation();
			break; 
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.Presentation :
				onPresentation();
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.ViewDemographics :
				viewDemographics();
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.CALL_ATTEMPTS :
				viewCallAttempts();
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.ReviewRejectedInvestigations :
				viewReviewRejectedInvestigations();
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.FlagForReview :
				flagForReview(ReferralReviewDetail.RECORDING);
			break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.ReviewFlagForReviewDetail :
				flagForReview(ReferralReviewDetail.REVIEW);
			break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.NewProviderCancellation :
				newProviderCancellation();
			break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.EditProviderCancellation :
				editProviderCancellation();
			break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.UNDO_PROVIDER_CANCELLATION:
				undoProviderCancellation();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.NEWREJECTEDONWARDREFERRAL:
				newRejectedOnwardReferral();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.EDITREJECTONWARDREFERRALDETAILS:
				editRejectOnWardReferralDetails();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.StartClinicalContact:
				startMenuOption(START_CLIN);
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.StartConsultantContact:
				startMenuOption(START_CONS);
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.StartTLTContact:
				startMenuOption(START_TLT);
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.EditConsultationDetails:
				onConsultation();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.NEWONWARDREFERRAL:
				newOnwardReferral();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.END_TLT_CONTACT:
				endTLTContact();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.ViewRejectedReferralDetails:
				viewRejectedReferralDetails();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.BOOK_THEATRE_APPT:
				bookTheatreAppointment();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.REJECTED_ON_CAB: 		//wdev-8064
 				rejectedOnCAB();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.PATIENT_REJ_LETTER_SENT: //wdev-8064
				rejectionLetterSent();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.REF_IS_PROV_CANC_ON_CAB: 		//wdev-8068
 				provCancOnCAB();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.DOC_SENT_TO_PATIENT: //wdev-8068
				documentationSent();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.VIEW_DISCHARGE_SUMMARY_DETAILS: //wdev-8305
				viewDischargeSummary();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.REVIEW_SUITABLE_FOR_SURGERY: //wdev-8305
				reviewSuitableForSurgery();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.REVIEW_FIT: 
				reviewFitForSurgery();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.RESET_REJECT_REFERRAL:
				resetRejectedReferral();
				break;	
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.RESET_PROVEIDER_CANCELLATION: 
				resetProviderCancellation();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.UNDO_REFERRAL_REJECTION:
				undoReferralRejection();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.END_OF_CARE:
				endOfCareMenuOption();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.REMOVE_FROM_24HOUR:
				removefrom24HourMenuOption();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.REMOVE_FROM_CATS_ONWARD_REFERRAL_WORKLIST://wdev-12736
				removefromReferralTriageMenuOption();
				break;
			case GenForm.ContextMenus.RefManNamespace.ReferralStatusListMenu.UNDO_END_OF_CARE://WDEV-16165
				undoEndOfCare();
				break;
			default :
		}
	}
	
	//WDEV-16165
	private void undoEndOfCare()
	{
		form.getLocalContext().setIdUndoEndOfCareMessageBox(engine.showMessage("Please confirm if you wish to proceed with UNDO End of Care","Please confirm",MessageButtons.YESNO,MessageIcon.QUESTION));
	}

	private void removefrom24HourMenuOption() 
	{
		if (updateCats(TWENTYFOURHOUR_REVIEW))
			search(Boolean.TRUE, null);
	}

	private void removefromReferralTriageMenuOption() //wdev-12736
	{
		if (updateCats(REFERRAL_TRIAGE))
			search(Boolean.TRUE, null);
	}

	
	private void endOfCareMenuOption() 
	{
		CatsReferralWizardVo voRefWizard = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			voRefWizard = domain.getCatsReferralWizardVo(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else	
			voRefWizard = domain.getCatsReferralWizardVo((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());

		if (voRefWizard.getEndOfCareDate() == null
			&& voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED))
		{
			form.getGlobalContext().RefMan.setEndOfCareDate(null);
			engine.open(form.getForms().RefMan.EndofCareDlg);
		}
		else
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			search(Boolean.TRUE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
			form.getGlobalContext().RefMan.setEndOfCareDate(null);
		}
	}

	private void resetProviderCancellation()
	{
		resetCatsReferral(RESET_PROV);
	}

	private void resetCatsReferral(Integer nType) 
	{
		CatsReferralWizardVo voRefWizard = domain.getCatsReferralWizardVo(form.getGlobalContext().RefMan.getCatsReferral());
		if (voRefWizard == null)
		{
			engine.showMessage("No CATS Referral Found.");
			return;
		}

		RejectReferralVo voRejectedDetails = null;
		if (nType == RESET_REJ)
		{
			voRejectedDetails = voRefWizard.getRejectReferralDetail();
			voRejectedDetails.setIsRIE(true);

			voRefWizard.setRejectReferralDetail(null);
			voRefWizard.setWasPatientRejectionLetterSent(null);//wdev-10359
		}

		ProviderCancellationVo voProvCancellation = null;
		if (nType == RESET_PROV)
		{
			if (voRefWizard.getProviderCancellation() == null)
			{
				engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
				search(Boolean.TRUE, null);
				return;
			}
			
			voProvCancellation = domain.getProviderCancellation(voRefWizard.getProviderCancellation());
			voProvCancellation.setIsRIE(true);

			voRefWizard.setProviderCancellation(null);
			voRefWizard.setWasPatientProviderCancellationLetterSent(null);//wdev-10359
		}

		CatsReferralStatusVoCollection voCollStatus = voRefWizard.getStatusHistory();
		voCollStatus.sort(SortOrder.DESCENDING);
		
		CatsReferralStatusVo voNewCurrentStatus = voCollStatus.size() > 0 ? voCollStatus.get(1) : null;
		
		voCollStatus.remove(0); //remove latest status record
		
		if (voNewCurrentStatus.getReferralStatusIsNotNull()
			&& voNewCurrentStatus.getReferralStatus().equals(ReferralApptStatus.REFERRAL_RECEIVED)
			&& voRefWizard.getHasReferralLetterIsNotNull()
			&& voRefWizard.getHasReferralLetter())
		{
			CatsReferralStatusVo voATStatus = new CatsReferralStatusVo();
			voATStatus.setAuthoringUser((MemberOfStaffRefVo)domain.getMosUser(engine.getLoggedInUser().getUsername()));
			voATStatus.setReferralStatus(ReferralApptStatus.AWAITING_TRIAGE);
			voATStatus.setStatusDateTime(new DateTime());
			
			voCollStatus.add(voATStatus);
			
			voRefWizard.setCurrentStatus(voATStatus);//set new current status to previous status
		}
		else
			voRefWizard.setCurrentStatus(voNewCurrentStatus);//set new current status to previous status
		
		voRefWizard.setStatusHistory(voCollStatus);//reset the collection with 0 index removed.
		
		String[] error = voRefWizard.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}
		
		if (nType == RESET_REJ)
			error = voRejectedDetails.validate();
		else if (nType == RESET_PROV)
			error = voProvCancellation.validate();

		if (error != null)
		{
			engine.showErrors(error);
			return;
		}
		
		try 
	 	{
			if (nType == RESET_REJ)
				domain.resetReferralRejection(voRefWizard, voRejectedDetails);
			else if (nType == RESET_PROV)
				domain.resetProviderCancellation(voRefWizard, voProvCancellation);
		} 
	 	catch (StaleObjectException e) 
	 	{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			return;
		} 
	 	catch (DomainInterfaceException e) 
	 	{
			engine.showMessage(e.getMessage());
			return;
		} 
	 	catch (ForeignKeyViolationException e) 
		{
			engine.showMessage(e.getMessage());
			return;
		}
		search(Boolean.TRUE, null);
	}

	private void resetRejectedReferral() 
	{
		resetCatsReferral(RESET_REJ);
	}

	private void startMenuOption(Integer option)
	{
		if (form.getLocalContext().getbLessThenTodaysDateIsNotNull()
			&& form.getLocalContext().getbLessThenTodaysDate())
		{
			form.getGlobalContext().RefMan.setChosenTime(null);
			form.getLocalContext().setMenuOptionChosen(option);
			
			if (option == START_TLT)
				engine.open(form.getForms().RefMan.ArrivalSeenTimeDialog, new Object[]{"Start TLT Contact Time"} );
			else if (option == START_CONS)
				engine.open(form.getForms().RefMan.ArrivalSeenTimeDialog, new Object[]{"Start Consultant Contact Time"} );
			else if (option == START_CLIN)
				engine.open(form.getForms().RefMan.ArrivalSeenTimeDialog, new Object[]{"Start Clinical Contact Time"} );
		}
		else
		{
			form.getGlobalContext().RefMan.setChosenTime(null);
			form.getLocalContext().setMenuOptionChosen(null);
			if (option == START_TLT)
				startTLTContact();
			else if (option == START_CONS)
				startConsultantContact();
			else if (option == START_CLIN)
				startClinicalContact();
		}
	}

	private void reviewSuitableForSurgery()
	{
		if (updateCats(REVIEWED_SUITABLE))
			search(Boolean.TRUE, null);
	}

	private void reviewFitForSurgery()
	{
		if (updateCats(REVIEWED_FIT))
			search(Boolean.TRUE, null);
	}

	//	wdev-8305
	private void viewDischargeSummary() 
	{
		engine.open(form.getForms().RefMan.DischargeSummaryWardPacuDialogAlias);
	}

	//	wdev-8068
	private void documentationSent() 
	{
		if (updateCats(DOC_SENT))
			search(Boolean.TRUE, null);
	}

	//	wdev-8068
	private void provCancOnCAB() 
	{
		if (updateCats(REF_PROV_CANCEL))
			search(Boolean.TRUE, null);
	}

	//	wdev-8064
	private void rejectionLetterSent() 
	{
		if (updateCats(REJ_LETTER_SENT))
			search(Boolean.TRUE, null);
	}

	//	wdev-8064
	private void rejectedOnCAB() 
	{
		if (updateCats(REJ_ON_CAB))
				search(Boolean.TRUE, null);
	}

	private boolean updateCats(Integer nFunction) 
	{
		CatsReferralWizardVo voRefWizard = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			voRefWizard = domain.getCatsReferralWizardVo(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else	
			voRefWizard = domain.getCatsReferralWizardVo((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());

		if (voRefWizard == null)
		{
			engine.showMessage("No CATS Referral Found.");
			return false;
		}

		if (nFunction == REJ_ON_CAB)
			voRefWizard.setIsReferralRejectedOnCAB(new Boolean(true));
		else if (nFunction == REJ_LETTER_SENT)
			voRefWizard.setWasPatientRejectionLetterSent(new Boolean(true));
		else if (nFunction == REF_PROV_CANCEL)
			voRefWizard.setIsReferralRejectedOnCAB(new Boolean(true));
		else if (nFunction == DOC_SENT)
			voRefWizard.setWasPatientProviderCancellationLetterSent(new Boolean(true));
		else if (nFunction == REVIEWED_SUITABLE)
		{
			voRefWizard.setIsFitForSurgery(null);
			voRefWizard.setIsSuitableForSurgery(null);
		}
		else if (nFunction == REVIEWED_FIT)
		{
			voRefWizard.setIsFitForSurgery(null);
			voRefWizard.setIsSuitableForSurgery(null);//wdev-10193	
		}
		else if (nFunction == TWENTYFOURHOUR_REVIEW)
		{
			voRefWizard.setProcedureForPostOpReview(null);
		}
		else if (nFunction == REFERRAL_TRIAGE)//wdev-12736
		{
			voRefWizard.setIsOnwardReferralTriage(null);
		}
		
		String[] error = voRefWizard.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return false;
		}
		
		try 
	 	{
			domain.saveCatsReferral(voRefWizard);
		} 
	 	catch (StaleObjectException e) 
	 	{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			return false;
		} 
	 	catch (DomainInterfaceException e) 
	 	{
			engine.showMessage(e.getMessage());
			return false;
		}
		return true;
	}

	private void bookTheatreAppointment() 
	{
		//WDEV-12918
		if(ConfigFlag.DOM.THEATRE_SESSION_TYPE.getValue().equals("TCI"))
			engine.open(form.getForms().RefMan.BookTheatreDialog);
		else
			engine.open(form.getForms().RefMan.BookTheatreSlot);
	}

	private void viewRejectedReferralDetails() 
	{
		CatsReferralWizardVo voRefWizard = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			voRefWizard = domain.getCatsReferralWizardVo(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else	
			voRefWizard = domain.getCatsReferralWizardVo((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());

		form.getGlobalContext().RefMan.setRejectionReason(voRefWizard.getRejectReferralDetail());

		engine.open(form.getForms().RefMan.RejectionReasondialog);
	}
	
	private void endTLTContact() 
	{
		HcpLiteVo voHCPLite = null;
		if (domain.getHcpUser() != null)
		{
			Hcp hcpVo = (Hcp) domain.getHcpUser();
			voHCPLite = domain.getHcpLiteById(hcpVo);
		}
		
		ConsultationDetailsVo voCons = domain.getConsultation(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		if (voCons != null)
		{
			if (voCons.getTltTimesIsNotNull())
			{
				for (int i = 0 ; i < voCons.getTltTimes().size() ; i++)
				{
					if (voCons.getTltTimes().get(i).getEndDateTime() == null)
					{
						voCons.getTltTimes().get(i).setEndDateTime(new DateTime());
						voCons.getTltTimes().get(i).setEndTherapist(voHCPLite);
					}
				}
			}
			
			String[] error = voCons.validate();
			if (error != null)
			{
				engine.showErrors(error);
				return;
			}
			
			CatsReferralListVo voRef = null;
			if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
				voRef = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
			else	
				voRef = domain.getCatsReferral((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());
			if (voRef == null)
			{
				engine.showMessage("No CATS Referral Found. TLT Contact not started.");
				return;
			}

			voRef.setHasTLTStartContact(null);

			error = voRef.validate();
			if (error != null)
			{
				engine.showErrors(error);
				return;
			}
			
			try 
		 	{
				// WDEV-12787 - Refresh CatsReferral Global context
				form.getGlobalContext().RefMan.setCatsReferral(domain.saveConsultationAndBookingAppointmentAndCatsReferral(null, voCons, voRef));
			} 
		 	catch (StaleObjectException e) 
		 	{
				engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
				return;
			}
		 	
		 	//wdev-8699
		// 	CatsReferralListVo voCatsRef = voRef;
		//	voCatsRef.setHasTLTStartContact(null);
		//	form.dyngrdReferrals().getSelectedRow().setValue(voCatsRef);
			
			form.getContextMenus().RefMan.getReferralStatusListMenuEND_TLT_CONTACTItem().setVisible(false);
		}
		
	}


	private void newOnwardReferral() 
	{
		engine.open(form.getForms().RefMan.NewOnwardReferral);
	}

	private void startTLTContact() 
	{
		/*
		 If "Start 'TLT'Contact" is selected then a "TLT" time record needs to be created: 
		 RefMan.TltContactTime [ID: 1096100022, Type: business object] 
		 A new RefMan.TltContactTime [ID: 1096100022, Type: business object] should be added to the TltTimes collection in the RefMan.ConsultationDetails [ID: 1096100000, Type: business object] 
		(Record created with the currently logged on user and current date time)
		 */
		
		CatsReferralListVo voRef = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			voRef = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else	
			voRef = domain.getCatsReferral((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());
		if (voRef == null)
		{
			engine.showMessage("No CATS Referral Found. TLT Contact not started.");
			return;
		}
		
		//WDEV-12878 - simulate SOE
		if(voRef.getLastApptArrivedDate() == null)
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			search(Boolean.TRUE, null);
			return;
		}
		
		TLTContactTimeVo voTime = new TLTContactTimeVo();
		if (form.getGlobalContext().RefMan.getChosenTime() == null)
			voTime.setStartDateTime(new DateTime(voRef.getLastApptArrivedDate()));
		else
			voTime.setStartDateTime(new DateTime(voRef.getLastApptArrivedDate(), form.getGlobalContext().RefMan.getChosenTime()));

		HcpLiteVo voHCPLite = null;
		if (domain.getHcpUser() != null)
		{
			Hcp hcpVo = (Hcp) domain.getHcpUser();
			voHCPLite = domain.getHcpLiteById(hcpVo);
		}

		voTime.setStartTherapist(voHCPLite);
		
		ConsultationDetailsVo voCons = domain.getConsultation(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		if (voCons == null)
		{
			voCons = new ConsultationDetailsVo();
			voCons.setCATSReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
			
			AuthoringInformationVo voAuth = new AuthoringInformationVo();
			voAuth.setAuthoringDateTime(new DateTime());
			voAuth.setAuthoringHcp(voHCPLite);
			
			voCons.setAuthoringInformation(voAuth);
		}
		if (voCons.getTltTimes() == null)
			voCons.setTltTimes(new TLTContactTimeVoCollection());
		
		voCons.getTltTimes().add(voTime);
		
		String[] error = voCons.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}
		
		Booking_AppointmentShortVo voAppt = setApptAsSeen(voRef);
		if (voAppt != null)
		{
			error = voAppt.validate();
			if (error != null)
			{
				engine.showErrors(error);
				return;
			}
		}
		
		voRef.setHasConsultationDetails(Boolean.TRUE);
		voRef.setHasTLTStartContact(Boolean.TRUE);
		voRef.setLastApptArrivedDate(null);

		error = voRef.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}
		
		try 
	 	{
			// WDEV-12787 - Refresh CatsReferral Global context
			form.getGlobalContext().RefMan.setCatsReferral(domain.saveConsultationAndBookingAppointmentAndCatsReferral(voAppt, voCons, voRef));
		} 
	 	catch (StaleObjectException e) 
	 	{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			return;
		}
		engine.open(form.getForms().RefMan.AtConsultationDialog, false);

	}

	private Booking_AppointmentShortVo setApptAsSeen(CatsReferralListVo voRef)
	{
		Booking_AppointmentShortVo voAppt = domain.getArrivedBookingAppt(voRef);
		if(voAppt != null)
		{
			HcpLiteVo voHCPLite = null;
			if (domain.getHcpUser() != null)
			{
				Hcp hcpVo = (Hcp) domain.getHcpUser();
				voHCPLite = domain.getHcpLiteById(hcpVo);
			}
			
			if (form.getGlobalContext().RefMan.getChosenTime() == null)
				voAppt.setSeenTime(new Time());
			else
				voAppt.setSeenTime(form.getGlobalContext().RefMan.getChosenTime());
			
			voAppt.setSeenBy(voHCPLite);
			voAppt.setApptStatus(Status_Reason.SEEN);
			
			Appointment_StatusVo voStatus = new Appointment_StatusVo(); 
			voStatus.setApptDate(voAppt.getAppointmentDate()); 
			voStatus.setApptTime(voAppt.getApptStartTime());
			voStatus.setStatusChangeDateTime(new DateTime());
			voStatus.setStatus(Status_Reason.SEEN); 
			voAppt.setCurrentStatusRecord(voStatus); 

			if(voAppt.getApptStatusHistory() == null) 
			{
				voAppt.setApptStatusHistory(new Appointment_StatusVoCollection()); 
			}
			
			voAppt.getApptStatusHistory().add(voStatus); 
			
			voAppt.setApptStatus(Status_Reason.SEEN);
			return voAppt;
		}
		return null;
	}
	
	private void startConsultantContact() 
	{
		/*
		 * If "Start 'Consultant' Contact" is selected then the "clinical" appointment for that dat should be updated as follows: 
		 1. Scheduling.Booking_Appointment [ID: 1055100007, Type: business object] 
		 	SeenTime - Set to current time 
		 	SeenBy - Set to currently logged on user 
		 	ApptStatus = "SEEN" 
		 	ApptStatusHistory - Setup with the Status set to SEEN 
		 	2. RefMan.ConsultationTime [ID: 1096100006, Type: business object] 
		 	A new RefMan.ConsultationTime [ID: 1096100006, Type: business object] should be added to the ConsultationTimes collection in the RefMan.ConsultationDetails [ID: 1096100000, Type: business object] 
		 	(Record created with the currently logged on user and current date time) 

		 */
		
		
		//voCATSRef
		CatsReferralListVo voRef = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			voRef = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else	
			voRef = domain.getCatsReferral((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());
		if (voRef == null)
		{
			engine.showMessage("No CATS Referral Found. Consultant Contact not started.");
			return;
		}

		//WDEV-12878 - simulate SOE
		if(voRef.getLastApptArrivedDate() == null)
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			search(Boolean.TRUE, null);
			return;
		}

		ConsultationTimeVo voTime = new ConsultationTimeVo();
		if (form.getGlobalContext().RefMan.getChosenTime() == null)
			voTime.setStartDateTime(new DateTime(voRef.getLastApptArrivedDate()));
		else
			voTime.setStartDateTime(new DateTime(voRef.getLastApptArrivedDate(), form.getGlobalContext().RefMan.getChosenTime()));
		
		HcpLiteVo voHCPLite = null;
		if (domain.getHcpUser() != null)
		{
			Hcp hcpVo = (Hcp) domain.getHcpUser();
			voHCPLite = domain.getHcpLiteById(hcpVo);
		}

		voTime.setStartHcp(voHCPLite);
		
		ConsultationDetailsVo voCons = domain.getConsultation(voRef);
		if (voCons == null)
		{
			voCons = new ConsultationDetailsVo();
			voCons.setCATSReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
			
			AuthoringInformationVo voAuth = new AuthoringInformationVo();
			voAuth.setAuthoringDateTime(new DateTime());
			voAuth.setAuthoringHcp(voHCPLite);
			
			voCons.setAuthoringInformation(voAuth);
		}
		if (voCons.getConsultationTimes() == null)
			voCons.setConsultationTimes(new ConsultationTimeVoCollection());
		
		voCons.getConsultationTimes().add(voTime);
		
		String[] error = voCons.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}

		Booking_AppointmentShortVo voAppt = setApptAsSeen(voRef);
		if (voAppt != null)
		{
			error = voAppt.validate();
			if (error != null)
			{
				engine.showErrors(error);
				return;
			}
		}
		
		voRef.setHasConsultationDetails(Boolean.TRUE);
		voRef.setLastApptArrivedDate(null);

		error = voRef.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}

	 	try 
	 	{
	 		// WDEV-12787 - Refresh CatsReferral Global context
			form.getGlobalContext().RefMan.setCatsReferral(domain.saveConsultationAndBookingAppointmentAndCatsReferral(voAppt, voCons, voRef));
		} 
	 	catch (StaleObjectException e) 
	 	{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			return;
		}
		
	 	form.getGlobalContext().RefMan.setIsClinicalContactStarted(Boolean.FALSE);
	 	form.getGlobalContext().RefMan.setIsConsultationStarted(Boolean.TRUE);
		engine.open(form.getForms().RefMan.AtConsultationDialog, false); 

	}

	private void startClinicalContact() 
	{
		/*
		 If "Start 'Clinical'Contact" is selected then a "clinical" time record needs to be created: 
		 RefMan.ClinicalContactTime [ID: 1096100012, Type: business object] 
		 A new RefMan.ClinicalContactTime [ID: 1096100012, Type: business object] should be added to the ClinicalContactTimes collection in the RefMan.ConsultationDetails [ID: 1096100000, Type: business object] 
		 (Record created with the currently logged on user and current date time) 
		 */
		//voCATSRef
		CatsReferralListVo voRef = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			voRef = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else	
			voRef = domain.getCatsReferral((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());

		if (voRef == null)
		{
			engine.showMessage("No CATS Referral Found. Clinical Contact not started.");
			return;
		}
		
		// WDEV-15309
		if (voRef.getLastApptArrivedDate() == null)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			search(Boolean.TRUE, null);
			return;
		}
		
		ClinicalContactTimeVo voTime = new ClinicalContactTimeVo();
		if (form.getGlobalContext().RefMan.getChosenTime() == null)
			voTime.setStartDateTime(new DateTime(voRef.getLastApptArrivedDate()));
		else
			voTime.setStartDateTime(new DateTime(voRef.getLastApptArrivedDate(), form.getGlobalContext().RefMan.getChosenTime()));
		
		HcpLiteVo voHCPLite = null;
		if (domain.getHcpUser() != null)
		{
			Hcp hcpVo = (Hcp) domain.getHcpUser();
			voHCPLite = domain.getHcpLiteById(hcpVo);
		}

		voTime.setStartHcp(voHCPLite);
		
		ConsultationDetailsVo voCons = domain.getConsultation(voRef);
		if (voCons == null)
		{
			voCons = new ConsultationDetailsVo();
			voCons.setCATSReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
			
			AuthoringInformationVo voAuth = new AuthoringInformationVo();
			voAuth.setAuthoringDateTime(new DateTime());
			voAuth.setAuthoringHcp(voHCPLite);
			
			voCons.setAuthoringInformation(voAuth);
		}
		if (voCons.getClinicalContactTime() == null)
			voCons.setClinicalContactTime(new ClinicalContactTimeVoCollection());
		
		voCons.getClinicalContactTime().add(voTime);
		
		String[] error = voCons.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}
		
		voRef.setHasConsultationDetails(Boolean.TRUE);
		voRef.setLastApptArrivedDate(null);

		error = voRef.validate();
		if (error != null)
		{
			engine.showErrors(error);
			return;
		}

	 	try 
	 	{
    	 	// WDEV-12787 - Refresh CatsReferral Global context
    	 	form.getGlobalContext().RefMan.setCatsReferral(domain.saveConsultationAndBookingAppointmentAndCatsReferral(null, voCons, voRef));
		} 
	 	catch (StaleObjectException e) 
	 	{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			return;
		}
	 	
		form.getGlobalContext().RefMan.setIsClinicalContactStarted(Boolean.TRUE);
	 	form.getGlobalContext().RefMan.setIsConsultationStarted(Boolean.FALSE);
		engine.open(form.getForms().RefMan.AtConsultationDialog, false); 

	}

	private void editRejectOnWardReferralDetails() 
	{
		engine.open(form.getForms().RefMan.OnwardReferralRejection);
	}

	private void newRejectedOnwardReferral() 
	{
		engine.open(form.getForms().RefMan.OnwardReferralRejection);
	}

	private void editProviderCancellation()
	{		
		engine.open(form.getForms().RefMan.ProviderCancellation,new Object[]{Boolean.FALSE});		//wdev-10367
	}

	private void newProviderCancellation() 
	{
		engine.open(form.getForms().RefMan.ProviderCancellation, new Object[]{Boolean.TRUE});		//wdev-10367	
	}
	
	private void flagForReview(ReferralReviewDetail referralReviewDetail) 
	{
		form.getGlobalContext().RefMan.setReferralReviewDetailsMode(referralReviewDetail);
		engine.open(form.getForms().RefMan.ReferralReviewDetails);		
	}

	private void viewReviewRejectedInvestigations() 
	{
		engine.open(form.getForms().OCRR.RejectedInvestigationDetails);
	}

	private void viewCallAttempts()
	{
		engine.open(form.getForms().RefMan.CallAttempts);
	}

	private void viewDemographics() 
	{
		setPatientShortGlobalContext();
		engine.open(form.getForms().Core.Demographics);
	}

	private void onPresentation() 
	{
		engine.open(form.getForms().RefMan.Presentation);
	}

	private void onConsultation() 
	{
		engine.open(form.getForms().RefMan.AtConsultationDialog, false); 
	}

	private void editReferralDetails() 
	{
		setPatientShortGlobalContext();
		engine.open(form.getForms().RefMan.ReferralDetailsDialog);
	}

	private void launchNewReferralWizard() 
	{
		form.getGlobalContext().Core.setPatientToBeDisplayed(null);
		form.getGlobalContext().Core.setPatientShort(null);
		
		form.getGlobalContext().RefMan.setCatsReferral(null);
		form.getGlobalContext().RefMan.setReferralContractTypeForPatient(null);//wdev-12682
		form.getGlobalContext().RefMan.setIsProviderCancellation(false);//wdev-6163
		
		engine.open(form.getForms().RefMan.ReferralWizardDialog);		
	}

	private void setPatientShortGlobalContext()
	{
		CatsReferralListVo vo = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		form.getGlobalContext().Core.setPatientShort(domain.getPatientShort(vo.getPatient()));
	}


	@Override
	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException 
	{
		
		if (result.equals(DialogResult.OK) 
			&& formName.equals(form.getForms().RefMan.ArrivalSeenTimeDialog))
		{
			if(form.getLocalContext().getMenuOptionChosenIsNotNull())
			{
				if(form.getLocalContext().getMenuOptionChosen().equals(START_TLT))
					startTLTContact();
				else if(form.getLocalContext().getMenuOptionChosen().equals(START_CONS))
					startConsultantContact();
				else if(form.getLocalContext().getMenuOptionChosen().equals(START_CLIN))
					startClinicalContact();
			}
		}

 		if (formName.equals(form.getForms().RefMan.ReferralWizardDialog))
		{
 			if(form.getGlobalContext().RefMan.getReferralStatusListFilterIsNotNull())//WDEV-14108 
 			{ 
 				search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
 			}
			if (form.dyngrdReferrals().getSelectedRow() != null)
				rowSelectionChanged(); // wdev-6414
		}
 		
 		if (formName.equals(form.getForms().RefMan.ReferralDetailsDialog)
			|| formName.equals(form.getForms().RefMan.ReferralReviewDetails) || formName.equals(form.getForms().RefMan.ProviderCancellation))
		{			
			if( form.cmbWorklistStatus().getValue() != null 
					&& (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVISIONAL_REJECTION)
						|| form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FLAGGED_FOR_REVIEW)) )
				search(Boolean.TRUE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
			else
				search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);

			//WDEV-8324
			if ( formName.equals(form.getForms().RefMan.ProviderCancellation) 
				&& form.dyngrdReferrals().getSelectedRow() != null )
			{
   				CatsReferralListVo vo = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
				if (vo.getProviderCancellationIsNotNull() )
   			 		form.getGlobalContext().RefMan.setIsProviderCancellation(true);
			}
		}	
		if(formName.equals(form.getForms().RefMan.OnwardReferralRejection) && result.equals(DialogResult.OK))
		{
			search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		if(formName.equals(form.getForms().RefMan.NewOnwardReferral) && result.equals(DialogResult.OK))
		{
			search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		if(formName.equals(form.getForms().RefMan.AtConsultationDialog) && result.equals(DialogResult.OK))
		{
			form.getGlobalContext().RefMan.setSpecimenWorkListItemForReports(null);//wdev-14125
			search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		
		if(formName.equals(form.getForms().RefMan.RejectionReasondialog)
			&& result.equals(DialogResult.OK))
		{
			updateRejectionDetails(form.getGlobalContext().RefMan.getRejectionReason());
			
			if (form.getGlobalContext().RefMan.getPrintRejectionLettersIsNotNull()
				&& form.getGlobalContext().RefMan.getPrintRejectionLetters())
				printRejectionLetters();

			search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		if(formName.equals(form.getForms().RefMan.BookTheatreDialog) && (result.equals(DialogResult.OK) || result.equals(DialogResult.CANCEL))) //wdev-11843
		{
			search(Boolean.TRUE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		//wdev-8305
		if(formName.equals(form.getForms().RefMan.DischargeSummaryWardPacuDialogAlias))
		{
			search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}

		//wdev-8480  WDEV-10550 screen to refresh for cancel and x button in case changed by other session
		if(formName.equals(form.getForms().RefMan.AllocateTasksDialog))
		{
			search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}

		//wdev-10282
		if( (formName.equals(form.getForms().RefMan.BookTheatre) 
			|| formName.equals(form.getForms().RefMan.BookTheatreSlot))//wdev-13904
			&& result.equals(DialogResult.OK))
		{
			search(Boolean.TRUE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		
		//wdev-11875
		if(formName.equals(form.getForms().RefMan.EndofCareDlg) && result.equals(DialogResult.OK))
		{
			search(Boolean.TRUE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
			form.getGlobalContext().RefMan.setEndOfCareDate(null);
		}
		//wdev-11875

		if (form.dyngrdReferrals().getValue() != null && form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			updateContextMenus(domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0)));
		else
			updateContextMenus(form.dyngrdReferrals().getValue() != null && form.dyngrdReferrals().getSelectedRow().getValue() != null ? (CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
	}


	private void updateRejectionDetails(RejectReferralVo rejectionReason)
	{
		CatsReferralWizardVo voRefWizard = domain.getCatsReferralWizardVo(form.getGlobalContext().RefMan.getCatsReferral());
		
		voRefWizard.setRejectReferralDetail(rejectionReason);
		
		String[] arrErrors = voRefWizard.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}

		try 
		{
			voRefWizard = domain.saveCatsReferral(voRefWizard);
		} 
		catch (DomainInterfaceException e) 
		{
			engine.showMessage(e.getMessage());
			return;
		} 
		catch (StaleObjectException e) 
		{			
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			return;
		}
		
	}

	private void printRejectionLetters() 
	{
		engine.open(form.getForms().RefMan.PrinterSelectionDialog);
		form.getGlobalContext().RefMan.setReferralOutcomeReportType(ReferralOutcomeReportType.REJECTIONS);

		form.getGlobalContext().RefMan.setPrintRejectionLetters(Boolean.FALSE);
	}

	@Override
	protected void onDyngrdReferralsCellButtonClicked(DynamicGridCell cell) 
	{
		form.dyngrdReferrals().setSelectedRow(cell.getRow());
		rowSelectionChanged();
		
		form.getGlobalContext().RefMan.setOpenApptAndInvTab(Boolean.FALSE);
		if(cell.getColumn().equals(getColumn(COLBOOKING)) 
				|| cell.getColumn().equals(getColumn(COLINV)))
		{
			form.getGlobalContext().RefMan.setOpenApptAndInvTab(Boolean.TRUE);
			engine.open(form.getForms().RefMan.ReferralDetailsDialog); 
		}
		if(cell.getColumn().equals(getColumn(COLALLOCATED))) 
			engine.open(form.getForms().RefMan.AllocatedTaskDialog); 

		if(cell.getColumn().equals(getColumn(COLREVIEW)))
		{
			form.getGlobalContext().RefMan.setReferralReviewDetailsMode(ReferralReviewDetail.REVIEW);
			engine.open(form.getForms().RefMan.ReferralReviewDetails);		
		}
	}

	@Override
	protected void onDyngrdReferralsRowSelectionChanged(DynamicGridRow row) 
	{
		rowSelectionChanged();
	}

	private void rowSelectionChanged() 	
	{
		form.getGlobalContext().RefMan.setIsProviderCancellation(false);//wdev-6163		
		
		form.getLocalContext().setSelectedBookingAppt(null);
		CatsReferralListVo vo = null;
		if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
			vo = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
		else
			vo = domain.getCatsReferral((CatsReferralListVo)form.dyngrdReferrals().getValue());
			
		updateContextMenus(vo);
		
		form.getGlobalContext().Core.setCurrentCareContext(domain.getCareContextShort(vo.getCareContext()));
		form.getGlobalContext().RefMan.setCatsReferral((CatsReferralRefVo) vo);
		form.getGlobalContext().RefMan.setReferralContractTypeForPatient(vo.getContractIsNotNull() ? vo.getContract().getContractType() : null);
		setPatientShortGlobalContext();
		
		resetPIDBarText(); //WDEV-14660 

		//wdev-6163
		if (vo.getProviderCancellationIsNotNull())
			form.getGlobalContext().RefMan.setIsProviderCancellation(true);
	}

	//WDEV-14660
	private void resetPIDBarText() 
	{
		if (form.getGlobalContext().Core.getPatientShort() == null)
			return;

		new ResetPIDBarHelper(engine, form.getGlobalContext().Core.getPatientShort() , domain.getPIDDiagnosisInfo(form.getGlobalContext().Core.getCurrentCareContext(), form.getGlobalContext().Core.getCurrentCareContext().getEpisodeOfCare()));
		
	}

	@Override
	protected void onRadioButtonGroup1ValueChanged() throws PresentationLogicException 
	{
		displayServiceDOSandClinicControls();
	}

	private void displayServiceDOSandClinicControls() 
	{
		form.cmbSpec().setVisible(true);

		if (form.Group1().getValue().equals(Group1Enumeration.rdoAll)) 
		{
			form.cmbDOS().setVisible(false);
			form.lblDOS().setVisible(false);
			form.cmbClinic().setVisible(false);
			form.lblClinic().setVisible(false);
		}
		
		if (form.Group1().getValue().equals(Group1Enumeration.rdoCAB)) 
		{
			form.cmbDOS().setVisible(true);
			form.lblDOS().setVisible(true);
			form.cmbClinic().setVisible(false);
			form.lblClinic().setVisible(false);
		}

		if (form.Group1().getValue().equals(Group1Enumeration.rdoManual)) 
		{
			form.cmbDOS().setVisible(false);
			form.lblDOS().setVisible(false);
			form.cmbClinic().setVisible(true);
			form.lblClinic().setVisible(true);
		}
	}

	@Override
	protected void onCmbSpecValueChanged() throws PresentationLogicException 
	{
		specialtyValueChanged();
		//wdev-13652
		if(ReferralWorklistStatus.CONSULTATION_APPOINTMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.OTHER_APPOINTMENTS_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.REVIEW_APPOINTMENTS.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.FURTHER_MANAGMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.ORDERINV_ACCEPTED_APPT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) )
		{
			if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
			{
				getLocationsServices();
			}
		}
	}

	private void specialtyValueChanged() 
	{
		form.cmbClinic().clear();
		if (form.cmbSpec().getValue() != null)
		{	
			ServiceFunctionLiteVoCollection voColl = domain.listServiceFunctionsLite(form.cmbSpec().getValue());
			for (int i = 0 ; voColl != null && i < voColl.size() ; i++)
				form.cmbClinic().newRow(voColl.get(i), voColl.get(i).getFunction().getText());
		}
	}

	@Override
	protected void onCmbWorklistStatusValueChanged() throws PresentationLogicException 
	{
		hideExtraFilterControls();
		
		showExtraFilterControls();
	}

	private void hideExtraFilterControls() 
	{
		form.cmbReason().setVisible(false);
		form.lblReason().setVisible(false);
		//wdev-9912
		form.cmbSecondOpinion().setVisible(false);
		form.lblSecondOpinionReason().setVisible(false);
		//wdev-8433
		form.cmbReportsRequiredSubCategory().setVisible(false);
		form.lblReportsRequired().setVisible(false);
		//wdev-8482
		form.cmbTLTType().setVisible(false);
		form.lblTLT().setVisible(false);
		//wdev-8484
		form.cmbOnwardReferralReason().setVisible(false);
		form.lblOnwardReason1().setVisible(false);

		form.cmbReportsRequired().setVisible(false);
		form.lblNoteType().setVisible(false);

		form.ccMOS().setVisible(false);
		form.lblMOS().setVisible(false);

		//WDEV-11692 - starts here
		form.cmbOPDSite().setVisible(false);
		form.dteSfSFrom().setVisible(false);
		form.dteSfSTo().setVisible(false);
		form.lblOPD().setVisible(false);
		form.lblSfSFrom().setVisible(false);
		form.lblSfSTo().setVisible(false);
		//WDEV-11692 - ends here
		
		//wdev-11889
		form.qmbProcedure().setVisible(false);
		form.lblProcedure().setVisible(false);
		//wdev-11889

		//wdev-12110
		form.dteDischargeDateFrom().setVisible(false);
		form.dteDischargeDateTo().setVisible(false);
		form.lblDischargeDateFrom().setVisible(false);
		form.lblDischargeDateTo().setVisible(false);
		//wdev-12110
		//wdev-13652
		form.cmbTreatmentCentre().setVisible(false);
		form.lblCentre().setVisible(false);
		form.lblTreatment().setVisible(false);
		//----------

	}

	private void showExtraFilterControls() 
	{
		if (form.cmbWorklistStatus().getValue() != null) 
		{
			if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FLAGGED_FOR_REVIEW))
			{
				form.cmbReason().setVisible(true);
				form.cmbReason().setValue(null);
				form.lblReason().setVisible(true);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVIDER_CANCELLATION))
				form.chkExcludeProvCancel().setValue(Boolean.FALSE);
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.REPORTS_REQUIRED_WORKLIST)) 		//wdev-8433
			{
				form.cmbReportsRequiredSubCategory().setVisible(true);
				form.cmbReportsRequiredSubCategory().setValue(null);
				form.lblReportsRequired().setVisible(true);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVISIONAL_REJECTION)) 		//wdev-8433
			{
				form.cmbSecondOpinion().setVisible(true);
				form.cmbSecondOpinion().setValue(null);
				form.lblSecondOpinionReason().setVisible(true);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.FURTHER_MANAGEMENT_REQUIRED_TLT)) 		//wdev-8433
			{   //wdev-8482
				form.cmbTLTType().setVisible(true);
				form.cmbTLTType().setValue(null);
				form.lblTLT().setVisible(true);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.ONWARD_REFERRAL_WORKLIST)) 		//wdev-8433
			{   
				//wdev-8484
				form.cmbOnwardReferralReason().setVisible(true);
				form.cmbOnwardReferralReason().setValue(null);
				form.lblOnwardReason1().setVisible(true);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.RefMan_REPORTS_REQUIRED_WORKLIST)) 		//wdev-8993
			{   
				form.cmbReportsRequired().setVisible(true);
				form.cmbReportsRequired().setValue(null);
				form.lblNoteType().setVisible(true);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.MY_ALLOCATED_WORKLIST)) 		//wdev-9383
			{   
				form.ccMOS().initialize(MosType.ALL);
				
				form.ccMOS().setValue( ((IMos)domain.getMosUser(engine.getLoggedInUser().getUsername())));

				form.ccMOS().setVisible(true);
				form.lblMOS().setVisible(true);
				
				form.ccMOS().isRequired(Boolean.TRUE);
			}
			else if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVISIONAL_REJECTION)) 		//wdev-8993
			{   
				form.cmbReportsRequired().setVisible(true);
				form.cmbReportsRequired().setValue(null);
				form.lblNoteType().setVisible(true);
			}
			//WDEV-11692 - starts here
			else if (ReferralWorklistStatus.FIT_FOR_SURGERY_NEED_APPT.equals(form.cmbWorklistStatus().getValue()))
			{
				form.cmbOPDSite().setVisible(true);
				setCurrentLocationForOPDSite();	
				
				form.dteSfSFrom().setVisible(true);
				form.dteSfSFrom().setValue(null);
				form.dteSfSTo().setVisible(true);
				form.dteSfSTo().setValue(null);
				
				form.lblOPD().setVisible(true);
				form.lblSfSFrom().setVisible(true);
				form.lblSfSTo().setVisible(true);
			}
			
			//WDEV-13765 - starts here
			else if (ReferralWorklistStatus.OP_PROCEDURE_AWAITING_APPOINTMENT.equals(form.cmbWorklistStatus().getValue()))
			{
				form.cmbOPDSite().setVisible(true);
				setCurrentLocationForOPDSite();	
				
				form.dteSfSFrom().setVisible(true);
				form.dteSfSFrom().setValue(null);
				form.dteSfSTo().setVisible(true);
				form.dteSfSTo().setValue(null);
				
				form.lblOPD().setVisible(true);
				form.lblSfSFrom().setVisible(true);
				form.lblSfSTo().setVisible(true);
			}
			
			//wdev-11889
			else if (ReferralWorklistStatus.TWENTYFOUR_HOUR_POST_OP.equals(form.cmbWorklistStatus().getValue()))
			{
				form.qmbProcedure().setVisible(true);
				form.lblProcedure().setVisible(true);
			}			
			//wdev-12110
			else if (ReferralWorklistStatus.DISCHARGE_REPORT_WORKLIST.equals(form.cmbWorklistStatus().getValue()))
			{
				form.dteDischargeDateFrom().setVisible(true);
				form.dteDischargeDateTo().setVisible(true);
				form.dteDischargeDateFrom().setValue(null);
				form.dteDischargeDateTo().setValue(null);
				form.lblDischargeDateFrom().setVisible(true);
				form.lblDischargeDateTo().setVisible(true);
			}
			//wdev-13652
			else if(ReferralWorklistStatus.CONSULTATION_APPOINTMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.OTHER_APPOINTMENTS_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.REVIEW_APPOINTMENTS.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.FURTHER_MANAGMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.ORDERINV_ACCEPTED_APPT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) )
			{
				if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
				{
					form.cmbTreatmentCentre().setVisible(true);
					form.lblCentre().setVisible(true);
					form.lblTreatment().setVisible(true);
					getLocationsServices();
				}
			}
		}
	}
	//wdev-13652
	private void getLocationsServices()
	{
		form.cmbTreatmentCentre().clear();
		if(form.cmbContract().getValue() != null && form.cmbSpec().getValue() != null)
		{
			ContractServiceLocationsConfigVoCollection tempVoColl = domain.listLocationServiceByContractAndService(form.cmbContract().getValue(),form.cmbSpec().getValue());
			populateTreatmentCentreCombo(tempVoColl);
		}
		else if(form.cmbContract().getValue() != null && form.cmbSpec().getValue() == null)
		{
			ContractServiceLocationsConfigVoCollection tempVoColl = domain.listLocationServiceByContract(form.cmbContract().getValue());
			populateTreatmentCentreCombo(tempVoColl);
		}
		/*else if (form.cmbContract().getValue() == null && form.cmbSpec().getValue() != null)
		{
			ContractServiceLocationsConfigVoCollection tempVoColl = domain.listLocationServicesByServiceId(form.cmbSpec().getValue());
			populateTreatmentCentreCombo(tempVoColl);
		}*/
		/*else
		{
			ContractServiceLocationsConfigVoCollection tempVoColl = domain.listLocationServices();
			populateTreatmentCentreCombo(tempVoColl);
			
		}*/
	}
	//wdev-13652
	private void populateTreatmentCentreCombo(ContractServiceLocationsConfigVoCollection tempVoColl)
	{
		if(tempVoColl != null && tempVoColl.size() > 0)
		{
			ContractServiceLocationsConfigVoCollection locserVoColl = new ContractServiceLocationsConfigVoCollection();
			for(int i = 0; i < tempVoColl.size();i++)
			{
				ContractServiceLocationsConfigVo tempVo = tempVoColl.get(i);
				if(tempVo == null)
					continue;
				if(checIfLocationIsalreadyInCombo(locserVoColl,tempVo) == false)
				{
					locserVoColl.add(tempVo);
					form.cmbTreatmentCentre().newRow(tempVo, tempVo.getLocation().getName());
				}
			}
		}
	}
	//wdev-13652
	private boolean checIfLocationIsalreadyInCombo(ContractServiceLocationsConfigVoCollection locserVoColl,ContractServiceLocationsConfigVo tempVo)
	{
		if(locserVoColl == null || locserVoColl.size() == 0)
			return false;
		for(int i = 0; i < locserVoColl.size();i++)
		{
			ContractServiceLocationsConfigVo tempSerLocVo = locserVoColl.get(i);
			if(tempSerLocVo == null)
				continue;
			if(tempSerLocVo.getLocationIsNotNull() && tempVo.getLocationIsNotNull() && tempSerLocVo.getLocation().getID_Location().equals(tempVo.getLocation().getID_Location()) )
				return true;
		}
		return false;
	}

	//WDEV-11692 - starts here
	private void setCurrentLocationForOPDSite() 
	{
		form.cmbOPDSite().setValue(null);
		
		if(engine.getCurrentLocation() != null)
		{
			for(int i=0;i<form.cmbOPDSite().getValues().size(); i++)
			{
				if(((LocationRefVo)form.cmbOPDSite().getValues().get(i)).getID_Location().equals(engine.getCurrentLocation().getID()))
				{
					form.cmbOPDSite().setValue((LocationRefVo)form.cmbOPDSite().getValues().get(i));
					break;
				}
			}
		}
	}
	//WDEV-11692 - ends here
	
	@Override
	protected void onChkExcludeProvCancelValueChanged() throws PresentationLogicException 
	{
		if (form.cmbWorklistStatus().getValue() != null) 
		{
			if (form.cmbWorklistStatus().getValue().equals(ReferralWorklistStatus.PROVIDER_CANCELLATION))
				form.chkExcludeProvCancel().setValue(Boolean.FALSE);
		}
	}
	@Override
	protected void onBtnAllocateClick() throws PresentationLogicException 
	{
		if (form.getGlobalContext().RefMan.getReferralStatusListFilterIsNotNull())
			engine.open(form.getForms().RefMan.AllocateTasksDialog);
	}

	@Override
	protected void onDyngrdReferralsColumnHeaderClicked(DynamicGridColumn column) 
	{
		if (column.equals(getColumn(COL20KPI)))
		{
			if(form.getLocalContext().getSortOrder20DayKpi() == null)
				form.getLocalContext().setSortOrder20DayKpi(SortOrder.ASCENDING);
			
			CatsReferralListManualAssemblyVoCollection voColl = new CatsReferralListManualAssemblyVoCollection();
			
			for (int i = 0 ; i < form.dyngrdReferrals().getRows().size() ; i++)
				voColl.add(((CatsReferralListManualAssemblyVo) form.dyngrdReferrals().getRows().get(i).getValue()));	
			
			if(form.getLocalContext().getSortOrder20DayKpi().equals(SortOrder.ASCENDING))
			{
				form.getLocalContext().setSortOrder20DayKpi(SortOrder.DESCENDING);
				voColl.sort(SortOrder.DESCENDING);
			}
			else if(form.getLocalContext().getSortOrder20DayKpi().equals(SortOrder.DESCENDING))
			{
				form.getLocalContext().setSortOrder20DayKpi(SortOrder.ASCENDING);
				voColl.sort(SortOrder.ASCENDING);
			}
				
			populateGrid(voColl, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
		else if(column.equals(getColumn(COLDAYSLEFT)))//WDEV-12994
		{
			if (form.getLocalContext().getSortOrderDaysLeft() == null || !form.getLocalContext().getSortOrderDaysLeft().equals(SortOrder.ASCENDING))
				form.getLocalContext().setSortOrderDaysLeft(SortOrder.ASCENDING);
			else
				form.getLocalContext().setSortOrderDaysLeft(SortOrder.DESCENDING);
			
			populateGrid(sortGridByDaysLeft(), form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
		}
	}

	//WDEV-12994
	private CatsReferralListManualAssemblyVoCollection sortGridByDaysLeft()
	{
		CatsReferralListManualAssemblyVoCollection voColl = new CatsReferralListManualAssemblyVoCollection();
		
		for (int i = 0 ; i < form.dyngrdReferrals().getRows().size() ; i++)
			voColl.add(((CatsReferralListManualAssemblyVo) form.dyngrdReferrals().getRows().get(i).getValue()));
		
		voColl.sort(new DaysLeftComparator(form.getLocalContext().getSortOrderDaysLeft()));
		
		return voColl;
	}

	@Override
	protected void onCmbContractValueChanged() throws PresentationLogicException
	{
		loadLocations();
		//wdev-13652
		if(ReferralWorklistStatus.CONSULTATION_APPOINTMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.OTHER_APPOINTMENTS_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.REVIEW_APPOINTMENTS.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.FURTHER_MANAGMENT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) || ReferralWorklistStatus.ORDERINV_ACCEPTED_APPT_REQUIRED.equals(form.cmbWorklistStatus().getValue()) )
		{
			if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
			{
				getLocationsServices();
			}
		}
	}
	
	private void undoProviderCancellation()
	{
		//wdev-10367
		if (form.dyngrdReferrals().getSelectedRow() != null)
		{
			CatsReferralListVo voCatsRef = null;
			if (form.dyngrdReferrals().getValue() instanceof CatsReferralListManualAssemblyVo)
				voCatsRef = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
			else	
				voCatsRef = domain.getCatsReferral((CatsReferralListVo)form.dyngrdReferrals().getSelectedRow().getValue());
			
			if(voCatsRef.getCurrentStatusIsNotNull() && !ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(voCatsRef.getCurrentStatus().getReferralStatus()))
			{
				engine.showMessage("UNDO of this Provider Cancellation was made by another User.");
				search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null);
				return;
			}
		}
		//--------------
		form.getLocalContext().setIdUndoCancelProviderMessageBox(engine.showMessage("Please confirm if you wish to proceed with the UNDO of this Provider Cancellation","Please confirm",MessageButtons.YESNO,MessageIcon.QUESTION));
	}
	private void undoReferralRejection()
	{
		form.getLocalContext().setIdUndoReferralRejectionMessageBox(engine.showMessage("Please confirm if you wish to proceed with the UNDO of this Referral Rejection","Please confirm",MessageButtons.YESNO,MessageIcon.QUESTION));
		
	}


	@Override
	protected void onMessageBoxClosed(int messageBoxId, DialogResult result) throws PresentationLogicException
	{
		if (DialogResult.YES.equals(result))
		{
    		if (form.getLocalContext().getIdUndoCancelProviderMessageBoxIsNotNull()
    				&& form.getLocalContext().getIdUndoCancelProviderMessageBox() == messageBoxId)
    		{
    			try
    			{
    				//WDEV-12088 - starts here
    				ReferralNoteVo referralNote = populateReferralNote();
    				String[] referralNoteErrors = referralNote.validate();
    				if(referralNoteErrors != null && referralNoteErrors.length > 0)
    				{
    					engine.showErrors(referralNoteErrors);
    					return;
    				}
    				//WDEV-12088 - ends here
    				CatsReferralListVo vo = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
    				if (!(vo.getCurrentStatusIsNotNull() && 
    						ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(vo.getCurrentStatus().getReferralStatus())))
    				{
    	   				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
    	   				search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null); //wdev-10367
    	   				return;
    				}

    				domain.undoProviderCancellation(vo, referralNote); //WDEV-12088
    			}
    			catch (StaleObjectException e)
    			{
    				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
    			}
    			catch (ForeignKeyViolationException e)
    			{
    				engine.showMessage(e.getMessage());
    			}
    			
    		}
    		else if (form.getLocalContext().getIdUndoReferralRejectionMessageBoxIsNotNull() && form.getLocalContext().getIdUndoReferralRejectionMessageBox() == messageBoxId)
    		{
    				try
        			{
    	   				CatsReferralListVo vo = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
        				domain.undoReferralRejection(vo);
        			}
        			catch (StaleObjectException e)
        			{
        				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
        			}
        			catch (ForeignKeyViolationException e)
        			{
        				engine.showMessage(e.getMessage());
        			}
    		}
       		//WDEV-16165
    		else if(form.getLocalContext().getIdUndoEndOfCareMessageBoxIsNotNull() && form.getLocalContext().getIdUndoEndOfCareMessageBox() == messageBoxId)
    		{	
    			try
    			{
	   				CatsReferralListVo vo = domain.getCatsReferral(new CatsReferralRefVo(((CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getValue()).getCatsReferralId(), 0));
	   				
	   				if (ReferralApptStatus.END_OF_CARE.equals(vo.getCurrentStatus().getReferralStatus()))
	   				{	
	   					domain.undoEndOfCare(vo);
	   				}
	   				else
	   				{
	   					engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
	   				}	
    			}
    			catch (StaleObjectException e)
    			{
    				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
    			}
    			catch (ForeignKeyViolationException e)
    			{
    				engine.showMessage(e.getMessage());
    			}
    		}
    		
		}
		search(Boolean.FALSE, form.dyngrdReferrals().getSelectedRow() != null ? (CatsReferralListManualAssemblyVo)form.dyngrdReferrals().getSelectedRow().getValue() : null); //wdev-10367
		
	}

	//WDEV-12088
	private ReferralNoteVo populateReferralNote() 
	{
		ReferralNoteVo voNote = new ReferralNoteVo();
		
		voNote.setCareContext(form.getGlobalContext().Core.getCurrentCareContext());//wdev-17849
		
		Object voMos = domain.getMosUser();
		if (voMos instanceof MemberOfStaffLiteVo)
			voNote.setRecordingUser((MemberOfStaffLiteVo) voMos);
		
		voNote.setRecordingDateTime(new DateTime());
		voNote.setNoteType(ReferralNoteType.NON_CLINICAL);	
		
		String note = "UNDO PROVIDER CANCELLATION";
		
		voNote.setNote(note);
		
		return voNote;
	}

	@Override
	protected void onQmbProcedureTextSubmited(String value) throws PresentationLogicException 
	{
		ProcedureLiteVoCollection voColl = null;
		try 
		{
			voColl = domain.listProcedures(value);
		} 
		catch (DomainInterfaceException e) 
		{
			engine.showMessage(e.getMessage());
			return;
		}		
		if (voColl != null && voColl.size() > 0)
		{
			form.qmbProcedure().clear();
			for(int i = 0 ; i < voColl.size() ; i++)
				form.qmbProcedure().newRow(voColl.get(i), voColl.get(i).getProcedureName());
			
			if (voColl.size() == 1)
				form.qmbProcedure().setValue(voColl.get(0));
			else
				form.qmbProcedure().showOpened();
		}
		else
			form.qmbProcedure().setEditedText("");
	}
	//wdev-10875
	public class DosComparator implements Comparator
	{
		private int direction = 1;
		
		public DosComparator()
		{
			this(SortOrder.ASCENDING);
		}
		
		public DosComparator(SortOrder order)
		{
			if (order == SortOrder.DESCENDING)
				direction = -1;
			
		}
		public int compare(Object ob1, Object ob2) 
		{
			String strname1 = null;
			String strname2 = null;
			if(ob1 instanceof DirectoryOfServiceLiteVo )
			{
				DirectoryOfServiceLiteVo ps1 = (DirectoryOfServiceLiteVo)ob1;
				strname1 = ps1.getDoSName();
			}
			if(ob2 instanceof DirectoryOfServiceLiteVo)
			{
				DirectoryOfServiceLiteVo ps2 = (DirectoryOfServiceLiteVo)ob2;
				strname2 = ps2.getDoSName();
			}
			if(strname1 != null )
				return  strname1.compareToIgnoreCase(strname2)*direction;
			if(strname2 != null)
				return (-1)*direction;
			
			return 0;
		}
	
	}
	
	//WDEV-129943
	public class DaysLeftComparator implements Comparator
	{
		private int direction = 1;
		
		public DaysLeftComparator()
		{
			this(SortOrder.ASCENDING);
		}
		
		public DaysLeftComparator(SortOrder order)
		{
			if (order == SortOrder.DESCENDING)
			{
				direction = -1;
			}
		}
		
		public int compare(Object c1, Object c2)
		{
			Integer daysLeft1 = null;
			Integer daysLeft2 = null;
			
			if(c1 instanceof CatsReferralListManualAssemblyVo)
			{
				CatsReferralListManualAssemblyVo referral1 = ((CatsReferralListManualAssemblyVo) c1);
				daysLeft1 = referral1.getDaysLeft();
			}
			
			if(c2 instanceof CatsReferralListManualAssemblyVo)
			{
				CatsReferralListManualAssemblyVo referral2 = ((CatsReferralListManualAssemblyVo) c2);
				daysLeft2 = referral2.getDaysLeft();
			}
			
			if(daysLeft1 == null)
				return -1*direction;
			
			if(daysLeft2 == null)
				return direction;
			
			return daysLeft1.compareTo(daysLeft2)*direction;
		}
	}
}
