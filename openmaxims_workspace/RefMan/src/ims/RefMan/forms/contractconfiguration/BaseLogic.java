// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.contractconfiguration;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.RefMan.domain.ContractConfiguration.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.RefMan.domain.ContractConfiguration domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected final void oncmbSTypeValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.cmbSType().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.ReferralManagementContractType existingInstance = (ims.core.vo.lookups.ReferralManagementContractType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbSTypeLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.ReferralManagementContractType)
		{
			ims.core.vo.lookups.ReferralManagementContractType instance = (ims.core.vo.lookups.ReferralManagementContractType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbSTypeLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.ReferralManagementContractType existingInstance = (ims.core.vo.lookups.ReferralManagementContractType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.cmbSType().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbSTypeLookup()
	{
		this.form.cmbSType().clear();
		ims.core.vo.lookups.ReferralManagementContractTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getReferralManagementContractType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.cmbSType().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbSTypeLookupValue(int id)
	{
		ims.core.vo.lookups.ReferralManagementContractType instance = ims.core.vo.lookups.LookupHelper.getReferralManagementContractTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.cmbSType().setValue(instance);
	}
	protected final void defaultcmbSTypeLookupValue()
	{
		this.form.cmbSType().setValue((ims.core.vo.lookups.ReferralManagementContractType)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.ReferralManagementContractType.class, engine.getFormName().getID(), ims.core.vo.lookups.ReferralManagementContractType.TYPE_ID));
	}
	protected final void oncmbSStatusValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.cmbSStatus().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.PreActiveActiveInactiveStatus existingInstance = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbSStatusLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.PreActiveActiveInactiveStatus)
		{
			ims.core.vo.lookups.PreActiveActiveInactiveStatus instance = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbSStatusLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.PreActiveActiveInactiveStatus existingInstance = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.cmbSStatus().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbSStatusLookup()
	{
		this.form.cmbSStatus().clear();
		ims.core.vo.lookups.PreActiveActiveInactiveStatusCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getPreActiveActiveInactiveStatus(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.cmbSStatus().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbSStatusLookupValue(int id)
	{
		ims.core.vo.lookups.PreActiveActiveInactiveStatus instance = ims.core.vo.lookups.LookupHelper.getPreActiveActiveInactiveStatusInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.cmbSStatus().setValue(instance);
	}
	protected final void defaultcmbSStatusLookupValue()
	{
		this.form.cmbSStatus().setValue((ims.core.vo.lookups.PreActiveActiveInactiveStatus)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.PreActiveActiveInactiveStatus.class, engine.getFormName().getID(), ims.core.vo.lookups.PreActiveActiveInactiveStatus.TYPE_ID));
	}
	protected final void oncmbContractTypeValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnDetails().lyrDetails().tabPage1().cmbContractType().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.ReferralManagementContractType existingInstance = (ims.core.vo.lookups.ReferralManagementContractType)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbContractTypeLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.ReferralManagementContractType)
		{
			ims.core.vo.lookups.ReferralManagementContractType instance = (ims.core.vo.lookups.ReferralManagementContractType)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbContractTypeLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.ReferralManagementContractType existingInstance = (ims.core.vo.lookups.ReferralManagementContractType)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnDetails().lyrDetails().tabPage1().cmbContractType().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbContractTypeLookup()
	{
		this.form.ctnDetails().lyrDetails().tabPage1().cmbContractType().clear();
		ims.core.vo.lookups.ReferralManagementContractTypeCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getReferralManagementContractType(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnDetails().lyrDetails().tabPage1().cmbContractType().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbContractTypeLookupValue(int id)
	{
		ims.core.vo.lookups.ReferralManagementContractType instance = ims.core.vo.lookups.LookupHelper.getReferralManagementContractTypeInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnDetails().lyrDetails().tabPage1().cmbContractType().setValue(instance);
	}
	protected final void defaultcmbContractTypeLookupValue()
	{
		this.form.ctnDetails().lyrDetails().tabPage1().cmbContractType().setValue((ims.core.vo.lookups.ReferralManagementContractType)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.ReferralManagementContractType.class, engine.getFormName().getID(), ims.core.vo.lookups.ReferralManagementContractType.TYPE_ID));
	}
	protected final void oncmbStatusValueSet(Object value)
	{
		java.util.ArrayList listOfValues = this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().getValues();

		if(value == null)
		{
			if(listOfValues != null && listOfValues.size() > 0)
			{
				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.PreActiveActiveInactiveStatus existingInstance = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)listOfValues.get(x);
					if(!existingInstance.isActive())
					{
						bindcmbStatusLookup();
						return;
					}
				}
			}
		}
		else if(value instanceof ims.core.vo.lookups.PreActiveActiveInactiveStatus)
		{
			ims.core.vo.lookups.PreActiveActiveInactiveStatus instance = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)value;

			if(listOfValues != null)
			{
				if(listOfValues.size() == 0)
					bindcmbStatusLookup();

				for(int x = 0; x < listOfValues.size(); x++)
				{
					ims.core.vo.lookups.PreActiveActiveInactiveStatus existingInstance = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)listOfValues.get(x);
					if(existingInstance.equals(instance))
						return;
				}
			}

			this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().newRow(instance, instance.getText(), instance.getImage(), instance.getTextColor());
		}
	}
	protected final void bindcmbStatusLookup()
	{
		this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().clear();
		ims.core.vo.lookups.PreActiveActiveInactiveStatusCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getPreActiveActiveInactiveStatus(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected final void setcmbStatusLookupValue(int id)
	{
		ims.core.vo.lookups.PreActiveActiveInactiveStatus instance = ims.core.vo.lookups.LookupHelper.getPreActiveActiveInactiveStatusInstance(this.domain.getLookupService(), id);
		if(instance != null)
			this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().setValue(instance);
	}
	protected final void defaultcmbStatusLookupValue()
	{
		this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().setValue((ims.core.vo.lookups.PreActiveActiveInactiveStatus)domain.getLookupService().getDefaultInstance(ims.core.vo.lookups.PreActiveActiveInactiveStatus.class, engine.getFormName().getID(), ims.core.vo.lookups.PreActiveActiveInactiveStatus.TYPE_ID));
	}
	protected final void bindgrdDetailsColumnStatusLookup()
	{
		this.form.grdDetails().ColumnStatusComboBox().clear();
		ims.core.vo.lookups.PreActiveActiveInactiveStatusCollection lookupCollection = ims.core.vo.lookups.LookupHelper.getPreActiveActiveInactiveStatus(this.domain.getLookupService());
		for(int x = 0; x < lookupCollection.size(); x++)
		{
			this.form.grdDetails().ColumnStatusComboBox().newRow(lookupCollection.get(x), lookupCollection.get(x).getText(), lookupCollection.get(x).getImage(), lookupCollection.get(x).getTextColor());
		}
	}
	protected void clearScreen()
	{
		this.form.ctnDetails().lyrDetails().tabPage1().intnoto1().setValue(null);
		this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().setValue(null);
		this.form.ctnDetails().lyrDetails().tabPage1().cmbOrganisation().setValue(null);
		this.form.ctnDetails().lyrDetails().tabPage1().txtName().setValue("");
		this.form.ctnDetails().lyrDetails().tabPage1().txtID().setValue("");
	}
	protected void populateScreenFromData(ims.RefMan.vo.ContractConfigVo value)
	{
		clearScreen();
		if(value == null)
			return;

		this.form.ctnDetails().lyrDetails().tabPage1().intnoto1().setValue(value.getDaysTo1stApptIsNotNull() ? value.getDaysTo1stAppt() : null);
		this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().setValue(value.getStatusIsNotNull() ? value.getStatus() : null);
		this.form.ctnDetails().lyrDetails().tabPage1().cmbOrganisation().setValue(value.getContractOrganisationIsNotNull() ? value.getContractOrganisation() : null);
		this.form.ctnDetails().lyrDetails().tabPage1().txtName().setValue(value.getContractNameIsNotNull() ? value.getContractName(): null);
		this.form.ctnDetails().lyrDetails().tabPage1().txtID().setValue(value.getContractIdIsNotNull() ? value.getContractId(): null);
	}
	protected ims.RefMan.vo.ContractConfigVo populateDataFromScreen(ims.RefMan.vo.ContractConfigVo value)
	{
		if(value == null)
			value = new ims.RefMan.vo.ContractConfigVo();

		value.setDaysTo1stAppt(this.form.ctnDetails().lyrDetails().tabPage1().intnoto1().getValue());
		value.setStatus(this.form.ctnDetails().lyrDetails().tabPage1().cmbStatus().getValue());
		value.setContractOrganisation(this.form.ctnDetails().lyrDetails().tabPage1().cmbOrganisation().getValue());
		value.setContractName(this.form.ctnDetails().lyrDetails().tabPage1().txtName().getValue());
		value.setContractId(this.form.ctnDetails().lyrDetails().tabPage1().txtID().getValue());

		return value;
	}
	protected ims.RefMan.vo.ContractConfigVo populateDataFromScreen()
	{
		return populateDataFromScreen(new ims.RefMan.vo.ContractConfigVo());
	}
	public void initialize() throws ims.framework.exceptions.FormOpenException
	{
	}
	public boolean allowNew()
	{
		return form.getMode() == ims.framework.enumerations.FormMode.VIEW && !form.isReadOnly();
	}
	public boolean allowUpdate()
	{
		return form.getMode() == ims.framework.enumerations.FormMode.VIEW && !form.isReadOnly();
	}
	public String[] validateUIRules()
	{
		return null;
	}
	public void clear()
	{
	}
	public void search()
	{
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.RefMan.domain.ContractConfiguration domain;
}
