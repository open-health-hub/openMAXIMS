// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseBookTheatreSlotDetailDialogImpl extends DomainImpl implements ims.RefMan.domain.BookTheatreSlotDetailDialog, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatesaveTheatreBooking(ims.scheduling.vo.Sch_BookingTheatreVo booking, ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.SessionParentChildSlotRefVoCollection voCollChildSlots, ims.scheduling.vo.SessionParentChildSlotVo voSessParentChildSlot, ims.scheduling.vo.lookups.TheatreType theatreType, ims.RefMan.vo.ReferralERODForBookTheatreVo regerralEROD, ims.RefMan.vo.PatientElectiveListVo patientElectiveListToSave)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingTheatreAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPatientICP(ims.core.admin.vo.CareContextRefVo careContext)
	{
		if(careContext == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'careContext' of type 'ims.core.admin.vo.CareContextRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesavePatientICP(ims.icp.vo.PatientICPFullVo icp)
	{
		if(icp == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'icp' of type 'ims.icp.vo.PatientICPFullVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatehasTheatreEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferralERODByAppointment(ims.scheduling.vo.Booking_AppointmentRefVo apptRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsReferralRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistWardsForCurrentLocation(ims.framework.interfaces.ILocation location)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveList(ims.core.patient.vo.PatientRefVo patientRef, ims.RefMan.vo.CatsReferralRefVo catsRef, ims.core.clinical.vo.ServiceRefVo serviceRef, ims.core.clinical.vo.ProcedureRefVo procedureRef, String listIdHcp, ims.RefMan.vo.CatsReferralForNewElectivListEntryVo catsReferralWithPathwayClock, Boolean nonDiagnosticELE)
	{
	}

	@SuppressWarnings("unused")
	public void validategetHCPMin(ims.core.resource.people.vo.HcpRefVo hcpRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetHCPLiteVo(ims.core.resource.people.vo.HcpRefVo hcpRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveListsOnFormOpen(ims.RefMan.vo.CatsReferralRefVo catsRef, ims.core.clinical.vo.ServiceRefVo serviceRef, String listIdHcp, Boolean nonDiagnosticELE, ims.RefMan.vo.CatsReferralForNewElectivListEntryVo getPatientElectiveList)
	{
	}

	@SuppressWarnings("unused")
	public void validategetElectiveListConfigurationOnFormOpen(ims.core.clinical.vo.ServiceRefVo serviceRef, ims.core.resource.place.vo.LocationRefVo locationRef, String listIdHcp)
	{
	}

	@SuppressWarnings("unused")
	public void validategetParentHospitalLocation(ims.core.vo.LocationLiteVo wardLoc)
	{
	}
}
