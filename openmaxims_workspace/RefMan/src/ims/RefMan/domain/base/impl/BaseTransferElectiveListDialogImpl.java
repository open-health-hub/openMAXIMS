// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseTransferElectiveListDialogImpl extends DomainImpl implements ims.RefMan.domain.TransferElectiveListDialog, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetElectiveListEntries(ims.admin.vo.ServiceForElectiveListConfigVo service, Integer electivelistId, String electivelistcode, ims.core.vo.HcpLiteVo consultant, ims.framework.utils.Date datefrom, ims.framework.utils.Date dateto, ims.core.vo.lookups.WaitingListStatus status, Boolean showAdmitted, Boolean showSuspended)
	{
	}

	@SuppressWarnings("unused")
	public void validategetElectiveListConfigurations(ims.admin.vo.ElectiveListConfigSearchCriteriaVo voFilter, Boolean other)
	{
		if(voFilter == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'voFilter' of type 'ims.admin.vo.ElectiveListConfigSearchCriteriaVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistConsultants(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServices(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatetransferToElectiveList(ims.RefMan.vo.PatientElevectiveListManagementVoCollection sourceElEntries, ims.RefMan.vo.ElectiveListConfigurationLiteVo targetElectiveList)
	{
		if(sourceElEntries == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'sourceElEntries' of type 'ims.RefMan.vo.PatientElevectiveListManagementVoCollection' cannot be null.");
		if(targetElectiveList == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'targetElectiveList' of type 'ims.RefMan.vo.ElectiveListConfigurationLiteVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistElectiveListConfiguration(ims.core.vo.lookups.Specialty specialty, ims.core.resource.place.vo.LocationRefVo locationRef, String listIdHcp, String electiveListName)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistOtherElectiveListConfiguration(ims.core.clinical.vo.ServiceRefVo serviceRef, ims.core.vo.lookups.Specialty specialty, String listIdHcp, String electiveListName)
	{
	}
}
