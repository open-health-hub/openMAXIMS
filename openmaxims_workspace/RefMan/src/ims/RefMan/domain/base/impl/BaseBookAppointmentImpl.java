// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseBookAppointmentImpl extends DomainImpl implements ims.RefMan.domain.BookAppointment, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistSessionSlot(ims.scheduling.vo.Sch_SessionRefVoCollection session, ims.core.resource.place.vo.ActivityRefVo activity)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveBooking(ims.scheduling.vo.Sch_BookingVo booking, ims.RefMan.vo.CatsReferralRefVo catsReferral, Boolean isRebook)
	{
		if(booking == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'booking' of type 'ims.scheduling.vo.Sch_BookingVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistSession(ims.framework.utils.Date startDate, ims.framework.utils.Date endDate, ims.core.vo.ActivityVo activity, ims.core.clinical.vo.ServiceRefVo service, ims.core.resource.place.vo.LocationRefVo location, ims.core.vo.HcpLiteVo listOwner, ims.core.clinical.vo.ServiceFunctionRefVo clinicType, ims.core.resource.place.vo.LocationRefVoCollection locationList)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActivitiesForType(ims.core.vo.lookups.ActivityType actType, ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
		if(actType == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'actType' of type 'ims.core.vo.lookups.ActivityType' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistBookingAppointment(ims.scheduling.vo.Sch_SessionRefVo session)
	{
		if(session == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'session' of type 'ims.scheduling.vo.Sch_SessionRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatehasBookingRights(ims.framework.interfaces.IAppRole role, ims.scheduling.vo.Sch_SessionRefVo session)
	{
		if(session == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'session' of type 'ims.scheduling.vo.Sch_SessionRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCurrentMonth(ims.core.vo.ActivityVo activity, ims.core.clinical.vo.ServiceRefVo service, ims.core.resource.place.vo.LocationRefVo location, ims.core.clinical.vo.ServiceFunctionRefVo clinicType, ims.core.resource.place.vo.LocationRefVoCollection locationList)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferralDetail(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistServiceFunctionsLite(ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSch_BookingByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistProfileLiteByService(ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddSlotToSession(ims.scheduling.vo.SessionShortVo session, ims.scheduling.vo.SessionSlotVo slot)
	{
		if(session == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'session' of type 'ims.scheduling.vo.SessionShortVo' cannot be null.");
		if(slot == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'slot' of type 'ims.scheduling.vo.SessionSlotVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistSessionSlot(ims.scheduling.vo.Sch_SessionRefVo session)
	{
	}

	@SuppressWarnings("unused")
	public void validateprocessAppointmentForPukkaJ(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatecancelAppointmentForPukkaJ(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPatientICP(ims.core.admin.vo.CareContextRefVo careCOntextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientICP(ims.icp.vo.PatientICPFullVo pateintICPVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatecreateOrder(ims.RefMan.domain.objects.CatsReferral doCatsReferral, ims.scheduling.domain.objects.Booking_Appointment doAppt)
	{
		if(doCatsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'doCatsReferral' of type 'ims.RefMan.domain.objects.CatsReferral' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistLocationLiteForReferralContract(ims.RefMan.vo.CatsReferralRefVo referral)
	{
		if(referral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'referral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasSafetyQuestionnarie(ims.RefMan.vo.CatsReferralRefVo referral, ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionSlot(ims.scheduling.vo.Session_SlotRefVo slot)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLastOutpatientEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveBooking(ims.scheduling.vo.Sch_BookingVo voBooking, ims.RefMan.vo.CatsReferralRefVo catsRef, Boolean isRebook, ims.RefMan.vo.ReferralERODForBookAppointmentVoCollection outpatientERODCollection, Boolean isERODUpdatedOnBooking)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferralERODByAppointment(ims.scheduling.vo.Booking_AppointmentRefVo apptRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatecheckIfThereIsFirstApptPerClock(ims.RefMan.vo.CatsReferralRefVo catsReferral, Boolean areFirstAppointmentsLocally, ims.scheduling.vo.SessionSlotListVo sessionSlot)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistClinicsListOwners(ims.core.vo.HcpFilter filter)
	{
	}
}
