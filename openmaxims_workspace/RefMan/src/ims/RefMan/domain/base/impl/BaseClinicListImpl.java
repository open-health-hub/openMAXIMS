// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseClinicListImpl extends DomainImpl implements ims.RefMan.domain.ClinicList, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistSession(ims.core.vo.ServiceShortVo service, ims.core.vo.ServiceFunctionVoCollection functionColl, ims.scheduling.vo.ProfileShortVo profile, ims.framework.utils.Date sessionDate)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistService(ims.core.vo.ServiceShortVo serviceShort)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServiceFunctions(ims.core.vo.ServiceShortVo serviceShort)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistSessionSlots(ims.scheduling.vo.SessionShortVo session, Integer[] sessionIds)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingPatient(ims.scheduling.vo.Booking_AppointmentVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProfiles(ims.framework.interfaces.ILocation location, ims.framework.utils.Date date)
	{
	}

	@SuppressWarnings("unused")
	public void validatednaAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelSlot(ims.scheduling.vo.SessionSlotVo sessionSlot, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource)
	{
	}

	@SuppressWarnings("unused")
	public void validatereOpenSlot(ims.scheduling.vo.SessionSlotVo sessionSlot)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistFlexibleBookings(ims.scheduling.vo.Sch_SessionRefVo session)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointments(ims.scheduling.vo.Sch_SessionRefVo session, Integer[] sessionIds, ims.scheduling.vo.lookups.Status_Reason apptType)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveAppointment(ims.scheduling.vo.Booking_AppointmentVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesaveCareSpell(ims.core.vo.CareSpellVo voCareSpell)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPASCode(ims.core.vo.ActivityVo activity)
	{
	}

	@SuppressWarnings("unused")
	public void validatesendRequestandUpdateReferences(ims.domain.DomainFactory factory, ims.chooseandbook.vo.lookups.ActionRequestType requestType, ims.domain.DomainObject domObject, String requestSource)
	{
		if(factory == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'factory' of type 'ims.domain.DomainFactory' cannot be null.");
		if(requestType == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'requestType' of type 'ims.chooseandbook.vo.lookups.ActionRequestType' cannot be null.");
		if(domObject == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'domObject' of type 'ims.domain.DomainObject' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralForAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralWizardForAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetConsultationDetailsForCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveConsultationDetails(ims.RefMan.vo.ConsultationDetailsVo consultation)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveConsultationAndReferralAndAppt(ims.RefMan.vo.ConsultationDetailsVo voConsultation, ims.RefMan.vo.CatsReferralListVo voReferral, ims.scheduling.vo.Booking_AppointmentVo voAppt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.RefMan.vo.CatsReferralRefVo voReferralRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextShort(ims.core.admin.vo.CareContextRefVo voCareContextRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatient(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralCancelStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationByOrganisation(ims.core.resource.place.vo.OrganisationRefVo orgId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOrganisationByLocation(Integer locationId)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointments(ims.scheduling.vo.Sch_SessionRefVoCollection sessions, ims.scheduling.vo.lookups.Status_Reason apptType)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionSlot(ims.scheduling.vo.Session_SlotRefVo slotRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetAppointment(ims.scheduling.vo.Session_SlotRefVo session)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveAppointmentForDNA(ims.scheduling.vo.Booking_AppointmentVo appt, ims.RefMan.vo.CatsReferralForClinicListVo catsReferral, ims.scheduling.vo.SessionSlotClinicListListVo sessionSlot, ims.RefMan.vo.PatientElectiveListForDNAAppointmentsVo electiveList, Boolean isFirstApptActivityforDNA)
	{
	}

	@SuppressWarnings("unused")
	public void validateisThereAnyDiagnosticContractsForThisSite(ims.core.resource.place.vo.OrganisationRefVo voOrg)
	{
	}

	@SuppressWarnings("unused")
	public void validategetArrivedBookingAppt(ims.RefMan.vo.CatsReferralListVo catsReferralRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasLocationDiagnosticContract(ims.core.resource.place.vo.LocationRefVo location)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasTCI(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveList(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}
}
