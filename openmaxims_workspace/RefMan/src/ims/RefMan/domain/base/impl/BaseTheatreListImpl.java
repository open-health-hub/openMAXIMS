// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseTheatreListImpl extends DomainImpl implements ims.RefMan.domain.TheatreList, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistActiveHospitals(ims.core.resource.people.vo.MemberOfStaffRefVo memberOfStaff)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistTheatresForHospital(ims.core.resource.place.vo.LocationRefVo hospital)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistSession(ims.framework.utils.Date sessionDate, ims.core.resource.people.vo.HcpRefVo listOwner, ims.core.resource.place.vo.LocationRefVo hospital, ims.scheduling.vo.lookups.TheatreType theatreType)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointments(ims.scheduling.vo.Sch_SessionRefVo session)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointments(ims.core.resource.people.vo.HcpRefVo hcp, ims.core.resource.people.vo.MemberOfStaffRefVo mosUser, ims.framework.utils.Date date)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientShort(ims.core.patient.vo.PatientRefVo voPatientRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppt(ims.scheduling.vo.Booking_AppointmentRefVo bookingApptRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAllAppointments(ims.RefMan.vo.TheatreListFilterVo filterVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetProcedureLOS(ims.core.clinical.vo.ProcedureRefVo procedureRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionOrder(ims.scheduling.vo.Sch_SessionRefVo schSessionRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.scheduling.vo.Booking_AppointmentRefVo voBookingRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validateisReferralAccepted(ims.scheduling.vo.Booking_AppointmentRefVo voBookingRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validateisNotACurrentInpatient(ims.core.patient.vo.PatientRefVo voPatRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveTheatreAppointment(ims.RefMan.vo.TheatreListBookingAppointmentVo appt, ims.RefMan.vo.CatsReferralWizardVo voCatsReferral, ims.scheduling.vo.SessionTheatreTCISlotLiteVo sessionSlot, ims.RefMan.vo.PatientElectiveListForDNAAppointmentsVo electiveList)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.RefMan.vo.TheatreListBookingAppointmentVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetSessionSlot(ims.scheduling.vo.SessionTheatreTCISlotRefVo sessionSlot)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralRef(ims.scheduling.vo.Booking_AppointmentRefVo voBookingRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetInpatientEpisode(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTheatreServiceProcedureAndConsultant(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralCancelStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralForCancel(ims.scheduling.vo.Booking_AppointmentRefVo appointmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointmentTheatre(ims.scheduling.vo.Booking_AppointmentRefVo appRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferralWithRttDate(ims.scheduling.vo.Booking_AppointmentRefVo appRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelTCIAndReferralEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo apptRef, Boolean isProviderCancellation, Boolean isPatientCancellation, Boolean cancelledfornonmedicalreason)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasTCI(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveList(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}
}
