// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 4121.17238)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.RefMan.domain.impl;

import ims.RefMan.domain.base.impl.BaseClinicalOutcomeCategoryProcedureRequiredConfigImpl;
import ims.RefMan.domain.objects.ClinicalOutcomeCategoryProcedureRequiredConfig;
import ims.RefMan.vo.ClinicalOutcomeCategoryProcedureRequiredConfigVo;
import ims.RefMan.vo.ClinicalOutcomeCategoryProcedureRequiredConfigVoCollection;
import ims.RefMan.vo.domain.ClinicalOutcomeCategoryProcedureRequiredConfigVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.domain.exceptions.UnqViolationUncheckedException;

public class ClinicalOutcomeCategoryProcedureRequiredConfigImpl extends BaseClinicalOutcomeCategoryProcedureRequiredConfigImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* Function used to retrieve all saved records.
	*/
	public ims.RefMan.vo.ClinicalOutcomeCategoryProcedureRequiredConfigVoCollection listClinicalOutcomeConfig()
	{
		String query = "select outcome from ClinicalOutcomeCategoryProcedureRequiredConfig as outcome where outcome.isRIE is null";
		
		return ClinicalOutcomeCategoryProcedureRequiredConfigVoAssembler.createClinicalOutcomeCategoryProcedureRequiredConfigVoCollectionFromClinicalOutcomeCategoryProcedureRequiredConfig(getDomainFactory().find(query));
	}

	/**
	* Save clinical outcome configuration
	*/
	public void saveClinicalOutcomeConfig(ClinicalOutcomeCategoryProcedureRequiredConfigVoCollection clinicalOutcomeConfiguration) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException
	{
		try
		{
			// Check for valid record
			if (clinicalOutcomeConfiguration == null)
				throw new DomainRuntimeException("Can not save null record");

			// Check record for validation
			if (!clinicalOutcomeConfiguration.isValidated())
				throw new DomainRuntimeException("Can not save record not validated");

			// Get domain factory
			DomainFactory factory = getDomainFactory();

			// Extract ICP domain object
			for (ClinicalOutcomeCategoryProcedureRequiredConfigVo outcomeConfigVo : clinicalOutcomeConfiguration)
			{
				ClinicalOutcomeCategoryProcedureRequiredConfig domainOutcome = ClinicalOutcomeCategoryProcedureRequiredConfigVoAssembler.extractClinicalOutcomeCategoryProcedureRequiredConfig(factory, outcomeConfigVo);

				// Save domain object
				factory.save(domainOutcome);
			}
		}
		catch (UnqViolationUncheckedException exception)
		{
			throw new UniqueKeyViolationException(exception.getMessage(), exception.getCause());
		}
	}
}
