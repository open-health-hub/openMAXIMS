// This code was generated by Calin Perebiceanu using IMS Development Environment (version 1.80 build 4161.27134)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.RefMan.domain.impl;

import ims.RefMan.domain.base.impl.BaseTheatreTrackingIdleConfigImpl;
import ims.RefMan.domain.objects.TheatreTrackingIdleConfig;
import ims.RefMan.vo.domain.TheatreTrackingIdleConfigVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.DomainObject;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;

public class TheatreTrackingIdleConfigImpl extends BaseTheatreTrackingIdleConfigImpl
{

	private static final long serialVersionUID = 1L;

	public ims.RefMan.vo.TheatreTrackingIdleConfigVo get()
	{
		DomainObject firstDo = getDomainFactory().findFirst("from TheatreTrackingIdleConfig");
		if (firstDo == null)
			return null;
		return TheatreTrackingIdleConfigVoAssembler.create((TheatreTrackingIdleConfig) firstDo);
	}

	public ims.RefMan.vo.TheatreTrackingIdleConfigVo save(ims.RefMan.vo.TheatreTrackingIdleConfigVo record) throws ims.domain.exceptions.StaleObjectException
	{
		if (!record.isValidated())
		{
			throw new CodingRuntimeException("Record not validated");
		}
		DomainFactory df = getDomainFactory();
		if (!record.getID_TheatreTrackingIdleConfigIsNotNull())
		{
			long norec = df.countWithHQL("select count(ttic.id) from TheatreTrackingIdleConfig ttic", new String[]{}, new Object[]{}); 
			if (norec > 0)
			{
				throw new StaleObjectException(null);
			}
		}
			
		TheatreTrackingIdleConfig doObj = TheatreTrackingIdleConfigVoAssembler.extractTheatreTrackingIdleConfig(df, record);
		df.save(doObj);
		return TheatreTrackingIdleConfigVoAssembler.create(doObj);
	}
}
