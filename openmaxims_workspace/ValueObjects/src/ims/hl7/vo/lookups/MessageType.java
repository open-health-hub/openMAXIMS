//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.hl7.vo.lookups;

import ims.framework.cn.data.TreeNode;
import java.util.ArrayList;
import ims.framework.utils.Image;
import ims.framework.utils.Color;

public class MessageType extends ims.vo.LookupInstVo implements TreeNode
{
	private static final long serialVersionUID = 1L;

	public MessageType()
	{
		super();
	}
	public MessageType(int id)
	{
		super(id, "", true);
	}
	public MessageType(int id, String text, boolean active)
	{
		super(id, text, active, null, null, null);
	}
	public MessageType(int id, String text, boolean active, MessageType parent, Image image)
	{
		super(id, text, active, parent, image);
	}
	public MessageType(int id, String text, boolean active, MessageType parent, Image image, Color color)
	{
		super(id, text, active, parent, image, color);
	}
	public MessageType(int id, String text, boolean active, MessageType parent, Image image, Color color, int order)
	{
		super(id, text, active, parent, image, color, order);
	}
	public static MessageType buildLookup(ims.vo.LookupInstanceBean bean)
	{
		return new MessageType(bean.getId(), bean.getText(), bean.isActive());
	}
	public String toString()
	{
		if(getText() != null)
			return getText();
		return "";
	}
	public TreeNode getParentNode()
	{
		return (MessageType)super.getParentInstance();
	}
	public MessageType getParent()
	{
		return (MessageType)super.getParentInstance();
	}
	public void setParent(MessageType parent)
	{
		super.setParentInstance(parent);
	}
	public TreeNode[] getChildren()
	{
		ArrayList children = super.getChildInstances();
		MessageType[] typedChildren = new MessageType[children.size()];
		for (int i = 0; i < children.size(); i++)
		{
			typedChildren[i] = (MessageType)children.get(i);
		}
		return typedChildren;
	}
	public int addChild(TreeNode child)
	{
		if (child instanceof MessageType)
		{
			super.addChild((MessageType)child);
		}
		return super.getChildInstances().size();
	}
	public int removeChild(TreeNode child)
	{
		if (child instanceof MessageType)
		{
			super.removeChild((MessageType)child);
		}
		return super.getChildInstances().size();
	}
	public Image getExpandedImage()
	{
		return super.getImage();
	}
	public Image getCollapsedImage()
	{
		return super.getImage();
	}
	public static ims.framework.IItemCollection getNegativeInstancesAsIItemCollection()
	{
		MessageTypeCollection result = new MessageTypeCollection();
		result.add(ADT);
		result.add(A01);
		result.add(A02);
		result.add(A03);
		result.add(A04);
		result.add(A05);
		result.add(A08);
		result.add(A10);
		result.add(A11);
		result.add(A13);
		result.add(A21);
		result.add(A22);
		result.add(A28);
		result.add(A29);
		result.add(A31);
		result.add(A34);
		result.add(A38);
		result.add(A40);
		result.add(A47);
		result.add(A52);
		result.add(A53);
		result.add(OCS);
		result.add(O01);
		result.add(O02);
		result.add(O13);
		result.add(O19);
		result.add(O20);
		result.add(R01);
		result.add(MFN);
		result.add(M02);
		result.add(M05);
		result.add(PPG);
		result.add(PCG);
		result.add(MDM);
		result.add(T02);
		return result;
	}
	public static MessageType[] getNegativeInstances()
	{
		MessageType[] instances = new MessageType[35];
		instances[0] = ADT;
		instances[1] = A01;
		instances[2] = A02;
		instances[3] = A03;
		instances[4] = A04;
		instances[5] = A05;
		instances[6] = A08;
		instances[7] = A10;
		instances[8] = A11;
		instances[9] = A13;
		instances[10] = A21;
		instances[11] = A22;
		instances[12] = A28;
		instances[13] = A29;
		instances[14] = A31;
		instances[15] = A34;
		instances[16] = A38;
		instances[17] = A40;
		instances[18] = A47;
		instances[19] = A52;
		instances[20] = A53;
		instances[21] = OCS;
		instances[22] = O01;
		instances[23] = O02;
		instances[24] = O13;
		instances[25] = O19;
		instances[26] = O20;
		instances[27] = R01;
		instances[28] = MFN;
		instances[29] = M02;
		instances[30] = M05;
		instances[31] = PPG;
		instances[32] = PCG;
		instances[33] = MDM;
		instances[34] = T02;
		return instances;
	}
	public static String[] getNegativeInstanceNames()
	{
		String[] negativeInstances = new String[35];
		negativeInstances[0] = "ADT";
		negativeInstances[1] = "A01";
		negativeInstances[2] = "A02";
		negativeInstances[3] = "A03";
		negativeInstances[4] = "A04";
		negativeInstances[5] = "A05";
		negativeInstances[6] = "A08";
		negativeInstances[7] = "A10";
		negativeInstances[8] = "A11";
		negativeInstances[9] = "A13";
		negativeInstances[10] = "A21";
		negativeInstances[11] = "A22";
		negativeInstances[12] = "A28";
		negativeInstances[13] = "A29";
		negativeInstances[14] = "A31";
		negativeInstances[15] = "A34";
		negativeInstances[16] = "A38";
		negativeInstances[17] = "A40";
		negativeInstances[18] = "A47";
		negativeInstances[19] = "A52";
		negativeInstances[20] = "A53";
		negativeInstances[21] = "OCS";
		negativeInstances[22] = "O01";
		negativeInstances[23] = "O02";
		negativeInstances[24] = "O13";
		negativeInstances[25] = "O19";
		negativeInstances[26] = "O20";
		negativeInstances[27] = "R01";
		negativeInstances[28] = "MFN";
		negativeInstances[29] = "M02";
		negativeInstances[30] = "M05";
		negativeInstances[31] = "PPG";
		negativeInstances[32] = "PCG";
		negativeInstances[33] = "MDM";
		negativeInstances[34] = "T02";
		return negativeInstances;
	}
	public static MessageType getNegativeInstance(String name)
	{
		if(name == null)
			return null;
		String[] negativeInstances = getNegativeInstanceNames();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].equals(name))
				return getNegativeInstances()[i];
		}
		return null;
	}
	public static MessageType getNegativeInstance(Integer id)
	{
		if(id == null)
			return null;
		MessageType[] negativeInstances = getNegativeInstances();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].getID() == id)
				return negativeInstances[i];
		}
		return null;
	}
	public int getTypeId()
	{
		return TYPE_ID;
	}
	public static final int TYPE_ID = 1411000;
	public static final MessageType ADT = new MessageType(-1926, "ADT", true, null, null, Color.Default);
	public static final MessageType A01 = new MessageType(-1927, "A01", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A02 = new MessageType(-1928, "A02", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A03 = new MessageType(-1929, "A03", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A04 = new MessageType(-1930, "A04", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A05 = new MessageType(-1931, "A05", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A08 = new MessageType(-1932, "A08", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A10 = new MessageType(-1933, "A10", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A11 = new MessageType(-1934, "A11", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A13 = new MessageType(-1935, "A13", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A21 = new MessageType(-1936, "A21", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A22 = new MessageType(-1937, "A22", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A28 = new MessageType(-1938, "A28", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A29 = new MessageType(-1939, "A29", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A31 = new MessageType(-1940, "A31", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A34 = new MessageType(-1941, "A34", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A38 = new MessageType(-1942, "A38", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A40 = new MessageType(-1943, "A40", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A47 = new MessageType(-1944, "A47", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A52 = new MessageType(-1945, "A52", true, MessageType.ADT, null, Color.Default);
	public static final MessageType A53 = new MessageType(-1946, "A53", true, MessageType.ADT, null, Color.Default);
	public static final MessageType OCS = new MessageType(-1947, "OCS", true, null, null, Color.Default);
	public static final MessageType O01 = new MessageType(-1948, "O01", true, MessageType.OCS, null, Color.Default);
	public static final MessageType O02 = new MessageType(-1949, "O02", true, MessageType.OCS, null, Color.Default);
	public static final MessageType O13 = new MessageType(-1950, "O13", true, MessageType.OCS, null, Color.Default);
	public static final MessageType O19 = new MessageType(-1951, "O19", true, MessageType.OCS, null, Color.Default);
	public static final MessageType O20 = new MessageType(-1952, "O20", true, MessageType.OCS, null, Color.Default);
	public static final MessageType R01 = new MessageType(-1953, "R01", true, MessageType.OCS, null, Color.Default);
	public static final MessageType MFN = new MessageType(-1954, "MFN", true, null, null, Color.Default);
	public static final MessageType M02 = new MessageType(-1955, "M02", true, MessageType.MFN, null, Color.Default);
	public static final MessageType M05 = new MessageType(-1956, "M05", true, MessageType.MFN, null, Color.Default);
	public static final MessageType PPG = new MessageType(-1957, "PPG", true, null, null, Color.Default);
	public static final MessageType PCG = new MessageType(-1958, "PCG", true, MessageType.PPG, null, Color.Default);
	public static final MessageType MDM = new MessageType(-2178, "MDM", true, null, null, Color.Default);
	public static final MessageType T02 = new MessageType(-2179, "T02", true, MessageType.MDM, null, Color.Default);
}
