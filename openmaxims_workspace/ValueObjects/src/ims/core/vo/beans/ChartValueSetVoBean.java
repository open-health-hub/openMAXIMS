//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo.beans;

public class ChartValueSetVoBean extends ims.vo.ValueObjectBean
{
	public ChartValueSetVoBean()
	{
	}
	public ChartValueSetVoBean(ims.core.vo.ChartValueSetVo vo)
	{
		this.maxfactor = vo.getMaxFactor();
		this.minfactor = vo.getMinFactor();
		this.belowbandpercent = vo.getBelowBandPercent();
		this.abovebandpercent = vo.getAboveBandPercent();
		this.groups = vo.getGroups() == null ? null : vo.getGroups().getBeanCollection();
		this.title = vo.getTitle();
		this.subtitle = vo.getSubTitle();
		this.normalbandcolor = vo.getNormalBandColor() == null ? null : (ims.framework.utils.beans.ColorBean)vo.getNormalBandColor().getBean();
		this.backgroundcolor = vo.getBackgroundColor() == null ? null : (ims.framework.utils.beans.ColorBean)vo.getBackgroundColor().getBean();
		this.foregroundcolor = vo.getForegroundColor() == null ? null : (ims.framework.utils.beans.ColorBean)vo.getForegroundColor().getBean();
		this.description = vo.getDescription();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.ChartValueSetVo vo)
	{
		this.maxfactor = vo.getMaxFactor();
		this.minfactor = vo.getMinFactor();
		this.belowbandpercent = vo.getBelowBandPercent();
		this.abovebandpercent = vo.getAboveBandPercent();
		this.groups = vo.getGroups() == null ? null : vo.getGroups().getBeanCollection();
		this.title = vo.getTitle();
		this.subtitle = vo.getSubTitle();
		this.normalbandcolor = vo.getNormalBandColor() == null ? null : (ims.framework.utils.beans.ColorBean)vo.getNormalBandColor().getBean();
		this.backgroundcolor = vo.getBackgroundColor() == null ? null : (ims.framework.utils.beans.ColorBean)vo.getBackgroundColor().getBean();
		this.foregroundcolor = vo.getForegroundColor() == null ? null : (ims.framework.utils.beans.ColorBean)vo.getForegroundColor().getBean();
		this.description = vo.getDescription();
	}

	public ims.core.vo.ChartValueSetVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.core.vo.ChartValueSetVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.ChartValueSetVo vo = null;
		if(map != null)
			vo = (ims.core.vo.ChartValueSetVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.core.vo.ChartValueSetVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getMaxFactor()
	{
		return this.maxfactor;
	}
	public void setMaxFactor(Integer value)
	{
		this.maxfactor = value;
	}
	public Integer getMinFactor()
	{
		return this.minfactor;
	}
	public void setMinFactor(Integer value)
	{
		this.minfactor = value;
	}
	public Integer getBelowBandPercent()
	{
		return this.belowbandpercent;
	}
	public void setBelowBandPercent(Integer value)
	{
		this.belowbandpercent = value;
	}
	public Integer getAboveBandPercent()
	{
		return this.abovebandpercent;
	}
	public void setAboveBandPercent(Integer value)
	{
		this.abovebandpercent = value;
	}
	public ims.core.vo.beans.ChartValueGroupVoBean[] getGroups()
	{
		return this.groups;
	}
	public void setGroups(ims.core.vo.beans.ChartValueGroupVoBean[] value)
	{
		this.groups = value;
	}
	public String getTitle()
	{
		return this.title;
	}
	public void setTitle(String value)
	{
		this.title = value;
	}
	public String getSubTitle()
	{
		return this.subtitle;
	}
	public void setSubTitle(String value)
	{
		this.subtitle = value;
	}
	public ims.framework.utils.beans.ColorBean getNormalBandColor()
	{
		return this.normalbandcolor;
	}
	public void setNormalBandColor(ims.framework.utils.beans.ColorBean value)
	{
		this.normalbandcolor = value;
	}
	public ims.framework.utils.beans.ColorBean getBackgroundColor()
	{
		return this.backgroundcolor;
	}
	public void setBackgroundColor(ims.framework.utils.beans.ColorBean value)
	{
		this.backgroundcolor = value;
	}
	public ims.framework.utils.beans.ColorBean getForegroundColor()
	{
		return this.foregroundcolor;
	}
	public void setForegroundColor(ims.framework.utils.beans.ColorBean value)
	{
		this.foregroundcolor = value;
	}
	public String getDescription()
	{
		return this.description;
	}
	public void setDescription(String value)
	{
		this.description = value;
	}

	private Integer maxfactor;
	private Integer minfactor;
	private Integer belowbandpercent;
	private Integer abovebandpercent;
	private ims.core.vo.beans.ChartValueGroupVoBean[] groups;
	private String title;
	private String subtitle;
	private ims.framework.utils.beans.ColorBean normalbandcolor;
	private ims.framework.utils.beans.ColorBean backgroundcolor;
	private ims.framework.utils.beans.ColorBean foregroundcolor;
	private String description;
}
