//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo.beans;

public class VSLungFunctionTestVoBean extends ims.vo.ValueObjectBean
{
	public VSLungFunctionTestVoBean()
	{
	}
	public VSLungFunctionTestVoBean(ims.core.vo.VSLungFunctionTestVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.peakflowpre = vo.getPeakFlowPre();
		this.peakflowpost = vo.getPeakFlowPost();
		this.timeinterval = vo.getTimeInterval();
		this.tidalvolume = vo.getTidalVolume();
		this.incentivespirometer = vo.getIncentiveSpirometer();
		this.totallungcapacity = vo.getTotalLungCapacity();
		this.functionalresidualcapacity = vo.getFunctionalResidualCapacity();
		this.forcedexpiratoryvolume = vo.getForcedExpiratoryVolume();
		this.forcedvitalcapacity = vo.getForcedVitalCapacity();
		this.minutevolume = vo.getMinuteVolume();
		this.vitalcapacity = vo.getVitalCapacity();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.VSLungFunctionTestVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.peakflowpre = vo.getPeakFlowPre();
		this.peakflowpost = vo.getPeakFlowPost();
		this.timeinterval = vo.getTimeInterval();
		this.tidalvolume = vo.getTidalVolume();
		this.incentivespirometer = vo.getIncentiveSpirometer();
		this.totallungcapacity = vo.getTotalLungCapacity();
		this.functionalresidualcapacity = vo.getFunctionalResidualCapacity();
		this.forcedexpiratoryvolume = vo.getForcedExpiratoryVolume();
		this.forcedvitalcapacity = vo.getForcedVitalCapacity();
		this.minutevolume = vo.getMinuteVolume();
		this.vitalcapacity = vo.getVitalCapacity();
	}

	public ims.core.vo.VSLungFunctionTestVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.core.vo.VSLungFunctionTestVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.VSLungFunctionTestVo vo = null;
		if(map != null)
			vo = (ims.core.vo.VSLungFunctionTestVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.core.vo.VSLungFunctionTestVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public Integer getPeakFlowPre()
	{
		return this.peakflowpre;
	}
	public void setPeakFlowPre(Integer value)
	{
		this.peakflowpre = value;
	}
	public Integer getPeakFlowPost()
	{
		return this.peakflowpost;
	}
	public void setPeakFlowPost(Integer value)
	{
		this.peakflowpost = value;
	}
	public Integer getTimeInterval()
	{
		return this.timeinterval;
	}
	public void setTimeInterval(Integer value)
	{
		this.timeinterval = value;
	}
	public Integer getTidalVolume()
	{
		return this.tidalvolume;
	}
	public void setTidalVolume(Integer value)
	{
		this.tidalvolume = value;
	}
	public Integer getIncentiveSpirometer()
	{
		return this.incentivespirometer;
	}
	public void setIncentiveSpirometer(Integer value)
	{
		this.incentivespirometer = value;
	}
	public Integer getTotalLungCapacity()
	{
		return this.totallungcapacity;
	}
	public void setTotalLungCapacity(Integer value)
	{
		this.totallungcapacity = value;
	}
	public Integer getFunctionalResidualCapacity()
	{
		return this.functionalresidualcapacity;
	}
	public void setFunctionalResidualCapacity(Integer value)
	{
		this.functionalresidualcapacity = value;
	}
	public Integer getForcedExpiratoryVolume()
	{
		return this.forcedexpiratoryvolume;
	}
	public void setForcedExpiratoryVolume(Integer value)
	{
		this.forcedexpiratoryvolume = value;
	}
	public Integer getForcedVitalCapacity()
	{
		return this.forcedvitalcapacity;
	}
	public void setForcedVitalCapacity(Integer value)
	{
		this.forcedvitalcapacity = value;
	}
	public Integer getMinuteVolume()
	{
		return this.minutevolume;
	}
	public void setMinuteVolume(Integer value)
	{
		this.minutevolume = value;
	}
	public Float getVitalCapacity()
	{
		return this.vitalcapacity;
	}
	public void setVitalCapacity(Float value)
	{
		this.vitalcapacity = value;
	}

	private Integer id;
	private int version;
	private Integer peakflowpre;
	private Integer peakflowpost;
	private Integer timeinterval;
	private Integer tidalvolume;
	private Integer incentivespirometer;
	private Integer totallungcapacity;
	private Integer functionalresidualcapacity;
	private Integer forcedexpiratoryvolume;
	private Integer forcedvitalcapacity;
	private Integer minutevolume;
	private Float vitalcapacity;
}
