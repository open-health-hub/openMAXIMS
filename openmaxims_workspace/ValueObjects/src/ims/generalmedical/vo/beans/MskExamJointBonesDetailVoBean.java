//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.generalmedical.vo.beans;

public class MskExamJointBonesDetailVoBean extends ims.vo.ValueObjectBean
{
	public MskExamJointBonesDetailVoBean()
	{
	}
	public MskExamJointBonesDetailVoBean(ims.generalmedical.vo.MskExamJointBonesDetailVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.group = vo.getGroup() == null ? null : (ims.core.vo.beans.MskGroupVoBean)vo.getGroup().getBean();
		this.isjoint = vo.getIsJoint();
		this.joint = vo.getJoint() == null ? null : (ims.core.vo.beans.MskJointVoBean)vo.getJoint().getBean();
		this.bone = vo.getBone() == null ? null : (ims.vo.LookupInstanceBean)vo.getBone().getBean();
		this.laterality = vo.getLaterality() == null ? null : (ims.vo.LookupInstanceBean)vo.getLaterality().getBean();
		this.generalfindingsbone = vo.getGeneralFindingsBone() == null ? null : vo.getGeneralFindingsBone().getBeanCollection();
		this.generalfindingsjoint = vo.getGeneralFindingsJoint() == null ? null : vo.getGeneralFindingsJoint().getBeanCollection();
		this.ligamentstests = vo.getLigamentsTests();
		this.interpretation = vo.getInterpretation();
		this.selectedmovements = vo.getSelectedMovements() == null ? null : vo.getSelectedMovements().getBeanCollection();
		this.isproblem = vo.getIsProblem();
		this.problem = vo.getProblem() == null ? null : (ims.generalmedical.vo.beans.MedicalProbOnAdmisVoBean)vo.getProblem().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.generalmedical.vo.MskExamJointBonesDetailVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.group = vo.getGroup() == null ? null : (ims.core.vo.beans.MskGroupVoBean)vo.getGroup().getBean(map);
		this.isjoint = vo.getIsJoint();
		this.joint = vo.getJoint() == null ? null : (ims.core.vo.beans.MskJointVoBean)vo.getJoint().getBean(map);
		this.bone = vo.getBone() == null ? null : (ims.vo.LookupInstanceBean)vo.getBone().getBean();
		this.laterality = vo.getLaterality() == null ? null : (ims.vo.LookupInstanceBean)vo.getLaterality().getBean();
		this.generalfindingsbone = vo.getGeneralFindingsBone() == null ? null : vo.getGeneralFindingsBone().getBeanCollection();
		this.generalfindingsjoint = vo.getGeneralFindingsJoint() == null ? null : vo.getGeneralFindingsJoint().getBeanCollection();
		this.ligamentstests = vo.getLigamentsTests();
		this.interpretation = vo.getInterpretation();
		this.selectedmovements = vo.getSelectedMovements() == null ? null : vo.getSelectedMovements().getBeanCollection();
		this.isproblem = vo.getIsProblem();
		this.problem = vo.getProblem() == null ? null : (ims.generalmedical.vo.beans.MedicalProbOnAdmisVoBean)vo.getProblem().getBean(map);
	}

	public ims.generalmedical.vo.MskExamJointBonesDetailVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.generalmedical.vo.MskExamJointBonesDetailVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.generalmedical.vo.MskExamJointBonesDetailVo vo = null;
		if(map != null)
			vo = (ims.generalmedical.vo.MskExamJointBonesDetailVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.generalmedical.vo.MskExamJointBonesDetailVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.core.vo.beans.MskGroupVoBean getGroup()
	{
		return this.group;
	}
	public void setGroup(ims.core.vo.beans.MskGroupVoBean value)
	{
		this.group = value;
	}
	public Boolean getIsJoint()
	{
		return this.isjoint;
	}
	public void setIsJoint(Boolean value)
	{
		this.isjoint = value;
	}
	public ims.core.vo.beans.MskJointVoBean getJoint()
	{
		return this.joint;
	}
	public void setJoint(ims.core.vo.beans.MskJointVoBean value)
	{
		this.joint = value;
	}
	public ims.vo.LookupInstanceBean getBone()
	{
		return this.bone;
	}
	public void setBone(ims.vo.LookupInstanceBean value)
	{
		this.bone = value;
	}
	public ims.vo.LookupInstanceBean getLaterality()
	{
		return this.laterality;
	}
	public void setLaterality(ims.vo.LookupInstanceBean value)
	{
		this.laterality = value;
	}
	public java.util.Collection getGeneralFindingsBone()
	{
		return this.generalfindingsbone;
	}
	public void setGeneralFindingsBone(java.util.Collection value)
	{
		this.generalfindingsbone = value;
	}
	public void addGeneralFindingsBone(java.util.Collection value)
	{
		if(this.generalfindingsbone == null)
			this.generalfindingsbone = new java.util.ArrayList();
		this.generalfindingsbone.add(value);
	}
	public java.util.Collection getGeneralFindingsJoint()
	{
		return this.generalfindingsjoint;
	}
	public void setGeneralFindingsJoint(java.util.Collection value)
	{
		this.generalfindingsjoint = value;
	}
	public void addGeneralFindingsJoint(java.util.Collection value)
	{
		if(this.generalfindingsjoint == null)
			this.generalfindingsjoint = new java.util.ArrayList();
		this.generalfindingsjoint.add(value);
	}
	public String getLigamentsTests()
	{
		return this.ligamentstests;
	}
	public void setLigamentsTests(String value)
	{
		this.ligamentstests = value;
	}
	public String getInterpretation()
	{
		return this.interpretation;
	}
	public void setInterpretation(String value)
	{
		this.interpretation = value;
	}
	public ims.core.vo.beans.MskJointMovementVoBean[] getSelectedMovements()
	{
		return this.selectedmovements;
	}
	public void setSelectedMovements(ims.core.vo.beans.MskJointMovementVoBean[] value)
	{
		this.selectedmovements = value;
	}
	public Boolean getIsProblem()
	{
		return this.isproblem;
	}
	public void setIsProblem(Boolean value)
	{
		this.isproblem = value;
	}
	public ims.generalmedical.vo.beans.MedicalProbOnAdmisVoBean getProblem()
	{
		return this.problem;
	}
	public void setProblem(ims.generalmedical.vo.beans.MedicalProbOnAdmisVoBean value)
	{
		this.problem = value;
	}

	private Integer id;
	private int version;
	private ims.core.vo.beans.MskGroupVoBean group;
	private Boolean isjoint;
	private ims.core.vo.beans.MskJointVoBean joint;
	private ims.vo.LookupInstanceBean bone;
	private ims.vo.LookupInstanceBean laterality;
	private java.util.Collection generalfindingsbone;
	private java.util.Collection generalfindingsjoint;
	private String ligamentstests;
	private String interpretation;
	private ims.core.vo.beans.MskJointMovementVoBean[] selectedmovements;
	private Boolean isproblem;
	private ims.generalmedical.vo.beans.MedicalProbOnAdmisVoBean problem;
}
