//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.generalmedical.vo.beans;

public class NeuroMotorFindingsVoBean extends ims.vo.ValueObjectBean
{
	public NeuroMotorFindingsVoBean()
	{
	}
	public NeuroMotorFindingsVoBean(ims.generalmedical.vo.NeuroMotorFindingsVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.clinicalcontact = vo.getClinicalContact() == null ? null : (ims.core.vo.beans.ClinicalContactShortVoBean)vo.getClinicalContact().getBean();
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
		this.authoringcp = vo.getAuthoringCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getAuthoringCP().getBean();
		this.authoringdatetime = vo.getAuthoringDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getAuthoringDateTime().getBean();
		this.rootfinding = vo.getRootFinding() == null ? null : vo.getRootFinding().getBeanCollection();
		this.rightmotorlevel = vo.getRightMotorLevel() == null ? null : (ims.core.vo.beans.VertebrallevelVoBean)vo.getRightMotorLevel().getBean();
		this.leftmotorlevel = vo.getLeftMotorLevel() == null ? null : (ims.core.vo.beans.VertebrallevelVoBean)vo.getLeftMotorLevel().getBean();
		this.isproblem = vo.getIsProblem();
		this.overallasiaright = vo.getOverallAsiaRight();
		this.overallasialeft = vo.getOverAllAsiaLeft();
		this.llasiaright = vo.getLLAsiaRight();
		this.llasialeft = vo.getLLAsiaLeft();
		this.sysinfo = vo.getSysInfo() == null ? null : (ims.vo.SysInfoBean)vo.getSysInfo().getBean();
		this.motorareafindings = vo.getMotorAreaFindings() == null ? null : vo.getMotorAreaFindings().getBeanCollection();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.generalmedical.vo.NeuroMotorFindingsVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.clinicalcontact = vo.getClinicalContact() == null ? null : (ims.core.vo.beans.ClinicalContactShortVoBean)vo.getClinicalContact().getBean(map);
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
		this.authoringcp = vo.getAuthoringCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getAuthoringCP().getBean(map);
		this.authoringdatetime = vo.getAuthoringDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getAuthoringDateTime().getBean();
		this.rootfinding = vo.getRootFinding() == null ? null : vo.getRootFinding().getBeanCollection();
		this.rightmotorlevel = vo.getRightMotorLevel() == null ? null : (ims.core.vo.beans.VertebrallevelVoBean)vo.getRightMotorLevel().getBean(map);
		this.leftmotorlevel = vo.getLeftMotorLevel() == null ? null : (ims.core.vo.beans.VertebrallevelVoBean)vo.getLeftMotorLevel().getBean(map);
		this.isproblem = vo.getIsProblem();
		this.overallasiaright = vo.getOverallAsiaRight();
		this.overallasialeft = vo.getOverAllAsiaLeft();
		this.llasiaright = vo.getLLAsiaRight();
		this.llasialeft = vo.getLLAsiaLeft();
		this.sysinfo = vo.getSysInfo() == null ? null : (ims.vo.SysInfoBean)vo.getSysInfo().getBean();
		this.motorareafindings = vo.getMotorAreaFindings() == null ? null : vo.getMotorAreaFindings().getBeanCollection();
	}

	public ims.generalmedical.vo.NeuroMotorFindingsVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.generalmedical.vo.NeuroMotorFindingsVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.generalmedical.vo.NeuroMotorFindingsVo vo = null;
		if(map != null)
			vo = (ims.generalmedical.vo.NeuroMotorFindingsVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.generalmedical.vo.NeuroMotorFindingsVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.core.vo.beans.ClinicalContactShortVoBean getClinicalContact()
	{
		return this.clinicalcontact;
	}
	public void setClinicalContact(ims.core.vo.beans.ClinicalContactShortVoBean value)
	{
		this.clinicalcontact = value;
	}
	public ims.vo.RefVoBean getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.vo.RefVoBean value)
	{
		this.carecontext = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getAuthoringCP()
	{
		return this.authoringcp;
	}
	public void setAuthoringCP(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.authoringcp = value;
	}
	public ims.framework.utils.beans.DateTimeBean getAuthoringDateTime()
	{
		return this.authoringdatetime;
	}
	public void setAuthoringDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.authoringdatetime = value;
	}
	public ims.generalmedical.vo.beans.NeuroMotorRootValueVoBean[] getRootFinding()
	{
		return this.rootfinding;
	}
	public void setRootFinding(ims.generalmedical.vo.beans.NeuroMotorRootValueVoBean[] value)
	{
		this.rootfinding = value;
	}
	public ims.core.vo.beans.VertebrallevelVoBean getRightMotorLevel()
	{
		return this.rightmotorlevel;
	}
	public void setRightMotorLevel(ims.core.vo.beans.VertebrallevelVoBean value)
	{
		this.rightmotorlevel = value;
	}
	public ims.core.vo.beans.VertebrallevelVoBean getLeftMotorLevel()
	{
		return this.leftmotorlevel;
	}
	public void setLeftMotorLevel(ims.core.vo.beans.VertebrallevelVoBean value)
	{
		this.leftmotorlevel = value;
	}
	public Boolean getIsProblem()
	{
		return this.isproblem;
	}
	public void setIsProblem(Boolean value)
	{
		this.isproblem = value;
	}
	public Integer getOverallAsiaRight()
	{
		return this.overallasiaright;
	}
	public void setOverallAsiaRight(Integer value)
	{
		this.overallasiaright = value;
	}
	public Integer getOverAllAsiaLeft()
	{
		return this.overallasialeft;
	}
	public void setOverAllAsiaLeft(Integer value)
	{
		this.overallasialeft = value;
	}
	public Integer getLLAsiaRight()
	{
		return this.llasiaright;
	}
	public void setLLAsiaRight(Integer value)
	{
		this.llasiaright = value;
	}
	public Integer getLLAsiaLeft()
	{
		return this.llasialeft;
	}
	public void setLLAsiaLeft(Integer value)
	{
		this.llasialeft = value;
	}
	public ims.vo.SysInfoBean getSysInfo()
	{
		return this.sysinfo;
	}
	public void setSysInfo(ims.vo.SysInfoBean value)
	{
		this.sysinfo = value;
	}
	public ims.generalmedical.vo.beans.NeuroMotorAreaFindingVoBean[] getMotorAreaFindings()
	{
		return this.motorareafindings;
	}
	public void setMotorAreaFindings(ims.generalmedical.vo.beans.NeuroMotorAreaFindingVoBean[] value)
	{
		this.motorareafindings = value;
	}

	private Integer id;
	private int version;
	private ims.core.vo.beans.ClinicalContactShortVoBean clinicalcontact;
	private ims.vo.RefVoBean carecontext;
	private ims.core.vo.beans.HcpLiteVoBean authoringcp;
	private ims.framework.utils.beans.DateTimeBean authoringdatetime;
	private ims.generalmedical.vo.beans.NeuroMotorRootValueVoBean[] rootfinding;
	private ims.core.vo.beans.VertebrallevelVoBean rightmotorlevel;
	private ims.core.vo.beans.VertebrallevelVoBean leftmotorlevel;
	private Boolean isproblem;
	private Integer overallasiaright;
	private Integer overallasialeft;
	private Integer llasiaright;
	private Integer llasialeft;
	private ims.vo.SysInfoBean sysinfo;
	private ims.generalmedical.vo.beans.NeuroMotorAreaFindingVoBean[] motorareafindings;
}
