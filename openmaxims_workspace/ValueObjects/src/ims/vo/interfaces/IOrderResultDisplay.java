//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.vo.interfaces;

/*
 * IOrderResultDisplay
 */
public interface IOrderResultDisplay extends Comparable
{
	/*
	 * getIOrderResultDisplayInvName
	 */
	 String getIOrderResultDisplayInvName();
	/*
	 * getIOrderResultDisplayOrderAbility
	 */
	 ims.ocrr.vo.lookups.InvestigationOrderability getIOrderResultDisplayOrderAbility();
	/*
	 * getIOrderResultDisplayPathResultDetails
	 */
	 ims.ocrr.vo.PathologyResultDetailVo getIOrderResultDisplayPathResultDetails();
	/*
	 * getIOrderResultDisplayRadResultDetails
	 */
	 ims.ocrr.vo.RadResultDetailsVo getIOrderResultDisplayRadResultDetails();
	/*
	 * getIOrderResultDisplayRepDateTime
	 */
	 ims.framework.utils.DateTime getIOrderResultDisplayRepDateTime();
	/*
	 * getIOrderResultDisplayRepTimeSupplied
	 */
	 Boolean getIOrderResultDisplayRepTimeSupplied();
	/*
	 * getIOrderResultDisplayRequestedLocation
	 */
	 ims.core.vo.LocationLiteVo getIOrderResultDisplayRequestedLocation();
	/*
	 * getIOrderResultDisplayStatus
	 */
	 ims.ocrr.vo.lookups.OrderInvStatus getIOrderResultDisplayStatus();
	/*
	 * getIOrderResultDisplayHistoryDateTime
	 */
	 ims.framework.utils.DateTime getIOrderResultDisplayHistoryDateTime();
	/*
	 * getIOrderResultSpecimen
	 */
	 String getIOrderResultSpecimen();
	/*
	 * getIOrderResultDisplayExtendedDataResult
	 */
	 java.util.LinkedHashMap<ims.ocrr.vo.lookups.ResultEDSubtype, Object> getIOrderResultDisplayExtendedDataResult();
	/*
	 * getIOrderResultLabSpecimenType
	 */
	 String getIOrderResultLabSpecimenType();
	/*
	 * getIInvestigationType
	 */
	 ims.ocrr.vo.lookups.InvType getIInvestigationType();
	/*
	 * getIInvestigationEventType
	 */
	 ims.ocrr.vo.lookups.InvEventType getIInvestigationEventType();
	/*
	 * getIOrderSpecimens
	 */
	 ims.vo.interfaces.IOrderSpecimen[] getIOrderSpecimens();
	/*
	 * getIOrderResultDisplayPathResultDetailsByOrderSpecimen
	 */
	 ims.ocrr.vo.PathologyResultDetailVo getIOrderResultDisplayPathResultDetailsForDFT(ims.vo.interfaces.IOrderSpecimen orderSpecimen);
}
