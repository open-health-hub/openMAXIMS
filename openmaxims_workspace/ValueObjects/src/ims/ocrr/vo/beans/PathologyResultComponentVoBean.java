//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.vo.beans;

public class PathologyResultComponentVoBean extends ims.vo.ValueObjectBean
{
	public PathologyResultComponentVoBean()
	{
	}
	public PathologyResultComponentVoBean(ims.ocrr.vo.PathologyResultComponentVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.formattedtext = vo.getFormattedText();
		this.resultval = vo.getResultVal();
		this.unitofmeasure = vo.getUnitOfMeasure() == null ? null : (ims.vo.LookupInstanceBean)vo.getUnitOfMeasure().getBean();
		this.refrange = vo.getRefRange();
		this.isabnormal = vo.getIsAbnormal();
		this.resultcomponentcomments = vo.getResultComponentComments() == null ? null : vo.getResultComponentComments().getBeanCollection();
		this.resvaltype = vo.getResValType() == null ? null : (ims.vo.LookupInstanceBean)vo.getResValType().getBean();
		this.analyte = vo.getAnalyte() == null ? null : (ims.ocrr.vo.beans.AnalyteLiteVoBean)vo.getAnalyte().getBean();
		this.edsubtype = vo.getEDSubType() == null ? null : (ims.vo.LookupInstanceBean)vo.getEDSubType().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.ocrr.vo.PathologyResultComponentVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.formattedtext = vo.getFormattedText();
		this.resultval = vo.getResultVal();
		this.unitofmeasure = vo.getUnitOfMeasure() == null ? null : (ims.vo.LookupInstanceBean)vo.getUnitOfMeasure().getBean();
		this.refrange = vo.getRefRange();
		this.isabnormal = vo.getIsAbnormal();
		this.resultcomponentcomments = vo.getResultComponentComments() == null ? null : vo.getResultComponentComments().getBeanCollection();
		this.resvaltype = vo.getResValType() == null ? null : (ims.vo.LookupInstanceBean)vo.getResValType().getBean();
		this.analyte = vo.getAnalyte() == null ? null : (ims.ocrr.vo.beans.AnalyteLiteVoBean)vo.getAnalyte().getBean(map);
		this.edsubtype = vo.getEDSubType() == null ? null : (ims.vo.LookupInstanceBean)vo.getEDSubType().getBean();
	}

	public ims.ocrr.vo.PathologyResultComponentVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.ocrr.vo.PathologyResultComponentVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.ocrr.vo.PathologyResultComponentVo vo = null;
		if(map != null)
			vo = (ims.ocrr.vo.PathologyResultComponentVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.ocrr.vo.PathologyResultComponentVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public String getFormattedText()
	{
		return this.formattedtext;
	}
	public void setFormattedText(String value)
	{
		this.formattedtext = value;
	}
	public String getResultVal()
	{
		return this.resultval;
	}
	public void setResultVal(String value)
	{
		this.resultval = value;
	}
	public ims.vo.LookupInstanceBean getUnitOfMeasure()
	{
		return this.unitofmeasure;
	}
	public void setUnitOfMeasure(ims.vo.LookupInstanceBean value)
	{
		this.unitofmeasure = value;
	}
	public String getRefRange()
	{
		return this.refrange;
	}
	public void setRefRange(String value)
	{
		this.refrange = value;
	}
	public Boolean getIsAbnormal()
	{
		return this.isabnormal;
	}
	public void setIsAbnormal(Boolean value)
	{
		this.isabnormal = value;
	}
	public ims.ocrr.vo.beans.ResultComponentCommentsVoBean[] getResultComponentComments()
	{
		return this.resultcomponentcomments;
	}
	public void setResultComponentComments(ims.ocrr.vo.beans.ResultComponentCommentsVoBean[] value)
	{
		this.resultcomponentcomments = value;
	}
	public ims.vo.LookupInstanceBean getResValType()
	{
		return this.resvaltype;
	}
	public void setResValType(ims.vo.LookupInstanceBean value)
	{
		this.resvaltype = value;
	}
	public ims.ocrr.vo.beans.AnalyteLiteVoBean getAnalyte()
	{
		return this.analyte;
	}
	public void setAnalyte(ims.ocrr.vo.beans.AnalyteLiteVoBean value)
	{
		this.analyte = value;
	}
	public ims.vo.LookupInstanceBean getEDSubType()
	{
		return this.edsubtype;
	}
	public void setEDSubType(ims.vo.LookupInstanceBean value)
	{
		this.edsubtype = value;
	}

	private Integer id;
	private int version;
	private String formattedtext;
	private String resultval;
	private ims.vo.LookupInstanceBean unitofmeasure;
	private String refrange;
	private Boolean isabnormal;
	private ims.ocrr.vo.beans.ResultComponentCommentsVoBean[] resultcomponentcomments;
	private ims.vo.LookupInstanceBean resvaltype;
	private ims.ocrr.vo.beans.AnalyteLiteVoBean analyte;
	private ims.vo.LookupInstanceBean edsubtype;
}
