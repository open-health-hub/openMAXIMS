//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.vo.beans;

public class SpecimenNameVoBean extends ims.vo.ValueObjectBean
{
	public SpecimenNameVoBean()
	{
	}
	public SpecimenNameVoBean(ims.ocrr.vo.SpecimenNameVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.specimensource = vo.getSpecimenSource() == null ? null : (ims.vo.LookupInstanceBean)vo.getSpecimenSource().getBean();
		if(vo.getPathResult() != null)
		{
			this.pathresult = new ims.vo.RefVoBean[vo.getPathResult().size()];
			for(int pathresult_i = 0; pathresult_i < vo.getPathResult().size(); pathresult_i++)
			{
				this.pathresult[pathresult_i] = new ims.vo.RefVoBean(vo.getPathResult().get(pathresult_i).getBoId(),vo.getPathResult().get(pathresult_i).getBoVersion());
			}
		}
		this.colldatetimefiller = vo.getCollDateTimeFiller() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getCollDateTimeFiller().getBean();
		this.fillerordnum = vo.getFillerOrdNum();
		this.receiveddatetime = vo.getReceivedDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getReceivedDateTime().getBean();
		this.coltimefillersupplied = vo.getColTimeFillerSupplied();
		this.receivedtimesupplied = vo.getReceivedTimeSupplied();
		this.dftspecimenresulted = vo.getDftSpecimenResulted() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getDftSpecimenResulted().getBean();
		this.dftspecimenresultedtimesupplied = vo.getDftSpecimenResultedTimeSupplied();
		this.sitecd = vo.getSiteCd() == null ? null : (ims.vo.LookupInstanceBean)vo.getSiteCd().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.ocrr.vo.SpecimenNameVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.specimensource = vo.getSpecimenSource() == null ? null : (ims.vo.LookupInstanceBean)vo.getSpecimenSource().getBean();
		if(vo.getPathResult() != null)
		{
			this.pathresult = new ims.vo.RefVoBean[vo.getPathResult().size()];
			for(int pathresult_i = 0; pathresult_i < vo.getPathResult().size(); pathresult_i++)
			{
				this.pathresult[pathresult_i] = new ims.vo.RefVoBean(vo.getPathResult().get(pathresult_i).getBoId(),vo.getPathResult().get(pathresult_i).getBoVersion());
			}
		}
		this.colldatetimefiller = vo.getCollDateTimeFiller() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getCollDateTimeFiller().getBean();
		this.fillerordnum = vo.getFillerOrdNum();
		this.receiveddatetime = vo.getReceivedDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getReceivedDateTime().getBean();
		this.coltimefillersupplied = vo.getColTimeFillerSupplied();
		this.receivedtimesupplied = vo.getReceivedTimeSupplied();
		this.dftspecimenresulted = vo.getDftSpecimenResulted() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getDftSpecimenResulted().getBean();
		this.dftspecimenresultedtimesupplied = vo.getDftSpecimenResultedTimeSupplied();
		this.sitecd = vo.getSiteCd() == null ? null : (ims.vo.LookupInstanceBean)vo.getSiteCd().getBean();
	}

	public ims.ocrr.vo.SpecimenNameVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.ocrr.vo.SpecimenNameVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.ocrr.vo.SpecimenNameVo vo = null;
		if(map != null)
			vo = (ims.ocrr.vo.SpecimenNameVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.ocrr.vo.SpecimenNameVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.LookupInstanceBean getSpecimenSource()
	{
		return this.specimensource;
	}
	public void setSpecimenSource(ims.vo.LookupInstanceBean value)
	{
		this.specimensource = value;
	}
	public ims.vo.RefVoBean[] getPathResult()
	{
		return this.pathresult;
	}
	public void setPathResult(ims.vo.RefVoBean[] value)
	{
		this.pathresult = value;
	}
	public ims.framework.utils.beans.DateTimeBean getCollDateTimeFiller()
	{
		return this.colldatetimefiller;
	}
	public void setCollDateTimeFiller(ims.framework.utils.beans.DateTimeBean value)
	{
		this.colldatetimefiller = value;
	}
	public String getFillerOrdNum()
	{
		return this.fillerordnum;
	}
	public void setFillerOrdNum(String value)
	{
		this.fillerordnum = value;
	}
	public ims.framework.utils.beans.DateTimeBean getReceivedDateTime()
	{
		return this.receiveddatetime;
	}
	public void setReceivedDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.receiveddatetime = value;
	}
	public Boolean getColTimeFillerSupplied()
	{
		return this.coltimefillersupplied;
	}
	public void setColTimeFillerSupplied(Boolean value)
	{
		this.coltimefillersupplied = value;
	}
	public Boolean getReceivedTimeSupplied()
	{
		return this.receivedtimesupplied;
	}
	public void setReceivedTimeSupplied(Boolean value)
	{
		this.receivedtimesupplied = value;
	}
	public ims.framework.utils.beans.DateTimeBean getDftSpecimenResulted()
	{
		return this.dftspecimenresulted;
	}
	public void setDftSpecimenResulted(ims.framework.utils.beans.DateTimeBean value)
	{
		this.dftspecimenresulted = value;
	}
	public Boolean getDftSpecimenResultedTimeSupplied()
	{
		return this.dftspecimenresultedtimesupplied;
	}
	public void setDftSpecimenResultedTimeSupplied(Boolean value)
	{
		this.dftspecimenresultedtimesupplied = value;
	}
	public ims.vo.LookupInstanceBean getSiteCd()
	{
		return this.sitecd;
	}
	public void setSiteCd(ims.vo.LookupInstanceBean value)
	{
		this.sitecd = value;
	}

	private Integer id;
	private int version;
	private ims.vo.LookupInstanceBean specimensource;
	private ims.vo.RefVoBean[] pathresult;
	private ims.framework.utils.beans.DateTimeBean colldatetimefiller;
	private String fillerordnum;
	private ims.framework.utils.beans.DateTimeBean receiveddatetime;
	private Boolean coltimefillersupplied;
	private Boolean receivedtimesupplied;
	private ims.framework.utils.beans.DateTimeBean dftspecimenresulted;
	private Boolean dftspecimenresultedtimesupplied;
	private ims.vo.LookupInstanceBean sitecd;
}
