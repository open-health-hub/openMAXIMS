//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.vo;


public class ReOrderPeriodMessageVo extends ims.vo.ValueObject implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public ReOrderPeriodMessageVo()
	{
	}
	public ReOrderPeriodMessageVo(ims.ocrr.vo.beans.ReOrderPeriodMessageVoBean bean)
	{
		this.itemname = bean.getItemName();
		this.amount = bean.getAmount();
		this.unit = bean.getUnit() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getUnit());
		this.ordereddatetime = bean.getOrderedDateTime() == null ? null : bean.getOrderedDateTime().buildDateTime();
		this.investigationid = bean.getInvestigationId();
		this.parentid = bean.getParentId();
		this.requiredbydate = bean.getRequiredByDate() == null ? null : bean.getRequiredByDate().buildDateTime();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.ocrr.vo.beans.ReOrderPeriodMessageVoBean bean)
	{
		this.itemname = bean.getItemName();
		this.amount = bean.getAmount();
		this.unit = bean.getUnit() == null ? null : ims.ocrr.vo.lookups.MinReorderPeriod.buildLookup(bean.getUnit());
		this.ordereddatetime = bean.getOrderedDateTime() == null ? null : bean.getOrderedDateTime().buildDateTime();
		this.investigationid = bean.getInvestigationId();
		this.parentid = bean.getParentId();
		this.requiredbydate = bean.getRequiredByDate() == null ? null : bean.getRequiredByDate().buildDateTime();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.ocrr.vo.beans.ReOrderPeriodMessageVoBean bean = null;
		if(map != null)
			bean = (ims.ocrr.vo.beans.ReOrderPeriodMessageVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.ocrr.vo.beans.ReOrderPeriodMessageVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public boolean getItemNameIsNotNull()
	{
		return this.itemname != null;
	}
	public String getItemName()
	{
		return this.itemname;
	}
	public static int getItemNameMaxLength()
	{
		return 255;
	}
	public void setItemName(String value)
	{
		this.isValidated = false;
		this.itemname = value;
	}
	public boolean getAmountIsNotNull()
	{
		return this.amount != null;
	}
	public Integer getAmount()
	{
		return this.amount;
	}
	public void setAmount(Integer value)
	{
		this.isValidated = false;
		this.amount = value;
	}
	public boolean getUnitIsNotNull()
	{
		return this.unit != null;
	}
	public ims.ocrr.vo.lookups.MinReorderPeriod getUnit()
	{
		return this.unit;
	}
	public void setUnit(ims.ocrr.vo.lookups.MinReorderPeriod value)
	{
		this.isValidated = false;
		this.unit = value;
	}
	public boolean getOrderedDateTimeIsNotNull()
	{
		return this.ordereddatetime != null;
	}
	public ims.framework.utils.DateTime getOrderedDateTime()
	{
		return this.ordereddatetime;
	}
	public void setOrderedDateTime(ims.framework.utils.DateTime value)
	{
		this.isValidated = false;
		this.ordereddatetime = value;
	}
	public boolean getInvestigationIdIsNotNull()
	{
		return this.investigationid != null;
	}
	public Integer getInvestigationId()
	{
		return this.investigationid;
	}
	public void setInvestigationId(Integer value)
	{
		this.isValidated = false;
		this.investigationid = value;
	}
	public boolean getParentIdIsNotNull()
	{
		return this.parentid != null;
	}
	public Integer getParentId()
	{
		return this.parentid;
	}
	public void setParentId(Integer value)
	{
		this.isValidated = false;
		this.parentid = value;
	}
	public boolean getRequiredByDateIsNotNull()
	{
		return this.requiredbydate != null;
	}
	public ims.framework.utils.DateTime getRequiredByDate()
	{
		return this.requiredbydate;
	}
	public void setRequiredByDate(ims.framework.utils.DateTime value)
	{
		this.isValidated = false;
		this.requiredbydate = value;
	}
	public final String getIItemText()
	{
		return toString();
	}
	public final Integer getBoId() 
	{
		return null;
	}
	public final String getBoClassName()
	{
		return null;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ReOrderPeriodMessageVo clone = new ReOrderPeriodMessageVo();
		
		clone.itemname = this.itemname;
		clone.amount = this.amount;
		if(this.unit == null)
			clone.unit = null;
		else
			clone.unit = (ims.ocrr.vo.lookups.MinReorderPeriod)this.unit.clone();
		if(this.ordereddatetime == null)
			clone.ordereddatetime = null;
		else
			clone.ordereddatetime = (ims.framework.utils.DateTime)this.ordereddatetime.clone();
		clone.investigationid = this.investigationid;
		clone.parentid = this.parentid;
		if(this.requiredbydate == null)
			clone.requiredbydate = null;
		else
			clone.requiredbydate = (ims.framework.utils.DateTime)this.requiredbydate.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ReOrderPeriodMessageVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ReOrderPeriodMessageVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		ReOrderPeriodMessageVo compareObj = (ReOrderPeriodMessageVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getOrderedDateTime() == null && compareObj.getOrderedDateTime() != null)
				return -1;
			if(this.getOrderedDateTime() != null && compareObj.getOrderedDateTime() == null)
				return 1;
			if(this.getOrderedDateTime() != null && compareObj.getOrderedDateTime() != null)
				retVal = this.getOrderedDateTime().compareTo(compareObj.getOrderedDateTime());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.itemname != null)
			count++;
		if(this.amount != null)
			count++;
		if(this.unit != null)
			count++;
		if(this.ordereddatetime != null)
			count++;
		if(this.investigationid != null)
			count++;
		if(this.parentid != null)
			count++;
		if(this.requiredbydate != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 7;
	}
	protected String itemname;
	protected Integer amount;
	protected ims.ocrr.vo.lookups.MinReorderPeriod unit;
	protected ims.framework.utils.DateTime ordereddatetime;
	protected Integer investigationid;
	protected Integer parentid;
	protected ims.framework.utils.DateTime requiredbydate;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
