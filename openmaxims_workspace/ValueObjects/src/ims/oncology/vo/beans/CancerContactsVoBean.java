//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.oncology.vo.beans;

public class CancerContactsVoBean extends ims.vo.ValueObjectBean
{
	public CancerContactsVoBean()
	{
	}
	public CancerContactsVoBean(ims.oncology.vo.CancerContactsVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
		this.contacthcp = vo.getContactHCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getContactHCP().getBean();
		this.hcpdiscipline = vo.getHCPDiscipline() == null ? null : (ims.vo.LookupInstanceBean)vo.getHCPDiscipline().getBean();
		this.contactdatetime = vo.getContactDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getContactDateTime().getBean();
		this.unitsrequired = vo.getUnitsRequired();
		this.unitsgiven = vo.getUnitsGiven();
		this.comment = vo.getComment();
		if(vo.getContactTypes() != null)
		{
			this.contacttypes = new ims.vo.RefVoBean[vo.getContactTypes().size()];
			for(int contacttypes_i = 0; contacttypes_i < vo.getContactTypes().size(); contacttypes_i++)
			{
				this.contacttypes[contacttypes_i] = new ims.vo.RefVoBean(vo.getContactTypes().get(contacttypes_i).getBoId(),vo.getContactTypes().get(contacttypes_i).getBoVersion());
			}
		}
		this.episodeofcare = vo.getEpisodeOfCare() == null ? null : new ims.vo.RefVoBean(vo.getEpisodeOfCare().getBoId(), vo.getEpisodeOfCare().getBoVersion());
		this.recordinginfo = vo.getRecordingInfo() == null ? null : (ims.core.vo.beans.AuthoringInformationVoBean)vo.getRecordingInfo().getBean();
		this.systeminformation = vo.getSystemInformation() == null ? null : (ims.vo.SysInfoBean)vo.getSystemInformation().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.oncology.vo.CancerContactsVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
		this.contacthcp = vo.getContactHCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getContactHCP().getBean(map);
		this.hcpdiscipline = vo.getHCPDiscipline() == null ? null : (ims.vo.LookupInstanceBean)vo.getHCPDiscipline().getBean();
		this.contactdatetime = vo.getContactDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getContactDateTime().getBean();
		this.unitsrequired = vo.getUnitsRequired();
		this.unitsgiven = vo.getUnitsGiven();
		this.comment = vo.getComment();
		if(vo.getContactTypes() != null)
		{
			this.contacttypes = new ims.vo.RefVoBean[vo.getContactTypes().size()];
			for(int contacttypes_i = 0; contacttypes_i < vo.getContactTypes().size(); contacttypes_i++)
			{
				this.contacttypes[contacttypes_i] = new ims.vo.RefVoBean(vo.getContactTypes().get(contacttypes_i).getBoId(),vo.getContactTypes().get(contacttypes_i).getBoVersion());
			}
		}
		this.episodeofcare = vo.getEpisodeOfCare() == null ? null : new ims.vo.RefVoBean(vo.getEpisodeOfCare().getBoId(), vo.getEpisodeOfCare().getBoVersion());
		this.recordinginfo = vo.getRecordingInfo() == null ? null : (ims.core.vo.beans.AuthoringInformationVoBean)vo.getRecordingInfo().getBean(map);
		this.systeminformation = vo.getSystemInformation() == null ? null : (ims.vo.SysInfoBean)vo.getSystemInformation().getBean();
	}

	public ims.oncology.vo.CancerContactsVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.oncology.vo.CancerContactsVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.oncology.vo.CancerContactsVo vo = null;
		if(map != null)
			vo = (ims.oncology.vo.CancerContactsVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.oncology.vo.CancerContactsVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.RefVoBean getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.vo.RefVoBean value)
	{
		this.carecontext = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getContactHCP()
	{
		return this.contacthcp;
	}
	public void setContactHCP(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.contacthcp = value;
	}
	public ims.vo.LookupInstanceBean getHCPDiscipline()
	{
		return this.hcpdiscipline;
	}
	public void setHCPDiscipline(ims.vo.LookupInstanceBean value)
	{
		this.hcpdiscipline = value;
	}
	public ims.framework.utils.beans.DateTimeBean getContactDateTime()
	{
		return this.contactdatetime;
	}
	public void setContactDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.contactdatetime = value;
	}
	public Float getUnitsRequired()
	{
		return this.unitsrequired;
	}
	public void setUnitsRequired(Float value)
	{
		this.unitsrequired = value;
	}
	public Float getUnitsGiven()
	{
		return this.unitsgiven;
	}
	public void setUnitsGiven(Float value)
	{
		this.unitsgiven = value;
	}
	public String getComment()
	{
		return this.comment;
	}
	public void setComment(String value)
	{
		this.comment = value;
	}
	public ims.vo.RefVoBean[] getContactTypes()
	{
		return this.contacttypes;
	}
	public void setContactTypes(ims.vo.RefVoBean[] value)
	{
		this.contacttypes = value;
	}
	public ims.vo.RefVoBean getEpisodeOfCare()
	{
		return this.episodeofcare;
	}
	public void setEpisodeOfCare(ims.vo.RefVoBean value)
	{
		this.episodeofcare = value;
	}
	public ims.core.vo.beans.AuthoringInformationVoBean getRecordingInfo()
	{
		return this.recordinginfo;
	}
	public void setRecordingInfo(ims.core.vo.beans.AuthoringInformationVoBean value)
	{
		this.recordinginfo = value;
	}
	public ims.vo.SysInfoBean getSystemInformation()
	{
		return this.systeminformation;
	}
	public void setSystemInformation(ims.vo.SysInfoBean value)
	{
		this.systeminformation = value;
	}

	private Integer id;
	private int version;
	private ims.vo.RefVoBean carecontext;
	private ims.core.vo.beans.HcpLiteVoBean contacthcp;
	private ims.vo.LookupInstanceBean hcpdiscipline;
	private ims.framework.utils.beans.DateTimeBean contactdatetime;
	private Float unitsrequired;
	private Float unitsgiven;
	private String comment;
	private ims.vo.RefVoBean[] contacttypes;
	private ims.vo.RefVoBean episodeofcare;
	private ims.core.vo.beans.AuthoringInformationVoBean recordinginfo;
	private ims.vo.SysInfoBean systeminformation;
}
