//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.oncology.vo;


public class CancerContactSearchCriteriaVo extends ims.vo.ValueObject implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public CancerContactSearchCriteriaVo()
	{
	}
	public CancerContactSearchCriteriaVo(ims.oncology.vo.beans.CancerContactSearchCriteriaVoBean bean)
	{
		this.hcplite = bean.getHcpLite() == null ? null : bean.getHcpLite().buildVo();
		this.hcpdiscipline = bean.getHCPDiscipline() == null ? null : ims.core.vo.lookups.HcpDisType.buildLookup(bean.getHCPDiscipline());
		this.datefrom = bean.getDateFrom() == null ? null : bean.getDateFrom().buildDate();
		this.dateto = bean.getDateTo() == null ? null : bean.getDateTo().buildDate();
		this.carecontextref = bean.getCareContextRef() == null ? null : new ims.core.admin.vo.CareContextRefVo(new Integer(bean.getCareContextRef().getId()), bean.getCareContextRef().getVersion());
		this.episodeofcare = bean.getEpisodeOfCare() == null ? null : new ims.core.admin.vo.EpisodeOfCareRefVo(new Integer(bean.getEpisodeOfCare().getId()), bean.getEpisodeOfCare().getVersion());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.oncology.vo.beans.CancerContactSearchCriteriaVoBean bean)
	{
		this.hcplite = bean.getHcpLite() == null ? null : bean.getHcpLite().buildVo(map);
		this.hcpdiscipline = bean.getHCPDiscipline() == null ? null : ims.core.vo.lookups.HcpDisType.buildLookup(bean.getHCPDiscipline());
		this.datefrom = bean.getDateFrom() == null ? null : bean.getDateFrom().buildDate();
		this.dateto = bean.getDateTo() == null ? null : bean.getDateTo().buildDate();
		this.carecontextref = bean.getCareContextRef() == null ? null : new ims.core.admin.vo.CareContextRefVo(new Integer(bean.getCareContextRef().getId()), bean.getCareContextRef().getVersion());
		this.episodeofcare = bean.getEpisodeOfCare() == null ? null : new ims.core.admin.vo.EpisodeOfCareRefVo(new Integer(bean.getEpisodeOfCare().getId()), bean.getEpisodeOfCare().getVersion());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.oncology.vo.beans.CancerContactSearchCriteriaVoBean bean = null;
		if(map != null)
			bean = (ims.oncology.vo.beans.CancerContactSearchCriteriaVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.oncology.vo.beans.CancerContactSearchCriteriaVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public boolean getHcpLiteIsNotNull()
	{
		return this.hcplite != null;
	}
	public ims.core.vo.HcpLiteVo getHcpLite()
	{
		return this.hcplite;
	}
	public void setHcpLite(ims.core.vo.HcpLiteVo value)
	{
		this.isValidated = false;
		this.hcplite = value;
	}
	public boolean getHCPDisciplineIsNotNull()
	{
		return this.hcpdiscipline != null;
	}
	public ims.core.vo.lookups.HcpDisType getHCPDiscipline()
	{
		return this.hcpdiscipline;
	}
	public void setHCPDiscipline(ims.core.vo.lookups.HcpDisType value)
	{
		this.isValidated = false;
		this.hcpdiscipline = value;
	}
	public boolean getDateFromIsNotNull()
	{
		return this.datefrom != null;
	}
	public ims.framework.utils.Date getDateFrom()
	{
		return this.datefrom;
	}
	public void setDateFrom(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.datefrom = value;
	}
	public boolean getDateToIsNotNull()
	{
		return this.dateto != null;
	}
	public ims.framework.utils.Date getDateTo()
	{
		return this.dateto;
	}
	public void setDateTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.dateto = value;
	}
	public boolean getCareContextRefIsNotNull()
	{
		return this.carecontextref != null;
	}
	public ims.core.admin.vo.CareContextRefVo getCareContextRef()
	{
		return this.carecontextref;
	}
	public void setCareContextRef(ims.core.admin.vo.CareContextRefVo value)
	{
		this.isValidated = false;
		this.carecontextref = value;
	}
	public boolean getEpisodeOfCareIsNotNull()
	{
		return this.episodeofcare != null;
	}
	public ims.core.admin.vo.EpisodeOfCareRefVo getEpisodeOfCare()
	{
		return this.episodeofcare;
	}
	public void setEpisodeOfCare(ims.core.admin.vo.EpisodeOfCareRefVo value)
	{
		this.isValidated = false;
		this.episodeofcare = value;
	}
	public final String getIItemText()
	{
		return toString();
	}
	public final Integer getBoId() 
	{
		return null;
	}
	public final String getBoClassName()
	{
		return null;
	}
	public boolean equals(Object obj)
	{
		if(obj == null)
			return false;
		if(!(obj instanceof CancerContactSearchCriteriaVo))
			return false;
		CancerContactSearchCriteriaVo compareObj = (CancerContactSearchCriteriaVo)obj;
		if(this.getHCPDiscipline() == null && compareObj.getHCPDiscipline() != null)
			return false;
		if(this.getHCPDiscipline() != null && compareObj.getHCPDiscipline() == null)
			return false;
		if(this.getHCPDiscipline() != null && compareObj.getHCPDiscipline() != null)
			return this.getHCPDiscipline().equals(compareObj.getHCPDiscipline());
		return super.equals(obj);
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		CancerContactSearchCriteriaVo clone = new CancerContactSearchCriteriaVo();
		
		if(this.hcplite == null)
			clone.hcplite = null;
		else
			clone.hcplite = (ims.core.vo.HcpLiteVo)this.hcplite.clone();
		if(this.hcpdiscipline == null)
			clone.hcpdiscipline = null;
		else
			clone.hcpdiscipline = (ims.core.vo.lookups.HcpDisType)this.hcpdiscipline.clone();
		if(this.datefrom == null)
			clone.datefrom = null;
		else
			clone.datefrom = (ims.framework.utils.Date)this.datefrom.clone();
		if(this.dateto == null)
			clone.dateto = null;
		else
			clone.dateto = (ims.framework.utils.Date)this.dateto.clone();
		clone.carecontextref = this.carecontextref;
		clone.episodeofcare = this.episodeofcare;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(CancerContactSearchCriteriaVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A CancerContactSearchCriteriaVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		CancerContactSearchCriteriaVo compareObj = (CancerContactSearchCriteriaVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getHcpLite() == null && compareObj.getHcpLite() != null)
				return -1;
			if(this.getHcpLite() != null && compareObj.getHcpLite() == null)
				return 1;
			if(this.getHcpLite() != null && compareObj.getHcpLite() != null)
				retVal = this.getHcpLite().compareTo(compareObj.getHcpLite());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.hcplite != null)
			count++;
		if(this.hcpdiscipline != null)
			count++;
		if(this.datefrom != null)
			count++;
		if(this.dateto != null)
			count++;
		if(this.carecontextref != null)
			count++;
		if(this.episodeofcare != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 6;
	}
	protected ims.core.vo.HcpLiteVo hcplite;
	protected ims.core.vo.lookups.HcpDisType hcpdiscipline;
	protected ims.framework.utils.Date datefrom;
	protected ims.framework.utils.Date dateto;
	protected ims.core.admin.vo.CareContextRefVo carecontextref;
	protected ims.core.admin.vo.EpisodeOfCareRefVo episodeofcare;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
