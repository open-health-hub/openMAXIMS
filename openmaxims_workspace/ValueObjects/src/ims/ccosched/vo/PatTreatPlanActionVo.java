//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.vo;

/**
 * Linked to Oncology.PatAction business object (ID: 1105100038).
 */
public class PatTreatPlanActionVo extends ims.oncology.vo.PatActionRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public PatTreatPlanActionVo()
	{
	}
	public PatTreatPlanActionVo(Integer id, int version)
	{
		super(id, version);
	}
	public PatTreatPlanActionVo(ims.ccosched.vo.beans.PatTreatPlanActionVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.bookeddate = bean.getBookedDate() == null ? null : bean.getBookedDate().buildDate();
		this.bookedtime = bean.getBookedTime() == null ? null : bean.getBookedTime().buildTime();
		this.action = bean.getAction() == null ? null : bean.getAction().buildVo();
		this.apptheadid = bean.getApptHeadId();
		this.dose = ims.dtomove.vo.PatTreatPlanActionDoseVoCollection.buildFromBeanCollection(bean.getDose());
		this.apptid = bean.getApptId();
		this.pretreatmentplan = bean.getPretreatmentPlan() == null ? null : new ims.oncology.vo.PreTreatmentPlanRefVo(new Integer(bean.getPretreatmentPlan().getId()), bean.getPretreatmentPlan().getVersion());
		this.status = bean.getStatus() == null ? null : ims.ccosched.vo.lookups.ActionStatusReason.buildLookup(bean.getStatus());
		this.activitygroup = bean.getActivityGroup() == null ? null : bean.getActivityGroup().buildVo();
		this.activity = bean.getActivity() == null ? null : bean.getActivity().buildVo();
		this.priority = bean.getPriority() == null ? null : ims.ccosched.vo.lookups.Priority.buildLookup(bean.getPriority());
		this.patientstatus = bean.getPatientStatus() == null ? null : ims.ccosched.vo.lookups.Status.buildLookup(bean.getPatientStatus());
		this.attendingas = bean.getAttendingAs() == null ? null : ims.ccosched.vo.lookups.AttendingAs.buildLookup(bean.getAttendingAs());
		this.transport = bean.getTransport() == null ? null : ims.ccosched.vo.lookups.Transport.buildLookup(bean.getTransport());
		this.reason = bean.getReason() == null ? null : ims.ccosched.vo.lookups.ActionStatusReason.buildLookup(bean.getReason());
		this.category = bean.getCategory() == null ? null : ims.ccosched.vo.lookups.SchedCategory.buildLookup(bean.getCategory());
		this.unit = bean.getUnit() == null ? null : ims.ccosched.vo.lookups.Unit.buildLookup(bean.getUnit());
		this.modality = bean.getModality() == null ? null : ims.ccosched.vo.lookups.Modality.buildLookup(bean.getModality());
		this.aneasthetic = bean.getAneasthetic() == null ? null : ims.ccosched.vo.lookups.Anaesthetic.buildLookup(bean.getAneasthetic());
		this.plannedregime = bean.getPlannedRegime() == null ? null : ims.oncology.vo.lookups.RegimenAcronym.buildLookup(bean.getPlannedRegime());
		this.treatingconsultant = bean.getTreatingConsultant() == null ? null : bean.getTreatingConsultant().buildVo();
		this.active = bean.getActive();
		this.estartdate = bean.getEstartDate() == null ? null : bean.getEstartDate().buildDate();
		this.eenddate = bean.getEendDate() == null ? null : bean.getEendDate().buildDate();
		this.actionstatusdate = bean.getActionStatusDate() == null ? null : bean.getActionStatusDate().buildDate();
		this.waitinglist = bean.getWaitingList();
		this.modalenergy = bean.getModalEnergy();
		this.imagingdate = bean.getImagingDate() == null ? null : bean.getImagingDate().buildDate();
		this.startdateregime = bean.getStartDateRegime() == null ? null : bean.getStartDateRegime().buildDate();
		this.action_ordernumber = bean.getAction_OrderNumber();
		this.treatmenaction = bean.getTreatmenAction();
		this.lastappointmentdate = bean.getLastAppointmentDate() == null ? null : bean.getLastAppointmentDate().buildDate();
		this.appdate = bean.getAppDate() == null ? null : bean.getAppDate().buildDate();
		this.chemplanstartdate = bean.getChemPlanStartDate() == null ? null : bean.getChemPlanStartDate().buildDate();
		this.opaclinic = bean.getOPAClinic();
		this.opadate = bean.getOPADate() == null ? null : bean.getOPADate().buildDate();
		this.opatime = bean.getOPATime() == null ? null : bean.getOPATime().buildTime();
		this.wlid = bean.getWLId();
		this.schedappdate = bean.getSchedAppDate() == null ? null : bean.getSchedAppDate().buildDate();
		this.schedapptime = bean.getSchedAppTIme() == null ? null : bean.getSchedAppTIme().buildTime();
		this.treatmentaction = bean.getTreatmentaction();
		this.actionstatuspoint = ims.ccosched.vo.PatActionStatusPointVoCollection.buildFromBeanCollection(bean.getActionStatusPoint());
		this.tl_dose = bean.getTl_dose();
		this.tl_fractions = bean.getTl_fractions();
		this.tl_duration = bean.getTl_duration();
		this.groupsitetech = ims.ccosched.vo.PatTrPlanGroupSiteTechVoCollection.buildFromBeanCollection(bean.getGroupSiteTech());
		this.firstapptdate = bean.getFirstApptDate() == null ? null : bean.getFirstApptDate().buildDate();
		this.firstapptstatus = bean.getFirstApptStatus() == null ? null : ims.ccosched.vo.lookups.AppointmentStatus.buildLookup(bean.getFirstApptStatus());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.ccosched.vo.beans.PatTreatPlanActionVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.bookeddate = bean.getBookedDate() == null ? null : bean.getBookedDate().buildDate();
		this.bookedtime = bean.getBookedTime() == null ? null : bean.getBookedTime().buildTime();
		this.action = bean.getAction() == null ? null : bean.getAction().buildVo(map);
		this.apptheadid = bean.getApptHeadId();
		this.dose = ims.dtomove.vo.PatTreatPlanActionDoseVoCollection.buildFromBeanCollection(bean.getDose());
		this.apptid = bean.getApptId();
		this.pretreatmentplan = bean.getPretreatmentPlan() == null ? null : new ims.oncology.vo.PreTreatmentPlanRefVo(new Integer(bean.getPretreatmentPlan().getId()), bean.getPretreatmentPlan().getVersion());
		this.status = bean.getStatus() == null ? null : ims.ccosched.vo.lookups.ActionStatusReason.buildLookup(bean.getStatus());
		this.activitygroup = bean.getActivityGroup() == null ? null : bean.getActivityGroup().buildVo(map);
		this.activity = bean.getActivity() == null ? null : bean.getActivity().buildVo(map);
		this.priority = bean.getPriority() == null ? null : ims.ccosched.vo.lookups.Priority.buildLookup(bean.getPriority());
		this.patientstatus = bean.getPatientStatus() == null ? null : ims.ccosched.vo.lookups.Status.buildLookup(bean.getPatientStatus());
		this.attendingas = bean.getAttendingAs() == null ? null : ims.ccosched.vo.lookups.AttendingAs.buildLookup(bean.getAttendingAs());
		this.transport = bean.getTransport() == null ? null : ims.ccosched.vo.lookups.Transport.buildLookup(bean.getTransport());
		this.reason = bean.getReason() == null ? null : ims.ccosched.vo.lookups.ActionStatusReason.buildLookup(bean.getReason());
		this.category = bean.getCategory() == null ? null : ims.ccosched.vo.lookups.SchedCategory.buildLookup(bean.getCategory());
		this.unit = bean.getUnit() == null ? null : ims.ccosched.vo.lookups.Unit.buildLookup(bean.getUnit());
		this.modality = bean.getModality() == null ? null : ims.ccosched.vo.lookups.Modality.buildLookup(bean.getModality());
		this.aneasthetic = bean.getAneasthetic() == null ? null : ims.ccosched.vo.lookups.Anaesthetic.buildLookup(bean.getAneasthetic());
		this.plannedregime = bean.getPlannedRegime() == null ? null : ims.oncology.vo.lookups.RegimenAcronym.buildLookup(bean.getPlannedRegime());
		this.treatingconsultant = bean.getTreatingConsultant() == null ? null : bean.getTreatingConsultant().buildVo(map);
		this.active = bean.getActive();
		this.estartdate = bean.getEstartDate() == null ? null : bean.getEstartDate().buildDate();
		this.eenddate = bean.getEendDate() == null ? null : bean.getEendDate().buildDate();
		this.actionstatusdate = bean.getActionStatusDate() == null ? null : bean.getActionStatusDate().buildDate();
		this.waitinglist = bean.getWaitingList();
		this.modalenergy = bean.getModalEnergy();
		this.imagingdate = bean.getImagingDate() == null ? null : bean.getImagingDate().buildDate();
		this.startdateregime = bean.getStartDateRegime() == null ? null : bean.getStartDateRegime().buildDate();
		this.action_ordernumber = bean.getAction_OrderNumber();
		this.treatmenaction = bean.getTreatmenAction();
		this.lastappointmentdate = bean.getLastAppointmentDate() == null ? null : bean.getLastAppointmentDate().buildDate();
		this.appdate = bean.getAppDate() == null ? null : bean.getAppDate().buildDate();
		this.chemplanstartdate = bean.getChemPlanStartDate() == null ? null : bean.getChemPlanStartDate().buildDate();
		this.opaclinic = bean.getOPAClinic();
		this.opadate = bean.getOPADate() == null ? null : bean.getOPADate().buildDate();
		this.opatime = bean.getOPATime() == null ? null : bean.getOPATime().buildTime();
		this.wlid = bean.getWLId();
		this.schedappdate = bean.getSchedAppDate() == null ? null : bean.getSchedAppDate().buildDate();
		this.schedapptime = bean.getSchedAppTIme() == null ? null : bean.getSchedAppTIme().buildTime();
		this.treatmentaction = bean.getTreatmentaction();
		this.actionstatuspoint = ims.ccosched.vo.PatActionStatusPointVoCollection.buildFromBeanCollection(bean.getActionStatusPoint());
		this.tl_dose = bean.getTl_dose();
		this.tl_fractions = bean.getTl_fractions();
		this.tl_duration = bean.getTl_duration();
		this.groupsitetech = ims.ccosched.vo.PatTrPlanGroupSiteTechVoCollection.buildFromBeanCollection(bean.getGroupSiteTech());
		this.firstapptdate = bean.getFirstApptDate() == null ? null : bean.getFirstApptDate().buildDate();
		this.firstapptstatus = bean.getFirstApptStatus() == null ? null : ims.ccosched.vo.lookups.AppointmentStatus.buildLookup(bean.getFirstApptStatus());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.ccosched.vo.beans.PatTreatPlanActionVoBean bean = null;
		if(map != null)
			bean = (ims.ccosched.vo.beans.PatTreatPlanActionVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.ccosched.vo.beans.PatTreatPlanActionVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("BOOKEDDATE"))
			return getBookedDate();
		if(fieldName.equals("BOOKEDTIME"))
			return getBookedTime();
		if(fieldName.equals("ACTION"))
			return getAction();
		if(fieldName.equals("APPTHEADID"))
			return getApptHeadId();
		if(fieldName.equals("DOSE"))
			return getDose();
		if(fieldName.equals("APPTID"))
			return getApptId();
		if(fieldName.equals("PRETREATMENTPLAN"))
			return getPretreatmentPlan();
		if(fieldName.equals("STATUS"))
			return getStatus();
		if(fieldName.equals("ACTIVITYGROUP"))
			return getActivityGroup();
		if(fieldName.equals("ACTIVITY"))
			return getActivity();
		if(fieldName.equals("PRIORITY"))
			return getPriority();
		if(fieldName.equals("PATIENTSTATUS"))
			return getPatientStatus();
		if(fieldName.equals("ATTENDINGAS"))
			return getAttendingAs();
		if(fieldName.equals("TRANSPORT"))
			return getTransport();
		if(fieldName.equals("REASON"))
			return getReason();
		if(fieldName.equals("CATEGORY"))
			return getCategory();
		if(fieldName.equals("UNIT"))
			return getUnit();
		if(fieldName.equals("MODALITY"))
			return getModality();
		if(fieldName.equals("ANEASTHETIC"))
			return getAneasthetic();
		if(fieldName.equals("PLANNEDREGIME"))
			return getPlannedRegime();
		if(fieldName.equals("TREATINGCONSULTANT"))
			return getTreatingConsultant();
		if(fieldName.equals("ACTIVE"))
			return getActive();
		if(fieldName.equals("ESTARTDATE"))
			return getEstartDate();
		if(fieldName.equals("EENDDATE"))
			return getEendDate();
		if(fieldName.equals("ACTIONSTATUSDATE"))
			return getActionStatusDate();
		if(fieldName.equals("WAITINGLIST"))
			return getWaitingList();
		if(fieldName.equals("MODALENERGY"))
			return getModalEnergy();
		if(fieldName.equals("IMAGINGDATE"))
			return getImagingDate();
		if(fieldName.equals("STARTDATEREGIME"))
			return getStartDateRegime();
		if(fieldName.equals("ACTION_ORDERNUMBER"))
			return getAction_OrderNumber();
		if(fieldName.equals("TREATMENACTION"))
			return getTreatmenAction();
		if(fieldName.equals("LASTAPPOINTMENTDATE"))
			return getLastAppointmentDate();
		if(fieldName.equals("APPDATE"))
			return getAppDate();
		if(fieldName.equals("CHEMPLANSTARTDATE"))
			return getChemPlanStartDate();
		if(fieldName.equals("OPACLINIC"))
			return getOPAClinic();
		if(fieldName.equals("OPADATE"))
			return getOPADate();
		if(fieldName.equals("OPATIME"))
			return getOPATime();
		if(fieldName.equals("WLID"))
			return getWLId();
		if(fieldName.equals("SCHEDAPPDATE"))
			return getSchedAppDate();
		if(fieldName.equals("SCHEDAPPTIME"))
			return getSchedAppTIme();
		if(fieldName.equals("TREATMENTACTION"))
			return getTreatmentaction();
		if(fieldName.equals("ACTIONSTATUSPOINT"))
			return getActionStatusPoint();
		if(fieldName.equals("TL_DOSE"))
			return getTl_dose();
		if(fieldName.equals("TL_FRACTIONS"))
			return getTl_fractions();
		if(fieldName.equals("TL_DURATION"))
			return getTl_duration();
		if(fieldName.equals("GROUPSITETECH"))
			return getGroupSiteTech();
		if(fieldName.equals("FIRSTAPPTDATE"))
			return getFirstApptDate();
		if(fieldName.equals("FIRSTAPPTSTATUS"))
			return getFirstApptStatus();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getBookedDateIsNotNull()
	{
		return this.bookeddate != null;
	}
	public ims.framework.utils.Date getBookedDate()
	{
		return this.bookeddate;
	}
	public void setBookedDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.bookeddate = value;
	}
	public boolean getBookedTimeIsNotNull()
	{
		return this.bookedtime != null;
	}
	public ims.framework.utils.Time getBookedTime()
	{
		return this.bookedtime;
	}
	public void setBookedTime(ims.framework.utils.Time value)
	{
		this.isValidated = false;
		this.bookedtime = value;
	}
	public boolean getActionIsNotNull()
	{
		return this.action != null;
	}
	public ims.dtomove.vo.ActivityActionVo getAction()
	{
		return this.action;
	}
	public void setAction(ims.dtomove.vo.ActivityActionVo value)
	{
		this.isValidated = false;
		this.action = value;
	}
	public boolean getApptHeadIdIsNotNull()
	{
		return this.apptheadid != null;
	}
	public Integer getApptHeadId()
	{
		return this.apptheadid;
	}
	public void setApptHeadId(Integer value)
	{
		this.isValidated = false;
		this.apptheadid = value;
	}
	public boolean getDoseIsNotNull()
	{
		return this.dose != null;
	}
	public ims.dtomove.vo.PatTreatPlanActionDoseVoCollection getDose()
	{
		return this.dose;
	}
	public void setDose(ims.dtomove.vo.PatTreatPlanActionDoseVoCollection value)
	{
		this.isValidated = false;
		this.dose = value;
	}
	public boolean getApptIdIsNotNull()
	{
		return this.apptid != null;
	}
	public Integer getApptId()
	{
		return this.apptid;
	}
	public void setApptId(Integer value)
	{
		this.isValidated = false;
		this.apptid = value;
	}
	public boolean getPretreatmentPlanIsNotNull()
	{
		return this.pretreatmentplan != null;
	}
	public ims.oncology.vo.PreTreatmentPlanRefVo getPretreatmentPlan()
	{
		return this.pretreatmentplan;
	}
	public void setPretreatmentPlan(ims.oncology.vo.PreTreatmentPlanRefVo value)
	{
		this.isValidated = false;
		this.pretreatmentplan = value;
	}
	public boolean getStatusIsNotNull()
	{
		return this.status != null;
	}
	public ims.ccosched.vo.lookups.ActionStatusReason getStatus()
	{
		return this.status;
	}
	public void setStatus(ims.ccosched.vo.lookups.ActionStatusReason value)
	{
		this.isValidated = false;
		this.status = value;
	}
	public boolean getActivityGroupIsNotNull()
	{
		return this.activitygroup != null;
	}
	public ims.dtomove.vo.ActivityGroupVo getActivityGroup()
	{
		return this.activitygroup;
	}
	public void setActivityGroup(ims.dtomove.vo.ActivityGroupVo value)
	{
		this.isValidated = false;
		this.activitygroup = value;
	}
	public boolean getActivityIsNotNull()
	{
		return this.activity != null;
	}
	public ims.dtomove.vo.SchedActivityVo getActivity()
	{
		return this.activity;
	}
	public void setActivity(ims.dtomove.vo.SchedActivityVo value)
	{
		this.isValidated = false;
		this.activity = value;
	}
	public boolean getPriorityIsNotNull()
	{
		return this.priority != null;
	}
	public ims.ccosched.vo.lookups.Priority getPriority()
	{
		return this.priority;
	}
	public void setPriority(ims.ccosched.vo.lookups.Priority value)
	{
		this.isValidated = false;
		this.priority = value;
	}
	public boolean getPatientStatusIsNotNull()
	{
		return this.patientstatus != null;
	}
	public ims.ccosched.vo.lookups.Status getPatientStatus()
	{
		return this.patientstatus;
	}
	public void setPatientStatus(ims.ccosched.vo.lookups.Status value)
	{
		this.isValidated = false;
		this.patientstatus = value;
	}
	public boolean getAttendingAsIsNotNull()
	{
		return this.attendingas != null;
	}
	public ims.ccosched.vo.lookups.AttendingAs getAttendingAs()
	{
		return this.attendingas;
	}
	public void setAttendingAs(ims.ccosched.vo.lookups.AttendingAs value)
	{
		this.isValidated = false;
		this.attendingas = value;
	}
	public boolean getTransportIsNotNull()
	{
		return this.transport != null;
	}
	public ims.ccosched.vo.lookups.Transport getTransport()
	{
		return this.transport;
	}
	public void setTransport(ims.ccosched.vo.lookups.Transport value)
	{
		this.isValidated = false;
		this.transport = value;
	}
	public boolean getReasonIsNotNull()
	{
		return this.reason != null;
	}
	public ims.ccosched.vo.lookups.ActionStatusReason getReason()
	{
		return this.reason;
	}
	public void setReason(ims.ccosched.vo.lookups.ActionStatusReason value)
	{
		this.isValidated = false;
		this.reason = value;
	}
	public boolean getCategoryIsNotNull()
	{
		return this.category != null;
	}
	public ims.ccosched.vo.lookups.SchedCategory getCategory()
	{
		return this.category;
	}
	public void setCategory(ims.ccosched.vo.lookups.SchedCategory value)
	{
		this.isValidated = false;
		this.category = value;
	}
	public boolean getUnitIsNotNull()
	{
		return this.unit != null;
	}
	public ims.ccosched.vo.lookups.Unit getUnit()
	{
		return this.unit;
	}
	public void setUnit(ims.ccosched.vo.lookups.Unit value)
	{
		this.isValidated = false;
		this.unit = value;
	}
	public boolean getModalityIsNotNull()
	{
		return this.modality != null;
	}
	public ims.ccosched.vo.lookups.Modality getModality()
	{
		return this.modality;
	}
	public void setModality(ims.ccosched.vo.lookups.Modality value)
	{
		this.isValidated = false;
		this.modality = value;
	}
	public boolean getAneastheticIsNotNull()
	{
		return this.aneasthetic != null;
	}
	public ims.ccosched.vo.lookups.Anaesthetic getAneasthetic()
	{
		return this.aneasthetic;
	}
	public void setAneasthetic(ims.ccosched.vo.lookups.Anaesthetic value)
	{
		this.isValidated = false;
		this.aneasthetic = value;
	}
	public boolean getPlannedRegimeIsNotNull()
	{
		return this.plannedregime != null;
	}
	public ims.oncology.vo.lookups.RegimenAcronym getPlannedRegime()
	{
		return this.plannedregime;
	}
	public void setPlannedRegime(ims.oncology.vo.lookups.RegimenAcronym value)
	{
		this.isValidated = false;
		this.plannedregime = value;
	}
	public boolean getTreatingConsultantIsNotNull()
	{
		return this.treatingconsultant != null;
	}
	public ims.core.vo.HcpLiteVo getTreatingConsultant()
	{
		return this.treatingconsultant;
	}
	public void setTreatingConsultant(ims.core.vo.HcpLiteVo value)
	{
		this.isValidated = false;
		this.treatingconsultant = value;
	}
	public boolean getActiveIsNotNull()
	{
		return this.active != null;
	}
	public Boolean getActive()
	{
		return this.active;
	}
	public void setActive(Boolean value)
	{
		this.isValidated = false;
		this.active = value;
	}
	public boolean getEstartDateIsNotNull()
	{
		return this.estartdate != null;
	}
	public ims.framework.utils.Date getEstartDate()
	{
		return this.estartdate;
	}
	public void setEstartDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.estartdate = value;
	}
	public boolean getEendDateIsNotNull()
	{
		return this.eenddate != null;
	}
	public ims.framework.utils.Date getEendDate()
	{
		return this.eenddate;
	}
	public void setEendDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.eenddate = value;
	}
	public boolean getActionStatusDateIsNotNull()
	{
		return this.actionstatusdate != null;
	}
	public ims.framework.utils.Date getActionStatusDate()
	{
		return this.actionstatusdate;
	}
	public void setActionStatusDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.actionstatusdate = value;
	}
	public boolean getWaitingListIsNotNull()
	{
		return this.waitinglist != null;
	}
	public String getWaitingList()
	{
		return this.waitinglist;
	}
	public static int getWaitingListMaxLength()
	{
		return 1;
	}
	public void setWaitingList(String value)
	{
		this.isValidated = false;
		this.waitinglist = value;
	}
	public boolean getModalEnergyIsNotNull()
	{
		return this.modalenergy != null;
	}
	public String getModalEnergy()
	{
		return this.modalenergy;
	}
	public static int getModalEnergyMaxLength()
	{
		return 10;
	}
	public void setModalEnergy(String value)
	{
		this.isValidated = false;
		this.modalenergy = value;
	}
	public boolean getImagingDateIsNotNull()
	{
		return this.imagingdate != null;
	}
	public ims.framework.utils.Date getImagingDate()
	{
		return this.imagingdate;
	}
	public void setImagingDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.imagingdate = value;
	}
	public boolean getStartDateRegimeIsNotNull()
	{
		return this.startdateregime != null;
	}
	public ims.framework.utils.Date getStartDateRegime()
	{
		return this.startdateregime;
	}
	public void setStartDateRegime(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.startdateregime = value;
	}
	public boolean getAction_OrderNumberIsNotNull()
	{
		return this.action_ordernumber != null;
	}
	public Integer getAction_OrderNumber()
	{
		return this.action_ordernumber;
	}
	public void setAction_OrderNumber(Integer value)
	{
		this.isValidated = false;
		this.action_ordernumber = value;
	}
	public boolean getTreatmenActionIsNotNull()
	{
		return this.treatmenaction != null;
	}
	public String getTreatmenAction()
	{
		return this.treatmenaction;
	}
	public static int getTreatmenActionMaxLength()
	{
		return 255;
	}
	public void setTreatmenAction(String value)
	{
		this.isValidated = false;
		this.treatmenaction = value;
	}
	public boolean getLastAppointmentDateIsNotNull()
	{
		return this.lastappointmentdate != null;
	}
	public ims.framework.utils.Date getLastAppointmentDate()
	{
		return this.lastappointmentdate;
	}
	public void setLastAppointmentDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.lastappointmentdate = value;
	}
	public boolean getAppDateIsNotNull()
	{
		return this.appdate != null;
	}
	public ims.framework.utils.Date getAppDate()
	{
		return this.appdate;
	}
	public void setAppDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.appdate = value;
	}
	public boolean getChemPlanStartDateIsNotNull()
	{
		return this.chemplanstartdate != null;
	}
	public ims.framework.utils.Date getChemPlanStartDate()
	{
		return this.chemplanstartdate;
	}
	public void setChemPlanStartDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.chemplanstartdate = value;
	}
	public boolean getOPAClinicIsNotNull()
	{
		return this.opaclinic != null;
	}
	public Integer getOPAClinic()
	{
		return this.opaclinic;
	}
	public void setOPAClinic(Integer value)
	{
		this.isValidated = false;
		this.opaclinic = value;
	}
	public boolean getOPADateIsNotNull()
	{
		return this.opadate != null;
	}
	public ims.framework.utils.Date getOPADate()
	{
		return this.opadate;
	}
	public void setOPADate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.opadate = value;
	}
	public boolean getOPATimeIsNotNull()
	{
		return this.opatime != null;
	}
	public ims.framework.utils.Time getOPATime()
	{
		return this.opatime;
	}
	public void setOPATime(ims.framework.utils.Time value)
	{
		this.isValidated = false;
		this.opatime = value;
	}
	public boolean getWLIdIsNotNull()
	{
		return this.wlid != null;
	}
	public Integer getWLId()
	{
		return this.wlid;
	}
	public void setWLId(Integer value)
	{
		this.isValidated = false;
		this.wlid = value;
	}
	public boolean getSchedAppDateIsNotNull()
	{
		return this.schedappdate != null;
	}
	public ims.framework.utils.Date getSchedAppDate()
	{
		return this.schedappdate;
	}
	public void setSchedAppDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.schedappdate = value;
	}
	public boolean getSchedAppTImeIsNotNull()
	{
		return this.schedapptime != null;
	}
	public ims.framework.utils.Time getSchedAppTIme()
	{
		return this.schedapptime;
	}
	public void setSchedAppTIme(ims.framework.utils.Time value)
	{
		this.isValidated = false;
		this.schedapptime = value;
	}
	public boolean getTreatmentactionIsNotNull()
	{
		return this.treatmentaction != null;
	}
	public Integer getTreatmentaction()
	{
		return this.treatmentaction;
	}
	public void setTreatmentaction(Integer value)
	{
		this.isValidated = false;
		this.treatmentaction = value;
	}
	public boolean getActionStatusPointIsNotNull()
	{
		return this.actionstatuspoint != null;
	}
	public ims.ccosched.vo.PatActionStatusPointVoCollection getActionStatusPoint()
	{
		return this.actionstatuspoint;
	}
	public void setActionStatusPoint(ims.ccosched.vo.PatActionStatusPointVoCollection value)
	{
		this.isValidated = false;
		this.actionstatuspoint = value;
	}
	public boolean getTl_doseIsNotNull()
	{
		return this.tl_dose != null;
	}
	public Integer getTl_dose()
	{
		return this.tl_dose;
	}
	public void setTl_dose(Integer value)
	{
		this.isValidated = false;
		this.tl_dose = value;
	}
	public boolean getTl_fractionsIsNotNull()
	{
		return this.tl_fractions != null;
	}
	public Integer getTl_fractions()
	{
		return this.tl_fractions;
	}
	public void setTl_fractions(Integer value)
	{
		this.isValidated = false;
		this.tl_fractions = value;
	}
	public boolean getTl_durationIsNotNull()
	{
		return this.tl_duration != null;
	}
	public Integer getTl_duration()
	{
		return this.tl_duration;
	}
	public void setTl_duration(Integer value)
	{
		this.isValidated = false;
		this.tl_duration = value;
	}
	public boolean getGroupSiteTechIsNotNull()
	{
		return this.groupsitetech != null;
	}
	public ims.ccosched.vo.PatTrPlanGroupSiteTechVoCollection getGroupSiteTech()
	{
		return this.groupsitetech;
	}
	public void setGroupSiteTech(ims.ccosched.vo.PatTrPlanGroupSiteTechVoCollection value)
	{
		this.isValidated = false;
		this.groupsitetech = value;
	}
	public boolean getFirstApptDateIsNotNull()
	{
		return this.firstapptdate != null;
	}
	public ims.framework.utils.Date getFirstApptDate()
	{
		return this.firstapptdate;
	}
	public void setFirstApptDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.firstapptdate = value;
	}
	public boolean getFirstApptStatusIsNotNull()
	{
		return this.firstapptstatus != null;
	}
	public ims.ccosched.vo.lookups.AppointmentStatus getFirstApptStatus()
	{
		return this.firstapptstatus;
	}
	public void setFirstApptStatus(ims.ccosched.vo.lookups.AppointmentStatus value)
	{
		this.isValidated = false;
		this.firstapptstatus = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.action != null)
		{
			if(!this.action.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.dose != null)
		{
			if(!this.dose.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.activitygroup != null)
		{
			if(!this.activitygroup.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.activity != null)
		{
			if(!this.activity.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.treatingconsultant != null)
		{
			if(!this.treatingconsultant.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.actionstatuspoint != null)
		{
			if(!this.actionstatuspoint.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.groupsitetech != null)
		{
			if(!this.groupsitetech.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.action != null)
		{
			String[] listOfOtherErrors = this.action.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.dose != null)
		{
			String[] listOfOtherErrors = this.dose.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.activitygroup != null)
		{
			String[] listOfOtherErrors = this.activitygroup.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.activity != null)
		{
			String[] listOfOtherErrors = this.activity.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.treatingconsultant != null)
		{
			String[] listOfOtherErrors = this.treatingconsultant.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.waitinglist != null)
			if(this.waitinglist.length() > 1)
				listOfErrors.add("The length of the field [waitinglist] in the value object [ims.ccosched.vo.PatTreatPlanActionVo] is too big. It should be less or equal to 1");
		if(this.modalenergy != null)
			if(this.modalenergy.length() > 10)
				listOfErrors.add("The length of the field [modalenergy] in the value object [ims.ccosched.vo.PatTreatPlanActionVo] is too big. It should be less or equal to 10");
		if(this.treatmenaction != null)
			if(this.treatmenaction.length() > 255)
				listOfErrors.add("The length of the field [treatmenaction] in the value object [ims.ccosched.vo.PatTreatPlanActionVo] is too big. It should be less or equal to 255");
		if(this.actionstatuspoint != null)
		{
			String[] listOfOtherErrors = this.actionstatuspoint.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.groupsitetech != null)
		{
			String[] listOfOtherErrors = this.groupsitetech.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		PatTreatPlanActionVo clone = new PatTreatPlanActionVo(this.id, this.version);
		
		if(this.bookeddate == null)
			clone.bookeddate = null;
		else
			clone.bookeddate = (ims.framework.utils.Date)this.bookeddate.clone();
		if(this.bookedtime == null)
			clone.bookedtime = null;
		else
			clone.bookedtime = (ims.framework.utils.Time)this.bookedtime.clone();
		if(this.action == null)
			clone.action = null;
		else
			clone.action = (ims.dtomove.vo.ActivityActionVo)this.action.clone();
		clone.apptheadid = this.apptheadid;
		if(this.dose == null)
			clone.dose = null;
		else
			clone.dose = (ims.dtomove.vo.PatTreatPlanActionDoseVoCollection)this.dose.clone();
		clone.apptid = this.apptid;
		clone.pretreatmentplan = this.pretreatmentplan;
		if(this.status == null)
			clone.status = null;
		else
			clone.status = (ims.ccosched.vo.lookups.ActionStatusReason)this.status.clone();
		if(this.activitygroup == null)
			clone.activitygroup = null;
		else
			clone.activitygroup = (ims.dtomove.vo.ActivityGroupVo)this.activitygroup.clone();
		if(this.activity == null)
			clone.activity = null;
		else
			clone.activity = (ims.dtomove.vo.SchedActivityVo)this.activity.clone();
		if(this.priority == null)
			clone.priority = null;
		else
			clone.priority = (ims.ccosched.vo.lookups.Priority)this.priority.clone();
		if(this.patientstatus == null)
			clone.patientstatus = null;
		else
			clone.patientstatus = (ims.ccosched.vo.lookups.Status)this.patientstatus.clone();
		if(this.attendingas == null)
			clone.attendingas = null;
		else
			clone.attendingas = (ims.ccosched.vo.lookups.AttendingAs)this.attendingas.clone();
		if(this.transport == null)
			clone.transport = null;
		else
			clone.transport = (ims.ccosched.vo.lookups.Transport)this.transport.clone();
		if(this.reason == null)
			clone.reason = null;
		else
			clone.reason = (ims.ccosched.vo.lookups.ActionStatusReason)this.reason.clone();
		if(this.category == null)
			clone.category = null;
		else
			clone.category = (ims.ccosched.vo.lookups.SchedCategory)this.category.clone();
		if(this.unit == null)
			clone.unit = null;
		else
			clone.unit = (ims.ccosched.vo.lookups.Unit)this.unit.clone();
		if(this.modality == null)
			clone.modality = null;
		else
			clone.modality = (ims.ccosched.vo.lookups.Modality)this.modality.clone();
		if(this.aneasthetic == null)
			clone.aneasthetic = null;
		else
			clone.aneasthetic = (ims.ccosched.vo.lookups.Anaesthetic)this.aneasthetic.clone();
		if(this.plannedregime == null)
			clone.plannedregime = null;
		else
			clone.plannedregime = (ims.oncology.vo.lookups.RegimenAcronym)this.plannedregime.clone();
		if(this.treatingconsultant == null)
			clone.treatingconsultant = null;
		else
			clone.treatingconsultant = (ims.core.vo.HcpLiteVo)this.treatingconsultant.clone();
		clone.active = this.active;
		if(this.estartdate == null)
			clone.estartdate = null;
		else
			clone.estartdate = (ims.framework.utils.Date)this.estartdate.clone();
		if(this.eenddate == null)
			clone.eenddate = null;
		else
			clone.eenddate = (ims.framework.utils.Date)this.eenddate.clone();
		if(this.actionstatusdate == null)
			clone.actionstatusdate = null;
		else
			clone.actionstatusdate = (ims.framework.utils.Date)this.actionstatusdate.clone();
		clone.waitinglist = this.waitinglist;
		clone.modalenergy = this.modalenergy;
		if(this.imagingdate == null)
			clone.imagingdate = null;
		else
			clone.imagingdate = (ims.framework.utils.Date)this.imagingdate.clone();
		if(this.startdateregime == null)
			clone.startdateregime = null;
		else
			clone.startdateregime = (ims.framework.utils.Date)this.startdateregime.clone();
		clone.action_ordernumber = this.action_ordernumber;
		clone.treatmenaction = this.treatmenaction;
		if(this.lastappointmentdate == null)
			clone.lastappointmentdate = null;
		else
			clone.lastappointmentdate = (ims.framework.utils.Date)this.lastappointmentdate.clone();
		if(this.appdate == null)
			clone.appdate = null;
		else
			clone.appdate = (ims.framework.utils.Date)this.appdate.clone();
		if(this.chemplanstartdate == null)
			clone.chemplanstartdate = null;
		else
			clone.chemplanstartdate = (ims.framework.utils.Date)this.chemplanstartdate.clone();
		clone.opaclinic = this.opaclinic;
		if(this.opadate == null)
			clone.opadate = null;
		else
			clone.opadate = (ims.framework.utils.Date)this.opadate.clone();
		if(this.opatime == null)
			clone.opatime = null;
		else
			clone.opatime = (ims.framework.utils.Time)this.opatime.clone();
		clone.wlid = this.wlid;
		if(this.schedappdate == null)
			clone.schedappdate = null;
		else
			clone.schedappdate = (ims.framework.utils.Date)this.schedappdate.clone();
		if(this.schedapptime == null)
			clone.schedapptime = null;
		else
			clone.schedapptime = (ims.framework.utils.Time)this.schedapptime.clone();
		clone.treatmentaction = this.treatmentaction;
		if(this.actionstatuspoint == null)
			clone.actionstatuspoint = null;
		else
			clone.actionstatuspoint = (ims.ccosched.vo.PatActionStatusPointVoCollection)this.actionstatuspoint.clone();
		clone.tl_dose = this.tl_dose;
		clone.tl_fractions = this.tl_fractions;
		clone.tl_duration = this.tl_duration;
		if(this.groupsitetech == null)
			clone.groupsitetech = null;
		else
			clone.groupsitetech = (ims.ccosched.vo.PatTrPlanGroupSiteTechVoCollection)this.groupsitetech.clone();
		if(this.firstapptdate == null)
			clone.firstapptdate = null;
		else
			clone.firstapptdate = (ims.framework.utils.Date)this.firstapptdate.clone();
		if(this.firstapptstatus == null)
			clone.firstapptstatus = null;
		else
			clone.firstapptstatus = (ims.ccosched.vo.lookups.AppointmentStatus)this.firstapptstatus.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(PatTreatPlanActionVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A PatTreatPlanActionVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		PatTreatPlanActionVo compareObj = (PatTreatPlanActionVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getAction_OrderNumber() == null && compareObj.getAction_OrderNumber() != null)
				return -1;
			if(this.getAction_OrderNumber() != null && compareObj.getAction_OrderNumber() == null)
				return 1;
			if(this.getAction_OrderNumber() != null && compareObj.getAction_OrderNumber() != null)
				retVal = this.getAction_OrderNumber().compareTo(compareObj.getAction_OrderNumber());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.bookeddate != null)
			count++;
		if(this.bookedtime != null)
			count++;
		if(this.action != null)
			count++;
		if(this.apptheadid != null)
			count++;
		if(this.dose != null)
			count++;
		if(this.apptid != null)
			count++;
		if(this.pretreatmentplan != null)
			count++;
		if(this.status != null)
			count++;
		if(this.activitygroup != null)
			count++;
		if(this.activity != null)
			count++;
		if(this.priority != null)
			count++;
		if(this.patientstatus != null)
			count++;
		if(this.attendingas != null)
			count++;
		if(this.transport != null)
			count++;
		if(this.reason != null)
			count++;
		if(this.category != null)
			count++;
		if(this.unit != null)
			count++;
		if(this.modality != null)
			count++;
		if(this.aneasthetic != null)
			count++;
		if(this.plannedregime != null)
			count++;
		if(this.treatingconsultant != null)
			count++;
		if(this.active != null)
			count++;
		if(this.estartdate != null)
			count++;
		if(this.eenddate != null)
			count++;
		if(this.actionstatusdate != null)
			count++;
		if(this.waitinglist != null)
			count++;
		if(this.modalenergy != null)
			count++;
		if(this.imagingdate != null)
			count++;
		if(this.startdateregime != null)
			count++;
		if(this.action_ordernumber != null)
			count++;
		if(this.treatmenaction != null)
			count++;
		if(this.lastappointmentdate != null)
			count++;
		if(this.appdate != null)
			count++;
		if(this.chemplanstartdate != null)
			count++;
		if(this.opaclinic != null)
			count++;
		if(this.opadate != null)
			count++;
		if(this.opatime != null)
			count++;
		if(this.wlid != null)
			count++;
		if(this.schedappdate != null)
			count++;
		if(this.schedapptime != null)
			count++;
		if(this.treatmentaction != null)
			count++;
		if(this.actionstatuspoint != null)
			count++;
		if(this.tl_dose != null)
			count++;
		if(this.tl_fractions != null)
			count++;
		if(this.tl_duration != null)
			count++;
		if(this.groupsitetech != null)
			count++;
		if(this.firstapptdate != null)
			count++;
		if(this.firstapptstatus != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 48;
	}
	protected ims.framework.utils.Date bookeddate;
	protected ims.framework.utils.Time bookedtime;
	protected ims.dtomove.vo.ActivityActionVo action;
	protected Integer apptheadid;
	protected ims.dtomove.vo.PatTreatPlanActionDoseVoCollection dose;
	protected Integer apptid;
	protected ims.oncology.vo.PreTreatmentPlanRefVo pretreatmentplan;
	protected ims.ccosched.vo.lookups.ActionStatusReason status;
	protected ims.dtomove.vo.ActivityGroupVo activitygroup;
	protected ims.dtomove.vo.SchedActivityVo activity;
	protected ims.ccosched.vo.lookups.Priority priority;
	protected ims.ccosched.vo.lookups.Status patientstatus;
	protected ims.ccosched.vo.lookups.AttendingAs attendingas;
	protected ims.ccosched.vo.lookups.Transport transport;
	protected ims.ccosched.vo.lookups.ActionStatusReason reason;
	protected ims.ccosched.vo.lookups.SchedCategory category;
	protected ims.ccosched.vo.lookups.Unit unit;
	protected ims.ccosched.vo.lookups.Modality modality;
	protected ims.ccosched.vo.lookups.Anaesthetic aneasthetic;
	protected ims.oncology.vo.lookups.RegimenAcronym plannedregime;
	protected ims.core.vo.HcpLiteVo treatingconsultant;
	protected Boolean active;
	protected ims.framework.utils.Date estartdate;
	protected ims.framework.utils.Date eenddate;
	protected ims.framework.utils.Date actionstatusdate;
	protected String waitinglist;
	protected String modalenergy;
	protected ims.framework.utils.Date imagingdate;
	protected ims.framework.utils.Date startdateregime;
	protected Integer action_ordernumber;
	protected String treatmenaction;
	protected ims.framework.utils.Date lastappointmentdate;
	protected ims.framework.utils.Date appdate;
	protected ims.framework.utils.Date chemplanstartdate;
	protected Integer opaclinic;
	protected ims.framework.utils.Date opadate;
	protected ims.framework.utils.Time opatime;
	protected Integer wlid;
	protected ims.framework.utils.Date schedappdate;
	protected ims.framework.utils.Time schedapptime;
	protected Integer treatmentaction;
	protected ims.ccosched.vo.PatActionStatusPointVoCollection actionstatuspoint;
	protected Integer tl_dose;
	protected Integer tl_fractions;
	protected Integer tl_duration;
	protected ims.ccosched.vo.PatTrPlanGroupSiteTechVoCollection groupsitetech;
	protected ims.framework.utils.Date firstapptdate;
	protected ims.ccosched.vo.lookups.AppointmentStatus firstapptstatus;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
