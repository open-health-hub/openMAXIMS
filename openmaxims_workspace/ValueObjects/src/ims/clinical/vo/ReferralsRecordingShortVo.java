//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.vo;

/**
 * Linked to clinical.ReferralsRecording business object (ID: 1072100062).
 */
public class ReferralsRecordingShortVo extends ims.clinical.vo.ReferralsRecordingRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public ReferralsRecordingShortVo()
	{
	}
	public ReferralsRecordingShortVo(Integer id, int version)
	{
		super(id, version);
	}
	public ReferralsRecordingShortVo(ims.clinical.vo.beans.ReferralsRecordingShortVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.referraltype = bean.getReferralType() == null ? null : ims.clinical.vo.lookups.TypeOfReferral.buildLookup(bean.getReferralType());
		this.referralsource = bean.getReferralSource() == null ? null : ims.clinical.vo.lookups.ReferralSource.buildLookup(bean.getReferralSource());
		this.datesent = bean.getDateSent() == null ? null : bean.getDateSent().buildDate();
		this.details = bean.getDetails();
		this.reforgacode = bean.getRefOrgaCode() == null ? null : bean.getRefOrgaCode().buildVo();
		this.datefirstseen = bean.getDateFirstSeen() == null ? null : bean.getDateFirstSeen().buildDate();
		this.referralhcp = bean.getReferralHCP() == null ? null : bean.getReferralHCP().buildVo();
		this.datereceived = bean.getDateReceived() == null ? null : bean.getDateReceived().buildDate();
		this.referredby = bean.getReferredBy() == null ? null : bean.getReferredBy().buildVo();
		this.referralpriority = bean.getReferralPriority() == null ? null : ims.core.vo.lookups.ReferralPriority.buildLookup(bean.getReferralPriority());
		this.reasonforreferral = bean.getReasonForReferral() == null ? null : ims.core.vo.lookups.ReasonForReferral.buildLookup(bean.getReasonForReferral());
		this.specialtyfunctioncode = bean.getSpecialtyFunctionCode() == null ? null : ims.clinical.vo.lookups.SpecialtyFunctionCode.buildLookup(bean.getSpecialtyFunctionCode());
		this.referredbygp = bean.getReferredByGP() == null ? null : bean.getReferredByGP().buildVo();
		this.referralcategory = bean.getReferralCategory() == null ? null : ims.clinical.vo.lookups.ReferralCategory.buildLookup(bean.getReferralCategory());
		this.primarypreceeding = bean.getPrimaryPreceeding() == null ? null : ims.clinical.vo.lookups.PrimaryPreceeding.buildLookup(bean.getPrimaryPreceeding());
		this.authoringinfo = bean.getAuthoringInfo() == null ? null : bean.getAuthoringInfo().buildVo();
		this.carespell = bean.getCareSpell() == null ? null : new ims.core.admin.vo.CareSpellRefVo(new Integer(bean.getCareSpell().getId()), bean.getCareSpell().getVersion());
		this.carecontext = bean.getCareContext() == null ? null : new ims.core.admin.vo.CareContextRefVo(new Integer(bean.getCareContext().getId()), bean.getCareContext().getVersion());
		this.clinicalcontact = bean.getClinicalContact() == null ? null : new ims.core.admin.vo.ClinicalContactRefVo(new Integer(bean.getClinicalContact().getId()), bean.getClinicalContact().getVersion());
		this.suppliedreferralprofessional = bean.getSuppliedReferralProfessional() == null ? null : bean.getSuppliedReferralProfessional().buildVo();
		this.referredtolocation = bean.getReferredtoLocation() == null ? null : bean.getReferredtoLocation().buildVo();
		this.referralstatus = bean.getReferralStatus() == null ? null : ims.core.vo.lookups.CoreReferralStatus.buildLookup(bean.getReferralStatus());
		this.urgentcancerreferraltype = bean.getUrgentCancerReferralType() == null ? null : ims.core.vo.lookups.UrgentCancerReferralType.buildLookup(bean.getUrgentCancerReferralType());
		this.cancerstatus = bean.getCancerStatus() == null ? null : ims.core.vo.lookups.CancerStatus.buildLookup(bean.getCancerStatus());
		this.delayreasongpurgentreferral = bean.getDelayReasonGPUrgentReferral() == null ? null : ims.clinical.vo.lookups.DelayReasonGPUrgentReferral.buildLookup(bean.getDelayReasonGPUrgentReferral());
		this.delayreasontext = bean.getDelayReasonText();
		this.sysinfo = bean.getSysInfo() == null ? null : bean.getSysInfo().buildSystemInformation();
		this.recordingmos = bean.getRecordingMOS() == null ? null : bean.getRecordingMOS().buildVo();
		this.discipline = bean.getDiscipline() == null ? null : ims.clinical.vo.lookups.ReferralDiscipline.buildLookup(bean.getDiscipline());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.clinical.vo.beans.ReferralsRecordingShortVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.referraltype = bean.getReferralType() == null ? null : ims.clinical.vo.lookups.TypeOfReferral.buildLookup(bean.getReferralType());
		this.referralsource = bean.getReferralSource() == null ? null : ims.clinical.vo.lookups.ReferralSource.buildLookup(bean.getReferralSource());
		this.datesent = bean.getDateSent() == null ? null : bean.getDateSent().buildDate();
		this.details = bean.getDetails();
		this.reforgacode = bean.getRefOrgaCode() == null ? null : bean.getRefOrgaCode().buildVo(map);
		this.datefirstseen = bean.getDateFirstSeen() == null ? null : bean.getDateFirstSeen().buildDate();
		this.referralhcp = bean.getReferralHCP() == null ? null : bean.getReferralHCP().buildVo(map);
		this.datereceived = bean.getDateReceived() == null ? null : bean.getDateReceived().buildDate();
		this.referredby = bean.getReferredBy() == null ? null : bean.getReferredBy().buildVo(map);
		this.referralpriority = bean.getReferralPriority() == null ? null : ims.core.vo.lookups.ReferralPriority.buildLookup(bean.getReferralPriority());
		this.reasonforreferral = bean.getReasonForReferral() == null ? null : ims.core.vo.lookups.ReasonForReferral.buildLookup(bean.getReasonForReferral());
		this.specialtyfunctioncode = bean.getSpecialtyFunctionCode() == null ? null : ims.clinical.vo.lookups.SpecialtyFunctionCode.buildLookup(bean.getSpecialtyFunctionCode());
		this.referredbygp = bean.getReferredByGP() == null ? null : bean.getReferredByGP().buildVo(map);
		this.referralcategory = bean.getReferralCategory() == null ? null : ims.clinical.vo.lookups.ReferralCategory.buildLookup(bean.getReferralCategory());
		this.primarypreceeding = bean.getPrimaryPreceeding() == null ? null : ims.clinical.vo.lookups.PrimaryPreceeding.buildLookup(bean.getPrimaryPreceeding());
		this.authoringinfo = bean.getAuthoringInfo() == null ? null : bean.getAuthoringInfo().buildVo(map);
		this.carespell = bean.getCareSpell() == null ? null : new ims.core.admin.vo.CareSpellRefVo(new Integer(bean.getCareSpell().getId()), bean.getCareSpell().getVersion());
		this.carecontext = bean.getCareContext() == null ? null : new ims.core.admin.vo.CareContextRefVo(new Integer(bean.getCareContext().getId()), bean.getCareContext().getVersion());
		this.clinicalcontact = bean.getClinicalContact() == null ? null : new ims.core.admin.vo.ClinicalContactRefVo(new Integer(bean.getClinicalContact().getId()), bean.getClinicalContact().getVersion());
		this.suppliedreferralprofessional = bean.getSuppliedReferralProfessional() == null ? null : bean.getSuppliedReferralProfessional().buildVo(map);
		this.referredtolocation = bean.getReferredtoLocation() == null ? null : bean.getReferredtoLocation().buildVo(map);
		this.referralstatus = bean.getReferralStatus() == null ? null : ims.core.vo.lookups.CoreReferralStatus.buildLookup(bean.getReferralStatus());
		this.urgentcancerreferraltype = bean.getUrgentCancerReferralType() == null ? null : ims.core.vo.lookups.UrgentCancerReferralType.buildLookup(bean.getUrgentCancerReferralType());
		this.cancerstatus = bean.getCancerStatus() == null ? null : ims.core.vo.lookups.CancerStatus.buildLookup(bean.getCancerStatus());
		this.delayreasongpurgentreferral = bean.getDelayReasonGPUrgentReferral() == null ? null : ims.clinical.vo.lookups.DelayReasonGPUrgentReferral.buildLookup(bean.getDelayReasonGPUrgentReferral());
		this.delayreasontext = bean.getDelayReasonText();
		this.sysinfo = bean.getSysInfo() == null ? null : bean.getSysInfo().buildSystemInformation();
		this.recordingmos = bean.getRecordingMOS() == null ? null : bean.getRecordingMOS().buildVo(map);
		this.discipline = bean.getDiscipline() == null ? null : ims.clinical.vo.lookups.ReferralDiscipline.buildLookup(bean.getDiscipline());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.clinical.vo.beans.ReferralsRecordingShortVoBean bean = null;
		if(map != null)
			bean = (ims.clinical.vo.beans.ReferralsRecordingShortVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.clinical.vo.beans.ReferralsRecordingShortVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("REFERRALTYPE"))
			return getReferralType();
		if(fieldName.equals("REFERRALSOURCE"))
			return getReferralSource();
		if(fieldName.equals("DATESENT"))
			return getDateSent();
		if(fieldName.equals("DETAILS"))
			return getDetails();
		if(fieldName.equals("REFORGACODE"))
			return getRefOrgaCode();
		if(fieldName.equals("DATEFIRSTSEEN"))
			return getDateFirstSeen();
		if(fieldName.equals("REFERRALHCP"))
			return getReferralHCP();
		if(fieldName.equals("DATERECEIVED"))
			return getDateReceived();
		if(fieldName.equals("REFERREDBY"))
			return getReferredBy();
		if(fieldName.equals("REFERRALPRIORITY"))
			return getReferralPriority();
		if(fieldName.equals("REASONFORREFERRAL"))
			return getReasonForReferral();
		if(fieldName.equals("SPECIALTYFUNCTIONCODE"))
			return getSpecialtyFunctionCode();
		if(fieldName.equals("REFERREDBYGP"))
			return getReferredByGP();
		if(fieldName.equals("REFERRALCATEGORY"))
			return getReferralCategory();
		if(fieldName.equals("PRIMARYPRECEEDING"))
			return getPrimaryPreceeding();
		if(fieldName.equals("AUTHORINGINFO"))
			return getAuthoringInfo();
		if(fieldName.equals("CARESPELL"))
			return getCareSpell();
		if(fieldName.equals("CARECONTEXT"))
			return getCareContext();
		if(fieldName.equals("CLINICALCONTACT"))
			return getClinicalContact();
		if(fieldName.equals("SUPPLIEDREFERRALPROFESSIONAL"))
			return getSuppliedReferralProfessional();
		if(fieldName.equals("REFERREDTOLOCATION"))
			return getReferredtoLocation();
		if(fieldName.equals("REFERRALSTATUS"))
			return getReferralStatus();
		if(fieldName.equals("URGENTCANCERREFERRALTYPE"))
			return getUrgentCancerReferralType();
		if(fieldName.equals("CANCERSTATUS"))
			return getCancerStatus();
		if(fieldName.equals("DELAYREASONGPURGENTREFERRAL"))
			return getDelayReasonGPUrgentReferral();
		if(fieldName.equals("DELAYREASONTEXT"))
			return getDelayReasonText();
		if(fieldName.equals("SYSINFO"))
			return getSysInfo();
		if(fieldName.equals("RECORDINGMOS"))
			return getRecordingMOS();
		if(fieldName.equals("DISCIPLINE"))
			return getDiscipline();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getReferralTypeIsNotNull()
	{
		return this.referraltype != null;
	}
	public ims.clinical.vo.lookups.TypeOfReferral getReferralType()
	{
		return this.referraltype;
	}
	public void setReferralType(ims.clinical.vo.lookups.TypeOfReferral value)
	{
		this.isValidated = false;
		this.referraltype = value;
	}
	public boolean getReferralSourceIsNotNull()
	{
		return this.referralsource != null;
	}
	public ims.clinical.vo.lookups.ReferralSource getReferralSource()
	{
		return this.referralsource;
	}
	public void setReferralSource(ims.clinical.vo.lookups.ReferralSource value)
	{
		this.isValidated = false;
		this.referralsource = value;
	}
	public boolean getDateSentIsNotNull()
	{
		return this.datesent != null;
	}
	public ims.framework.utils.Date getDateSent()
	{
		return this.datesent;
	}
	public void setDateSent(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.datesent = value;
	}
	public boolean getDetailsIsNotNull()
	{
		return this.details != null;
	}
	public String getDetails()
	{
		return this.details;
	}
	public static int getDetailsMaxLength()
	{
		return 1000;
	}
	public void setDetails(String value)
	{
		this.isValidated = false;
		this.details = value;
	}
	public boolean getRefOrgaCodeIsNotNull()
	{
		return this.reforgacode != null;
	}
	public ims.core.vo.OrgLiteVo getRefOrgaCode()
	{
		return this.reforgacode;
	}
	public void setRefOrgaCode(ims.core.vo.OrgLiteVo value)
	{
		this.isValidated = false;
		this.reforgacode = value;
	}
	public boolean getDateFirstSeenIsNotNull()
	{
		return this.datefirstseen != null;
	}
	public ims.framework.utils.Date getDateFirstSeen()
	{
		return this.datefirstseen;
	}
	public void setDateFirstSeen(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.datefirstseen = value;
	}
	public boolean getReferralHCPIsNotNull()
	{
		return this.referralhcp != null;
	}
	public ims.core.vo.MemberOfStaffShortVo getReferralHCP()
	{
		return this.referralhcp;
	}
	public void setReferralHCP(ims.core.vo.MemberOfStaffShortVo value)
	{
		this.isValidated = false;
		this.referralhcp = value;
	}
	public boolean getDateReceivedIsNotNull()
	{
		return this.datereceived != null;
	}
	public ims.framework.utils.Date getDateReceived()
	{
		return this.datereceived;
	}
	public void setDateReceived(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.datereceived = value;
	}
	public boolean getReferredByIsNotNull()
	{
		return this.referredby != null;
	}
	public ims.core.vo.Hcp getReferredBy()
	{
		return this.referredby;
	}
	public void setReferredBy(ims.core.vo.Hcp value)
	{
		this.isValidated = false;
		this.referredby = value;
	}
	public boolean getReferralPriorityIsNotNull()
	{
		return this.referralpriority != null;
	}
	public ims.core.vo.lookups.ReferralPriority getReferralPriority()
	{
		return this.referralpriority;
	}
	public void setReferralPriority(ims.core.vo.lookups.ReferralPriority value)
	{
		this.isValidated = false;
		this.referralpriority = value;
	}
	public boolean getReasonForReferralIsNotNull()
	{
		return this.reasonforreferral != null;
	}
	public ims.core.vo.lookups.ReasonForReferral getReasonForReferral()
	{
		return this.reasonforreferral;
	}
	public void setReasonForReferral(ims.core.vo.lookups.ReasonForReferral value)
	{
		this.isValidated = false;
		this.reasonforreferral = value;
	}
	public boolean getSpecialtyFunctionCodeIsNotNull()
	{
		return this.specialtyfunctioncode != null;
	}
	public ims.clinical.vo.lookups.SpecialtyFunctionCode getSpecialtyFunctionCode()
	{
		return this.specialtyfunctioncode;
	}
	public void setSpecialtyFunctionCode(ims.clinical.vo.lookups.SpecialtyFunctionCode value)
	{
		this.isValidated = false;
		this.specialtyfunctioncode = value;
	}
	public boolean getReferredByGPIsNotNull()
	{
		return this.referredbygp != null;
	}
	public ims.core.vo.GpShortVo getReferredByGP()
	{
		return this.referredbygp;
	}
	public void setReferredByGP(ims.core.vo.GpShortVo value)
	{
		this.isValidated = false;
		this.referredbygp = value;
	}
	public boolean getReferralCategoryIsNotNull()
	{
		return this.referralcategory != null;
	}
	public ims.clinical.vo.lookups.ReferralCategory getReferralCategory()
	{
		return this.referralcategory;
	}
	public void setReferralCategory(ims.clinical.vo.lookups.ReferralCategory value)
	{
		this.isValidated = false;
		this.referralcategory = value;
	}
	public boolean getPrimaryPreceedingIsNotNull()
	{
		return this.primarypreceeding != null;
	}
	public ims.clinical.vo.lookups.PrimaryPreceeding getPrimaryPreceeding()
	{
		return this.primarypreceeding;
	}
	public void setPrimaryPreceeding(ims.clinical.vo.lookups.PrimaryPreceeding value)
	{
		this.isValidated = false;
		this.primarypreceeding = value;
	}
	public boolean getAuthoringInfoIsNotNull()
	{
		return this.authoringinfo != null;
	}
	public ims.core.vo.AuthoringInformationVo getAuthoringInfo()
	{
		return this.authoringinfo;
	}
	public void setAuthoringInfo(ims.core.vo.AuthoringInformationVo value)
	{
		this.isValidated = false;
		this.authoringinfo = value;
	}
	public boolean getCareSpellIsNotNull()
	{
		return this.carespell != null;
	}
	public ims.core.admin.vo.CareSpellRefVo getCareSpell()
	{
		return this.carespell;
	}
	public void setCareSpell(ims.core.admin.vo.CareSpellRefVo value)
	{
		this.isValidated = false;
		this.carespell = value;
	}
	public boolean getCareContextIsNotNull()
	{
		return this.carecontext != null;
	}
	public ims.core.admin.vo.CareContextRefVo getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.core.admin.vo.CareContextRefVo value)
	{
		this.isValidated = false;
		this.carecontext = value;
	}
	public boolean getClinicalContactIsNotNull()
	{
		return this.clinicalcontact != null;
	}
	public ims.core.admin.vo.ClinicalContactRefVo getClinicalContact()
	{
		return this.clinicalcontact;
	}
	public void setClinicalContact(ims.core.admin.vo.ClinicalContactRefVo value)
	{
		this.isValidated = false;
		this.clinicalcontact = value;
	}
	public boolean getSuppliedReferralProfessionalIsNotNull()
	{
		return this.suppliedreferralprofessional != null;
	}
	public ims.clinical.vo.ReferralProffessionalDetailVo getSuppliedReferralProfessional()
	{
		return this.suppliedreferralprofessional;
	}
	public void setSuppliedReferralProfessional(ims.clinical.vo.ReferralProffessionalDetailVo value)
	{
		this.isValidated = false;
		this.suppliedreferralprofessional = value;
	}
	public boolean getReferredtoLocationIsNotNull()
	{
		return this.referredtolocation != null;
	}
	public ims.core.vo.LocShortVo getReferredtoLocation()
	{
		return this.referredtolocation;
	}
	public void setReferredtoLocation(ims.core.vo.LocShortVo value)
	{
		this.isValidated = false;
		this.referredtolocation = value;
	}
	public boolean getReferralStatusIsNotNull()
	{
		return this.referralstatus != null;
	}
	public ims.core.vo.lookups.CoreReferralStatus getReferralStatus()
	{
		return this.referralstatus;
	}
	public void setReferralStatus(ims.core.vo.lookups.CoreReferralStatus value)
	{
		this.isValidated = false;
		this.referralstatus = value;
	}
	public boolean getUrgentCancerReferralTypeIsNotNull()
	{
		return this.urgentcancerreferraltype != null;
	}
	public ims.core.vo.lookups.UrgentCancerReferralType getUrgentCancerReferralType()
	{
		return this.urgentcancerreferraltype;
	}
	public void setUrgentCancerReferralType(ims.core.vo.lookups.UrgentCancerReferralType value)
	{
		this.isValidated = false;
		this.urgentcancerreferraltype = value;
	}
	public boolean getCancerStatusIsNotNull()
	{
		return this.cancerstatus != null;
	}
	public ims.core.vo.lookups.CancerStatus getCancerStatus()
	{
		return this.cancerstatus;
	}
	public void setCancerStatus(ims.core.vo.lookups.CancerStatus value)
	{
		this.isValidated = false;
		this.cancerstatus = value;
	}
	public boolean getDelayReasonGPUrgentReferralIsNotNull()
	{
		return this.delayreasongpurgentreferral != null;
	}
	public ims.clinical.vo.lookups.DelayReasonGPUrgentReferral getDelayReasonGPUrgentReferral()
	{
		return this.delayreasongpurgentreferral;
	}
	public void setDelayReasonGPUrgentReferral(ims.clinical.vo.lookups.DelayReasonGPUrgentReferral value)
	{
		this.isValidated = false;
		this.delayreasongpurgentreferral = value;
	}
	public boolean getDelayReasonTextIsNotNull()
	{
		return this.delayreasontext != null;
	}
	public String getDelayReasonText()
	{
		return this.delayreasontext;
	}
	public static int getDelayReasonTextMaxLength()
	{
		return 1000;
	}
	public void setDelayReasonText(String value)
	{
		this.isValidated = false;
		this.delayreasontext = value;
	}
	public boolean getSysInfoIsNotNull()
	{
		return this.sysinfo != null;
	}
	public ims.vo.SystemInformation getSysInfo()
	{
		return this.sysinfo;
	}
	public void setSysInfo(ims.vo.SystemInformation value)
	{
		this.isValidated = false;
		this.sysinfo = value;
	}
	public boolean getRecordingMOSIsNotNull()
	{
		return this.recordingmos != null;
	}
	public ims.core.vo.MemberOfStaffLiteVo getRecordingMOS()
	{
		return this.recordingmos;
	}
	public void setRecordingMOS(ims.core.vo.MemberOfStaffLiteVo value)
	{
		this.isValidated = false;
		this.recordingmos = value;
	}
	public boolean getDisciplineIsNotNull()
	{
		return this.discipline != null;
	}
	public ims.clinical.vo.lookups.ReferralDiscipline getDiscipline()
	{
		return this.discipline;
	}
	public void setDiscipline(ims.clinical.vo.lookups.ReferralDiscipline value)
	{
		this.isValidated = false;
		this.discipline = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.referredby != null)
		{
			if(!this.referredby.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.referredbygp != null)
		{
			if(!this.referredbygp.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.authoringinfo != null)
		{
			if(!this.authoringinfo.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.suppliedreferralprofessional != null)
		{
			if(!this.suppliedreferralprofessional.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.referredtolocation != null)
		{
			if(!this.referredtolocation.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.recordingmos != null)
		{
			if(!this.recordingmos.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.datesent == null)
			listOfErrors.add("Date Decision to Refer is mandatory");
		if(this.details != null)
			if(this.details.length() > 1000)
				listOfErrors.add("The length of the field [details] in the value object [ims.clinical.vo.ReferralsRecordingShortVo] is too big. It should be less or equal to 1000");
		if(this.referredby != null)
		{
			String[] listOfOtherErrors = this.referredby.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.referredbygp != null)
		{
			String[] listOfOtherErrors = this.referredbygp.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.referralcategory == null)
			listOfErrors.add("ReferralCategory is mandatory");
		if(this.authoringinfo == null)
			listOfErrors.add("AuthoringInfo is mandatory");
		if(this.authoringinfo != null)
		{
			String[] listOfOtherErrors = this.authoringinfo.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.carecontext == null)
			listOfErrors.add("CareContext is mandatory");
		if(this.suppliedreferralprofessional != null)
		{
			String[] listOfOtherErrors = this.suppliedreferralprofessional.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.referredtolocation != null)
		{
			String[] listOfOtherErrors = this.referredtolocation.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.delayreasontext != null)
			if(this.delayreasontext.length() > 1000)
				listOfErrors.add("The length of the field [delayreasontext] in the value object [ims.clinical.vo.ReferralsRecordingShortVo] is too big. It should be less or equal to 1000");
		if(this.recordingmos != null)
		{
			String[] listOfOtherErrors = this.recordingmos.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ReferralsRecordingShortVo clone = new ReferralsRecordingShortVo(this.id, this.version);
		
		if(this.referraltype == null)
			clone.referraltype = null;
		else
			clone.referraltype = (ims.clinical.vo.lookups.TypeOfReferral)this.referraltype.clone();
		if(this.referralsource == null)
			clone.referralsource = null;
		else
			clone.referralsource = (ims.clinical.vo.lookups.ReferralSource)this.referralsource.clone();
		if(this.datesent == null)
			clone.datesent = null;
		else
			clone.datesent = (ims.framework.utils.Date)this.datesent.clone();
		clone.details = this.details;
		if(this.reforgacode == null)
			clone.reforgacode = null;
		else
			clone.reforgacode = (ims.core.vo.OrgLiteVo)this.reforgacode.clone();
		if(this.datefirstseen == null)
			clone.datefirstseen = null;
		else
			clone.datefirstseen = (ims.framework.utils.Date)this.datefirstseen.clone();
		if(this.referralhcp == null)
			clone.referralhcp = null;
		else
			clone.referralhcp = (ims.core.vo.MemberOfStaffShortVo)this.referralhcp.clone();
		if(this.datereceived == null)
			clone.datereceived = null;
		else
			clone.datereceived = (ims.framework.utils.Date)this.datereceived.clone();
		if(this.referredby == null)
			clone.referredby = null;
		else
			clone.referredby = (ims.core.vo.Hcp)this.referredby.clone();
		if(this.referralpriority == null)
			clone.referralpriority = null;
		else
			clone.referralpriority = (ims.core.vo.lookups.ReferralPriority)this.referralpriority.clone();
		if(this.reasonforreferral == null)
			clone.reasonforreferral = null;
		else
			clone.reasonforreferral = (ims.core.vo.lookups.ReasonForReferral)this.reasonforreferral.clone();
		if(this.specialtyfunctioncode == null)
			clone.specialtyfunctioncode = null;
		else
			clone.specialtyfunctioncode = (ims.clinical.vo.lookups.SpecialtyFunctionCode)this.specialtyfunctioncode.clone();
		if(this.referredbygp == null)
			clone.referredbygp = null;
		else
			clone.referredbygp = (ims.core.vo.GpShortVo)this.referredbygp.clone();
		if(this.referralcategory == null)
			clone.referralcategory = null;
		else
			clone.referralcategory = (ims.clinical.vo.lookups.ReferralCategory)this.referralcategory.clone();
		if(this.primarypreceeding == null)
			clone.primarypreceeding = null;
		else
			clone.primarypreceeding = (ims.clinical.vo.lookups.PrimaryPreceeding)this.primarypreceeding.clone();
		if(this.authoringinfo == null)
			clone.authoringinfo = null;
		else
			clone.authoringinfo = (ims.core.vo.AuthoringInformationVo)this.authoringinfo.clone();
		clone.carespell = this.carespell;
		clone.carecontext = this.carecontext;
		clone.clinicalcontact = this.clinicalcontact;
		if(this.suppliedreferralprofessional == null)
			clone.suppliedreferralprofessional = null;
		else
			clone.suppliedreferralprofessional = (ims.clinical.vo.ReferralProffessionalDetailVo)this.suppliedreferralprofessional.clone();
		if(this.referredtolocation == null)
			clone.referredtolocation = null;
		else
			clone.referredtolocation = (ims.core.vo.LocShortVo)this.referredtolocation.clone();
		if(this.referralstatus == null)
			clone.referralstatus = null;
		else
			clone.referralstatus = (ims.core.vo.lookups.CoreReferralStatus)this.referralstatus.clone();
		if(this.urgentcancerreferraltype == null)
			clone.urgentcancerreferraltype = null;
		else
			clone.urgentcancerreferraltype = (ims.core.vo.lookups.UrgentCancerReferralType)this.urgentcancerreferraltype.clone();
		if(this.cancerstatus == null)
			clone.cancerstatus = null;
		else
			clone.cancerstatus = (ims.core.vo.lookups.CancerStatus)this.cancerstatus.clone();
		if(this.delayreasongpurgentreferral == null)
			clone.delayreasongpurgentreferral = null;
		else
			clone.delayreasongpurgentreferral = (ims.clinical.vo.lookups.DelayReasonGPUrgentReferral)this.delayreasongpurgentreferral.clone();
		clone.delayreasontext = this.delayreasontext;
		if(this.sysinfo == null)
			clone.sysinfo = null;
		else
			clone.sysinfo = (ims.vo.SystemInformation)this.sysinfo.clone();
		if(this.recordingmos == null)
			clone.recordingmos = null;
		else
			clone.recordingmos = (ims.core.vo.MemberOfStaffLiteVo)this.recordingmos.clone();
		if(this.discipline == null)
			clone.discipline = null;
		else
			clone.discipline = (ims.clinical.vo.lookups.ReferralDiscipline)this.discipline.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ReferralsRecordingShortVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ReferralsRecordingShortVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((ReferralsRecordingShortVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((ReferralsRecordingShortVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.referraltype != null)
			count++;
		if(this.referralsource != null)
			count++;
		if(this.datesent != null)
			count++;
		if(this.details != null)
			count++;
		if(this.reforgacode != null)
			count++;
		if(this.datefirstseen != null)
			count++;
		if(this.referralhcp != null)
			count++;
		if(this.datereceived != null)
			count++;
		if(this.referredby != null)
			count++;
		if(this.referralpriority != null)
			count++;
		if(this.reasonforreferral != null)
			count++;
		if(this.specialtyfunctioncode != null)
			count++;
		if(this.referredbygp != null)
			count++;
		if(this.referralcategory != null)
			count++;
		if(this.primarypreceeding != null)
			count++;
		if(this.authoringinfo != null)
			count++;
		if(this.carespell != null)
			count++;
		if(this.carecontext != null)
			count++;
		if(this.clinicalcontact != null)
			count++;
		if(this.suppliedreferralprofessional != null)
			count++;
		if(this.referredtolocation != null)
			count++;
		if(this.referralstatus != null)
			count++;
		if(this.urgentcancerreferraltype != null)
			count++;
		if(this.cancerstatus != null)
			count++;
		if(this.delayreasongpurgentreferral != null)
			count++;
		if(this.delayreasontext != null)
			count++;
		if(this.sysinfo != null)
			count++;
		if(this.recordingmos != null)
			count++;
		if(this.discipline != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 29;
	}
	protected ims.clinical.vo.lookups.TypeOfReferral referraltype;
	protected ims.clinical.vo.lookups.ReferralSource referralsource;
	protected ims.framework.utils.Date datesent;
	protected String details;
	protected ims.core.vo.OrgLiteVo reforgacode;
	protected ims.framework.utils.Date datefirstseen;
	protected ims.core.vo.MemberOfStaffShortVo referralhcp;
	protected ims.framework.utils.Date datereceived;
	protected ims.core.vo.Hcp referredby;
	protected ims.core.vo.lookups.ReferralPriority referralpriority;
	protected ims.core.vo.lookups.ReasonForReferral reasonforreferral;
	protected ims.clinical.vo.lookups.SpecialtyFunctionCode specialtyfunctioncode;
	protected ims.core.vo.GpShortVo referredbygp;
	protected ims.clinical.vo.lookups.ReferralCategory referralcategory;
	protected ims.clinical.vo.lookups.PrimaryPreceeding primarypreceeding;
	protected ims.core.vo.AuthoringInformationVo authoringinfo;
	protected ims.core.admin.vo.CareSpellRefVo carespell;
	protected ims.core.admin.vo.CareContextRefVo carecontext;
	protected ims.core.admin.vo.ClinicalContactRefVo clinicalcontact;
	protected ims.clinical.vo.ReferralProffessionalDetailVo suppliedreferralprofessional;
	protected ims.core.vo.LocShortVo referredtolocation;
	protected ims.core.vo.lookups.CoreReferralStatus referralstatus;
	protected ims.core.vo.lookups.UrgentCancerReferralType urgentcancerreferraltype;
	protected ims.core.vo.lookups.CancerStatus cancerstatus;
	protected ims.clinical.vo.lookups.DelayReasonGPUrgentReferral delayreasongpurgentreferral;
	protected String delayreasontext;
	protected ims.vo.SystemInformation sysinfo;
	protected ims.core.vo.MemberOfStaffLiteVo recordingmos;
	protected ims.clinical.vo.lookups.ReferralDiscipline discipline;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
