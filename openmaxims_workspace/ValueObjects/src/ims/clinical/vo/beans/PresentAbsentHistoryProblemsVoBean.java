//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.vo.beans;

public class PresentAbsentHistoryProblemsVoBean extends ims.vo.ValueObjectBean
{
	public PresentAbsentHistoryProblemsVoBean()
	{
	}
	public PresentAbsentHistoryProblemsVoBean(ims.clinical.vo.PresentAbsentHistoryProblemsVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.presentproblems = vo.getPresentProblems() == null ? null : vo.getPresentProblems().getBeanCollection();
		this.absentproblems = vo.getAbsentProblems() == null ? null : vo.getAbsentProblems().getBeanCollection();
		this.historypresentingproblem = vo.getHistoryPresentingProblem();
		this.authoringinformation = vo.getAuthoringInformation() == null ? null : (ims.core.vo.beans.AuthoringInformationVoBean)vo.getAuthoringInformation().getBean();
		this.clinicalcontact = vo.getClinicalContact() == null ? null : new ims.vo.RefVoBean(vo.getClinicalContact().getBoId(), vo.getClinicalContact().getBoVersion());
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.clinical.vo.PresentAbsentHistoryProblemsVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.presentproblems = vo.getPresentProblems() == null ? null : vo.getPresentProblems().getBeanCollection();
		this.absentproblems = vo.getAbsentProblems() == null ? null : vo.getAbsentProblems().getBeanCollection();
		this.historypresentingproblem = vo.getHistoryPresentingProblem();
		this.authoringinformation = vo.getAuthoringInformation() == null ? null : (ims.core.vo.beans.AuthoringInformationVoBean)vo.getAuthoringInformation().getBean(map);
		this.clinicalcontact = vo.getClinicalContact() == null ? null : new ims.vo.RefVoBean(vo.getClinicalContact().getBoId(), vo.getClinicalContact().getBoVersion());
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
	}

	public ims.clinical.vo.PresentAbsentHistoryProblemsVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.clinical.vo.PresentAbsentHistoryProblemsVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.clinical.vo.PresentAbsentHistoryProblemsVo vo = null;
		if(map != null)
			vo = (ims.clinical.vo.PresentAbsentHistoryProblemsVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.clinical.vo.PresentAbsentHistoryProblemsVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.clinical.vo.beans.PatientPresentingProblemsVoBean[] getPresentProblems()
	{
		return this.presentproblems;
	}
	public void setPresentProblems(ims.clinical.vo.beans.PatientPresentingProblemsVoBean[] value)
	{
		this.presentproblems = value;
	}
	public ims.clinical.vo.beans.AbsentPatientPresentingProblemVoBean[] getAbsentProblems()
	{
		return this.absentproblems;
	}
	public void setAbsentProblems(ims.clinical.vo.beans.AbsentPatientPresentingProblemVoBean[] value)
	{
		this.absentproblems = value;
	}
	public String getHistoryPresentingProblem()
	{
		return this.historypresentingproblem;
	}
	public void setHistoryPresentingProblem(String value)
	{
		this.historypresentingproblem = value;
	}
	public ims.core.vo.beans.AuthoringInformationVoBean getAuthoringInformation()
	{
		return this.authoringinformation;
	}
	public void setAuthoringInformation(ims.core.vo.beans.AuthoringInformationVoBean value)
	{
		this.authoringinformation = value;
	}
	public ims.vo.RefVoBean getClinicalContact()
	{
		return this.clinicalcontact;
	}
	public void setClinicalContact(ims.vo.RefVoBean value)
	{
		this.clinicalcontact = value;
	}
	public ims.vo.RefVoBean getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.vo.RefVoBean value)
	{
		this.carecontext = value;
	}

	private Integer id;
	private int version;
	private ims.clinical.vo.beans.PatientPresentingProblemsVoBean[] presentproblems;
	private ims.clinical.vo.beans.AbsentPatientPresentingProblemVoBean[] absentproblems;
	private String historypresentingproblem;
	private ims.core.vo.beans.AuthoringInformationVoBean authoringinformation;
	private ims.vo.RefVoBean clinicalcontact;
	private ims.vo.RefVoBean carecontext;
}
