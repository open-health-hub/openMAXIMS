//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.vo;


public class TrackingAttendanceWorklist_SearchCriteriaVo extends ims.vo.ValueObject implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public TrackingAttendanceWorklist_SearchCriteriaVo()
	{
	}
	public TrackingAttendanceWorklist_SearchCriteriaVo(ims.emergency.vo.beans.TrackingAttendanceWorklist_SearchCriteriaVoBean bean)
	{
		this.medic = bean.getMedic() == null ? null : bean.getMedic().buildVo();
		this.nurse = bean.getNurse() == null ? null : bean.getNurse().buildVo();
		this.specialty = bean.getSpecialty() == null ? null : ims.core.vo.lookups.Specialty.buildLookup(bean.getSpecialty());
		this.teamspecialty = bean.getTeamSpecialty() == null ? null : ims.emergency.vo.lookups.ReferralSpecialtyConsultantOrTeam.buildLookup(bean.getTeamSpecialty());
		this.priority = bean.getPriority() == null ? null : ims.emergency.vo.lookups.TriagePriority.buildLookup(bean.getPriority());
		this.breachedprioritykpi = bean.getBreachedPriorityKPI();
		this.patientsurname = bean.getPatientSurname();
		this.addresscontains = bean.getAddressContains();
		this.attendancefrom = bean.getAttendanceFrom() == null ? null : bean.getAttendanceFrom().buildDate();
		this.attendanceto = bean.getAttendanceTo() == null ? null : bean.getAttendanceTo().buildDate();
		this.triagefrom = bean.getTriageFrom() == null ? null : bean.getTriageFrom().buildDate();
		this.triageto = bean.getTriageTo() == null ? null : bean.getTriageTo().buildDate();
		this.dischargefrom = bean.getDischargeFrom() == null ? null : bean.getDischargeFrom().buildDate();
		this.dischargeto = bean.getDischargeTo() == null ? null : bean.getDischargeTo().buildDate();
		this.edstatus = bean.getEDStatus();
		this.bedallocation = bean.getBedAllocation();
		this.awaitingreview = bean.getAwaitingReview();
		this.outcome = bean.getOutcome() == null ? null : ims.emergency.vo.lookups.AttendanceOutcome.buildLookup(bean.getOutcome());
		this.sourceofreferral = bean.getSourceOfReferral() == null ? null : ims.emergency.vo.lookups.ReferredBy.buildLookup(bean.getSourceOfReferral());
		this.attendanceid = bean.getAttendanceID();
		this.presentingproblem = bean.getPresentingProblem() == null ? null : ims.emergency.vo.lookups.PresentingComplaint.buildLookup(bean.getPresentingProblem());
		this.attendancenotcoded = bean.getAttendanceNotCoded();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.emergency.vo.beans.TrackingAttendanceWorklist_SearchCriteriaVoBean bean)
	{
		this.medic = bean.getMedic() == null ? null : bean.getMedic().buildVo(map);
		this.nurse = bean.getNurse() == null ? null : bean.getNurse().buildVo(map);
		this.specialty = bean.getSpecialty() == null ? null : ims.core.vo.lookups.Specialty.buildLookup(bean.getSpecialty());
		this.teamspecialty = bean.getTeamSpecialty() == null ? null : ims.emergency.vo.lookups.ReferralSpecialtyConsultantOrTeam.buildLookup(bean.getTeamSpecialty());
		this.priority = bean.getPriority() == null ? null : ims.emergency.vo.lookups.TriagePriority.buildLookup(bean.getPriority());
		this.breachedprioritykpi = bean.getBreachedPriorityKPI();
		this.patientsurname = bean.getPatientSurname();
		this.addresscontains = bean.getAddressContains();
		this.attendancefrom = bean.getAttendanceFrom() == null ? null : bean.getAttendanceFrom().buildDate();
		this.attendanceto = bean.getAttendanceTo() == null ? null : bean.getAttendanceTo().buildDate();
		this.triagefrom = bean.getTriageFrom() == null ? null : bean.getTriageFrom().buildDate();
		this.triageto = bean.getTriageTo() == null ? null : bean.getTriageTo().buildDate();
		this.dischargefrom = bean.getDischargeFrom() == null ? null : bean.getDischargeFrom().buildDate();
		this.dischargeto = bean.getDischargeTo() == null ? null : bean.getDischargeTo().buildDate();
		this.edstatus = bean.getEDStatus();
		this.bedallocation = bean.getBedAllocation();
		this.awaitingreview = bean.getAwaitingReview();
		this.outcome = bean.getOutcome() == null ? null : ims.emergency.vo.lookups.AttendanceOutcome.buildLookup(bean.getOutcome());
		this.sourceofreferral = bean.getSourceOfReferral() == null ? null : ims.emergency.vo.lookups.ReferredBy.buildLookup(bean.getSourceOfReferral());
		this.attendanceid = bean.getAttendanceID();
		this.presentingproblem = bean.getPresentingProblem() == null ? null : ims.emergency.vo.lookups.PresentingComplaint.buildLookup(bean.getPresentingProblem());
		this.attendancenotcoded = bean.getAttendanceNotCoded();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.emergency.vo.beans.TrackingAttendanceWorklist_SearchCriteriaVoBean bean = null;
		if(map != null)
			bean = (ims.emergency.vo.beans.TrackingAttendanceWorklist_SearchCriteriaVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.emergency.vo.beans.TrackingAttendanceWorklist_SearchCriteriaVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public boolean getMedicIsNotNull()
	{
		return this.medic != null;
	}
	public ims.core.vo.MedicVo getMedic()
	{
		return this.medic;
	}
	public void setMedic(ims.core.vo.MedicVo value)
	{
		this.isValidated = false;
		this.medic = value;
	}
	public boolean getNurseIsNotNull()
	{
		return this.nurse != null;
	}
	public ims.core.vo.NurseVo getNurse()
	{
		return this.nurse;
	}
	public void setNurse(ims.core.vo.NurseVo value)
	{
		this.isValidated = false;
		this.nurse = value;
	}
	public boolean getSpecialtyIsNotNull()
	{
		return this.specialty != null;
	}
	public ims.core.vo.lookups.Specialty getSpecialty()
	{
		return this.specialty;
	}
	public void setSpecialty(ims.core.vo.lookups.Specialty value)
	{
		this.isValidated = false;
		this.specialty = value;
	}
	public boolean getTeamSpecialtyIsNotNull()
	{
		return this.teamspecialty != null;
	}
	public ims.emergency.vo.lookups.ReferralSpecialtyConsultantOrTeam getTeamSpecialty()
	{
		return this.teamspecialty;
	}
	public void setTeamSpecialty(ims.emergency.vo.lookups.ReferralSpecialtyConsultantOrTeam value)
	{
		this.isValidated = false;
		this.teamspecialty = value;
	}
	public boolean getPriorityIsNotNull()
	{
		return this.priority != null;
	}
	public ims.emergency.vo.lookups.TriagePriority getPriority()
	{
		return this.priority;
	}
	public void setPriority(ims.emergency.vo.lookups.TriagePriority value)
	{
		this.isValidated = false;
		this.priority = value;
	}
	public boolean getBreachedPriorityKPIIsNotNull()
	{
		return this.breachedprioritykpi != null;
	}
	public Boolean getBreachedPriorityKPI()
	{
		return this.breachedprioritykpi;
	}
	public void setBreachedPriorityKPI(Boolean value)
	{
		this.isValidated = false;
		this.breachedprioritykpi = value;
	}
	public boolean getPatientSurnameIsNotNull()
	{
		return this.patientsurname != null;
	}
	public String getPatientSurname()
	{
		return this.patientsurname;
	}
	public static int getPatientSurnameMaxLength()
	{
		return 255;
	}
	public void setPatientSurname(String value)
	{
		this.isValidated = false;
		this.patientsurname = value;
	}
	public boolean getAddressContainsIsNotNull()
	{
		return this.addresscontains != null;
	}
	public String getAddressContains()
	{
		return this.addresscontains;
	}
	public static int getAddressContainsMaxLength()
	{
		return 255;
	}
	public void setAddressContains(String value)
	{
		this.isValidated = false;
		this.addresscontains = value;
	}
	public boolean getAttendanceFromIsNotNull()
	{
		return this.attendancefrom != null;
	}
	public ims.framework.utils.Date getAttendanceFrom()
	{
		return this.attendancefrom;
	}
	public void setAttendanceFrom(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.attendancefrom = value;
	}
	public boolean getAttendanceToIsNotNull()
	{
		return this.attendanceto != null;
	}
	public ims.framework.utils.Date getAttendanceTo()
	{
		return this.attendanceto;
	}
	public void setAttendanceTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.attendanceto = value;
	}
	public boolean getTriageFromIsNotNull()
	{
		return this.triagefrom != null;
	}
	public ims.framework.utils.Date getTriageFrom()
	{
		return this.triagefrom;
	}
	public void setTriageFrom(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.triagefrom = value;
	}
	public boolean getTriageToIsNotNull()
	{
		return this.triageto != null;
	}
	public ims.framework.utils.Date getTriageTo()
	{
		return this.triageto;
	}
	public void setTriageTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.triageto = value;
	}
	public boolean getDischargeFromIsNotNull()
	{
		return this.dischargefrom != null;
	}
	public ims.framework.utils.Date getDischargeFrom()
	{
		return this.dischargefrom;
	}
	public void setDischargeFrom(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.dischargefrom = value;
	}
	public boolean getDischargeToIsNotNull()
	{
		return this.dischargeto != null;
	}
	public ims.framework.utils.Date getDischargeTo()
	{
		return this.dischargeto;
	}
	public void setDischargeTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.dischargeto = value;
	}
	public boolean getEDStatusIsNotNull()
	{
		return this.edstatus != null;
	}
	public Integer getEDStatus()
	{
		return this.edstatus;
	}
	public void setEDStatus(Integer value)
	{
		this.isValidated = false;
		this.edstatus = value;
	}
	public boolean getBedAllocationIsNotNull()
	{
		return this.bedallocation != null;
	}
	public Integer getBedAllocation()
	{
		return this.bedallocation;
	}
	public void setBedAllocation(Integer value)
	{
		this.isValidated = false;
		this.bedallocation = value;
	}
	public boolean getAwaitingReviewIsNotNull()
	{
		return this.awaitingreview != null;
	}
	public Boolean getAwaitingReview()
	{
		return this.awaitingreview;
	}
	public void setAwaitingReview(Boolean value)
	{
		this.isValidated = false;
		this.awaitingreview = value;
	}
	public boolean getOutcomeIsNotNull()
	{
		return this.outcome != null;
	}
	public ims.emergency.vo.lookups.AttendanceOutcome getOutcome()
	{
		return this.outcome;
	}
	public void setOutcome(ims.emergency.vo.lookups.AttendanceOutcome value)
	{
		this.isValidated = false;
		this.outcome = value;
	}
	public boolean getSourceOfReferralIsNotNull()
	{
		return this.sourceofreferral != null;
	}
	public ims.emergency.vo.lookups.ReferredBy getSourceOfReferral()
	{
		return this.sourceofreferral;
	}
	public void setSourceOfReferral(ims.emergency.vo.lookups.ReferredBy value)
	{
		this.isValidated = false;
		this.sourceofreferral = value;
	}
	public boolean getAttendanceIDIsNotNull()
	{
		return this.attendanceid != null;
	}
	public Integer getAttendanceID()
	{
		return this.attendanceid;
	}
	public void setAttendanceID(Integer value)
	{
		this.isValidated = false;
		this.attendanceid = value;
	}
	public boolean getPresentingProblemIsNotNull()
	{
		return this.presentingproblem != null;
	}
	public ims.emergency.vo.lookups.PresentingComplaint getPresentingProblem()
	{
		return this.presentingproblem;
	}
	public void setPresentingProblem(ims.emergency.vo.lookups.PresentingComplaint value)
	{
		this.isValidated = false;
		this.presentingproblem = value;
	}
	public boolean getAttendanceNotCodedIsNotNull()
	{
		return this.attendancenotcoded != null;
	}
	public Boolean getAttendanceNotCoded()
	{
		return this.attendancenotcoded;
	}
	public void setAttendanceNotCoded(Boolean value)
	{
		this.isValidated = false;
		this.attendancenotcoded = value;
	}
	public final String getIItemText()
	{
		return toString();
	}
	public final Integer getBoId() 
	{
		return null;
	}
	public final String getBoClassName()
	{
		return null;
	}
	public boolean equals(Object obj)
	{
		if(obj == null)
			return false;
		if(!(obj instanceof TrackingAttendanceWorklist_SearchCriteriaVo))
			return false;
		TrackingAttendanceWorklist_SearchCriteriaVo compareObj = (TrackingAttendanceWorklist_SearchCriteriaVo)obj;
		if(this.getMedic() == null && compareObj.getMedic() != null)
			return false;
		if(this.getMedic() != null && compareObj.getMedic() == null)
			return false;
		if(this.getMedic() != null && compareObj.getMedic() != null)
			return this.getMedic().equals(compareObj.getMedic());
		return super.equals(obj);
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		TrackingAttendanceWorklist_SearchCriteriaVo clone = new TrackingAttendanceWorklist_SearchCriteriaVo();
		
		if(this.medic == null)
			clone.medic = null;
		else
			clone.medic = (ims.core.vo.MedicVo)this.medic.clone();
		if(this.nurse == null)
			clone.nurse = null;
		else
			clone.nurse = (ims.core.vo.NurseVo)this.nurse.clone();
		if(this.specialty == null)
			clone.specialty = null;
		else
			clone.specialty = (ims.core.vo.lookups.Specialty)this.specialty.clone();
		if(this.teamspecialty == null)
			clone.teamspecialty = null;
		else
			clone.teamspecialty = (ims.emergency.vo.lookups.ReferralSpecialtyConsultantOrTeam)this.teamspecialty.clone();
		if(this.priority == null)
			clone.priority = null;
		else
			clone.priority = (ims.emergency.vo.lookups.TriagePriority)this.priority.clone();
		clone.breachedprioritykpi = this.breachedprioritykpi;
		clone.patientsurname = this.patientsurname;
		clone.addresscontains = this.addresscontains;
		if(this.attendancefrom == null)
			clone.attendancefrom = null;
		else
			clone.attendancefrom = (ims.framework.utils.Date)this.attendancefrom.clone();
		if(this.attendanceto == null)
			clone.attendanceto = null;
		else
			clone.attendanceto = (ims.framework.utils.Date)this.attendanceto.clone();
		if(this.triagefrom == null)
			clone.triagefrom = null;
		else
			clone.triagefrom = (ims.framework.utils.Date)this.triagefrom.clone();
		if(this.triageto == null)
			clone.triageto = null;
		else
			clone.triageto = (ims.framework.utils.Date)this.triageto.clone();
		if(this.dischargefrom == null)
			clone.dischargefrom = null;
		else
			clone.dischargefrom = (ims.framework.utils.Date)this.dischargefrom.clone();
		if(this.dischargeto == null)
			clone.dischargeto = null;
		else
			clone.dischargeto = (ims.framework.utils.Date)this.dischargeto.clone();
		clone.edstatus = this.edstatus;
		clone.bedallocation = this.bedallocation;
		clone.awaitingreview = this.awaitingreview;
		if(this.outcome == null)
			clone.outcome = null;
		else
			clone.outcome = (ims.emergency.vo.lookups.AttendanceOutcome)this.outcome.clone();
		if(this.sourceofreferral == null)
			clone.sourceofreferral = null;
		else
			clone.sourceofreferral = (ims.emergency.vo.lookups.ReferredBy)this.sourceofreferral.clone();
		clone.attendanceid = this.attendanceid;
		if(this.presentingproblem == null)
			clone.presentingproblem = null;
		else
			clone.presentingproblem = (ims.emergency.vo.lookups.PresentingComplaint)this.presentingproblem.clone();
		clone.attendancenotcoded = this.attendancenotcoded;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(TrackingAttendanceWorklist_SearchCriteriaVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A TrackingAttendanceWorklist_SearchCriteriaVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		TrackingAttendanceWorklist_SearchCriteriaVo compareObj = (TrackingAttendanceWorklist_SearchCriteriaVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getMedic() == null && compareObj.getMedic() != null)
				return -1;
			if(this.getMedic() != null && compareObj.getMedic() == null)
				return 1;
			if(this.getMedic() != null && compareObj.getMedic() != null)
				retVal = this.getMedic().compareTo(compareObj.getMedic());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.medic != null)
			count++;
		if(this.nurse != null)
			count++;
		if(this.specialty != null)
			count++;
		if(this.teamspecialty != null)
			count++;
		if(this.priority != null)
			count++;
		if(this.breachedprioritykpi != null)
			count++;
		if(this.patientsurname != null)
			count++;
		if(this.addresscontains != null)
			count++;
		if(this.attendancefrom != null)
			count++;
		if(this.attendanceto != null)
			count++;
		if(this.triagefrom != null)
			count++;
		if(this.triageto != null)
			count++;
		if(this.dischargefrom != null)
			count++;
		if(this.dischargeto != null)
			count++;
		if(this.edstatus != null)
			count++;
		if(this.bedallocation != null)
			count++;
		if(this.awaitingreview != null)
			count++;
		if(this.outcome != null)
			count++;
		if(this.sourceofreferral != null)
			count++;
		if(this.attendanceid != null)
			count++;
		if(this.presentingproblem != null)
			count++;
		if(this.attendancenotcoded != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 22;
	}
	protected ims.core.vo.MedicVo medic;
	protected ims.core.vo.NurseVo nurse;
	protected ims.core.vo.lookups.Specialty specialty;
	protected ims.emergency.vo.lookups.ReferralSpecialtyConsultantOrTeam teamspecialty;
	protected ims.emergency.vo.lookups.TriagePriority priority;
	protected Boolean breachedprioritykpi;
	protected String patientsurname;
	protected String addresscontains;
	protected ims.framework.utils.Date attendancefrom;
	protected ims.framework.utils.Date attendanceto;
	protected ims.framework.utils.Date triagefrom;
	protected ims.framework.utils.Date triageto;
	protected ims.framework.utils.Date dischargefrom;
	protected ims.framework.utils.Date dischargeto;
	protected Integer edstatus;
	protected Integer bedallocation;
	protected Boolean awaitingreview;
	protected ims.emergency.vo.lookups.AttendanceOutcome outcome;
	protected ims.emergency.vo.lookups.ReferredBy sourceofreferral;
	protected Integer attendanceid;
	protected ims.emergency.vo.lookups.PresentingComplaint presentingproblem;
	protected Boolean attendancenotcoded;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
