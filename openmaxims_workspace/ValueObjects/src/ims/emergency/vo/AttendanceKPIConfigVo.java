//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.vo;

/**
 * Linked to emergency.Configuration.AttendanceKPIConfig business object (ID: 1087100007).
 */
public class AttendanceKPIConfigVo extends ims.emergency.configuration.vo.AttendanceKPIConfigRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public AttendanceKPIConfigVo()
	{
	}
	public AttendanceKPIConfigVo(Integer id, int version)
	{
		super(id, version);
	}
	public AttendanceKPIConfigVo(ims.emergency.vo.beans.AttendanceKPIConfigVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.edlocation = bean.getEDLocation() == null ? null : new ims.core.resource.place.vo.LocationRefVo(new Integer(bean.getEDLocation().getId()), bean.getEDLocation().getVersion());
		this.awaitingtriagebreachwarningkpi = bean.getAwaitingTriageBreachWarningKPI();
		this.awaitingtriagebreachedkpi = bean.getAwaitingTriageBreachedKPI();
		this.triageprioritykpis = ims.emergency.vo.TriagePriorityKpConfigVoCollection.buildFromBeanCollection(bean.getTriagePriorityKPIs());
		this.awaitingclinicianbreachwarningkpi = bean.getAwaitingClinicianBreachWarningKPI();
		this.awaitingclinicianbreachedkpi = bean.getAwaitingClinicianBreachedKPI();
		this.losbreachwarningkpi = bean.getLosBreachWarningKPI();
		this.losbreachedkpi = bean.getLosBreachedKPI();
		this.awaitingtriagebreachwarningkpitextcolour = bean.getAwaitingTriageBreachWarningKPITextColour() == null ? null : bean.getAwaitingTriageBreachWarningKPITextColour().buildColor();
		this.awaitingtriagebreachwarningkpiflashingtext = bean.getAwaitingTriageBreachWarningKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingTriageBreachWarningKPIFlashingText());
		this.awaitingtriagebreachwarningkpiflashingtextcolour = bean.getAwaitingTriageBreachWarningKPIFlashingTextColour() == null ? null : bean.getAwaitingTriageBreachWarningKPIFlashingTextColour().buildColor();
		this.awaitingtriagebreachwarningkpibackgroundcolour = bean.getAwaitingTriageBreachWarningKPIBackgroundColour() == null ? null : bean.getAwaitingTriageBreachWarningKPIBackgroundColour().buildColor();
		this.awaitingtriagebreachkpitextcolour = bean.getAwaitingTriageBreachKPITextColour() == null ? null : bean.getAwaitingTriageBreachKPITextColour().buildColor();
		this.awaitingtriagebreachkpiflashingtext = bean.getAwaitingTriageBreachKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingTriageBreachKPIFlashingText());
		this.awaitingtriagebreachkpiflashingtextcolour = bean.getAwaitingTriageBreachKPIFlashingTextColour() == null ? null : bean.getAwaitingTriageBreachKPIFlashingTextColour().buildColor();
		this.awaitingtriagebreachkpibackgroundcolour = bean.getAwaitingTriageBreachKPIBackgroundColour() == null ? null : bean.getAwaitingTriageBreachKPIBackgroundColour().buildColor();
		this.awaitingclinicianbreachwarningkpitextcolour = bean.getAwaitingClinicianBreachWarningKPITextColour() == null ? null : bean.getAwaitingClinicianBreachWarningKPITextColour().buildColor();
		this.awaitingclinicianbreachwarningkpiflashingtext = bean.getAwaitingClinicianBreachWarningKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingClinicianBreachWarningKPIFlashingText());
		this.awaitingclinicianbreachwarningkpiflashingtextcolour = bean.getAwaitingClinicianBreachWarningKPIFlashingTextColour() == null ? null : bean.getAwaitingClinicianBreachWarningKPIFlashingTextColour().buildColor();
		this.awaitingclinicianbreachwarningkpibackgroundcolour = bean.getAwaitingClinicianBreachWarningKPIBackgroundColour() == null ? null : bean.getAwaitingClinicianBreachWarningKPIBackgroundColour().buildColor();
		this.awaitingclinicianbreachkpitextcolour = bean.getAwaitingClinicianBreachKPITextColour() == null ? null : bean.getAwaitingClinicianBreachKPITextColour().buildColor();
		this.awaitingclinicianbreachkpiflashingtext = bean.getAwaitingClinicianBreachKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingClinicianBreachKPIFlashingText());
		this.awaitingclinicianbreachkpiflashingtextcolour = bean.getAwaitingClinicianBreachKPIFlashingTextColour() == null ? null : bean.getAwaitingClinicianBreachKPIFlashingTextColour().buildColor();
		this.awaitingclinicianbreachkpibackgroundcolour = bean.getAwaitingClinicianBreachKPIBackgroundColour() == null ? null : bean.getAwaitingClinicianBreachKPIBackgroundColour().buildColor();
		this.losbreachwarningkpitextcolour = bean.getLosBreachWarningKPITextColour() == null ? null : bean.getLosBreachWarningKPITextColour().buildColor();
		this.losbreachwarningkpiflashingtext = bean.getLosBreachWarningKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getLosBreachWarningKPIFlashingText());
		this.losbreachwarningkpiflashingtextcolour = bean.getLosBreachWarningKPIFlashingTextColour() == null ? null : bean.getLosBreachWarningKPIFlashingTextColour().buildColor();
		this.losbreachwarningkpibackgroundcolour = bean.getLosBreachWarningKPIBackgroundColour() == null ? null : bean.getLosBreachWarningKPIBackgroundColour().buildColor();
		this.losbreachkpitextcolour = bean.getLosBreachKPITextColour() == null ? null : bean.getLosBreachKPITextColour().buildColor();
		this.losbreachedkpiflashingtext = bean.getLosBreachedKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getLosBreachedKPIFlashingText());
		this.losbreachedkpiflashingtextcolour = bean.getLosBreachedKPIFlashingTextColour() == null ? null : bean.getLosBreachedKPIFlashingTextColour().buildColor();
		this.losbreachedkpibackgroundcolour = bean.getLosBreachedKPIBackgroundColour() == null ? null : bean.getLosBreachedKPIBackgroundColour().buildColor();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.emergency.vo.beans.AttendanceKPIConfigVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.edlocation = bean.getEDLocation() == null ? null : new ims.core.resource.place.vo.LocationRefVo(new Integer(bean.getEDLocation().getId()), bean.getEDLocation().getVersion());
		this.awaitingtriagebreachwarningkpi = bean.getAwaitingTriageBreachWarningKPI();
		this.awaitingtriagebreachedkpi = bean.getAwaitingTriageBreachedKPI();
		this.triageprioritykpis = ims.emergency.vo.TriagePriorityKpConfigVoCollection.buildFromBeanCollection(bean.getTriagePriorityKPIs());
		this.awaitingclinicianbreachwarningkpi = bean.getAwaitingClinicianBreachWarningKPI();
		this.awaitingclinicianbreachedkpi = bean.getAwaitingClinicianBreachedKPI();
		this.losbreachwarningkpi = bean.getLosBreachWarningKPI();
		this.losbreachedkpi = bean.getLosBreachedKPI();
		this.awaitingtriagebreachwarningkpitextcolour = bean.getAwaitingTriageBreachWarningKPITextColour() == null ? null : bean.getAwaitingTriageBreachWarningKPITextColour().buildColor();
		this.awaitingtriagebreachwarningkpiflashingtext = bean.getAwaitingTriageBreachWarningKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingTriageBreachWarningKPIFlashingText());
		this.awaitingtriagebreachwarningkpiflashingtextcolour = bean.getAwaitingTriageBreachWarningKPIFlashingTextColour() == null ? null : bean.getAwaitingTriageBreachWarningKPIFlashingTextColour().buildColor();
		this.awaitingtriagebreachwarningkpibackgroundcolour = bean.getAwaitingTriageBreachWarningKPIBackgroundColour() == null ? null : bean.getAwaitingTriageBreachWarningKPIBackgroundColour().buildColor();
		this.awaitingtriagebreachkpitextcolour = bean.getAwaitingTriageBreachKPITextColour() == null ? null : bean.getAwaitingTriageBreachKPITextColour().buildColor();
		this.awaitingtriagebreachkpiflashingtext = bean.getAwaitingTriageBreachKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingTriageBreachKPIFlashingText());
		this.awaitingtriagebreachkpiflashingtextcolour = bean.getAwaitingTriageBreachKPIFlashingTextColour() == null ? null : bean.getAwaitingTriageBreachKPIFlashingTextColour().buildColor();
		this.awaitingtriagebreachkpibackgroundcolour = bean.getAwaitingTriageBreachKPIBackgroundColour() == null ? null : bean.getAwaitingTriageBreachKPIBackgroundColour().buildColor();
		this.awaitingclinicianbreachwarningkpitextcolour = bean.getAwaitingClinicianBreachWarningKPITextColour() == null ? null : bean.getAwaitingClinicianBreachWarningKPITextColour().buildColor();
		this.awaitingclinicianbreachwarningkpiflashingtext = bean.getAwaitingClinicianBreachWarningKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingClinicianBreachWarningKPIFlashingText());
		this.awaitingclinicianbreachwarningkpiflashingtextcolour = bean.getAwaitingClinicianBreachWarningKPIFlashingTextColour() == null ? null : bean.getAwaitingClinicianBreachWarningKPIFlashingTextColour().buildColor();
		this.awaitingclinicianbreachwarningkpibackgroundcolour = bean.getAwaitingClinicianBreachWarningKPIBackgroundColour() == null ? null : bean.getAwaitingClinicianBreachWarningKPIBackgroundColour().buildColor();
		this.awaitingclinicianbreachkpitextcolour = bean.getAwaitingClinicianBreachKPITextColour() == null ? null : bean.getAwaitingClinicianBreachKPITextColour().buildColor();
		this.awaitingclinicianbreachkpiflashingtext = bean.getAwaitingClinicianBreachKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getAwaitingClinicianBreachKPIFlashingText());
		this.awaitingclinicianbreachkpiflashingtextcolour = bean.getAwaitingClinicianBreachKPIFlashingTextColour() == null ? null : bean.getAwaitingClinicianBreachKPIFlashingTextColour().buildColor();
		this.awaitingclinicianbreachkpibackgroundcolour = bean.getAwaitingClinicianBreachKPIBackgroundColour() == null ? null : bean.getAwaitingClinicianBreachKPIBackgroundColour().buildColor();
		this.losbreachwarningkpitextcolour = bean.getLosBreachWarningKPITextColour() == null ? null : bean.getLosBreachWarningKPITextColour().buildColor();
		this.losbreachwarningkpiflashingtext = bean.getLosBreachWarningKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getLosBreachWarningKPIFlashingText());
		this.losbreachwarningkpiflashingtextcolour = bean.getLosBreachWarningKPIFlashingTextColour() == null ? null : bean.getLosBreachWarningKPIFlashingTextColour().buildColor();
		this.losbreachwarningkpibackgroundcolour = bean.getLosBreachWarningKPIBackgroundColour() == null ? null : bean.getLosBreachWarningKPIBackgroundColour().buildColor();
		this.losbreachkpitextcolour = bean.getLosBreachKPITextColour() == null ? null : bean.getLosBreachKPITextColour().buildColor();
		this.losbreachedkpiflashingtext = bean.getLosBreachedKPIFlashingText() == null ? null : ims.core.vo.lookups.YesNo.buildLookup(bean.getLosBreachedKPIFlashingText());
		this.losbreachedkpiflashingtextcolour = bean.getLosBreachedKPIFlashingTextColour() == null ? null : bean.getLosBreachedKPIFlashingTextColour().buildColor();
		this.losbreachedkpibackgroundcolour = bean.getLosBreachedKPIBackgroundColour() == null ? null : bean.getLosBreachedKPIBackgroundColour().buildColor();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.emergency.vo.beans.AttendanceKPIConfigVoBean bean = null;
		if(map != null)
			bean = (ims.emergency.vo.beans.AttendanceKPIConfigVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.emergency.vo.beans.AttendanceKPIConfigVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("EDLOCATION"))
			return getEDLocation();
		if(fieldName.equals("AWAITINGTRIAGEBREACHWARNINGKPI"))
			return getAwaitingTriageBreachWarningKPI();
		if(fieldName.equals("AWAITINGTRIAGEBREACHEDKPI"))
			return getAwaitingTriageBreachedKPI();
		if(fieldName.equals("TRIAGEPRIORITYKPIS"))
			return getTriagePriorityKPIs();
		if(fieldName.equals("AWAITINGCLINICIANBREACHWARNINGKPI"))
			return getAwaitingClinicianBreachWarningKPI();
		if(fieldName.equals("AWAITINGCLINICIANBREACHEDKPI"))
			return getAwaitingClinicianBreachedKPI();
		if(fieldName.equals("LOSBREACHWARNINGKPI"))
			return getLosBreachWarningKPI();
		if(fieldName.equals("LOSBREACHEDKPI"))
			return getLosBreachedKPI();
		if(fieldName.equals("AWAITINGTRIAGEBREACHWARNINGKPITEXTCOLOUR"))
			return getAwaitingTriageBreachWarningKPITextColour();
		if(fieldName.equals("AWAITINGTRIAGEBREACHWARNINGKPIFLASHINGTEXT"))
			return getAwaitingTriageBreachWarningKPIFlashingText();
		if(fieldName.equals("AWAITINGTRIAGEBREACHWARNINGKPIFLASHINGTEXTCOLOUR"))
			return getAwaitingTriageBreachWarningKPIFlashingTextColour();
		if(fieldName.equals("AWAITINGTRIAGEBREACHWARNINGKPIBACKGROUNDCOLOUR"))
			return getAwaitingTriageBreachWarningKPIBackgroundColour();
		if(fieldName.equals("AWAITINGTRIAGEBREACHKPITEXTCOLOUR"))
			return getAwaitingTriageBreachKPITextColour();
		if(fieldName.equals("AWAITINGTRIAGEBREACHKPIFLASHINGTEXT"))
			return getAwaitingTriageBreachKPIFlashingText();
		if(fieldName.equals("AWAITINGTRIAGEBREACHKPIFLASHINGTEXTCOLOUR"))
			return getAwaitingTriageBreachKPIFlashingTextColour();
		if(fieldName.equals("AWAITINGTRIAGEBREACHKPIBACKGROUNDCOLOUR"))
			return getAwaitingTriageBreachKPIBackgroundColour();
		if(fieldName.equals("AWAITINGCLINICIANBREACHWARNINGKPITEXTCOLOUR"))
			return getAwaitingClinicianBreachWarningKPITextColour();
		if(fieldName.equals("AWAITINGCLINICIANBREACHWARNINGKPIFLASHINGTEXT"))
			return getAwaitingClinicianBreachWarningKPIFlashingText();
		if(fieldName.equals("AWAITINGCLINICIANBREACHWARNINGKPIFLASHINGTEXTCOLOUR"))
			return getAwaitingClinicianBreachWarningKPIFlashingTextColour();
		if(fieldName.equals("AWAITINGCLINICIANBREACHWARNINGKPIBACKGROUNDCOLOUR"))
			return getAwaitingClinicianBreachWarningKPIBackgroundColour();
		if(fieldName.equals("AWAITINGCLINICIANBREACHKPITEXTCOLOUR"))
			return getAwaitingClinicianBreachKPITextColour();
		if(fieldName.equals("AWAITINGCLINICIANBREACHKPIFLASHINGTEXT"))
			return getAwaitingClinicianBreachKPIFlashingText();
		if(fieldName.equals("AWAITINGCLINICIANBREACHKPIFLASHINGTEXTCOLOUR"))
			return getAwaitingClinicianBreachKPIFlashingTextColour();
		if(fieldName.equals("AWAITINGCLINICIANBREACHKPIBACKGROUNDCOLOUR"))
			return getAwaitingClinicianBreachKPIBackgroundColour();
		if(fieldName.equals("LOSBREACHWARNINGKPITEXTCOLOUR"))
			return getLosBreachWarningKPITextColour();
		if(fieldName.equals("LOSBREACHWARNINGKPIFLASHINGTEXT"))
			return getLosBreachWarningKPIFlashingText();
		if(fieldName.equals("LOSBREACHWARNINGKPIFLASHINGTEXTCOLOUR"))
			return getLosBreachWarningKPIFlashingTextColour();
		if(fieldName.equals("LOSBREACHWARNINGKPIBACKGROUNDCOLOUR"))
			return getLosBreachWarningKPIBackgroundColour();
		if(fieldName.equals("LOSBREACHKPITEXTCOLOUR"))
			return getLosBreachKPITextColour();
		if(fieldName.equals("LOSBREACHEDKPIFLASHINGTEXT"))
			return getLosBreachedKPIFlashingText();
		if(fieldName.equals("LOSBREACHEDKPIFLASHINGTEXTCOLOUR"))
			return getLosBreachedKPIFlashingTextColour();
		if(fieldName.equals("LOSBREACHEDKPIBACKGROUNDCOLOUR"))
			return getLosBreachedKPIBackgroundColour();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getEDLocationIsNotNull()
	{
		return this.edlocation != null;
	}
	public ims.core.resource.place.vo.LocationRefVo getEDLocation()
	{
		return this.edlocation;
	}
	public void setEDLocation(ims.core.resource.place.vo.LocationRefVo value)
	{
		this.isValidated = false;
		this.edlocation = value;
	}
	public boolean getAwaitingTriageBreachWarningKPIIsNotNull()
	{
		return this.awaitingtriagebreachwarningkpi != null;
	}
	public Integer getAwaitingTriageBreachWarningKPI()
	{
		return this.awaitingtriagebreachwarningkpi;
	}
	public void setAwaitingTriageBreachWarningKPI(Integer value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachwarningkpi = value;
	}
	public boolean getAwaitingTriageBreachedKPIIsNotNull()
	{
		return this.awaitingtriagebreachedkpi != null;
	}
	public Integer getAwaitingTriageBreachedKPI()
	{
		return this.awaitingtriagebreachedkpi;
	}
	public void setAwaitingTriageBreachedKPI(Integer value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachedkpi = value;
	}
	public boolean getTriagePriorityKPIsIsNotNull()
	{
		return this.triageprioritykpis != null;
	}
	public ims.emergency.vo.TriagePriorityKpConfigVoCollection getTriagePriorityKPIs()
	{
		return this.triageprioritykpis;
	}
	public void setTriagePriorityKPIs(ims.emergency.vo.TriagePriorityKpConfigVoCollection value)
	{
		this.isValidated = false;
		this.triageprioritykpis = value;
	}
	public boolean getAwaitingClinicianBreachWarningKPIIsNotNull()
	{
		return this.awaitingclinicianbreachwarningkpi != null;
	}
	public Integer getAwaitingClinicianBreachWarningKPI()
	{
		return this.awaitingclinicianbreachwarningkpi;
	}
	public void setAwaitingClinicianBreachWarningKPI(Integer value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachwarningkpi = value;
	}
	public boolean getAwaitingClinicianBreachedKPIIsNotNull()
	{
		return this.awaitingclinicianbreachedkpi != null;
	}
	public Integer getAwaitingClinicianBreachedKPI()
	{
		return this.awaitingclinicianbreachedkpi;
	}
	public void setAwaitingClinicianBreachedKPI(Integer value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachedkpi = value;
	}
	public boolean getLosBreachWarningKPIIsNotNull()
	{
		return this.losbreachwarningkpi != null;
	}
	public Integer getLosBreachWarningKPI()
	{
		return this.losbreachwarningkpi;
	}
	public void setLosBreachWarningKPI(Integer value)
	{
		this.isValidated = false;
		this.losbreachwarningkpi = value;
	}
	public boolean getLosBreachedKPIIsNotNull()
	{
		return this.losbreachedkpi != null;
	}
	public Integer getLosBreachedKPI()
	{
		return this.losbreachedkpi;
	}
	public void setLosBreachedKPI(Integer value)
	{
		this.isValidated = false;
		this.losbreachedkpi = value;
	}
	public boolean getAwaitingTriageBreachWarningKPITextColourIsNotNull()
	{
		return this.awaitingtriagebreachwarningkpitextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingTriageBreachWarningKPITextColour()
	{
		return this.awaitingtriagebreachwarningkpitextcolour;
	}
	public void setAwaitingTriageBreachWarningKPITextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachwarningkpitextcolour = value;
	}
	public boolean getAwaitingTriageBreachWarningKPIFlashingTextIsNotNull()
	{
		return this.awaitingtriagebreachwarningkpiflashingtext != null;
	}
	public ims.core.vo.lookups.YesNo getAwaitingTriageBreachWarningKPIFlashingText()
	{
		return this.awaitingtriagebreachwarningkpiflashingtext;
	}
	public void setAwaitingTriageBreachWarningKPIFlashingText(ims.core.vo.lookups.YesNo value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachwarningkpiflashingtext = value;
	}
	public boolean getAwaitingTriageBreachWarningKPIFlashingTextColourIsNotNull()
	{
		return this.awaitingtriagebreachwarningkpiflashingtextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingTriageBreachWarningKPIFlashingTextColour()
	{
		return this.awaitingtriagebreachwarningkpiflashingtextcolour;
	}
	public void setAwaitingTriageBreachWarningKPIFlashingTextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachwarningkpiflashingtextcolour = value;
	}
	public boolean getAwaitingTriageBreachWarningKPIBackgroundColourIsNotNull()
	{
		return this.awaitingtriagebreachwarningkpibackgroundcolour != null;
	}
	public ims.framework.utils.Color getAwaitingTriageBreachWarningKPIBackgroundColour()
	{
		return this.awaitingtriagebreachwarningkpibackgroundcolour;
	}
	public void setAwaitingTriageBreachWarningKPIBackgroundColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachwarningkpibackgroundcolour = value;
	}
	public boolean getAwaitingTriageBreachKPITextColourIsNotNull()
	{
		return this.awaitingtriagebreachkpitextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingTriageBreachKPITextColour()
	{
		return this.awaitingtriagebreachkpitextcolour;
	}
	public void setAwaitingTriageBreachKPITextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachkpitextcolour = value;
	}
	public boolean getAwaitingTriageBreachKPIFlashingTextIsNotNull()
	{
		return this.awaitingtriagebreachkpiflashingtext != null;
	}
	public ims.core.vo.lookups.YesNo getAwaitingTriageBreachKPIFlashingText()
	{
		return this.awaitingtriagebreachkpiflashingtext;
	}
	public void setAwaitingTriageBreachKPIFlashingText(ims.core.vo.lookups.YesNo value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachkpiflashingtext = value;
	}
	public boolean getAwaitingTriageBreachKPIFlashingTextColourIsNotNull()
	{
		return this.awaitingtriagebreachkpiflashingtextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingTriageBreachKPIFlashingTextColour()
	{
		return this.awaitingtriagebreachkpiflashingtextcolour;
	}
	public void setAwaitingTriageBreachKPIFlashingTextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachkpiflashingtextcolour = value;
	}
	public boolean getAwaitingTriageBreachKPIBackgroundColourIsNotNull()
	{
		return this.awaitingtriagebreachkpibackgroundcolour != null;
	}
	public ims.framework.utils.Color getAwaitingTriageBreachKPIBackgroundColour()
	{
		return this.awaitingtriagebreachkpibackgroundcolour;
	}
	public void setAwaitingTriageBreachKPIBackgroundColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingtriagebreachkpibackgroundcolour = value;
	}
	public boolean getAwaitingClinicianBreachWarningKPITextColourIsNotNull()
	{
		return this.awaitingclinicianbreachwarningkpitextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingClinicianBreachWarningKPITextColour()
	{
		return this.awaitingclinicianbreachwarningkpitextcolour;
	}
	public void setAwaitingClinicianBreachWarningKPITextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachwarningkpitextcolour = value;
	}
	public boolean getAwaitingClinicianBreachWarningKPIFlashingTextIsNotNull()
	{
		return this.awaitingclinicianbreachwarningkpiflashingtext != null;
	}
	public ims.core.vo.lookups.YesNo getAwaitingClinicianBreachWarningKPIFlashingText()
	{
		return this.awaitingclinicianbreachwarningkpiflashingtext;
	}
	public void setAwaitingClinicianBreachWarningKPIFlashingText(ims.core.vo.lookups.YesNo value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachwarningkpiflashingtext = value;
	}
	public boolean getAwaitingClinicianBreachWarningKPIFlashingTextColourIsNotNull()
	{
		return this.awaitingclinicianbreachwarningkpiflashingtextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingClinicianBreachWarningKPIFlashingTextColour()
	{
		return this.awaitingclinicianbreachwarningkpiflashingtextcolour;
	}
	public void setAwaitingClinicianBreachWarningKPIFlashingTextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachwarningkpiflashingtextcolour = value;
	}
	public boolean getAwaitingClinicianBreachWarningKPIBackgroundColourIsNotNull()
	{
		return this.awaitingclinicianbreachwarningkpibackgroundcolour != null;
	}
	public ims.framework.utils.Color getAwaitingClinicianBreachWarningKPIBackgroundColour()
	{
		return this.awaitingclinicianbreachwarningkpibackgroundcolour;
	}
	public void setAwaitingClinicianBreachWarningKPIBackgroundColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachwarningkpibackgroundcolour = value;
	}
	public boolean getAwaitingClinicianBreachKPITextColourIsNotNull()
	{
		return this.awaitingclinicianbreachkpitextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingClinicianBreachKPITextColour()
	{
		return this.awaitingclinicianbreachkpitextcolour;
	}
	public void setAwaitingClinicianBreachKPITextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachkpitextcolour = value;
	}
	public boolean getAwaitingClinicianBreachKPIFlashingTextIsNotNull()
	{
		return this.awaitingclinicianbreachkpiflashingtext != null;
	}
	public ims.core.vo.lookups.YesNo getAwaitingClinicianBreachKPIFlashingText()
	{
		return this.awaitingclinicianbreachkpiflashingtext;
	}
	public void setAwaitingClinicianBreachKPIFlashingText(ims.core.vo.lookups.YesNo value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachkpiflashingtext = value;
	}
	public boolean getAwaitingClinicianBreachKPIFlashingTextColourIsNotNull()
	{
		return this.awaitingclinicianbreachkpiflashingtextcolour != null;
	}
	public ims.framework.utils.Color getAwaitingClinicianBreachKPIFlashingTextColour()
	{
		return this.awaitingclinicianbreachkpiflashingtextcolour;
	}
	public void setAwaitingClinicianBreachKPIFlashingTextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachkpiflashingtextcolour = value;
	}
	public boolean getAwaitingClinicianBreachKPIBackgroundColourIsNotNull()
	{
		return this.awaitingclinicianbreachkpibackgroundcolour != null;
	}
	public ims.framework.utils.Color getAwaitingClinicianBreachKPIBackgroundColour()
	{
		return this.awaitingclinicianbreachkpibackgroundcolour;
	}
	public void setAwaitingClinicianBreachKPIBackgroundColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.awaitingclinicianbreachkpibackgroundcolour = value;
	}
	public boolean getLosBreachWarningKPITextColourIsNotNull()
	{
		return this.losbreachwarningkpitextcolour != null;
	}
	public ims.framework.utils.Color getLosBreachWarningKPITextColour()
	{
		return this.losbreachwarningkpitextcolour;
	}
	public void setLosBreachWarningKPITextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.losbreachwarningkpitextcolour = value;
	}
	public boolean getLosBreachWarningKPIFlashingTextIsNotNull()
	{
		return this.losbreachwarningkpiflashingtext != null;
	}
	public ims.core.vo.lookups.YesNo getLosBreachWarningKPIFlashingText()
	{
		return this.losbreachwarningkpiflashingtext;
	}
	public void setLosBreachWarningKPIFlashingText(ims.core.vo.lookups.YesNo value)
	{
		this.isValidated = false;
		this.losbreachwarningkpiflashingtext = value;
	}
	public boolean getLosBreachWarningKPIFlashingTextColourIsNotNull()
	{
		return this.losbreachwarningkpiflashingtextcolour != null;
	}
	public ims.framework.utils.Color getLosBreachWarningKPIFlashingTextColour()
	{
		return this.losbreachwarningkpiflashingtextcolour;
	}
	public void setLosBreachWarningKPIFlashingTextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.losbreachwarningkpiflashingtextcolour = value;
	}
	public boolean getLosBreachWarningKPIBackgroundColourIsNotNull()
	{
		return this.losbreachwarningkpibackgroundcolour != null;
	}
	public ims.framework.utils.Color getLosBreachWarningKPIBackgroundColour()
	{
		return this.losbreachwarningkpibackgroundcolour;
	}
	public void setLosBreachWarningKPIBackgroundColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.losbreachwarningkpibackgroundcolour = value;
	}
	public boolean getLosBreachKPITextColourIsNotNull()
	{
		return this.losbreachkpitextcolour != null;
	}
	public ims.framework.utils.Color getLosBreachKPITextColour()
	{
		return this.losbreachkpitextcolour;
	}
	public void setLosBreachKPITextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.losbreachkpitextcolour = value;
	}
	public boolean getLosBreachedKPIFlashingTextIsNotNull()
	{
		return this.losbreachedkpiflashingtext != null;
	}
	public ims.core.vo.lookups.YesNo getLosBreachedKPIFlashingText()
	{
		return this.losbreachedkpiflashingtext;
	}
	public void setLosBreachedKPIFlashingText(ims.core.vo.lookups.YesNo value)
	{
		this.isValidated = false;
		this.losbreachedkpiflashingtext = value;
	}
	public boolean getLosBreachedKPIFlashingTextColourIsNotNull()
	{
		return this.losbreachedkpiflashingtextcolour != null;
	}
	public ims.framework.utils.Color getLosBreachedKPIFlashingTextColour()
	{
		return this.losbreachedkpiflashingtextcolour;
	}
	public void setLosBreachedKPIFlashingTextColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.losbreachedkpiflashingtextcolour = value;
	}
	public boolean getLosBreachedKPIBackgroundColourIsNotNull()
	{
		return this.losbreachedkpibackgroundcolour != null;
	}
	public ims.framework.utils.Color getLosBreachedKPIBackgroundColour()
	{
		return this.losbreachedkpibackgroundcolour;
	}
	public void setLosBreachedKPIBackgroundColour(ims.framework.utils.Color value)
	{
		this.isValidated = false;
		this.losbreachedkpibackgroundcolour = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.triageprioritykpis != null)
		{
			if(!this.triageprioritykpis.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.edlocation == null)
			listOfErrors.add("EDLocation is mandatory");
		if(this.triageprioritykpis != null)
		{
			String[] listOfOtherErrors = this.triageprioritykpis.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		AttendanceKPIConfigVo clone = new AttendanceKPIConfigVo(this.id, this.version);
		
		clone.edlocation = this.edlocation;
		clone.awaitingtriagebreachwarningkpi = this.awaitingtriagebreachwarningkpi;
		clone.awaitingtriagebreachedkpi = this.awaitingtriagebreachedkpi;
		if(this.triageprioritykpis == null)
			clone.triageprioritykpis = null;
		else
			clone.triageprioritykpis = (ims.emergency.vo.TriagePriorityKpConfigVoCollection)this.triageprioritykpis.clone();
		clone.awaitingclinicianbreachwarningkpi = this.awaitingclinicianbreachwarningkpi;
		clone.awaitingclinicianbreachedkpi = this.awaitingclinicianbreachedkpi;
		clone.losbreachwarningkpi = this.losbreachwarningkpi;
		clone.losbreachedkpi = this.losbreachedkpi;
		if(this.awaitingtriagebreachwarningkpitextcolour == null)
			clone.awaitingtriagebreachwarningkpitextcolour = null;
		else
			clone.awaitingtriagebreachwarningkpitextcolour = (ims.framework.utils.Color)this.awaitingtriagebreachwarningkpitextcolour.clone();
		if(this.awaitingtriagebreachwarningkpiflashingtext == null)
			clone.awaitingtriagebreachwarningkpiflashingtext = null;
		else
			clone.awaitingtriagebreachwarningkpiflashingtext = (ims.core.vo.lookups.YesNo)this.awaitingtriagebreachwarningkpiflashingtext.clone();
		if(this.awaitingtriagebreachwarningkpiflashingtextcolour == null)
			clone.awaitingtriagebreachwarningkpiflashingtextcolour = null;
		else
			clone.awaitingtriagebreachwarningkpiflashingtextcolour = (ims.framework.utils.Color)this.awaitingtriagebreachwarningkpiflashingtextcolour.clone();
		if(this.awaitingtriagebreachwarningkpibackgroundcolour == null)
			clone.awaitingtriagebreachwarningkpibackgroundcolour = null;
		else
			clone.awaitingtriagebreachwarningkpibackgroundcolour = (ims.framework.utils.Color)this.awaitingtriagebreachwarningkpibackgroundcolour.clone();
		if(this.awaitingtriagebreachkpitextcolour == null)
			clone.awaitingtriagebreachkpitextcolour = null;
		else
			clone.awaitingtriagebreachkpitextcolour = (ims.framework.utils.Color)this.awaitingtriagebreachkpitextcolour.clone();
		if(this.awaitingtriagebreachkpiflashingtext == null)
			clone.awaitingtriagebreachkpiflashingtext = null;
		else
			clone.awaitingtriagebreachkpiflashingtext = (ims.core.vo.lookups.YesNo)this.awaitingtriagebreachkpiflashingtext.clone();
		if(this.awaitingtriagebreachkpiflashingtextcolour == null)
			clone.awaitingtriagebreachkpiflashingtextcolour = null;
		else
			clone.awaitingtriagebreachkpiflashingtextcolour = (ims.framework.utils.Color)this.awaitingtriagebreachkpiflashingtextcolour.clone();
		if(this.awaitingtriagebreachkpibackgroundcolour == null)
			clone.awaitingtriagebreachkpibackgroundcolour = null;
		else
			clone.awaitingtriagebreachkpibackgroundcolour = (ims.framework.utils.Color)this.awaitingtriagebreachkpibackgroundcolour.clone();
		if(this.awaitingclinicianbreachwarningkpitextcolour == null)
			clone.awaitingclinicianbreachwarningkpitextcolour = null;
		else
			clone.awaitingclinicianbreachwarningkpitextcolour = (ims.framework.utils.Color)this.awaitingclinicianbreachwarningkpitextcolour.clone();
		if(this.awaitingclinicianbreachwarningkpiflashingtext == null)
			clone.awaitingclinicianbreachwarningkpiflashingtext = null;
		else
			clone.awaitingclinicianbreachwarningkpiflashingtext = (ims.core.vo.lookups.YesNo)this.awaitingclinicianbreachwarningkpiflashingtext.clone();
		if(this.awaitingclinicianbreachwarningkpiflashingtextcolour == null)
			clone.awaitingclinicianbreachwarningkpiflashingtextcolour = null;
		else
			clone.awaitingclinicianbreachwarningkpiflashingtextcolour = (ims.framework.utils.Color)this.awaitingclinicianbreachwarningkpiflashingtextcolour.clone();
		if(this.awaitingclinicianbreachwarningkpibackgroundcolour == null)
			clone.awaitingclinicianbreachwarningkpibackgroundcolour = null;
		else
			clone.awaitingclinicianbreachwarningkpibackgroundcolour = (ims.framework.utils.Color)this.awaitingclinicianbreachwarningkpibackgroundcolour.clone();
		if(this.awaitingclinicianbreachkpitextcolour == null)
			clone.awaitingclinicianbreachkpitextcolour = null;
		else
			clone.awaitingclinicianbreachkpitextcolour = (ims.framework.utils.Color)this.awaitingclinicianbreachkpitextcolour.clone();
		if(this.awaitingclinicianbreachkpiflashingtext == null)
			clone.awaitingclinicianbreachkpiflashingtext = null;
		else
			clone.awaitingclinicianbreachkpiflashingtext = (ims.core.vo.lookups.YesNo)this.awaitingclinicianbreachkpiflashingtext.clone();
		if(this.awaitingclinicianbreachkpiflashingtextcolour == null)
			clone.awaitingclinicianbreachkpiflashingtextcolour = null;
		else
			clone.awaitingclinicianbreachkpiflashingtextcolour = (ims.framework.utils.Color)this.awaitingclinicianbreachkpiflashingtextcolour.clone();
		if(this.awaitingclinicianbreachkpibackgroundcolour == null)
			clone.awaitingclinicianbreachkpibackgroundcolour = null;
		else
			clone.awaitingclinicianbreachkpibackgroundcolour = (ims.framework.utils.Color)this.awaitingclinicianbreachkpibackgroundcolour.clone();
		if(this.losbreachwarningkpitextcolour == null)
			clone.losbreachwarningkpitextcolour = null;
		else
			clone.losbreachwarningkpitextcolour = (ims.framework.utils.Color)this.losbreachwarningkpitextcolour.clone();
		if(this.losbreachwarningkpiflashingtext == null)
			clone.losbreachwarningkpiflashingtext = null;
		else
			clone.losbreachwarningkpiflashingtext = (ims.core.vo.lookups.YesNo)this.losbreachwarningkpiflashingtext.clone();
		if(this.losbreachwarningkpiflashingtextcolour == null)
			clone.losbreachwarningkpiflashingtextcolour = null;
		else
			clone.losbreachwarningkpiflashingtextcolour = (ims.framework.utils.Color)this.losbreachwarningkpiflashingtextcolour.clone();
		if(this.losbreachwarningkpibackgroundcolour == null)
			clone.losbreachwarningkpibackgroundcolour = null;
		else
			clone.losbreachwarningkpibackgroundcolour = (ims.framework.utils.Color)this.losbreachwarningkpibackgroundcolour.clone();
		if(this.losbreachkpitextcolour == null)
			clone.losbreachkpitextcolour = null;
		else
			clone.losbreachkpitextcolour = (ims.framework.utils.Color)this.losbreachkpitextcolour.clone();
		if(this.losbreachedkpiflashingtext == null)
			clone.losbreachedkpiflashingtext = null;
		else
			clone.losbreachedkpiflashingtext = (ims.core.vo.lookups.YesNo)this.losbreachedkpiflashingtext.clone();
		if(this.losbreachedkpiflashingtextcolour == null)
			clone.losbreachedkpiflashingtextcolour = null;
		else
			clone.losbreachedkpiflashingtextcolour = (ims.framework.utils.Color)this.losbreachedkpiflashingtextcolour.clone();
		if(this.losbreachedkpibackgroundcolour == null)
			clone.losbreachedkpibackgroundcolour = null;
		else
			clone.losbreachedkpibackgroundcolour = (ims.framework.utils.Color)this.losbreachedkpibackgroundcolour.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(AttendanceKPIConfigVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A AttendanceKPIConfigVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((AttendanceKPIConfigVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((AttendanceKPIConfigVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.edlocation != null)
			count++;
		if(this.awaitingtriagebreachwarningkpi != null)
			count++;
		if(this.awaitingtriagebreachedkpi != null)
			count++;
		if(this.triageprioritykpis != null)
			count++;
		if(this.awaitingclinicianbreachwarningkpi != null)
			count++;
		if(this.awaitingclinicianbreachedkpi != null)
			count++;
		if(this.losbreachwarningkpi != null)
			count++;
		if(this.losbreachedkpi != null)
			count++;
		if(this.awaitingtriagebreachwarningkpitextcolour != null)
			count++;
		if(this.awaitingtriagebreachwarningkpiflashingtext != null)
			count++;
		if(this.awaitingtriagebreachwarningkpiflashingtextcolour != null)
			count++;
		if(this.awaitingtriagebreachwarningkpibackgroundcolour != null)
			count++;
		if(this.awaitingtriagebreachkpitextcolour != null)
			count++;
		if(this.awaitingtriagebreachkpiflashingtext != null)
			count++;
		if(this.awaitingtriagebreachkpiflashingtextcolour != null)
			count++;
		if(this.awaitingtriagebreachkpibackgroundcolour != null)
			count++;
		if(this.awaitingclinicianbreachwarningkpitextcolour != null)
			count++;
		if(this.awaitingclinicianbreachwarningkpiflashingtext != null)
			count++;
		if(this.awaitingclinicianbreachwarningkpiflashingtextcolour != null)
			count++;
		if(this.awaitingclinicianbreachwarningkpibackgroundcolour != null)
			count++;
		if(this.awaitingclinicianbreachkpitextcolour != null)
			count++;
		if(this.awaitingclinicianbreachkpiflashingtext != null)
			count++;
		if(this.awaitingclinicianbreachkpiflashingtextcolour != null)
			count++;
		if(this.awaitingclinicianbreachkpibackgroundcolour != null)
			count++;
		if(this.losbreachwarningkpitextcolour != null)
			count++;
		if(this.losbreachwarningkpiflashingtext != null)
			count++;
		if(this.losbreachwarningkpiflashingtextcolour != null)
			count++;
		if(this.losbreachwarningkpibackgroundcolour != null)
			count++;
		if(this.losbreachkpitextcolour != null)
			count++;
		if(this.losbreachedkpiflashingtext != null)
			count++;
		if(this.losbreachedkpiflashingtextcolour != null)
			count++;
		if(this.losbreachedkpibackgroundcolour != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 32;
	}
	protected ims.core.resource.place.vo.LocationRefVo edlocation;
	protected Integer awaitingtriagebreachwarningkpi;
	protected Integer awaitingtriagebreachedkpi;
	protected ims.emergency.vo.TriagePriorityKpConfigVoCollection triageprioritykpis;
	protected Integer awaitingclinicianbreachwarningkpi;
	protected Integer awaitingclinicianbreachedkpi;
	protected Integer losbreachwarningkpi;
	protected Integer losbreachedkpi;
	protected ims.framework.utils.Color awaitingtriagebreachwarningkpitextcolour;
	protected ims.core.vo.lookups.YesNo awaitingtriagebreachwarningkpiflashingtext;
	protected ims.framework.utils.Color awaitingtriagebreachwarningkpiflashingtextcolour;
	protected ims.framework.utils.Color awaitingtriagebreachwarningkpibackgroundcolour;
	protected ims.framework.utils.Color awaitingtriagebreachkpitextcolour;
	protected ims.core.vo.lookups.YesNo awaitingtriagebreachkpiflashingtext;
	protected ims.framework.utils.Color awaitingtriagebreachkpiflashingtextcolour;
	protected ims.framework.utils.Color awaitingtriagebreachkpibackgroundcolour;
	protected ims.framework.utils.Color awaitingclinicianbreachwarningkpitextcolour;
	protected ims.core.vo.lookups.YesNo awaitingclinicianbreachwarningkpiflashingtext;
	protected ims.framework.utils.Color awaitingclinicianbreachwarningkpiflashingtextcolour;
	protected ims.framework.utils.Color awaitingclinicianbreachwarningkpibackgroundcolour;
	protected ims.framework.utils.Color awaitingclinicianbreachkpitextcolour;
	protected ims.core.vo.lookups.YesNo awaitingclinicianbreachkpiflashingtext;
	protected ims.framework.utils.Color awaitingclinicianbreachkpiflashingtextcolour;
	protected ims.framework.utils.Color awaitingclinicianbreachkpibackgroundcolour;
	protected ims.framework.utils.Color losbreachwarningkpitextcolour;
	protected ims.core.vo.lookups.YesNo losbreachwarningkpiflashingtext;
	protected ims.framework.utils.Color losbreachwarningkpiflashingtextcolour;
	protected ims.framework.utils.Color losbreachwarningkpibackgroundcolour;
	protected ims.framework.utils.Color losbreachkpitextcolour;
	protected ims.core.vo.lookups.YesNo losbreachedkpiflashingtext;
	protected ims.framework.utils.Color losbreachedkpiflashingtextcolour;
	protected ims.framework.utils.Color losbreachedkpibackgroundcolour;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
