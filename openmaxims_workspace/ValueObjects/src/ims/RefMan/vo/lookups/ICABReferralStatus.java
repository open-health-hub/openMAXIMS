// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.lookups;

import ims.framework.cn.data.TreeNode;
import java.util.ArrayList;
import ims.framework.utils.Image;
import ims.framework.utils.Color;

public class ICABReferralStatus extends ims.vo.LookupInstVo implements TreeNode
{
	private static final long serialVersionUID = 1L;

	public ICABReferralStatus()
	{
		super();
	}
	public ICABReferralStatus(int id)
	{
		super(id, "", true);
	}
	public ICABReferralStatus(int id, String text, boolean active)
	{
		super(id, text, active, null, null, null);
	}
	public ICABReferralStatus(int id, String text, boolean active, ICABReferralStatus parent, Image image)
	{
		super(id, text, active, parent, image);
	}
	public ICABReferralStatus(int id, String text, boolean active, ICABReferralStatus parent, Image image, Color color)
	{
		super(id, text, active, parent, image, color);
	}
	public ICABReferralStatus(int id, String text, boolean active, ICABReferralStatus parent, Image image, Color color, int order)
	{
		super(id, text, active, parent, image, color, order);
	}
	public static ICABReferralStatus buildLookup(ims.vo.LookupInstanceBean bean)
	{
		return new ICABReferralStatus(bean.getId(), bean.getText(), bean.isActive());
	}
	public String toString()
	{
		if(getText() != null)
			return getText();
		return "";
	}
	public TreeNode getParentNode()
	{
		return (ICABReferralStatus)super.getParentInstance();
	}
	public ICABReferralStatus getParent()
	{
		return (ICABReferralStatus)super.getParentInstance();
	}
	public void setParent(ICABReferralStatus parent)
	{
		super.setParentInstance(parent);
	}
	public TreeNode[] getChildren()
	{
		ArrayList children = super.getChildInstances();
		ICABReferralStatus[] typedChildren = new ICABReferralStatus[children.size()];
		for (int i = 0; i < children.size(); i++)
		{
			typedChildren[i] = (ICABReferralStatus)children.get(i);
		}
		return typedChildren;
	}
	public int addChild(TreeNode child)
	{
		if (child instanceof ICABReferralStatus)
		{
			super.addChild((ICABReferralStatus)child);
		}
		return super.getChildInstances().size();
	}
	public int removeChild(TreeNode child)
	{
		if (child instanceof ICABReferralStatus)
		{
			super.removeChild((ICABReferralStatus)child);
		}
		return super.getChildInstances().size();
	}
	public Image getExpandedImage()
	{
		return super.getImage();
	}
	public Image getCollapsedImage()
	{
		return super.getImage();
	}
	public static ims.framework.IItemCollection getNegativeInstancesAsIItemCollection()
	{
		ICABReferralStatusCollection result = new ICABReferralStatusCollection();
		result.add(CHOOSEANDBOOK);
		result.add(ACCEPTED);
		result.add(COMPLETED);
		return result;
	}
	public static ICABReferralStatus[] getNegativeInstances()
	{
		ICABReferralStatus[] instances = new ICABReferralStatus[3];
		instances[0] = CHOOSEANDBOOK;
		instances[1] = ACCEPTED;
		instances[2] = COMPLETED;
		return instances;
	}
	public static String[] getNegativeInstanceNames()
	{
		String[] negativeInstances = new String[3];
		negativeInstances[0] = "CHOOSEANDBOOK";
		negativeInstances[1] = "ACCEPTED";
		negativeInstances[2] = "COMPLETED";
		return negativeInstances;
	}
	public static ICABReferralStatus getNegativeInstance(String name)
	{
		if(name == null)
			return null;
		String[] negativeInstances = getNegativeInstanceNames();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].equals(name))
				return getNegativeInstances()[i];
		}
		return null;
	}
	public static ICABReferralStatus getNegativeInstance(Integer id)
	{
		if(id == null)
			return null;
		ICABReferralStatus[] negativeInstances = getNegativeInstances();
		for (int i = 0; i < negativeInstances.length; i++)
		{
			if(negativeInstances[i].getID() == id)
				return negativeInstances[i];
		}
		return null;
	}
	public int getTypeId()
	{
		return TYPE_ID;
	}
	public static final int TYPE_ID = 1341002;
	public static final ICABReferralStatus CHOOSEANDBOOK = new ICABReferralStatus(-1462, "Choose and Book Referral", true, null, null, Color.Default);
	public static final ICABReferralStatus ACCEPTED = new ICABReferralStatus(-1463, "Accepted", true, null, null, Color.Default);
	public static final ICABReferralStatus COMPLETED = new ICABReferralStatus(-1464, "Completed", true, null, null, Color.Default);
}
