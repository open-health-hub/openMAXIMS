// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to RefMan.CatsReferral business object (ID: 1004100035).
 */
public class ReferralAppointmentDetailsVo extends ims.RefMan.vo.CatsReferralRefVo implements ims.vo.ImsCloneable, Comparable, ims.vo.interfaces.IReferralApptDetail
{
	private static final long serialVersionUID = 1L;

	public ReferralAppointmentDetailsVo()
	{
	}
	public ReferralAppointmentDetailsVo(Integer id, int version)
	{
		super(id, version);
	}
	public ReferralAppointmentDetailsVo(ims.RefMan.vo.beans.ReferralAppointmentDetailsVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.referraldetails = bean.getReferralDetails() == null ? null : bean.getReferralDetails().buildVo();
		this.investigationorders = ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection.buildFromBeanCollection(bean.getInvestigationOrders());
		this.appointments = ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection.buildFromBeanCollection(bean.getAppointments());
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo();
		this.statushistory = ims.RefMan.vo.CatsReferralStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.orderinvappts = ims.RefMan.vo.OrderInvApptListVoCollection.buildFromBeanCollection(bean.getOrderInvAppts());
		this.icabreferral = bean.getICABReferral() == null ? null : bean.getICABReferral().buildVo();
		this.outpatienterod = ims.RefMan.vo.ReferralERODVoCollection.buildFromBeanCollection(bean.getOutpatientEROD());
		this.electiveerod = ims.RefMan.vo.ReferralERODVoCollection.buildFromBeanCollection(bean.getElectiveEROD());
		this.currentrttstatus = bean.getCurrentRTTStatus() == null ? null : bean.getCurrentRTTStatus().buildVo();
		this.rttclockimpact = bean.getRTTClockImpact();
		this.pathwayid = bean.getPathwayID();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.ReferralAppointmentDetailsVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.referraldetails = bean.getReferralDetails() == null ? null : bean.getReferralDetails().buildVo(map);
		this.investigationorders = ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection.buildFromBeanCollection(bean.getInvestigationOrders());
		this.appointments = ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection.buildFromBeanCollection(bean.getAppointments());
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo(map);
		this.statushistory = ims.RefMan.vo.CatsReferralStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.orderinvappts = ims.RefMan.vo.OrderInvApptListVoCollection.buildFromBeanCollection(bean.getOrderInvAppts());
		this.icabreferral = bean.getICABReferral() == null ? null : bean.getICABReferral().buildVo(map);
		this.outpatienterod = ims.RefMan.vo.ReferralERODVoCollection.buildFromBeanCollection(bean.getOutpatientEROD());
		this.electiveerod = ims.RefMan.vo.ReferralERODVoCollection.buildFromBeanCollection(bean.getElectiveEROD());
		this.currentrttstatus = bean.getCurrentRTTStatus() == null ? null : bean.getCurrentRTTStatus().buildVo(map);
		this.rttclockimpact = bean.getRTTClockImpact();
		this.pathwayid = bean.getPathwayID();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.ReferralAppointmentDetailsVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.ReferralAppointmentDetailsVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.ReferralAppointmentDetailsVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("REFERRALDETAILS"))
			return getReferralDetails();
		if(fieldName.equals("INVESTIGATIONORDERS"))
			return getInvestigationOrders();
		if(fieldName.equals("APPOINTMENTS"))
			return getAppointments();
		if(fieldName.equals("CURRENTSTATUS"))
			return getCurrentStatus();
		if(fieldName.equals("STATUSHISTORY"))
			return getStatusHistory();
		if(fieldName.equals("ORDERINVAPPTS"))
			return getOrderInvAppts();
		if(fieldName.equals("ICABREFERRAL"))
			return getICABReferral();
		if(fieldName.equals("OUTPATIENTEROD"))
			return getOutpatientEROD();
		if(fieldName.equals("ELECTIVEEROD"))
			return getElectiveEROD();
		if(fieldName.equals("CURRENTRTTSTATUS"))
			return getCurrentRTTStatus();
		if(fieldName.equals("RTTCLOCKIMPACT"))
			return getRTTClockImpact();
		if(fieldName.equals("PATHWAYID"))
			return getPathwayID();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getReferralDetailsIsNotNull()
	{
		return this.referraldetails != null;
	}
	public ims.RefMan.vo.ReferralLetterDetailsLiteWithGPVo getReferralDetails()
	{
		return this.referraldetails;
	}
	public void setReferralDetails(ims.RefMan.vo.ReferralLetterDetailsLiteWithGPVo value)
	{
		this.isValidated = false;
		this.referraldetails = value;
	}
	public boolean getInvestigationOrdersIsNotNull()
	{
		return this.investigationorders != null;
	}
	public ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection getInvestigationOrders()
	{
		return this.investigationorders;
	}
	public void setInvestigationOrders(ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection value)
	{
		this.isValidated = false;
		this.investigationorders = value;
	}
	public boolean getAppointmentsIsNotNull()
	{
		return this.appointments != null;
	}
	public ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection getAppointments()
	{
		return this.appointments;
	}
	public void setAppointments(ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection value)
	{
		this.isValidated = false;
		this.appointments = value;
	}
	public boolean getCurrentStatusIsNotNull()
	{
		return this.currentstatus != null;
	}
	public ims.RefMan.vo.CatsReferralStatusVo getCurrentStatus()
	{
		return this.currentstatus;
	}
	public void setCurrentStatus(ims.RefMan.vo.CatsReferralStatusVo value)
	{
		this.isValidated = false;
		this.currentstatus = value;
	}
	public boolean getStatusHistoryIsNotNull()
	{
		return this.statushistory != null;
	}
	public ims.RefMan.vo.CatsReferralStatusVoCollection getStatusHistory()
	{
		return this.statushistory;
	}
	public void setStatusHistory(ims.RefMan.vo.CatsReferralStatusVoCollection value)
	{
		this.isValidated = false;
		this.statushistory = value;
	}
	public boolean getOrderInvApptsIsNotNull()
	{
		return this.orderinvappts != null;
	}
	public ims.RefMan.vo.OrderInvApptListVoCollection getOrderInvAppts()
	{
		return this.orderinvappts;
	}
	public void setOrderInvAppts(ims.RefMan.vo.OrderInvApptListVoCollection value)
	{
		this.isValidated = false;
		this.orderinvappts = value;
	}
	public boolean getICABReferralIsNotNull()
	{
		return this.icabreferral != null;
	}
	public ims.admin.vo.ICABReferralListVo getICABReferral()
	{
		return this.icabreferral;
	}
	public void setICABReferral(ims.admin.vo.ICABReferralListVo value)
	{
		this.isValidated = false;
		this.icabreferral = value;
	}
	public boolean getOutpatientERODIsNotNull()
	{
		return this.outpatienterod != null;
	}
	public ims.RefMan.vo.ReferralERODVoCollection getOutpatientEROD()
	{
		return this.outpatienterod;
	}
	public void setOutpatientEROD(ims.RefMan.vo.ReferralERODVoCollection value)
	{
		this.isValidated = false;
		this.outpatienterod = value;
	}
	public boolean getElectiveERODIsNotNull()
	{
		return this.electiveerod != null;
	}
	public ims.RefMan.vo.ReferralERODVoCollection getElectiveEROD()
	{
		return this.electiveerod;
	}
	public void setElectiveEROD(ims.RefMan.vo.ReferralERODVoCollection value)
	{
		this.isValidated = false;
		this.electiveerod = value;
	}
	public boolean getCurrentRTTStatusIsNotNull()
	{
		return this.currentrttstatus != null;
	}
	public ims.pathways.vo.PathwayRTTCurrentStatusVo getCurrentRTTStatus()
	{
		return this.currentrttstatus;
	}
	public void setCurrentRTTStatus(ims.pathways.vo.PathwayRTTCurrentStatusVo value)
	{
		this.isValidated = false;
		this.currentrttstatus = value;
	}
	public boolean getRTTClockImpactIsNotNull()
	{
		return this.rttclockimpact != null;
	}
	public Boolean getRTTClockImpact()
	{
		return this.rttclockimpact;
	}
	public void setRTTClockImpact(Boolean value)
	{
		this.isValidated = false;
		this.rttclockimpact = value;
	}
	public boolean getPathwayIDIsNotNull()
	{
		return this.pathwayid != null;
	}
	public String getPathwayID()
	{
		return this.pathwayid;
	}
	public static int getPathwayIDMaxLength()
	{
		return 20;
	}
	public void setPathwayID(String value)
	{
		this.isValidated = false;
		this.pathwayid = value;
	}
	/**
	* IReferralApptDetail
	*/
		public ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection getIReferralApptDetailAppointments()
		{
			return this.getAppointments();
		}
		
		public ims.framework.utils.Date getIReferralApptDetailDateReferral()
		{
			ims.RefMan.vo.ReferralLetterDetailsLiteVo voReferralLetterDetail = this.getReferralDetails();
			if(voReferralLetterDetail != null)
				return voReferralLetterDetail.getDateOfReferral();
			
			return null;
		}
		
		public ims.framework.utils.Date getIReferralApptDetailDateReferralReceived()
		{
			ims.RefMan.vo.ReferralLetterDetailsLiteVo voReferralLetterDetail = this.getReferralDetails();
			if(voReferralLetterDetail != null)
				return voReferralLetterDetail.getDateReferralReceived();
			
			return null;
		}
		
		public ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection getIReferralApptDetailInvestigations()
		{
			return this.getInvestigationOrders();
		}
	
		public String getiReferralApptDetailReferredBy()
		{
			ims.RefMan.vo.ReferralLetterDetailsLiteWithGPVo voReferralLetterDetail = this.getReferralDetails();
			if(voReferralLetterDetail != null && voReferralLetterDetail.getReferrerTypeIsNotNull())
			{
				if(voReferralLetterDetail.getReferrerType().equals(ims.core.vo.lookups.SourceOfReferral.GP))
				{
					if(voReferralLetterDetail.getGPNameIsNotNull() && voReferralLetterDetail.getGPName().getNameIsNotNull())
						return voReferralLetterDetail.getGPName().getName().toString(); 
					
				}
				else if(voReferralLetterDetail.getReferrerType().equals(ims.core.vo.lookups.SourceOfReferral.AHP))
				{
					return voReferralLetterDetail.getAlliedHealthProfName();
				}					
			}
			return null;
		}
	
		
		public String getIReferralApptDetailServiceName()
		{
			ims.RefMan.vo.ReferralLetterDetailsLiteVo voReferralLetterDetail = this.getReferralDetails();
			if(voReferralLetterDetail != null && voReferralLetterDetail.getServiceIsNotNull())
				return voReferralLetterDetail.getService().getServiceName();
			
			return null;
		}
		
		public ims.RefMan.vo.CatsReferralStatusVoCollection getIReferralApptDetailStatusHistory()
		{
			return this.getStatusHistory();
		}
		
		public String getIReferralApptDetailUBRN()
		{
			if(this.getICABReferralIsNotNull())
				return this.getICABReferral().getUBRN();	
				
			return null;
		}
	
		public ims.RefMan.vo.OrderInvApptListVoCollection getIReferralApptDetailOrdInvAppts()
		{
			return this.getOrderInvAppts();
		}
	
		public ims.RefMan.vo.ReferralERODVoCollection getIReferralOutpatientEROD()
		{
			return this.outpatienterod;
		}
	
		public ims.RefMan.vo.ReferralERODVoCollection getIReferralTheatreEROD()
		{
			return this.electiveerod;
		}
	
		public ims.pathways.vo.PathwayRTTCurrentStatusVo getIReferralApptDetailCurrentRTTStatus()
		{
			return this.getCurrentRTTStatus();
		}
	
		public Boolean getIReferralApptDetailHasRTTClockImpact()
		{
			return this.getRTTClockImpact();
		}
	
		public String getIReferralApptDetailPathwayID()
		{
			return this.getPathwayID();
		}
	
	
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.referraldetails != null)
		{
			if(!this.referraldetails.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.investigationorders != null)
		{
			if(!this.investigationorders.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.appointments != null)
		{
			if(!this.appointments.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.currentstatus != null)
		{
			if(!this.currentstatus.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.statushistory != null)
		{
			if(!this.statushistory.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.orderinvappts != null)
		{
			if(!this.orderinvappts.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.icabreferral != null)
		{
			if(!this.icabreferral.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.referraldetails != null)
		{
			String[] listOfOtherErrors = this.referraldetails.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.investigationorders != null)
		{
			String[] listOfOtherErrors = this.investigationorders.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.appointments != null)
		{
			String[] listOfOtherErrors = this.appointments.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.currentstatus != null)
		{
			String[] listOfOtherErrors = this.currentstatus.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.statushistory != null)
		{
			String[] listOfOtherErrors = this.statushistory.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.orderinvappts != null)
		{
			String[] listOfOtherErrors = this.orderinvappts.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.icabreferral != null)
		{
			String[] listOfOtherErrors = this.icabreferral.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.pathwayid != null)
			if(this.pathwayid.length() > 20)
				listOfErrors.add("The length of the field [pathwayid] in the value object [ims.RefMan.vo.ReferralAppointmentDetailsVo] is too big. It should be less or equal to 20");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ReferralAppointmentDetailsVo clone = new ReferralAppointmentDetailsVo(this.id, this.version);
		
		if(this.referraldetails == null)
			clone.referraldetails = null;
		else
			clone.referraldetails = (ims.RefMan.vo.ReferralLetterDetailsLiteWithGPVo)this.referraldetails.clone();
		if(this.investigationorders == null)
			clone.investigationorders = null;
		else
			clone.investigationorders = (ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection)this.investigationorders.clone();
		if(this.appointments == null)
			clone.appointments = null;
		else
			clone.appointments = (ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection)this.appointments.clone();
		if(this.currentstatus == null)
			clone.currentstatus = null;
		else
			clone.currentstatus = (ims.RefMan.vo.CatsReferralStatusVo)this.currentstatus.clone();
		if(this.statushistory == null)
			clone.statushistory = null;
		else
			clone.statushistory = (ims.RefMan.vo.CatsReferralStatusVoCollection)this.statushistory.clone();
		if(this.orderinvappts == null)
			clone.orderinvappts = null;
		else
			clone.orderinvappts = (ims.RefMan.vo.OrderInvApptListVoCollection)this.orderinvappts.clone();
		if(this.icabreferral == null)
			clone.icabreferral = null;
		else
			clone.icabreferral = (ims.admin.vo.ICABReferralListVo)this.icabreferral.clone();
		if(this.outpatienterod == null)
			clone.outpatienterod = null;
		else
			clone.outpatienterod = (ims.RefMan.vo.ReferralERODVoCollection)this.outpatienterod.clone();
		if(this.electiveerod == null)
			clone.electiveerod = null;
		else
			clone.electiveerod = (ims.RefMan.vo.ReferralERODVoCollection)this.electiveerod.clone();
		if(this.currentrttstatus == null)
			clone.currentrttstatus = null;
		else
			clone.currentrttstatus = (ims.pathways.vo.PathwayRTTCurrentStatusVo)this.currentrttstatus.clone();
		clone.rttclockimpact = this.rttclockimpact;
		clone.pathwayid = this.pathwayid;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ReferralAppointmentDetailsVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ReferralAppointmentDetailsVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((ReferralAppointmentDetailsVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((ReferralAppointmentDetailsVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.referraldetails != null)
			count++;
		if(this.investigationorders != null)
			count++;
		if(this.appointments != null)
			count++;
		if(this.currentstatus != null)
			count++;
		if(this.statushistory != null)
			count++;
		if(this.orderinvappts != null)
			count++;
		if(this.icabreferral != null)
			count++;
		if(this.outpatienterod != null)
			count++;
		if(this.electiveerod != null)
			count++;
		if(this.currentrttstatus != null)
			count++;
		if(this.rttclockimpact != null)
			count++;
		if(this.pathwayid != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 12;
	}
	protected ims.RefMan.vo.ReferralLetterDetailsLiteWithGPVo referraldetails;
	protected ims.ocrr.vo.ReferralAppointmentDetailsOcsOrderVoCollection investigationorders;
	protected ims.scheduling.vo.ReferralAppointmentDetailsBookingAppointmentVoCollection appointments;
	protected ims.RefMan.vo.CatsReferralStatusVo currentstatus;
	protected ims.RefMan.vo.CatsReferralStatusVoCollection statushistory;
	protected ims.RefMan.vo.OrderInvApptListVoCollection orderinvappts;
	protected ims.admin.vo.ICABReferralListVo icabreferral;
	protected ims.RefMan.vo.ReferralERODVoCollection outpatienterod;
	protected ims.RefMan.vo.ReferralERODVoCollection electiveerod;
	protected ims.pathways.vo.PathwayRTTCurrentStatusVo currentrttstatus;
	protected Boolean rttclockimpact;
	protected String pathwayid;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
