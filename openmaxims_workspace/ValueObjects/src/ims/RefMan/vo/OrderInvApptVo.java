// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to RefMan.OrderInvAppt business object (ID: 1096100009).
 */
public class OrderInvApptVo extends ims.RefMan.vo.OrderInvApptRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public OrderInvApptVo()
	{
	}
	public OrderInvApptVo(Integer id, int version)
	{
		super(id, version);
	}
	public OrderInvApptVo(ims.RefMan.vo.beans.OrderInvApptVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.orderinvestigation = bean.getOrderInvestigation() == null ? null : bean.getOrderInvestigation().buildVo();
		this.appointment = bean.getAppointment() == null ? null : bean.getAppointment().buildVo();
		this.status = bean.getStatus() == null ? null : ims.core.vo.lookups.PollStatus.buildLookup(bean.getStatus());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.OrderInvApptVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.orderinvestigation = bean.getOrderInvestigation() == null ? null : bean.getOrderInvestigation().buildVo(map);
		this.appointment = bean.getAppointment() == null ? null : bean.getAppointment().buildVo(map);
		this.status = bean.getStatus() == null ? null : ims.core.vo.lookups.PollStatus.buildLookup(bean.getStatus());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.OrderInvApptVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.OrderInvApptVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.OrderInvApptVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("ORDERINVESTIGATION"))
			return getOrderInvestigation();
		if(fieldName.equals("APPOINTMENT"))
			return getAppointment();
		if(fieldName.equals("STATUS"))
			return getStatus();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getOrderInvestigationIsNotNull()
	{
		return this.orderinvestigation != null;
	}
	public ims.ocrr.vo.OrderInvestigationBookingVo getOrderInvestigation()
	{
		return this.orderinvestigation;
	}
	public void setOrderInvestigation(ims.ocrr.vo.OrderInvestigationBookingVo value)
	{
		this.isValidated = false;
		this.orderinvestigation = value;
	}
	public boolean getAppointmentIsNotNull()
	{
		return this.appointment != null;
	}
	public ims.scheduling.vo.Booking_AppointmentVo getAppointment()
	{
		return this.appointment;
	}
	public void setAppointment(ims.scheduling.vo.Booking_AppointmentVo value)
	{
		this.isValidated = false;
		this.appointment = value;
	}
	public boolean getStatusIsNotNull()
	{
		return this.status != null;
	}
	public ims.core.vo.lookups.PollStatus getStatus()
	{
		return this.status;
	}
	public void setStatus(ims.core.vo.lookups.PollStatus value)
	{
		this.isValidated = false;
		this.status = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.orderinvestigation != null)
		{
			if(!this.orderinvestigation.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.appointment != null)
		{
			if(!this.appointment.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.orderinvestigation != null)
		{
			String[] listOfOtherErrors = this.orderinvestigation.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.appointment != null)
		{
			String[] listOfOtherErrors = this.appointment.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		OrderInvApptVo clone = new OrderInvApptVo(this.id, this.version);
		
		if(this.orderinvestigation == null)
			clone.orderinvestigation = null;
		else
			clone.orderinvestigation = (ims.ocrr.vo.OrderInvestigationBookingVo)this.orderinvestigation.clone();
		if(this.appointment == null)
			clone.appointment = null;
		else
			clone.appointment = (ims.scheduling.vo.Booking_AppointmentVo)this.appointment.clone();
		if(this.status == null)
			clone.status = null;
		else
			clone.status = (ims.core.vo.lookups.PollStatus)this.status.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(OrderInvApptVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A OrderInvApptVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((OrderInvApptVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((OrderInvApptVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.orderinvestigation != null)
			count++;
		if(this.appointment != null)
			count++;
		if(this.status != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 3;
	}
	protected ims.ocrr.vo.OrderInvestigationBookingVo orderinvestigation;
	protected ims.scheduling.vo.Booking_AppointmentVo appointment;
	protected ims.core.vo.lookups.PollStatus status;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
