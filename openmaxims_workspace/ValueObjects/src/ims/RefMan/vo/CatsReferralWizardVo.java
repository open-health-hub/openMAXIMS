// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to RefMan.CatsReferral business object (ID: 1004100035).
 */
public class CatsReferralWizardVo extends ims.RefMan.vo.CatsReferralRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public CatsReferralWizardVo()
	{
	}
	public CatsReferralWizardVo(Integer id, int version)
	{
		super(id, version);
	}
	public CatsReferralWizardVo(ims.RefMan.vo.beans.CatsReferralWizardVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.patient = bean.getPatient() == null ? null : bean.getPatient().buildVo();
		this.referraldetails = bean.getReferralDetails() == null ? null : bean.getReferralDetails().buildVo();
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo();
		this.carecontext = bean.getCareContext() == null ? null : new ims.core.admin.vo.CareContextRefVo(new Integer(bean.getCareContext().getId()), bean.getCareContext().getVersion());
		this.additionalinvapptsstatus = bean.getAdditionalInvApptsStatus() == null ? null : ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus.buildLookup(bean.getAdditionalInvApptsStatus());
		this.hasinvestigations = bean.getHasInvestigations();
		this.hasappointments = bean.getHasAppointments();
		this.hasdocuments = bean.getHasDocuments();
		this.hasreferralletter = bean.getHasReferralLetter();
		this.iscab = bean.getIsCAB();
		this.statushistory = ims.RefMan.vo.CatsReferralStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.rejectreferraldetail = bean.getRejectReferralDetail() == null ? null : bean.getRejectReferralDetail().buildVo();
		this.hasrejectedinv = bean.getHasRejectedInv();
		this.onwardreferralstatus = bean.getOnwardReferralStatus() == null ? null : ims.RefMan.vo.lookups.OnwardReferralStatus.buildLookup(bean.getOnwardReferralStatus());
		this.providercancellation = bean.getProviderCancellation() == null ? null : new ims.RefMan.vo.ProviderCancellationRefVo(new Integer(bean.getProviderCancellation().getId()), bean.getProviderCancellation().getVersion());
		this.hasconsultationdetails = bean.getHasConsultationDetails();
		this.dischargedate = bean.getDischargeDate() == null ? null : bean.getDischargeDate().buildDate();
		this.isfinalreportrequired = bean.getIsFinalReportRequired() == null ? null : ims.RefMan.vo.lookups.ReportStatus.buildLookup(bean.getIsFinalReportRequired());
		this.triagedatetime = bean.getTriageDateTime() == null ? null : bean.getTriageDateTime().buildDateTime();
		this.lastapptarriveddate = bean.getLastApptArrivedDate() == null ? null : bean.getLastApptArrivedDate().buildDate();
		this.isacceptedoncab = bean.getIsAcceptedOnCAB();
		this.isreferralrejectedoncab = bean.getIsReferralRejectedOnCAB();
		this.waspatientrejectionlettersent = bean.getWasPatientRejectionLetterSent();
		this.waspatientprovidercancellationlettersent = bean.getWasPatientProviderCancellationLetterSent();
		this.requiresdischargerep = bean.getRequiresDischargeRep();
		this.hasdnaapptsforreview = bean.getHasDNAApptsForReview();
		this.hascancelledapptsforreview = bean.getHasCancelledApptsForReview();
		this.issecondaryreportrequired = bean.getIsSecondaryReportRequired() == null ? null : ims.RefMan.vo.lookups.ReportStatus.buildLookup(bean.getIsSecondaryReportRequired());
		this.wasfurthermanagementdetailsreviewed = bean.getWasFurtherManagementDetailsReviewed();
		this.onwardreferralreason = bean.getOnwardReferralReason() == null ? null : ims.RefMan.vo.lookups.OnwardReferralReason.buildLookup(bean.getOnwardReferralReason());
		this.dischargetogpdetailsreviewstatus = bean.getDischargeToGPDetailsReviewStatus() == null ? null : ims.RefMan.vo.lookups.DischargeToGPDetailsReviewStatus.buildLookup(bean.getDischargeToGPDetailsReviewStatus());
		this.issuitableforsurgery = bean.getIsSuitableForSurgery();
		this.isfitforsurgery = bean.getIsFitForSurgery();
		this.awaitingclinicalinfo = bean.getAwaitingClinicalInfo() == null ? null : bean.getAwaitingClinicalInfo().buildVo();
		this.isawaitingclinicalinfo = bean.getIsAwaitingClinicalInfo();
		this.contract = bean.getContract() == null ? null : bean.getContract().buildVo();
		this.reportsrequired = ims.RefMan.vo.ReportsRequiredForPrintingVoCollection.buildFromBeanCollection(bean.getReportsRequired());
		this.isactivemonitorapptrequired = bean.getIsActiveMonitorApptRequired();
		this.catsreportsentdate = bean.getCATSReportSentDate() == null ? null : bean.getCATSReportSentDate().buildDateTime();
		this.endofcaredate = bean.getEndOfCareDate() == null ? null : bean.getEndOfCareDate().buildDate();
		this.procedureforpostopreview = bean.getProcedureForPostOpReview() == null ? null : new ims.core.clinical.vo.PatientProcedureRefVo(new Integer(bean.getProcedureForPostOpReview().getId()), bean.getProcedureForPostOpReview().getVersion());
		this.referralcategory = bean.getReferralCategory() == null ? null : ims.RefMan.vo.lookups.CatsReferralCategory.buildLookup(bean.getReferralCategory());
		this.isonwardreferraltriage = bean.getIsOnwardReferralTriage();
		this.nearesttreatmentcentre = bean.getNearestTreatmentCentre() == null ? null : bean.getNearestTreatmentCentre().buildVo();
		this.urgency = bean.getUrgency() == null ? null : ims.RefMan.vo.lookups.ReferralUrgency.buildLookup(bean.getUrgency());
		this.pathwayid = bean.getPathwayID();
		this.rttclockimpact = bean.getRTTClockImpact();
		this.referraltransfer = bean.getReferralTransfer() == null ? null : bean.getReferralTransfer().buildVo();
		this.consupgradedate = bean.getConsUpgradeDate() == null ? null : bean.getConsUpgradeDate().buildDate();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.CatsReferralWizardVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.patient = bean.getPatient() == null ? null : bean.getPatient().buildVo(map);
		this.referraldetails = bean.getReferralDetails() == null ? null : bean.getReferralDetails().buildVo(map);
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo(map);
		this.carecontext = bean.getCareContext() == null ? null : new ims.core.admin.vo.CareContextRefVo(new Integer(bean.getCareContext().getId()), bean.getCareContext().getVersion());
		this.additionalinvapptsstatus = bean.getAdditionalInvApptsStatus() == null ? null : ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus.buildLookup(bean.getAdditionalInvApptsStatus());
		this.hasinvestigations = bean.getHasInvestigations();
		this.hasappointments = bean.getHasAppointments();
		this.hasdocuments = bean.getHasDocuments();
		this.hasreferralletter = bean.getHasReferralLetter();
		this.iscab = bean.getIsCAB();
		this.statushistory = ims.RefMan.vo.CatsReferralStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.rejectreferraldetail = bean.getRejectReferralDetail() == null ? null : bean.getRejectReferralDetail().buildVo(map);
		this.hasrejectedinv = bean.getHasRejectedInv();
		this.onwardreferralstatus = bean.getOnwardReferralStatus() == null ? null : ims.RefMan.vo.lookups.OnwardReferralStatus.buildLookup(bean.getOnwardReferralStatus());
		this.providercancellation = bean.getProviderCancellation() == null ? null : new ims.RefMan.vo.ProviderCancellationRefVo(new Integer(bean.getProviderCancellation().getId()), bean.getProviderCancellation().getVersion());
		this.hasconsultationdetails = bean.getHasConsultationDetails();
		this.dischargedate = bean.getDischargeDate() == null ? null : bean.getDischargeDate().buildDate();
		this.isfinalreportrequired = bean.getIsFinalReportRequired() == null ? null : ims.RefMan.vo.lookups.ReportStatus.buildLookup(bean.getIsFinalReportRequired());
		this.triagedatetime = bean.getTriageDateTime() == null ? null : bean.getTriageDateTime().buildDateTime();
		this.lastapptarriveddate = bean.getLastApptArrivedDate() == null ? null : bean.getLastApptArrivedDate().buildDate();
		this.isacceptedoncab = bean.getIsAcceptedOnCAB();
		this.isreferralrejectedoncab = bean.getIsReferralRejectedOnCAB();
		this.waspatientrejectionlettersent = bean.getWasPatientRejectionLetterSent();
		this.waspatientprovidercancellationlettersent = bean.getWasPatientProviderCancellationLetterSent();
		this.requiresdischargerep = bean.getRequiresDischargeRep();
		this.hasdnaapptsforreview = bean.getHasDNAApptsForReview();
		this.hascancelledapptsforreview = bean.getHasCancelledApptsForReview();
		this.issecondaryreportrequired = bean.getIsSecondaryReportRequired() == null ? null : ims.RefMan.vo.lookups.ReportStatus.buildLookup(bean.getIsSecondaryReportRequired());
		this.wasfurthermanagementdetailsreviewed = bean.getWasFurtherManagementDetailsReviewed();
		this.onwardreferralreason = bean.getOnwardReferralReason() == null ? null : ims.RefMan.vo.lookups.OnwardReferralReason.buildLookup(bean.getOnwardReferralReason());
		this.dischargetogpdetailsreviewstatus = bean.getDischargeToGPDetailsReviewStatus() == null ? null : ims.RefMan.vo.lookups.DischargeToGPDetailsReviewStatus.buildLookup(bean.getDischargeToGPDetailsReviewStatus());
		this.issuitableforsurgery = bean.getIsSuitableForSurgery();
		this.isfitforsurgery = bean.getIsFitForSurgery();
		this.awaitingclinicalinfo = bean.getAwaitingClinicalInfo() == null ? null : bean.getAwaitingClinicalInfo().buildVo(map);
		this.isawaitingclinicalinfo = bean.getIsAwaitingClinicalInfo();
		this.contract = bean.getContract() == null ? null : bean.getContract().buildVo(map);
		this.reportsrequired = ims.RefMan.vo.ReportsRequiredForPrintingVoCollection.buildFromBeanCollection(bean.getReportsRequired());
		this.isactivemonitorapptrequired = bean.getIsActiveMonitorApptRequired();
		this.catsreportsentdate = bean.getCATSReportSentDate() == null ? null : bean.getCATSReportSentDate().buildDateTime();
		this.endofcaredate = bean.getEndOfCareDate() == null ? null : bean.getEndOfCareDate().buildDate();
		this.procedureforpostopreview = bean.getProcedureForPostOpReview() == null ? null : new ims.core.clinical.vo.PatientProcedureRefVo(new Integer(bean.getProcedureForPostOpReview().getId()), bean.getProcedureForPostOpReview().getVersion());
		this.referralcategory = bean.getReferralCategory() == null ? null : ims.RefMan.vo.lookups.CatsReferralCategory.buildLookup(bean.getReferralCategory());
		this.isonwardreferraltriage = bean.getIsOnwardReferralTriage();
		this.nearesttreatmentcentre = bean.getNearestTreatmentCentre() == null ? null : bean.getNearestTreatmentCentre().buildVo(map);
		this.urgency = bean.getUrgency() == null ? null : ims.RefMan.vo.lookups.ReferralUrgency.buildLookup(bean.getUrgency());
		this.pathwayid = bean.getPathwayID();
		this.rttclockimpact = bean.getRTTClockImpact();
		this.referraltransfer = bean.getReferralTransfer() == null ? null : bean.getReferralTransfer().buildVo(map);
		this.consupgradedate = bean.getConsUpgradeDate() == null ? null : bean.getConsUpgradeDate().buildDate();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.CatsReferralWizardVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.CatsReferralWizardVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.CatsReferralWizardVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("PATIENT"))
			return getPatient();
		if(fieldName.equals("REFERRALDETAILS"))
			return getReferralDetails();
		if(fieldName.equals("CURRENTSTATUS"))
			return getCurrentStatus();
		if(fieldName.equals("CARECONTEXT"))
			return getCareContext();
		if(fieldName.equals("ADDITIONALINVAPPTSSTATUS"))
			return getAdditionalInvApptsStatus();
		if(fieldName.equals("HASINVESTIGATIONS"))
			return getHasInvestigations();
		if(fieldName.equals("HASAPPOINTMENTS"))
			return getHasAppointments();
		if(fieldName.equals("HASDOCUMENTS"))
			return getHasDocuments();
		if(fieldName.equals("HASREFERRALLETTER"))
			return getHasReferralLetter();
		if(fieldName.equals("ISCAB"))
			return getIsCAB();
		if(fieldName.equals("STATUSHISTORY"))
			return getStatusHistory();
		if(fieldName.equals("REJECTREFERRALDETAIL"))
			return getRejectReferralDetail();
		if(fieldName.equals("HASREJECTEDINV"))
			return getHasRejectedInv();
		if(fieldName.equals("ONWARDREFERRALSTATUS"))
			return getOnwardReferralStatus();
		if(fieldName.equals("PROVIDERCANCELLATION"))
			return getProviderCancellation();
		if(fieldName.equals("HASCONSULTATIONDETAILS"))
			return getHasConsultationDetails();
		if(fieldName.equals("DISCHARGEDATE"))
			return getDischargeDate();
		if(fieldName.equals("ISFINALREPORTREQUIRED"))
			return getIsFinalReportRequired();
		if(fieldName.equals("TRIAGEDATETIME"))
			return getTriageDateTime();
		if(fieldName.equals("LASTAPPTARRIVEDDATE"))
			return getLastApptArrivedDate();
		if(fieldName.equals("ISACCEPTEDONCAB"))
			return getIsAcceptedOnCAB();
		if(fieldName.equals("ISREFERRALREJECTEDONCAB"))
			return getIsReferralRejectedOnCAB();
		if(fieldName.equals("WASPATIENTREJECTIONLETTERSENT"))
			return getWasPatientRejectionLetterSent();
		if(fieldName.equals("WASPATIENTPROVIDERCANCELLATIONLETTERSENT"))
			return getWasPatientProviderCancellationLetterSent();
		if(fieldName.equals("REQUIRESDISCHARGEREP"))
			return getRequiresDischargeRep();
		if(fieldName.equals("HASDNAAPPTSFORREVIEW"))
			return getHasDNAApptsForReview();
		if(fieldName.equals("HASCANCELLEDAPPTSFORREVIEW"))
			return getHasCancelledApptsForReview();
		if(fieldName.equals("ISSECONDARYREPORTREQUIRED"))
			return getIsSecondaryReportRequired();
		if(fieldName.equals("WASFURTHERMANAGEMENTDETAILSREVIEWED"))
			return getWasFurtherManagementDetailsReviewed();
		if(fieldName.equals("ONWARDREFERRALREASON"))
			return getOnwardReferralReason();
		if(fieldName.equals("DISCHARGETOGPDETAILSREVIEWSTATUS"))
			return getDischargeToGPDetailsReviewStatus();
		if(fieldName.equals("ISSUITABLEFORSURGERY"))
			return getIsSuitableForSurgery();
		if(fieldName.equals("ISFITFORSURGERY"))
			return getIsFitForSurgery();
		if(fieldName.equals("AWAITINGCLINICALINFO"))
			return getAwaitingClinicalInfo();
		if(fieldName.equals("ISAWAITINGCLINICALINFO"))
			return getIsAwaitingClinicalInfo();
		if(fieldName.equals("CONTRACT"))
			return getContract();
		if(fieldName.equals("REPORTSREQUIRED"))
			return getReportsRequired();
		if(fieldName.equals("ISACTIVEMONITORAPPTREQUIRED"))
			return getIsActiveMonitorApptRequired();
		if(fieldName.equals("CATSREPORTSENTDATE"))
			return getCATSReportSentDate();
		if(fieldName.equals("ENDOFCAREDATE"))
			return getEndOfCareDate();
		if(fieldName.equals("PROCEDUREFORPOSTOPREVIEW"))
			return getProcedureForPostOpReview();
		if(fieldName.equals("REFERRALCATEGORY"))
			return getReferralCategory();
		if(fieldName.equals("ISONWARDREFERRALTRIAGE"))
			return getIsOnwardReferralTriage();
		if(fieldName.equals("NEARESTTREATMENTCENTRE"))
			return getNearestTreatmentCentre();
		if(fieldName.equals("URGENCY"))
			return getUrgency();
		if(fieldName.equals("PATHWAYID"))
			return getPathwayID();
		if(fieldName.equals("RTTCLOCKIMPACT"))
			return getRTTClockImpact();
		if(fieldName.equals("REFERRALTRANSFER"))
			return getReferralTransfer();
		if(fieldName.equals("CONSUPGRADEDATE"))
			return getConsUpgradeDate();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getPatientIsNotNull()
	{
		return this.patient != null;
	}
	public ims.core.vo.Patient getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.vo.Patient value)
	{
		this.isValidated = false;
		this.patient = value;
	}
	public boolean getReferralDetailsIsNotNull()
	{
		return this.referraldetails != null;
	}
	public ims.clinical.vo.ReferralLetterDetailsVo getReferralDetails()
	{
		return this.referraldetails;
	}
	public void setReferralDetails(ims.clinical.vo.ReferralLetterDetailsVo value)
	{
		this.isValidated = false;
		this.referraldetails = value;
	}
	public boolean getCurrentStatusIsNotNull()
	{
		return this.currentstatus != null;
	}
	public ims.RefMan.vo.CatsReferralStatusVo getCurrentStatus()
	{
		return this.currentstatus;
	}
	public void setCurrentStatus(ims.RefMan.vo.CatsReferralStatusVo value)
	{
		this.isValidated = false;
		this.currentstatus = value;
	}
	public boolean getCareContextIsNotNull()
	{
		return this.carecontext != null;
	}
	public ims.core.admin.vo.CareContextRefVo getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.core.admin.vo.CareContextRefVo value)
	{
		this.isValidated = false;
		this.carecontext = value;
	}
	public boolean getAdditionalInvApptsStatusIsNotNull()
	{
		return this.additionalinvapptsstatus != null;
	}
	public ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus getAdditionalInvApptsStatus()
	{
		return this.additionalinvapptsstatus;
	}
	public void setAdditionalInvApptsStatus(ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus value)
	{
		this.isValidated = false;
		this.additionalinvapptsstatus = value;
	}
	public boolean getHasInvestigationsIsNotNull()
	{
		return this.hasinvestigations != null;
	}
	public Boolean getHasInvestigations()
	{
		return this.hasinvestigations;
	}
	public void setHasInvestigations(Boolean value)
	{
		this.isValidated = false;
		this.hasinvestigations = value;
	}
	public boolean getHasAppointmentsIsNotNull()
	{
		return this.hasappointments != null;
	}
	public Boolean getHasAppointments()
	{
		return this.hasappointments;
	}
	public void setHasAppointments(Boolean value)
	{
		this.isValidated = false;
		this.hasappointments = value;
	}
	public boolean getHasDocumentsIsNotNull()
	{
		return this.hasdocuments != null;
	}
	public Boolean getHasDocuments()
	{
		return this.hasdocuments;
	}
	public void setHasDocuments(Boolean value)
	{
		this.isValidated = false;
		this.hasdocuments = value;
	}
	public boolean getHasReferralLetterIsNotNull()
	{
		return this.hasreferralletter != null;
	}
	public Boolean getHasReferralLetter()
	{
		return this.hasreferralletter;
	}
	public void setHasReferralLetter(Boolean value)
	{
		this.isValidated = false;
		this.hasreferralletter = value;
	}
	public boolean getIsCABIsNotNull()
	{
		return this.iscab != null;
	}
	public Boolean getIsCAB()
	{
		return this.iscab;
	}
	public void setIsCAB(Boolean value)
	{
		this.isValidated = false;
		this.iscab = value;
	}
	public boolean getStatusHistoryIsNotNull()
	{
		return this.statushistory != null;
	}
	public ims.RefMan.vo.CatsReferralStatusVoCollection getStatusHistory()
	{
		return this.statushistory;
	}
	public void setStatusHistory(ims.RefMan.vo.CatsReferralStatusVoCollection value)
	{
		this.isValidated = false;
		this.statushistory = value;
	}
	public boolean getRejectReferralDetailIsNotNull()
	{
		return this.rejectreferraldetail != null;
	}
	public ims.RefMan.vo.RejectReferralVo getRejectReferralDetail()
	{
		return this.rejectreferraldetail;
	}
	public void setRejectReferralDetail(ims.RefMan.vo.RejectReferralVo value)
	{
		this.isValidated = false;
		this.rejectreferraldetail = value;
	}
	public boolean getHasRejectedInvIsNotNull()
	{
		return this.hasrejectedinv != null;
	}
	public Boolean getHasRejectedInv()
	{
		return this.hasrejectedinv;
	}
	public void setHasRejectedInv(Boolean value)
	{
		this.isValidated = false;
		this.hasrejectedinv = value;
	}
	public boolean getOnwardReferralStatusIsNotNull()
	{
		return this.onwardreferralstatus != null;
	}
	public ims.RefMan.vo.lookups.OnwardReferralStatus getOnwardReferralStatus()
	{
		return this.onwardreferralstatus;
	}
	public void setOnwardReferralStatus(ims.RefMan.vo.lookups.OnwardReferralStatus value)
	{
		this.isValidated = false;
		this.onwardreferralstatus = value;
	}
	public boolean getProviderCancellationIsNotNull()
	{
		return this.providercancellation != null;
	}
	public ims.RefMan.vo.ProviderCancellationRefVo getProviderCancellation()
	{
		return this.providercancellation;
	}
	public void setProviderCancellation(ims.RefMan.vo.ProviderCancellationRefVo value)
	{
		this.isValidated = false;
		this.providercancellation = value;
	}
	public boolean getHasConsultationDetailsIsNotNull()
	{
		return this.hasconsultationdetails != null;
	}
	public Boolean getHasConsultationDetails()
	{
		return this.hasconsultationdetails;
	}
	public void setHasConsultationDetails(Boolean value)
	{
		this.isValidated = false;
		this.hasconsultationdetails = value;
	}
	public boolean getDischargeDateIsNotNull()
	{
		return this.dischargedate != null;
	}
	public ims.framework.utils.Date getDischargeDate()
	{
		return this.dischargedate;
	}
	public void setDischargeDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.dischargedate = value;
	}
	public boolean getIsFinalReportRequiredIsNotNull()
	{
		return this.isfinalreportrequired != null;
	}
	public ims.RefMan.vo.lookups.ReportStatus getIsFinalReportRequired()
	{
		return this.isfinalreportrequired;
	}
	public void setIsFinalReportRequired(ims.RefMan.vo.lookups.ReportStatus value)
	{
		this.isValidated = false;
		this.isfinalreportrequired = value;
	}
	public boolean getTriageDateTimeIsNotNull()
	{
		return this.triagedatetime != null;
	}
	public ims.framework.utils.DateTime getTriageDateTime()
	{
		return this.triagedatetime;
	}
	public void setTriageDateTime(ims.framework.utils.DateTime value)
	{
		this.isValidated = false;
		this.triagedatetime = value;
	}
	public boolean getLastApptArrivedDateIsNotNull()
	{
		return this.lastapptarriveddate != null;
	}
	public ims.framework.utils.Date getLastApptArrivedDate()
	{
		return this.lastapptarriveddate;
	}
	public void setLastApptArrivedDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.lastapptarriveddate = value;
	}
	public boolean getIsAcceptedOnCABIsNotNull()
	{
		return this.isacceptedoncab != null;
	}
	public Boolean getIsAcceptedOnCAB()
	{
		return this.isacceptedoncab;
	}
	public void setIsAcceptedOnCAB(Boolean value)
	{
		this.isValidated = false;
		this.isacceptedoncab = value;
	}
	public boolean getIsReferralRejectedOnCABIsNotNull()
	{
		return this.isreferralrejectedoncab != null;
	}
	public Boolean getIsReferralRejectedOnCAB()
	{
		return this.isreferralrejectedoncab;
	}
	public void setIsReferralRejectedOnCAB(Boolean value)
	{
		this.isValidated = false;
		this.isreferralrejectedoncab = value;
	}
	public boolean getWasPatientRejectionLetterSentIsNotNull()
	{
		return this.waspatientrejectionlettersent != null;
	}
	public Boolean getWasPatientRejectionLetterSent()
	{
		return this.waspatientrejectionlettersent;
	}
	public void setWasPatientRejectionLetterSent(Boolean value)
	{
		this.isValidated = false;
		this.waspatientrejectionlettersent = value;
	}
	public boolean getWasPatientProviderCancellationLetterSentIsNotNull()
	{
		return this.waspatientprovidercancellationlettersent != null;
	}
	public Boolean getWasPatientProviderCancellationLetterSent()
	{
		return this.waspatientprovidercancellationlettersent;
	}
	public void setWasPatientProviderCancellationLetterSent(Boolean value)
	{
		this.isValidated = false;
		this.waspatientprovidercancellationlettersent = value;
	}
	public boolean getRequiresDischargeRepIsNotNull()
	{
		return this.requiresdischargerep != null;
	}
	public Boolean getRequiresDischargeRep()
	{
		return this.requiresdischargerep;
	}
	public void setRequiresDischargeRep(Boolean value)
	{
		this.isValidated = false;
		this.requiresdischargerep = value;
	}
	public boolean getHasDNAApptsForReviewIsNotNull()
	{
		return this.hasdnaapptsforreview != null;
	}
	public Boolean getHasDNAApptsForReview()
	{
		return this.hasdnaapptsforreview;
	}
	public void setHasDNAApptsForReview(Boolean value)
	{
		this.isValidated = false;
		this.hasdnaapptsforreview = value;
	}
	public boolean getHasCancelledApptsForReviewIsNotNull()
	{
		return this.hascancelledapptsforreview != null;
	}
	public Boolean getHasCancelledApptsForReview()
	{
		return this.hascancelledapptsforreview;
	}
	public void setHasCancelledApptsForReview(Boolean value)
	{
		this.isValidated = false;
		this.hascancelledapptsforreview = value;
	}
	public boolean getIsSecondaryReportRequiredIsNotNull()
	{
		return this.issecondaryreportrequired != null;
	}
	public ims.RefMan.vo.lookups.ReportStatus getIsSecondaryReportRequired()
	{
		return this.issecondaryreportrequired;
	}
	public void setIsSecondaryReportRequired(ims.RefMan.vo.lookups.ReportStatus value)
	{
		this.isValidated = false;
		this.issecondaryreportrequired = value;
	}
	public boolean getWasFurtherManagementDetailsReviewedIsNotNull()
	{
		return this.wasfurthermanagementdetailsreviewed != null;
	}
	public Boolean getWasFurtherManagementDetailsReviewed()
	{
		return this.wasfurthermanagementdetailsreviewed;
	}
	public void setWasFurtherManagementDetailsReviewed(Boolean value)
	{
		this.isValidated = false;
		this.wasfurthermanagementdetailsreviewed = value;
	}
	public boolean getOnwardReferralReasonIsNotNull()
	{
		return this.onwardreferralreason != null;
	}
	public ims.RefMan.vo.lookups.OnwardReferralReason getOnwardReferralReason()
	{
		return this.onwardreferralreason;
	}
	public void setOnwardReferralReason(ims.RefMan.vo.lookups.OnwardReferralReason value)
	{
		this.isValidated = false;
		this.onwardreferralreason = value;
	}
	public boolean getDischargeToGPDetailsReviewStatusIsNotNull()
	{
		return this.dischargetogpdetailsreviewstatus != null;
	}
	public ims.RefMan.vo.lookups.DischargeToGPDetailsReviewStatus getDischargeToGPDetailsReviewStatus()
	{
		return this.dischargetogpdetailsreviewstatus;
	}
	public void setDischargeToGPDetailsReviewStatus(ims.RefMan.vo.lookups.DischargeToGPDetailsReviewStatus value)
	{
		this.isValidated = false;
		this.dischargetogpdetailsreviewstatus = value;
	}
	public boolean getIsSuitableForSurgeryIsNotNull()
	{
		return this.issuitableforsurgery != null;
	}
	public Boolean getIsSuitableForSurgery()
	{
		return this.issuitableforsurgery;
	}
	public void setIsSuitableForSurgery(Boolean value)
	{
		this.isValidated = false;
		this.issuitableforsurgery = value;
	}
	public boolean getIsFitForSurgeryIsNotNull()
	{
		return this.isfitforsurgery != null;
	}
	public Boolean getIsFitForSurgery()
	{
		return this.isfitforsurgery;
	}
	public void setIsFitForSurgery(Boolean value)
	{
		this.isValidated = false;
		this.isfitforsurgery = value;
	}
	public boolean getAwaitingClinicalInfoIsNotNull()
	{
		return this.awaitingclinicalinfo != null;
	}
	public ims.RefMan.vo.AwaitingClinicalInfoVo getAwaitingClinicalInfo()
	{
		return this.awaitingclinicalinfo;
	}
	public void setAwaitingClinicalInfo(ims.RefMan.vo.AwaitingClinicalInfoVo value)
	{
		this.isValidated = false;
		this.awaitingclinicalinfo = value;
	}
	public boolean getIsAwaitingClinicalInfoIsNotNull()
	{
		return this.isawaitingclinicalinfo != null;
	}
	public Boolean getIsAwaitingClinicalInfo()
	{
		return this.isawaitingclinicalinfo;
	}
	public void setIsAwaitingClinicalInfo(Boolean value)
	{
		this.isValidated = false;
		this.isawaitingclinicalinfo = value;
	}
	public boolean getContractIsNotNull()
	{
		return this.contract != null;
	}
	public ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo getContract()
	{
		return this.contract;
	}
	public void setContract(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value)
	{
		this.isValidated = false;
		this.contract = value;
	}
	public boolean getReportsRequiredIsNotNull()
	{
		return this.reportsrequired != null;
	}
	public ims.RefMan.vo.ReportsRequiredForPrintingVoCollection getReportsRequired()
	{
		return this.reportsrequired;
	}
	public void setReportsRequired(ims.RefMan.vo.ReportsRequiredForPrintingVoCollection value)
	{
		this.isValidated = false;
		this.reportsrequired = value;
	}
	public boolean getIsActiveMonitorApptRequiredIsNotNull()
	{
		return this.isactivemonitorapptrequired != null;
	}
	public Boolean getIsActiveMonitorApptRequired()
	{
		return this.isactivemonitorapptrequired;
	}
	public void setIsActiveMonitorApptRequired(Boolean value)
	{
		this.isValidated = false;
		this.isactivemonitorapptrequired = value;
	}
	public boolean getCATSReportSentDateIsNotNull()
	{
		return this.catsreportsentdate != null;
	}
	public ims.framework.utils.DateTime getCATSReportSentDate()
	{
		return this.catsreportsentdate;
	}
	public void setCATSReportSentDate(ims.framework.utils.DateTime value)
	{
		this.isValidated = false;
		this.catsreportsentdate = value;
	}
	public boolean getEndOfCareDateIsNotNull()
	{
		return this.endofcaredate != null;
	}
	public ims.framework.utils.Date getEndOfCareDate()
	{
		return this.endofcaredate;
	}
	public void setEndOfCareDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.endofcaredate = value;
	}
	public boolean getProcedureForPostOpReviewIsNotNull()
	{
		return this.procedureforpostopreview != null;
	}
	public ims.core.clinical.vo.PatientProcedureRefVo getProcedureForPostOpReview()
	{
		return this.procedureforpostopreview;
	}
	public void setProcedureForPostOpReview(ims.core.clinical.vo.PatientProcedureRefVo value)
	{
		this.isValidated = false;
		this.procedureforpostopreview = value;
	}
	public boolean getReferralCategoryIsNotNull()
	{
		return this.referralcategory != null;
	}
	public ims.RefMan.vo.lookups.CatsReferralCategory getReferralCategory()
	{
		return this.referralcategory;
	}
	public void setReferralCategory(ims.RefMan.vo.lookups.CatsReferralCategory value)
	{
		this.isValidated = false;
		this.referralcategory = value;
	}
	public boolean getIsOnwardReferralTriageIsNotNull()
	{
		return this.isonwardreferraltriage != null;
	}
	public Boolean getIsOnwardReferralTriage()
	{
		return this.isonwardreferraltriage;
	}
	public void setIsOnwardReferralTriage(Boolean value)
	{
		this.isValidated = false;
		this.isonwardreferraltriage = value;
	}
	public boolean getNearestTreatmentCentreIsNotNull()
	{
		return this.nearesttreatmentcentre != null;
	}
	public ims.admin.vo.ConfigLocationLiteVo getNearestTreatmentCentre()
	{
		return this.nearesttreatmentcentre;
	}
	public void setNearestTreatmentCentre(ims.admin.vo.ConfigLocationLiteVo value)
	{
		this.isValidated = false;
		this.nearesttreatmentcentre = value;
	}
	public boolean getUrgencyIsNotNull()
	{
		return this.urgency != null;
	}
	public ims.RefMan.vo.lookups.ReferralUrgency getUrgency()
	{
		return this.urgency;
	}
	public void setUrgency(ims.RefMan.vo.lookups.ReferralUrgency value)
	{
		this.isValidated = false;
		this.urgency = value;
	}
	public boolean getPathwayIDIsNotNull()
	{
		return this.pathwayid != null;
	}
	public String getPathwayID()
	{
		return this.pathwayid;
	}
	public static int getPathwayIDMaxLength()
	{
		return 20;
	}
	public void setPathwayID(String value)
	{
		this.isValidated = false;
		this.pathwayid = value;
	}
	public boolean getRTTClockImpactIsNotNull()
	{
		return this.rttclockimpact != null;
	}
	public Boolean getRTTClockImpact()
	{
		return this.rttclockimpact;
	}
	public void setRTTClockImpact(Boolean value)
	{
		this.isValidated = false;
		this.rttclockimpact = value;
	}
	public boolean getReferralTransferIsNotNull()
	{
		return this.referraltransfer != null;
	}
	public ims.RefMan.vo.ReferralTransferVo getReferralTransfer()
	{
		return this.referraltransfer;
	}
	public void setReferralTransfer(ims.RefMan.vo.ReferralTransferVo value)
	{
		this.isValidated = false;
		this.referraltransfer = value;
	}
	public boolean getConsUpgradeDateIsNotNull()
	{
		return this.consupgradedate != null;
	}
	public ims.framework.utils.Date getConsUpgradeDate()
	{
		return this.consupgradedate;
	}
	public void setConsUpgradeDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.consupgradedate = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.referraldetails != null)
		{
			if(!this.referraldetails.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.currentstatus != null)
		{
			if(!this.currentstatus.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.statushistory != null)
		{
			if(!this.statushistory.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.rejectreferraldetail != null)
		{
			if(!this.rejectreferraldetail.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.awaitingclinicalinfo != null)
		{
			if(!this.awaitingclinicalinfo.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.reportsrequired != null)
		{
			if(!this.reportsrequired.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.referraltransfer != null)
		{
			if(!this.referraltransfer.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.patient == null)
			listOfErrors.add("Patient is mandatory");
		if(this.referraldetails != null)
		{
			String[] listOfOtherErrors = this.referraldetails.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.currentstatus != null)
		{
			String[] listOfOtherErrors = this.currentstatus.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.carecontext == null)
			listOfErrors.add("CareContext is mandatory");
		if(this.statushistory != null)
		{
			String[] listOfOtherErrors = this.statushistory.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.rejectreferraldetail != null)
		{
			String[] listOfOtherErrors = this.rejectreferraldetail.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.awaitingclinicalinfo != null)
		{
			String[] listOfOtherErrors = this.awaitingclinicalinfo.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.reportsrequired != null)
		{
			String[] listOfOtherErrors = this.reportsrequired.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.pathwayid != null)
			if(this.pathwayid.length() > 20)
				listOfErrors.add("The length of the field [pathwayid] in the value object [ims.RefMan.vo.CatsReferralWizardVo] is too big. It should be less or equal to 20");
		if(this.referraltransfer != null)
		{
			String[] listOfOtherErrors = this.referraltransfer.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		CatsReferralWizardVo clone = new CatsReferralWizardVo(this.id, this.version);
		
		if(this.patient == null)
			clone.patient = null;
		else
			clone.patient = (ims.core.vo.Patient)this.patient.clone();
		if(this.referraldetails == null)
			clone.referraldetails = null;
		else
			clone.referraldetails = (ims.clinical.vo.ReferralLetterDetailsVo)this.referraldetails.clone();
		if(this.currentstatus == null)
			clone.currentstatus = null;
		else
			clone.currentstatus = (ims.RefMan.vo.CatsReferralStatusVo)this.currentstatus.clone();
		clone.carecontext = this.carecontext;
		if(this.additionalinvapptsstatus == null)
			clone.additionalinvapptsstatus = null;
		else
			clone.additionalinvapptsstatus = (ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus)this.additionalinvapptsstatus.clone();
		clone.hasinvestigations = this.hasinvestigations;
		clone.hasappointments = this.hasappointments;
		clone.hasdocuments = this.hasdocuments;
		clone.hasreferralletter = this.hasreferralletter;
		clone.iscab = this.iscab;
		if(this.statushistory == null)
			clone.statushistory = null;
		else
			clone.statushistory = (ims.RefMan.vo.CatsReferralStatusVoCollection)this.statushistory.clone();
		if(this.rejectreferraldetail == null)
			clone.rejectreferraldetail = null;
		else
			clone.rejectreferraldetail = (ims.RefMan.vo.RejectReferralVo)this.rejectreferraldetail.clone();
		clone.hasrejectedinv = this.hasrejectedinv;
		if(this.onwardreferralstatus == null)
			clone.onwardreferralstatus = null;
		else
			clone.onwardreferralstatus = (ims.RefMan.vo.lookups.OnwardReferralStatus)this.onwardreferralstatus.clone();
		clone.providercancellation = this.providercancellation;
		clone.hasconsultationdetails = this.hasconsultationdetails;
		if(this.dischargedate == null)
			clone.dischargedate = null;
		else
			clone.dischargedate = (ims.framework.utils.Date)this.dischargedate.clone();
		if(this.isfinalreportrequired == null)
			clone.isfinalreportrequired = null;
		else
			clone.isfinalreportrequired = (ims.RefMan.vo.lookups.ReportStatus)this.isfinalreportrequired.clone();
		if(this.triagedatetime == null)
			clone.triagedatetime = null;
		else
			clone.triagedatetime = (ims.framework.utils.DateTime)this.triagedatetime.clone();
		if(this.lastapptarriveddate == null)
			clone.lastapptarriveddate = null;
		else
			clone.lastapptarriveddate = (ims.framework.utils.Date)this.lastapptarriveddate.clone();
		clone.isacceptedoncab = this.isacceptedoncab;
		clone.isreferralrejectedoncab = this.isreferralrejectedoncab;
		clone.waspatientrejectionlettersent = this.waspatientrejectionlettersent;
		clone.waspatientprovidercancellationlettersent = this.waspatientprovidercancellationlettersent;
		clone.requiresdischargerep = this.requiresdischargerep;
		clone.hasdnaapptsforreview = this.hasdnaapptsforreview;
		clone.hascancelledapptsforreview = this.hascancelledapptsforreview;
		if(this.issecondaryreportrequired == null)
			clone.issecondaryreportrequired = null;
		else
			clone.issecondaryreportrequired = (ims.RefMan.vo.lookups.ReportStatus)this.issecondaryreportrequired.clone();
		clone.wasfurthermanagementdetailsreviewed = this.wasfurthermanagementdetailsreviewed;
		if(this.onwardreferralreason == null)
			clone.onwardreferralreason = null;
		else
			clone.onwardreferralreason = (ims.RefMan.vo.lookups.OnwardReferralReason)this.onwardreferralreason.clone();
		if(this.dischargetogpdetailsreviewstatus == null)
			clone.dischargetogpdetailsreviewstatus = null;
		else
			clone.dischargetogpdetailsreviewstatus = (ims.RefMan.vo.lookups.DischargeToGPDetailsReviewStatus)this.dischargetogpdetailsreviewstatus.clone();
		clone.issuitableforsurgery = this.issuitableforsurgery;
		clone.isfitforsurgery = this.isfitforsurgery;
		if(this.awaitingclinicalinfo == null)
			clone.awaitingclinicalinfo = null;
		else
			clone.awaitingclinicalinfo = (ims.RefMan.vo.AwaitingClinicalInfoVo)this.awaitingclinicalinfo.clone();
		clone.isawaitingclinicalinfo = this.isawaitingclinicalinfo;
		if(this.contract == null)
			clone.contract = null;
		else
			clone.contract = (ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo)this.contract.clone();
		if(this.reportsrequired == null)
			clone.reportsrequired = null;
		else
			clone.reportsrequired = (ims.RefMan.vo.ReportsRequiredForPrintingVoCollection)this.reportsrequired.clone();
		clone.isactivemonitorapptrequired = this.isactivemonitorapptrequired;
		if(this.catsreportsentdate == null)
			clone.catsreportsentdate = null;
		else
			clone.catsreportsentdate = (ims.framework.utils.DateTime)this.catsreportsentdate.clone();
		if(this.endofcaredate == null)
			clone.endofcaredate = null;
		else
			clone.endofcaredate = (ims.framework.utils.Date)this.endofcaredate.clone();
		clone.procedureforpostopreview = this.procedureforpostopreview;
		if(this.referralcategory == null)
			clone.referralcategory = null;
		else
			clone.referralcategory = (ims.RefMan.vo.lookups.CatsReferralCategory)this.referralcategory.clone();
		clone.isonwardreferraltriage = this.isonwardreferraltriage;
		if(this.nearesttreatmentcentre == null)
			clone.nearesttreatmentcentre = null;
		else
			clone.nearesttreatmentcentre = (ims.admin.vo.ConfigLocationLiteVo)this.nearesttreatmentcentre.clone();
		if(this.urgency == null)
			clone.urgency = null;
		else
			clone.urgency = (ims.RefMan.vo.lookups.ReferralUrgency)this.urgency.clone();
		clone.pathwayid = this.pathwayid;
		clone.rttclockimpact = this.rttclockimpact;
		if(this.referraltransfer == null)
			clone.referraltransfer = null;
		else
			clone.referraltransfer = (ims.RefMan.vo.ReferralTransferVo)this.referraltransfer.clone();
		if(this.consupgradedate == null)
			clone.consupgradedate = null;
		else
			clone.consupgradedate = (ims.framework.utils.Date)this.consupgradedate.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(CatsReferralWizardVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A CatsReferralWizardVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		CatsReferralWizardVo compareObj = (CatsReferralWizardVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getReferralDetails() == null && compareObj.getReferralDetails() != null)
				return -1;
			if(this.getReferralDetails() != null && compareObj.getReferralDetails() == null)
				return 1;
			if(this.getReferralDetails() != null && compareObj.getReferralDetails() != null)
				retVal = this.getReferralDetails().compareTo(compareObj.getReferralDetails());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.patient != null)
			count++;
		if(this.referraldetails != null)
			count++;
		if(this.currentstatus != null)
			count++;
		if(this.carecontext != null)
			count++;
		if(this.additionalinvapptsstatus != null)
			count++;
		if(this.hasinvestigations != null)
			count++;
		if(this.hasappointments != null)
			count++;
		if(this.hasdocuments != null)
			count++;
		if(this.hasreferralletter != null)
			count++;
		if(this.iscab != null)
			count++;
		if(this.statushistory != null)
			count++;
		if(this.rejectreferraldetail != null)
			count++;
		if(this.hasrejectedinv != null)
			count++;
		if(this.onwardreferralstatus != null)
			count++;
		if(this.providercancellation != null)
			count++;
		if(this.hasconsultationdetails != null)
			count++;
		if(this.dischargedate != null)
			count++;
		if(this.isfinalreportrequired != null)
			count++;
		if(this.triagedatetime != null)
			count++;
		if(this.lastapptarriveddate != null)
			count++;
		if(this.isacceptedoncab != null)
			count++;
		if(this.isreferralrejectedoncab != null)
			count++;
		if(this.waspatientrejectionlettersent != null)
			count++;
		if(this.waspatientprovidercancellationlettersent != null)
			count++;
		if(this.requiresdischargerep != null)
			count++;
		if(this.hasdnaapptsforreview != null)
			count++;
		if(this.hascancelledapptsforreview != null)
			count++;
		if(this.issecondaryreportrequired != null)
			count++;
		if(this.wasfurthermanagementdetailsreviewed != null)
			count++;
		if(this.onwardreferralreason != null)
			count++;
		if(this.dischargetogpdetailsreviewstatus != null)
			count++;
		if(this.issuitableforsurgery != null)
			count++;
		if(this.isfitforsurgery != null)
			count++;
		if(this.awaitingclinicalinfo != null)
			count++;
		if(this.isawaitingclinicalinfo != null)
			count++;
		if(this.contract != null)
			count++;
		if(this.reportsrequired != null)
			count++;
		if(this.isactivemonitorapptrequired != null)
			count++;
		if(this.catsreportsentdate != null)
			count++;
		if(this.endofcaredate != null)
			count++;
		if(this.procedureforpostopreview != null)
			count++;
		if(this.referralcategory != null)
			count++;
		if(this.isonwardreferraltriage != null)
			count++;
		if(this.nearesttreatmentcentre != null)
			count++;
		if(this.urgency != null)
			count++;
		if(this.pathwayid != null)
			count++;
		if(this.rttclockimpact != null)
			count++;
		if(this.referraltransfer != null)
			count++;
		if(this.consupgradedate != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 49;
	}
	protected ims.core.vo.Patient patient;
	protected ims.clinical.vo.ReferralLetterDetailsVo referraldetails;
	protected ims.RefMan.vo.CatsReferralStatusVo currentstatus;
	protected ims.core.admin.vo.CareContextRefVo carecontext;
	protected ims.RefMan.vo.lookups.AdditionalInvestigationAppointmentsStatus additionalinvapptsstatus;
	protected Boolean hasinvestigations;
	protected Boolean hasappointments;
	protected Boolean hasdocuments;
	protected Boolean hasreferralletter;
	protected Boolean iscab;
	protected ims.RefMan.vo.CatsReferralStatusVoCollection statushistory;
	protected ims.RefMan.vo.RejectReferralVo rejectreferraldetail;
	protected Boolean hasrejectedinv;
	protected ims.RefMan.vo.lookups.OnwardReferralStatus onwardreferralstatus;
	protected ims.RefMan.vo.ProviderCancellationRefVo providercancellation;
	protected Boolean hasconsultationdetails;
	protected ims.framework.utils.Date dischargedate;
	protected ims.RefMan.vo.lookups.ReportStatus isfinalreportrequired;
	protected ims.framework.utils.DateTime triagedatetime;
	protected ims.framework.utils.Date lastapptarriveddate;
	protected Boolean isacceptedoncab;
	protected Boolean isreferralrejectedoncab;
	protected Boolean waspatientrejectionlettersent;
	protected Boolean waspatientprovidercancellationlettersent;
	protected Boolean requiresdischargerep;
	protected Boolean hasdnaapptsforreview;
	protected Boolean hascancelledapptsforreview;
	protected ims.RefMan.vo.lookups.ReportStatus issecondaryreportrequired;
	protected Boolean wasfurthermanagementdetailsreviewed;
	protected ims.RefMan.vo.lookups.OnwardReferralReason onwardreferralreason;
	protected ims.RefMan.vo.lookups.DischargeToGPDetailsReviewStatus dischargetogpdetailsreviewstatus;
	protected Boolean issuitableforsurgery;
	protected Boolean isfitforsurgery;
	protected ims.RefMan.vo.AwaitingClinicalInfoVo awaitingclinicalinfo;
	protected Boolean isawaitingclinicalinfo;
	protected ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo contract;
	protected ims.RefMan.vo.ReportsRequiredForPrintingVoCollection reportsrequired;
	protected Boolean isactivemonitorapptrequired;
	protected ims.framework.utils.DateTime catsreportsentdate;
	protected ims.framework.utils.Date endofcaredate;
	protected ims.core.clinical.vo.PatientProcedureRefVo procedureforpostopreview;
	protected ims.RefMan.vo.lookups.CatsReferralCategory referralcategory;
	protected Boolean isonwardreferraltriage;
	protected ims.admin.vo.ConfigLocationLiteVo nearesttreatmentcentre;
	protected ims.RefMan.vo.lookups.ReferralUrgency urgency;
	protected String pathwayid;
	protected Boolean rttclockimpact;
	protected ims.RefMan.vo.ReferralTransferVo referraltransfer;
	protected ims.framework.utils.Date consupgradedate;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
