//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.vo;

/**
 * Linked to Scheduling.Sch_Profile business object (ID: 1005100001).
 */
public class ProfileShortVo extends ims.scheduling.vo.ProfileLiteVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public ProfileShortVo()
	{
	}
	public ProfileShortVo(Integer id, int version)
	{
		super(id, version);
	}
	public ProfileShortVo(ims.scheduling.vo.beans.ProfileShortVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.name = bean.getName();
		this.description = bean.getDescription();
		this.prfcategory = bean.getPrfCategory() == null ? null : ims.scheduling.vo.lookups.Sched_Prfile_Cat.buildLookup(bean.getPrfCategory());
		this.prftype = bean.getPrftype() == null ? null : ims.scheduling.vo.lookups.Sched_Profile_Type.buildLookup(bean.getPrftype());
		this.efffrm = bean.getEffFrm() == null ? null : bean.getEffFrm().buildDate();
		this.effto = bean.getEffTo() == null ? null : bean.getEffTo().buildDate();
		this.isactive = bean.getIsActive();
		this.service = bean.getService() == null ? null : bean.getService().buildVo();
		this.lastactualgendate = bean.getLastActualGenDate() == null ? null : bean.getLastActualGenDate().buildDate();
		this.lastgendate = bean.getLastGenDate() == null ? null : bean.getLastGenDate().buildDate();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.scheduling.vo.beans.ProfileShortVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.name = bean.getName();
		this.description = bean.getDescription();
		this.prfcategory = bean.getPrfCategory() == null ? null : ims.scheduling.vo.lookups.Sched_Prfile_Cat.buildLookup(bean.getPrfCategory());
		this.prftype = bean.getPrftype() == null ? null : ims.scheduling.vo.lookups.Sched_Profile_Type.buildLookup(bean.getPrftype());
		this.efffrm = bean.getEffFrm() == null ? null : bean.getEffFrm().buildDate();
		this.effto = bean.getEffTo() == null ? null : bean.getEffTo().buildDate();
		this.isactive = bean.getIsActive();
		this.service = bean.getService() == null ? null : bean.getService().buildVo(map);
		this.lastactualgendate = bean.getLastActualGenDate() == null ? null : bean.getLastActualGenDate().buildDate();
		this.lastgendate = bean.getLastGenDate() == null ? null : bean.getLastGenDate().buildDate();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.scheduling.vo.beans.ProfileShortVoBean bean = null;
		if(map != null)
			bean = (ims.scheduling.vo.beans.ProfileShortVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.scheduling.vo.beans.ProfileShortVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("DESCRIPTION"))
			return getDescription();
		if(fieldName.equals("PRFCATEGORY"))
			return getPrfCategory();
		if(fieldName.equals("PRFTYPE"))
			return getPrftype();
		if(fieldName.equals("EFFFRM"))
			return getEffFrm();
		if(fieldName.equals("EFFTO"))
			return getEffTo();
		if(fieldName.equals("ISACTIVE"))
			return getIsActive();
		if(fieldName.equals("SERVICE"))
			return getService();
		if(fieldName.equals("LASTACTUALGENDATE"))
			return getLastActualGenDate();
		if(fieldName.equals("LASTGENDATE"))
			return getLastGenDate();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getDescriptionIsNotNull()
	{
		return this.description != null;
	}
	public String getDescription()
	{
		return this.description;
	}
	public static int getDescriptionMaxLength()
	{
		return 255;
	}
	public void setDescription(String value)
	{
		this.isValidated = false;
		this.description = value;
	}
	public boolean getPrfCategoryIsNotNull()
	{
		return this.prfcategory != null;
	}
	public ims.scheduling.vo.lookups.Sched_Prfile_Cat getPrfCategory()
	{
		return this.prfcategory;
	}
	public void setPrfCategory(ims.scheduling.vo.lookups.Sched_Prfile_Cat value)
	{
		this.isValidated = false;
		this.prfcategory = value;
	}
	public boolean getPrftypeIsNotNull()
	{
		return this.prftype != null;
	}
	public ims.scheduling.vo.lookups.Sched_Profile_Type getPrftype()
	{
		return this.prftype;
	}
	public void setPrftype(ims.scheduling.vo.lookups.Sched_Profile_Type value)
	{
		this.isValidated = false;
		this.prftype = value;
	}
	public boolean getEffFrmIsNotNull()
	{
		return this.efffrm != null;
	}
	public ims.framework.utils.Date getEffFrm()
	{
		return this.efffrm;
	}
	public void setEffFrm(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.efffrm = value;
	}
	public boolean getEffToIsNotNull()
	{
		return this.effto != null;
	}
	public ims.framework.utils.Date getEffTo()
	{
		return this.effto;
	}
	public void setEffTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.effto = value;
	}
	public boolean getIsActiveIsNotNull()
	{
		return this.isactive != null;
	}
	public Boolean getIsActive()
	{
		return this.isactive;
	}
	public void setIsActive(Boolean value)
	{
		this.isValidated = false;
		this.isactive = value;
	}
	public boolean getServiceIsNotNull()
	{
		return this.service != null;
	}
	public ims.core.vo.ServiceShortVo getService()
	{
		return this.service;
	}
	public void setService(ims.core.vo.ServiceShortVo value)
	{
		this.isValidated = false;
		this.service = value;
	}
	public boolean getLastActualGenDateIsNotNull()
	{
		return this.lastactualgendate != null;
	}
	public ims.framework.utils.Date getLastActualGenDate()
	{
		return this.lastactualgendate;
	}
	public void setLastActualGenDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.lastactualgendate = value;
	}
	public boolean getLastGenDateIsNotNull()
	{
		return this.lastgendate != null;
	}
	public ims.framework.utils.Date getLastGenDate()
	{
		return this.lastgendate;
	}
	public void setLastGenDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.lastgendate = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.service != null)
		{
			if(!this.service.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.name == null || this.name.length() == 0)
			listOfErrors.add("Name is mandatory");
		else if(this.name.length() > 100)
			listOfErrors.add("The length of the field [name] in the value object [ims.scheduling.vo.ProfileShortVo] is too big. It should be less or equal to 100");
		if(this.description != null)
			if(this.description.length() > 255)
				listOfErrors.add("The length of the field [description] in the value object [ims.scheduling.vo.ProfileShortVo] is too big. It should be less or equal to 255");
		if(this.prfcategory == null)
			listOfErrors.add("Category is mandatory");
		if(this.prftype == null)
			listOfErrors.add("Type is mandatory");
		if(this.efffrm == null)
			listOfErrors.add("Start Date is mandatory");
		if(this.service == null)
			listOfErrors.add("Service is mandatory");
		if(this.service != null)
		{
			String[] listOfOtherErrors = this.service.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ProfileShortVo clone = new ProfileShortVo(this.id, this.version);
		
		clone.name = this.name;
		clone.description = this.description;
		if(this.prfcategory == null)
			clone.prfcategory = null;
		else
			clone.prfcategory = (ims.scheduling.vo.lookups.Sched_Prfile_Cat)this.prfcategory.clone();
		if(this.prftype == null)
			clone.prftype = null;
		else
			clone.prftype = (ims.scheduling.vo.lookups.Sched_Profile_Type)this.prftype.clone();
		if(this.efffrm == null)
			clone.efffrm = null;
		else
			clone.efffrm = (ims.framework.utils.Date)this.efffrm.clone();
		if(this.effto == null)
			clone.effto = null;
		else
			clone.effto = (ims.framework.utils.Date)this.effto.clone();
		clone.isactive = this.isactive;
		if(this.service == null)
			clone.service = null;
		else
			clone.service = (ims.core.vo.ServiceShortVo)this.service.clone();
		if(this.lastactualgendate == null)
			clone.lastactualgendate = null;
		else
			clone.lastactualgendate = (ims.framework.utils.Date)this.lastactualgendate.clone();
		if(this.lastgendate == null)
			clone.lastgendate = null;
		else
			clone.lastgendate = (ims.framework.utils.Date)this.lastgendate.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ProfileShortVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ProfileShortVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		ProfileShortVo compareObj = (ProfileShortVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getID_Sch_Profile() == null && compareObj.getID_Sch_Profile() != null)
				return -1;
			if(this.getID_Sch_Profile() != null && compareObj.getID_Sch_Profile() == null)
				return 1;
			if(this.getID_Sch_Profile() != null && compareObj.getID_Sch_Profile() != null)
				retVal = this.getID_Sch_Profile().compareTo(compareObj.getID_Sch_Profile());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = super.countFieldsWithValue();
		if(this.description != null)
			count++;
		if(this.prfcategory != null)
			count++;
		if(this.prftype != null)
			count++;
		if(this.efffrm != null)
			count++;
		if(this.effto != null)
			count++;
		if(this.isactive != null)
			count++;
		if(this.service != null)
			count++;
		if(this.lastactualgendate != null)
			count++;
		if(this.lastgendate != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return super.countValueObjectFields() + 9;
	}
	protected String description;
	protected ims.scheduling.vo.lookups.Sched_Prfile_Cat prfcategory;
	protected ims.scheduling.vo.lookups.Sched_Profile_Type prftype;
	protected ims.framework.utils.Date efffrm;
	protected ims.framework.utils.Date effto;
	protected Boolean isactive;
	protected ims.core.vo.ServiceShortVo service;
	protected ims.framework.utils.Date lastactualgendate;
	protected ims.framework.utils.Date lastgendate;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
