//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Sean Nesbitt using IMS Development Environment (version 1.80 build 4876.20447)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.emergency.domain.impl;

import ims.domain.DomainFactory;
import ims.emergency.configuration.domain.objects.AttendanceReqContServiceSettings;
import ims.emergency.domain.base.impl.BaseAttendanceContractProcessSettingsImpl;
import ims.emergency.vo.AttendanceRequiringContractingVoCollection;
import ims.emergency.vo.domain.AtteandanceReqContrJobSettingsVoAssembler;
import ims.framework.exceptions.CodingRuntimeException;
import ims.framework.utils.DateTime;

public class AttendanceContractProcessSettingsImpl extends BaseAttendanceContractProcessSettingsImpl
{

	private static final long serialVersionUID = 1L;

	public ims.emergency.vo.AtteandanceReqContrJobSettingsVo getConfiguration(ims.admin.vo.ConfiguredJobVo configuredJobVo)
	{
		if(configuredJobVo == null)
			throw new CodingRuntimeException("Invalid job");
		DomainFactory factory = getDomainFactory();
		AttendanceReqContServiceSettings bo = AttendanceReqContServiceSettings.getAttendanceReqContServiceSettingsFromConfiguredJob(factory, configuredJobVo.getBoId());
		return AtteandanceReqContrJobSettingsVoAssembler.create(bo);		
	}

	public ims.emergency.vo.AtteandanceReqContrJobSettingsVo saveConfiguration(ims.emergency.vo.AtteandanceReqContrJobSettingsVo configurationVo) throws ims.domain.exceptions.StaleObjectException
	{
		if(configurationVo == null)
			throw new CodingRuntimeException("Invalid configuration");
		if(!configurationVo.isValidated())
			throw new CodingRuntimeException("Configuration not validated");
		DomainFactory factory = getDomainFactory();
		AttendanceReqContServiceSettings bo = AtteandanceReqContrJobSettingsVoAssembler.extractAttendanceReqContServiceSettings(factory, configurationVo);
		getDomainFactory().save(bo);
		return AtteandanceReqContrJobSettingsVoAssembler.create(bo); 
	}

	public AttendanceRequiringContractingVoCollection countAttendanceRequiringContracting(DateTime fromDate, DateTime toDate) 
	{
		//TODO
		return null;
	}
}
