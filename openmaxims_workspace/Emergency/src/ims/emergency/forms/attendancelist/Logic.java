//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.62 build 2971.25997)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.emergency.forms.attendancelist;

import ims.core.admin.vo.EmergencyAttendanceRefVo;
import ims.emergency.forms.attendancelist.GenForm.grdDetailsRow;
import ims.emergency.vo.EmergencyAttendanceListVo;
import ims.emergency.vo.EmergencyAttendanceListVoCollection;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.Color;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		open();
	}
	@Override
	protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.txtSearchForename().setValue(null);
		form.txtSearchSurname().setValue(null);
		form.cmbCategory().setValue(null);
		form.chk24().setValue(false);
		form.chkUnCoded().setValue(false);//WDEV-17015
	}
	@Override
	protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		doSearch();
	}
	@Override
	protected void onGrdDetailsSelectionChanged() throws PresentationLogicException
	{
		form.getGlobalContext().Core.setPatientShort(domain.getPatient(form.grdDetails().getValue()));
		form.getGlobalContext().Core.setCurrentCareContext(domain.getCareContext(form.grdDetails().getValue()));
		form.getGlobalContext().Emergency.setCurrentEmergencyAttendance(domain.getEmergencyAttendance(form.grdDetails().getValue()));
		
		engine.open(form.getForms().Emergency.AttendanceDetails);
	}
	
	private void open()
	{
		EmergencyAttendanceListVoCollection list = domain.listEmergencyAttendance(null, null, null, null,null);

		displayData(list);
	}
	private void displayData(EmergencyAttendanceListVoCollection list)
	{
		form.grdDetails().getRows().clear();
		
		if(list == null)
			return;
		
		for (int i = 0; i < list.size(); i++)
		{
			grdDetailsRow row = form.grdDetails().getRows().newRow();
			
			EmergencyAttendanceListVo item = list.get(i);
			
			row.setColAttDateTime(item.getAttendanceDateIsNotNull() ? item.getAttendanceDate().toString() : null);
			row.setColHospNo(item.getHospitalNo());
			row.setColPatient((item.getSurname() == null ? "" : item.getSurname()) + " " + (item.getForename() == null ? "" : item.getForename()));
			row.setColCategory(item.getPatientCategory());
			row.setColComplaint(item.getPresentingComplaint());
			row.setColInjury(item.getInjuryDateIsNotNull() ? item.getInjuryDate().toString() : null);
			
			EmergencyAttendanceRefVo ref = new EmergencyAttendanceRefVo();
			ref.setID_EmergencyAttendance(item.getId());
			
			row.setValue(ref);
			
			if(item.getDischargeDateIsNotNull())
				row.setBackColor(Color.LightGreen);
		}
	}
	private void doSearch()
	{
		EmergencyAttendanceListVoCollection list = domain.listEmergencyAttendance(form.txtSearchSurname().getValue(), form.txtSearchForename().getValue(), form.cmbCategory().getValue(), form.chk24().getValue() ? true : false,form.chkUnCoded().getValue() ? true : false);

		displayData(list);
	}
	
}
