//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.80 build 4471.18200)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.emergency.forms.supportservices;

import ims.configuration.gen.ConfigFlag;
import ims.core.admin.vo.CareContextRefVo;
import ims.core.admin.vo.EpisodeOfCareRefVo;
import ims.core.patient.vo.PatientRefVo;
import ims.core.resource.people.vo.HcpRefVo;
import ims.core.vo.AuthoringInformationVo;
import ims.core.vo.Hcp;
import ims.core.vo.HcpFilter;
import ims.core.vo.HcpLiteVo;
import ims.core.vo.LocShortVo;
import ims.core.vo.LocShortVoCollection;
import ims.core.vo.LocationServiceVo;
import ims.core.vo.LocationServiceVoCollection;
import ims.core.vo.MedicVo;
import ims.core.vo.MemberOfStaffLiteVo;
import ims.core.vo.MemberOfStaffShortVo;
import ims.core.vo.MemberOfStaffShortVoCollection;
import ims.core.vo.NurseVo;
import ims.core.vo.Patient;
import ims.core.vo.PatientNoSupportNetworkServicesInfoVo;
import ims.core.vo.PatientNoSupportNetworkStatusInfoVo;
import ims.core.vo.PersonName;
import ims.core.vo.RecordingUserInformationVo;
import ims.core.vo.ServiceVoCollection;
import ims.core.vo.SuppNetworkServiceProfessionDetailVo;
import ims.core.vo.SupportNetworkFamily;
import ims.core.vo.SupportNetworkFamilyCollection;
import ims.core.vo.SupportNetworkProfessionalVo;
import ims.core.vo.SupportNetworkProfessionalVoCollection;
import ims.core.vo.SupportNetworkServicesVo;
import ims.core.vo.SupportNetworkServicesVoCollection;
import ims.core.vo.TherapistVo;
import ims.core.vo.lookups.HcpDisType;
import ims.core.vo.lookups.HcpDisTypeCollection;
import ims.core.vo.lookups.LookupHelper;
import ims.core.vo.lookups.PatientSupportNetworkStatus;
import ims.core.vo.lookups.ServiceCategory;
import ims.core.vo.lookups.ServiceCategoryCollection;
import ims.core.vo.lookups.SupportNetworkEmergencyContact;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.domain.exceptions.UnqViolationUncheckedException;
import ims.emergency.forms.supportservices.GenForm.lyrSupportServicesLayer.tabPageProfContainer.grdProfessionalRow;
import ims.emergency.forms.supportservices.GenForm.lyrSupportServicesLayer.tabPageServicesContainer.grdServicesRow;
import ims.emergency.vo.DischargeServicesAndAdviceVo;
import ims.emergency.vo.enums.EdAssessment_CustomControlsEvents;
import ims.framework.FormName;
import ims.framework.LayerBridge;
import ims.framework.cn.data.TreeNode;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.Color;
import ims.framework.utils.DateTime;

import java.util.ArrayList;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	private static final String	MAIN_CARER	= "Main Carer";

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.getLocalContext().setisEnabled(true);
	}

	private void openSupportServices()
	{
		form.getLocalContext().setSelectedRecord(domain.getSupportServices(form.getLocalContext().getSelectedRecord(), form.getLocalContext().getCareContextRef()));
		
		openProfessional();
		openServices();
		openFamily();
	}

	private void openFamily() 
	{
		clearFamilyInstanceControls();
		listSupportNetworkFamily();
		form.setMode(FormMode.VIEW);
		updateFamilyControlsState();
	}

	private void listSupportNetworkFamily() 
	{
		form.lyrSupportServices().tabPageFamily().grdFamily().getRows().clear();
		setInactiveBtnVisible(false);
		form.lyrSupportServices().tabPageFamily().btnReactivate().setEnabled(false);
		form.lyrSupportServices().tabPageFamily().btnReactivate().setVisible(false);
		
		//WDEV-14594
		form.getLocalContext().setSelectedRecord(domain.getSupportServices(form.getLocalContext().getSelectedRecord(), form.getLocalContext().getCareContextRef()));
		
		SupportNetworkFamilyCollection voCollFamily = form.getLocalContext().getSelectedRecord() != null ? form.getLocalContext().getSelectedRecord().getSupportNetworkFamily() : null;
		if(voCollFamily == null)
			return;

		SupportNetworkFamily voFamily = null;	
		GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.grdFamilyRow row = null;

		for(int i = 0 ; i < voCollFamily.size() ; i++)
		{
			voFamily = voCollFamily.get(i);

			if(form.lyrSupportServices().tabPageFamily().groupFamilyFilter().getValue().equals(GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.groupFamilyFilterEnumeration.rdoActiveFamily)
				&& voFamily.getIsCurrentlyActiveFamilySupportIsNotNull()
				&& voFamily.getIsCurrentlyActiveFamilySupport().equals(Boolean.FALSE))
				continue;

			row = form.lyrSupportServices().tabPageFamily().grdFamily().getRows().newRow();
			
			row.setColName(voFamily.getCarerName());
			row.setTooltipForColName(voFamily.getCarerName());
			row.setColPhone(voFamily.getCarerHomePhone());
			row.setTooltipForColPhone(voFamily.getCarerHomePhone());
			row.setColMobile(voFamily.getCarerMobilePhone());  //change request 
			row.setTooltipForColMobile(voFamily.getCarerMobilePhone());
			if(voFamily.getCarerRelationship() != null)
				{
					row.setColRelationship(voFamily.getCarerRelationship().getText());
					row.setTooltipForColRelationship(voFamily.getCarerRelationship().getText());
				}
			
			String strStatus = "";
			if(voFamily.getIsMainCarerIsNotNull() && voFamily.getIsMainCarer().booleanValue())
			{
				
				if(voFamily.getEmergencyContactOrder() != null)
				{
					strStatus = voFamily.getEmergencyContactOrder().getText();
					strStatus += " - " + MAIN_CARER;
				}
				else
				{
					//WDEV-703
					strStatus += MAIN_CARER;
				}
			}
			else
			{
				if(voFamily.getEmergencyContactOrder() != null)
				{
					strStatus += voFamily.getEmergencyContactOrder().getText();
				}
			}
			row.setColStatus(strStatus);
			row.setTooltipForColStatus(strStatus);
			 
			if(voFamily.getIsCurrentlyActiveFamilySupportIsNotNull() && voFamily.getIsCurrentlyActiveFamilySupport().booleanValue())
				row.setcolActive(form.getImages().Core.AnswerBox_Yes);
			else{
				row.setBackColor(Color.LightGray);
				row.setcolActive(form.getImages().Core.AnswerBox_No);
				
				row.setTooltipForcolActive(createFamilyInactivateTooltip(voFamily));	//WDEV-12384
			}
				
			row.setValue(voFamily);
		}
		
		//set selection back
		if (form.getLocalContext().getSelectedRecordIsNotNull())
		{
			//need to get timestamp from record retrieved from List call.
			GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.grdFamilyRow row1 = form.lyrSupportServices().tabPageFamily().grdFamily().getRowByValue(form.getLocalContext().getSelectedFamilyRecord());
			if (row1 != null && row1.getValue() != null)
			{			
				form.getLocalContext().setSelectedFamilyRecord(row1.getValue());
				form.lyrSupportServices().tabPageFamily().grdFamily().setValue(form.getLocalContext().getSelectedFamilyRecord());
				populateFamilyInstanceControls(form.lyrSupportServices().tabPageFamily().grdFamily().getValue());
			}
			else
			{
				clearFamilyInstanceControls();
				form.getLocalContext().setSelectedFamilyRecord(null);
			}
			updateFamilyControlsState();			
		}
		else
			clearFamilyInstanceControls();
		
	}
	private String createFamilyInactivateTooltip(SupportNetworkFamily voFamily)
	{
		if(voFamily == null)
			return null;
		
		StringBuffer sb = new StringBuffer();
		
		if(voFamily.getInactivatingUserIsNotNull())
		{
    		sb.append("<b>Inactivating User : </b>");
    		sb.append(voFamily.getInactivatingUser().getIMosName());
    		sb.append("<br>");
		}
		
		if(voFamily.getInactivatingDateTimeIsNotNull())
		{
    		sb.append("<b>Inactivating Date : </b>");
    		sb.append(voFamily.getInactivatingDateTime().toString());
    		sb.append("<br>");
		}

		return sb.toString();
	}

	private void clearFamilyInstanceControls()
	{
		form.lyrSupportServices().tabPageFamily().chkFit().setValue(false);
		form.lyrSupportServices().tabPageFamily().chkPermission().setValue(false);
		form.lyrSupportServices().tabPageFamily().chkAware().setValue(false);
		form.lyrSupportServices().tabPageFamily().txtName().setValue("");
		form.lyrSupportServices().tabPageFamily().txtFamilyAddress().setValue("");
		form.lyrSupportServices().tabPageFamily().txtEmailAddress().setValue("");
		form.lyrSupportServices().tabPageFamily().txtWorkPhone().setValue("");
		form.lyrSupportServices().tabPageFamily().txtHomePhone().setValue("");
		form.lyrSupportServices().tabPageFamily().chkCarer().setValue(false);
		form.lyrSupportServices().tabPageFamily().cmbEmergency().setValue(null);
		form.lyrSupportServices().tabPageFamily().txtMobilrPhone().setValue("");
		form.lyrSupportServices().tabPageFamily().cmbRelationship().setValue(null);

		form.lyrSupportServices().tabPageFamily().customControlAuthFamily().setValue(null);		
		form.lyrSupportServices().tabPageFamily().cmbRecordingHCP().setValue(null);
		form.lyrSupportServices().tabPageFamily().dtimRecordingDateTime().setValue(null);
		
	}

	private void initializeFamilyTab() 
	{
		form.lyrSupportServices().tabPageFamily().grdFamily().getRows().clear();
		clearFamilyInstanceControls();
		
		boolean isCCOspecific = ConfigFlag.GEN.SUPPORT_NETWORK_FAMILY_TYPE.getValue().equals("CCO");
		form.lyrSupportServices().tabPageFamily().lblEmail().setVisible(!isCCOspecific);
		form.lyrSupportServices().tabPageFamily().txtEmailAddress().setVisible(!isCCOspecific);
		form.lyrSupportServices().tabPageFamily().chkFit().setVisible(isCCOspecific);
		form.lyrSupportServices().tabPageFamily().chkAware().setVisible(isCCOspecific);
		form.lyrSupportServices().tabPageFamily().chkPermission().setVisible(isCCOspecific);
		
		if (form.lyrSupportServices().tabPageFamily().groupFamilyFilter().getValue().equals(GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.groupFamilyFilterEnumeration.None))
			form.lyrSupportServices().tabPageFamily().groupFamilyFilter().setValue(GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.groupFamilyFilterEnumeration.rdoActiveFamily);
		
		if (form.getLocalContext().getPatientRefIsNotNull())
		{
			try
			{
				Patient pat = domain.getPatient(form.getLocalContext().getPatientRef());
				form.getContextMenus().getSupportNetworkFamilyGridNewFromNextofkinItem().setVisible(pat.getNokIsNotNull());
				form.getLocalContext().setNextOfKin(pat.getNok());
			}
			catch ( StaleObjectException se)
			{
				engine.showMessage(se.getMessage());
			}
		}
		
		form.setMode(FormMode.VIEW);
		updateFamilyControlsState();
	}

	@Override
	protected void onChkNoneAtPresentProValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		if(form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().getValue())
		{
			clearProfDetails();
			form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().setValue(true);////WDEV-14594
			enableProfControls(false);
			onChkSupplyHcpValueChanged(); //WDEV-17750
		}		
		else
		{
			enableProfControls(true);
			cmbProfSerChangedValue(); //WDEV-17750
		}
	}

	private void enableProfControls(boolean enable) 
	{
		form.lyrSupportServices().tabPageProf().cmbProfessional().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().cmbHcpSubType().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().txtHcpName().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().chkSupplyHcp().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().txtLocation().setEnabled(enable);
		form.lyrSupportServices().tabPageProf().setcustomControlAuthEnabled(enable);
	}

	private void enableAuthoringHCPCustomControls()
	{
		if (form.getMode().equals(FormMode.EDIT))
		{
			form.lyrSupportServices().tabPageProf().setcustomControlAuthEnabled(isProfessionalAuthoringHCPEnabled());
			form.lyrSupportServices().tabPageServices().setcustomControlAuthSerEnabled(isServicesAuthoringHCPEnabled());
			form.lyrSupportServices().tabPageFamily().setcustomControlAuthFamilyEnabled(isFamilyAuthoringHCPEnabled());
		}

		enableProfessionalHCPName();
	}

	private void enableProfessionalHCPName()
	{
		SupportNetworkProfessionalVo voProf = form.getLocalContext().getSelectedSupportNetworkProfessional();
		form.lyrSupportServices().tabPageProf().txtHcpName().setVisible(voProf != null && voProf.getSuppliedProfessionalIsNotNull() ? true : false);
	}

	private boolean isFamilyAuthoringHCPEnabled()
	{
		SupportNetworkFamily voFamily = form.getLocalContext().getSelectedFamilyRecord();
		return voFamily == null || voFamily.getID_SupportNetworkFamily() == null;
	}

	private boolean isProfessionalAuthoringHCPEnabled()
	{
		SupportNetworkProfessionalVo voSupportNetworkProfessional = form.getLocalContext().getSelectedSupportNetworkProfessional();
		return voSupportNetworkProfessional == null || voSupportNetworkProfessional.getID_SupportNetworkProfessional() == null;
	}

	private boolean isServicesAuthoringHCPEnabled()
	{
		SupportNetworkServicesVo voSupportNetworkServices = form.getLocalContext().getSelectedSupportNetworkService();
		return voSupportNetworkServices == null || voSupportNetworkServices.getID_SupportNetworkServices() == null;
	}

	@Override
	protected void onCmbProfessionServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		cmbProfSerChangedValue();
	}
	
	private void cmbProfSerChangedValue()
	{
		form.lyrSupportServices().tabPageProf().cmbHcpSubType().clear();
		form.lyrSupportServices().tabPageProf().qmbHcpName().clear();
		form.getGlobalContext().COE.setSupportNetworkSelectedLocation(null);
		form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(false);
		setProfessionAddress(null);
		clearProfessionalReadOnlyDetails();
		if (form.lyrSupportServices().tabPageProf().cmbProfessional().getValue() == null)
		{
			return;
		}

		TreeNode[] childNodes = form.lyrSupportServices().tabPageProf().cmbProfessional().getValue().getChildren();
		if (childNodes != null)
		{
			for (int p = 0; p < childNodes.length; p++)
			{
				HcpDisType lkChild = (HcpDisType) childNodes[p];
				if (lkChild.isActive() == true)
				{
					form.lyrSupportServices().tabPageProf().cmbHcpSubType().newRow(lkChild, lkChild.getText());
				}
			}
		}
	}

	@Override
	protected void onCmbHcpSubTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		form.lyrSupportServices().tabPageProf().qmbHcpName().clear();
		clearProfessionalReadOnlyDetails();

		if (form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue() == null)
		{
			form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(false);
			form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(false);
			return;
		}

		form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(true);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(true);
	}

	@Override
	protected void onChkSupplyHcpValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		form.lyrSupportServices().tabPageProf().qmbHcpName().setValue(null);
		form.lyrSupportServices().tabPageProf().qmbHcpName().clear();
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setValue(null);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().clear();
		form.lyrSupportServices().tabPageProf().txtHcpName().setValue(null);
		form.lyrSupportServices().tabPageProf().txtLocation().setValue(null);
		form.lyrSupportServices().tabPageProf().txtAddressPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtEmailPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtMobilePhPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtWorkPh().setValue(null);
		
		boolean isHcpDetailsSupplied = form.lyrSupportServices().tabPageProf().chkSupplyHcp().getValue();
		boolean isProfAndTypeSupplied = (form.lyrSupportServices().tabPageProf().cmbProfessional().getValue()!=null
				&& form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue()!=null);
		
		form.lyrSupportServices().tabPageProf().qmbHcpName().setVisible(!isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(!isHcpDetailsSupplied && isProfAndTypeSupplied);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setVisible(!isHcpDetailsSupplied);

		form.lyrSupportServices().tabPageProf().txtHcpName().setVisible(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtHcpName().setEnabled(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtLocation().setVisible(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtLocation().setEnabled(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtAddressPro().setEnabled(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtWorkPh().setEnabled(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtEmailPro().setEnabled(isHcpDetailsSupplied);
		form.lyrSupportServices().tabPageProf().txtMobilePhPro().setEnabled(isHcpDetailsSupplied);
	}

	@Override
	protected void onCmbLocationHcpValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		setProfessionAddress(form.lyrSupportServices().tabPageProf().cmbLocationHcp().getValue());//WDEV-14594
	}

	@Override
	protected void onRadioButtongrpProfFilterValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		form.lyrSupportServices().tabPageProf().grdProfessional().setValue(null);
		clearProfDetails();
		clearProfessionalReadOnlyDetails();
		listSupportNetworkProfessional();
		form.setMode(FormMode.VIEW);
	}

	@Override
	protected void onGrdProfessionalSelectionChanged()
	{
		grdProSelectionChanged();
	}

	private void grdProSelectionChanged()
	{
		form.getLocalContext().setSelectedSupportNetworkProfessional(form.lyrSupportServices().tabPageProf().grdProfessional().getValue());

		populateProfessionalInstanceControl(form.getLocalContext().getSelectedSupportNetworkProfessional());

		updateProfessionalControlsState();
	}

	@Override
	protected void onChkNoneAtPresentSerValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		if(form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().getValue())
		{
			clearServiceDetails();
			form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().setValue(true);//WDEV-14594
			enableServiceControls(false);
		}		
		else
		{
			enableServiceControls(true);
			form.lyrSupportServices().tabPageServices().setcustomControlAuthSerEnabled(true);
			onChkSupplyServiceDetailValueChanged(); //WDEV-17750
		}
	}

	private void enableServiceControls(boolean enable) 
	{
		form.lyrSupportServices().tabPageServices().cmbService().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().clear();
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().txtFrequency().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().txtContactPerson().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().txtPhoneNoService().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().txtAddressService().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().txtCommentsService().setEnabled(enable);
		form.lyrSupportServices().tabPageServices().setcustomControlAuthSerEnabled(enable);
	}

	@Override
	protected void onCmbServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		cmbServiceValueChanged();
	}

	private void cmbServiceValueChanged()
	{
		form.lyrSupportServices().tabPageServices().cmbLocationServices().clear();
		clearServicesReadOnlyDetails();

		if (form.lyrSupportServices().tabPageServices().cmbService().getValue() == null)
			return;

		LocationServiceVoCollection voColl = domain.listLocationServices(form.lyrSupportServices().tabPageServices().cmbService().getValue());
		if (voColl == null)
			return;

		for (int i = 0; i < voColl.size(); i++)
		{
			if (voColl.get(i) != null
				&& voColl.get(i).getLocationIsNotNull())
				form.lyrSupportServices().tabPageServices().cmbLocationServices().newRow(voColl.get(i), voColl.get(i).getLocation().getName());
		}
	}

	@Override
	protected void onChkSupplyServiceDetailValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setValue(null);
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setValue(null);
		form.lyrSupportServices().tabPageServices().txtAddressService().setValue(null);
		form.lyrSupportServices().tabPageServices().txtContactPerson().setValue(null);
		form.lyrSupportServices().tabPageServices().txtPhoneNoService().setValue(null);
		
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setVisible(!form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(!form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setRequired(!form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setVisible(form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setEnabled(form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setRequired(form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().txtAddressService().setEnabled(form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().txtContactPerson().setEnabled(form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
		form.lyrSupportServices().tabPageServices().txtPhoneNoService().setEnabled(form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue());
	}

	@Override
	protected void onCmbLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		cmbLocationValueChanged();
	}

	private void cmbLocationValueChanged()
	{
		LocationServiceVo voLoc = form.lyrSupportServices().tabPageServices().cmbLocationServices().getValue();
		if (voLoc != null
			&& voLoc.getLocationIsNotNull())
		{
			if (voLoc.getLocation().getAddressIsNotNull())
				form.lyrSupportServices().tabPageServices().txtAddressService().setValue(voLoc.getLocation().getAddress().toDisplayStringForMultiLineTextBox());

			if (voLoc.getContact() != null)
			{
				if (voLoc.getContact().getNameIsNotNull())
					form.lyrSupportServices().tabPageServices().txtContactPerson().setValue(voLoc.getContact().getName().toString());
				form.lyrSupportServices().tabPageServices().txtPhoneNoService().setValue(voLoc.getContact().getContactNumber());
			}
		}
		else
			form.lyrSupportServices().tabPageServices().txtAddressService().setValue(null);

	}

	private void populateServicesInstanceControls(SupportNetworkServicesVo voService)
	{
		clearServiceDetails();

		if (voService.getLocationService() != null)
		{
			if (voService.getLocationService().getService() != null)
			{
				form.lyrSupportServices().tabPageServices().cmbService().newRow(voService.getLocationService().getService(), voService.getLocationService().getService().getServiceName());
				form.lyrSupportServices().tabPageServices().cmbService().setValue(voService.getLocationService().getService());
			}
			cmbServiceValueChanged();
		}

		if (voService.getSuppliedServiceIsNotNull())
		{
			form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setValue(true);
			form.lyrSupportServices().tabPageServices().txtAddressService().setValue(voService.getSuppliedService().getAddress());
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setValue(voService.getSuppliedService().getServiceLocation());
			form.lyrSupportServices().tabPageServices().txtContactPerson().setValue(voService.getSuppliedService().getName());
			form.lyrSupportServices().tabPageServices().txtPhoneNoService().setValue(voService.getSuppliedService().getWorkPhone());
			if (voService.getServiceIsNotNull() && voService.getService().getServiceNameIsNotNull())
			{
				form.lyrSupportServices().tabPageServices().cmbService().newRow(voService.getService(), voService.getService().getServiceName());
				form.lyrSupportServices().tabPageServices().cmbService().setValue(voService.getService());
			}

			form.lyrSupportServices().tabPageServices().txtAreaLoc().setVisible(true);
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setEnabled(form.getMode().equals(FormMode.EDIT));
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setRequired(form.getMode().equals(FormMode.EDIT));
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setVisible(false);
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(false);
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setRequired(false);
		}
		else if (voService.getLocationServiceIsNotNull())
		{
			form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setValue(false);
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setValue(voService.getLocationService());
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setVisible(false);
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setRequired(false);
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setVisible(true);
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(form.getMode().equals(FormMode.EDIT));
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setRequired(form.getMode().equals(FormMode.EDIT));

			cmbLocationValueChanged();
		}

		form.lyrSupportServices().tabPageServices().customControlAuthSer().setValue(voService.getAuthoringInfo());
		form.lyrSupportServices().tabPageServices().txtFrequency().setValue(voService.getFrequencyOfService());
		form.lyrSupportServices().tabPageServices().txtCommentsService().setValue(voService.getComments());
	}

	@Override
	protected void onRadioButtongrpServiceFilterValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		form.lyrSupportServices().tabPageServices().grdServices().setValue(null);
		clearServiceDetails();
		listSupportNetworkServices();
		form.setMode(FormMode.VIEW);
	}

	private void listSupportNetworkServices() 
	{
		form.lyrSupportServices().tabPageServices().grdServices().getRows().clear();
		setServicesInactiveBtnVisible(false);
		
		//WDEV-14594
		form.getLocalContext().setSelectedRecord(domain.getSupportServices(form.getLocalContext().getSelectedRecord(), form.getLocalContext().getCareContextRef()));
		
		SupportNetworkServicesVoCollection voColl = form.getLocalContext().getSelectedRecord() != null ? form.getLocalContext().getSelectedRecord().getSupportNetworkServices() : null;
		if(voColl == null)
			return;

		SupportNetworkServicesVo voService = null;	
		GenForm.lyrSupportServicesLayer.tabPageServicesContainer.grdServicesRow row = null;

		for(int i = 0 ; i < voColl.size() ; i++)
		{
			voService = voColl.get(i);

			if(form.lyrSupportServices().tabPageServices().grpServiceFilter().getValue().equals(GenForm.lyrSupportServicesLayer.tabPageServicesContainer.grpServiceFilterEnumeration.rdoActiveServices)
				&& voService.getIsCurrentlyActiveIsNotNull()
				&& voService.getIsCurrentlyActive().equals(Boolean.FALSE))
				continue;

			row = form.lyrSupportServices().tabPageServices().grdServices().getRows().newRow();

			if (voService.getLocationServiceIsNotNull())
			{
				if (voService.getLocationService().getServiceIsNotNull())
				{
					row.setColServiceType(voService.getLocationService().getService().getServiceName());
					row.setTooltipForColServiceType(voService.getLocationService().getService().getServiceName());
				}

				if (voService.getLocationService().getContactIsNotNull())
				{
					row.setColPhoneNo(voService.getLocationService().getContact().getContactNumber());
					row.setTooltipForColPhoneNo(voService.getLocationService().getContact().getContactNumber());
					if (voService.getLocationService().getContact().getNameIsNotNull())
					{
						row.setColContactPerson(voService.getLocationService().getContact().getName().toString());
						row.setTooltipForColContactPerson(voService.getLocationService().getContact().getName().toString());
					}
				}
			}
			else
			{
				if (voService.getSuppliedServiceIsNotNull())
				{
					row.setColServiceType(voService.getServiceIsNotNull() ? voService.getService().getServiceName() : "");
					row.setTooltipForColServiceType(voService.getServiceIsNotNull() ? voService.getService().getServiceName() : "");

					if (voService.getSuppliedService().getWorkPhoneIsNotNull())
					{
						row.setColPhoneNo(voService.getSuppliedService().getWorkPhone());
						row.setTooltipForColPhoneNo(voService.getSuppliedService().getWorkPhone());
						if (voService.getSuppliedService().getNameIsNotNull())
						{
							row.setColContactPerson(voService.getSuppliedService().getName().toString());
							row.setTooltipForColContactPerson(voService.getSuppliedService().getName().toString());
						}
					}

					row.setColContactPerson(voService.getSuppliedService().getName());
					row.setTooltipForColContactPerson(voService.getSuppliedService().getName());
				}
			}

			row.setColFrequency(voService.getFrequencyOfService());
			row.setTooltipForColFrequency(voService.getFrequencyOfService());
			
			if(voService.getIsCurrentlyActiveIsNotNull() && voService.getIsCurrentlyActive().booleanValue())
				row.setColIsActive(form.getImages().Core.AnswerBox_Yes);
			else
			{
				row.setBackColor(Color.LightGray);
				row.setColIsActive(form.getImages().Core.AnswerBox_No);
			}
				
			row.setValue(voService);
		}
		
		//set selection back
		if (form.getLocalContext().getSelectedRecordIsNotNull())
		{
			GenForm.lyrSupportServicesLayer.tabPageServicesContainer.grdServicesRow row1 = form.lyrSupportServices().tabPageServices().grdServices().getRowByValue(form.getLocalContext().getSelectedSupportNetworkService());
			if (row1 != null && row1.getValue() != null)
			{			
				form.getLocalContext().setSelectedSupportNetworkService(row1.getValue());
				form.lyrSupportServices().tabPageServices().grdServices().setValue(form.getLocalContext().getSelectedSupportNetworkService());
	 			populateServicesInstanceControls(form.lyrSupportServices().tabPageServices().grdServices().getValue());
			}
			else
			{
				clearServiceDetails();
				form.getLocalContext().setSelectedSupportNetworkService(null);
			}
			updateServicesControlsState();			
		}
		else
			clearServiceDetails();
	}

	private void setServicesInactiveBtnVisible(boolean value) 
	{
		form.lyrSupportServices().tabPageServices().btnInactivateService().setVisible(value);
		form.lyrSupportServices().tabPageServices().btnInactivateService().setEnabled(value);
	}

	@Override
	protected void onGrdServicesSelectionChanged()
	{
		grdServicesSelectionChanged();
	}

	private void grdServicesSelectionChanged()
	{
		form.getLocalContext().setSelectedSupportNetworkService(form.lyrSupportServices().tabPageServices().grdServices().getValue());
		populateServicesInstanceControls(form.getLocalContext().getSelectedSupportNetworkService());
		updateServicesControlsState();
		form.setMode(FormMode.VIEW);
	}

	@Override
	protected void onBtnCopyPAClick() throws ims.framework.exceptions.PresentationLogicException
	{
		if (form.getLocalContext().getPatientRefIsNotNull())
		{
			try
			{
				Patient pat = domain.getPatient(form.getLocalContext().getPatientRef());
				if (pat != null && pat.getAddressIsNotNull())
					form.lyrSupportServices().tabPageFamily().txtFamilyAddress().setValue(pat.getAddress().toDisplayStringForMultiLineTextBox());
			}
			catch ( StaleObjectException se)
			{
				engine.showMessage(se.getMessage());
			}
		}
		form.lyrSupportServices().tabPageFamily().btnCopyPA().setVisible(false);
	}

	@Override
	protected void onBtnReactivateClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Core.setYesNoDialogMessage("Are you sure you wish to reactivate this record");
		engine.open(form.getForms().Core.YesNoDialog);	
	}

	@Override
	protected void onBtnInactiveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Core.setHideCancelButton(Boolean.TRUE);
		form.getGlobalContext().Core.setYesNoDialogMessage("Are you sure you wish to inactivate this record");
		engine.open(form.getForms().Core.YesNoDialog);
	}

	@Override
	protected void onBtnSaveFamilyClick() throws ims.framework.exceptions.PresentationLogicException
	{
		//WDEV-17337
		form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.SAVE);
		form.fireCustomControlValueChanged();
		
		if (saveFamily(null))
			openFamily();
	}

	@Override
	protected void onBtnCancelFamilyClick() throws ims.framework.exceptions.PresentationLogicException
	{
		//WDEV-17337
		form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.CANCEL);
		form.fireCustomControlValueChanged();
		
		//clearFamilyInstanceControls();
		form.setMode(FormMode.VIEW);
		openFamily();
	}

	@Override
	protected void onGrdFamilySelectionChanged()
	{
		familyGridSelectionChanged();
	}

	private void familyGridSelectionChanged()
	{
		if (form.lyrSupportServices().tabPageFamily().grdFamily().getValue() != null)
		{
			populateFamilyInstanceControls(form.lyrSupportServices().tabPageFamily().grdFamily().getValue());
			form.getLocalContext().setSelectedFamilyRecord(form.lyrSupportServices().tabPageFamily().grdFamily().getValue());
			updateFamilyControlsState();
		}
	}
	
	@Override
	protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
	{
		switch(menuItemID)
		{
			case GenForm.ContextMenus.SupportNetworkFamilyGrid.New:
				newFamilyInstance();
			break;
			case GenForm.ContextMenus.SupportNetworkFamilyGrid.Update:
				updateFamilyInstance();
			break;
			case GenForm.ContextMenus.SupportNetworkFamilyGrid.NewFromNextofkin:
				newFamilyInstanceFromNOK();
			break;			
			case GenForm.ContextMenus.SupportNetworkFamilyGrid.COPY_ALL_PREVIOUS_FAMILY:
				copyPreviousDischargeServicesAndAdvice();
			break;			

		
			case GenForm.ContextMenus.EmergencyNamespace.SupportNetworkProfessional.ADD:
				newProfessionalInstance();
			break;
			case GenForm.ContextMenus.EmergencyNamespace.SupportNetworkProfessional.EDIT:
				updateProfessionalInstance();
			break;
			case GenForm.ContextMenus.EmergencyNamespace.SupportNetworkProfessional.COPY_ALL_PREVIOUS_PROF:
				copyPreviousDischargeServicesAndAdvice();
			break;			

		
			case GenForm.ContextMenus.EmergencyNamespace.SupportNetworkServices.ADD:
				newServicesInstance();
			break;
			case GenForm.ContextMenus.EmergencyNamespace.SupportNetworkServices.EDIT:
				updateServicesInstance();
			break;
			case GenForm.ContextMenus.EmergencyNamespace.SupportNetworkServices.COPY_ALL_PREVIOUS_SERV:
				copyPreviousDischargeServicesAndAdvice();
			break;			
		}		

	}

	private void copyPreviousDischargeServicesAndAdvice() 
	{
		if (form.getLocalContext().getPreviousSupportServiceRecordExists())
		{
			try 
			{
				if (domain.copyPreviousSupportServiceNetwork(form.getLocalContext().getPatientRef(), form.getLocalContext().getCareContextRef(), form.getLocalContext().getEpisodeOfCareRef()))
					openSupportServices();
			} 
			catch (StaleObjectException e) 
			{
				openSupportServices();
			}
		}
	}

	private void updateServicesInstance()
	{
		form.setMode(FormMode.EDIT);
		form.lyrSupportServices().tabPageServices().btnInactivateService().setVisible(false);

		form.getContextMenus().Emergency.hideAllSupportNetworkServicesMenuItems();

		form.lyrSupportServices().tabPageServices().txtFrequency().setEnabled(true);
		form.lyrSupportServices().tabPageServices().txtCommentsService().setEnabled(true);	
		
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedService() == null);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setRequired(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedService() == null);
		form.lyrSupportServices().tabPageServices().txtAddressService().setEnabled(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedServiceIsNotNull());
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setEnabled(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedServiceIsNotNull());
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setRequired(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedServiceIsNotNull());
		form.lyrSupportServices().tabPageServices().txtContactPerson().setEnabled(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedServiceIsNotNull());
		form.lyrSupportServices().tabPageServices().txtPhoneNoService().setEnabled(form.getLocalContext().getSelectedSupportNetworkService().getSuppliedServiceIsNotNull());
	}

	private void loadLocationsForMos(boolean bUpdate)
	{
		if (!bUpdate)
			clearProfessionalReadOnlyDetails();

		if (form.lyrSupportServices().tabPageProf().qmbHcpName().getValue() == null)
			return;
		
		Hcp voHcp = domain.getHCP((HcpRefVo)form.lyrSupportServices().tabPageProf().qmbHcpName().getValue());

		MemberOfStaffShortVo voMosShort = voHcp != null ? voHcp.getMos() : null;
		if (voMosShort != null)
		{

			form.getLocalContext().setvoMemberOfStaffShort(voMosShort);

			LocShortVo voLoc = form.getGlobalContext().COE.getSupportNetworkSelectedLocation();
			// When Searching get the PrimaryLocation from the selected HCP (not
			// from context)
			if (voLoc == null || bUpdate)
			{
				LocShortVoCollection voLocShortVoColl = domain.listLocationsForMemberOfStaff(voHcp.getMos());

				if (voLocShortVoColl != null)
				{
					for (int i = 0; i < voLocShortVoColl.size(); i++)
					{
						if (form.lyrSupportServices().tabPageProf().qmbHcpName().getValue() != null)
						{
							if ((voHcp.getMos().getPrimaryLocationIsNotNull()) && (voHcp.getMos().getPrimaryLocation().equals(voLocShortVoColl.get(i))))
								form.lyrSupportServices().tabPageProf().cmbLocationHcp().newRow(voLocShortVoColl.get(i), voLocShortVoColl.get(i).getName(), Color.Green);
							else
								form.lyrSupportServices().tabPageProf().cmbLocationHcp().newRow(voLocShortVoColl.get(i), voLocShortVoColl.get(i).getName(), Color.Black);
						}
					}

					if (!bUpdate)
						form.lyrSupportServices().tabPageProf().cmbLocationHcp().showOpened();
				}
			}
			else
			{
				form.lyrSupportServices().tabPageProf().cmbLocationHcp().setValue(voLoc);
				setProfessionAddress(voLoc);
			}

			form.lyrSupportServices().tabPageProf().txtEmailPro().setValue(voMosShort.getEmailAddress());
			form.lyrSupportServices().tabPageProf().txtMobilePhPro().setValue(voMosShort.getMobile());
		}
	}

	private void setProfessionAddress(LocShortVo voLoc)
	{
		form.lyrSupportServices().tabPageProf().txtAddressPro().setValue("");
		form.lyrSupportServices().tabPageProf().txtWorkPh().setValue("");

		if (voLoc == null)
			return;

		if (voLoc.getAddressIsNotNull())
		{
			String strAddress = voLoc.getAddress().toDisplayStringForMultiLineTextBox();
			form.lyrSupportServices().tabPageProf().txtAddressPro().setValue(strAddress);
			form.lyrSupportServices().tabPageProf().txtWorkPh().setValue(voLoc.getAddress().getPhone());
		}
	}


	private void updateProfessionalInstance() 
	{
		form.setMode(FormMode.EDIT);
		form.lyrSupportServices().tabPageProf().btnInactivateProfessional().setVisible(false);

		form.getContextMenus().Emergency.hideAllSupportNetworkProfessionalMenuItems();

		if (form.getLocalContext().getSelectedSupportNetworkProfessional().getSuppliedProfessionalIsNotNull())
		{
			form.lyrSupportServices().tabPageProf().txtHcpName().setEnabled(true);
			form.lyrSupportServices().tabPageProf().txtLocation().setEnabled(true);
			form.lyrSupportServices().tabPageProf().txtAddressPro().setEnabled(true);
			form.lyrSupportServices().tabPageProf().txtWorkPh().setEnabled(true);
			form.lyrSupportServices().tabPageProf().txtEmailPro().setEnabled(true);
			form.lyrSupportServices().tabPageProf().txtMobilePhPro().setEnabled(true);
		}
		else
		{
			form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(true);
			form.lyrSupportServices().tabPageProf().qmbHcpName().setVisible(true);

			LocShortVo voLoc = form.lyrSupportServices().tabPageProf().cmbLocationHcp().getValue();
			loadLocationsForMos(true);
			form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(true);
			if (voLoc != null)
				form.lyrSupportServices().tabPageProf().cmbLocationHcp().setValue(voLoc);
		}
	}

	public void newFamilyInstance() throws PresentationLogicException
	{
		clearFamilyInstanceControls();
		
		form.lyrSupportServices().tabPageFamily().txtName().setFocus();

		SupportNetworkFamily voFamily = new SupportNetworkFamily();
		
		form.lyrSupportServices().tabPageFamily().customControlAuthFamily().initializeComponent();
		form.lyrSupportServices().tabPageFamily().customControlAuthFamily().setIsRequiredPropertyToControls(true);
		
		voFamily.setIsCurrentlyActiveFamilySupport(Boolean.TRUE); 
		form.getLocalContext().setSelectedFamilyRecord(voFamily);
		
		form.setMode(FormMode.EDIT);
		
		Object mos = domain.getMosUser();
		if(mos != null)
		{
			form.lyrSupportServices().tabPageFamily().cmbRecordingHCP().newRow((MemberOfStaffLiteVo)mos, mos.toString());
			form.lyrSupportServices().tabPageFamily().cmbRecordingHCP().setValue((MemberOfStaffLiteVo)mos);
		}
		form.lyrSupportServices().tabPageFamily().dtimRecordingDateTime().setValue(new DateTime());
		
		enableAuthoringHCPCustomControls();

		updateFamilyControlsState();
	}
	
	public void updateFamilyInstance()
	{
		form.setMode(FormMode.EDIT);
	}

	private void newFamilyInstanceFromNOK()
	{
		form.lyrSupportServices().tabPageFamily().customControlAuthFamily().initializeComponent();			
		form.getLocalContext().setSelectedFamilyRecord(new SupportNetworkFamily());
		
		if (form.getLocalContext().getNextOfKinIsNotNull())
		{
			form.lyrSupportServices().tabPageFamily().txtName().setValue(form.getLocalContext().getNextOfKin().getNameIsNotNull()?form.getLocalContext().getNextOfKin().getName().toString():null);
			form.lyrSupportServices().tabPageFamily().txtFamilyAddress().setValue(form.getLocalContext().getNextOfKin().getAddressIsNotNull()?form.getLocalContext().getNextOfKin().getAddress().toDisplayStringForMultiLineTextBox():null);
			form.lyrSupportServices().tabPageFamily().txtHomePhone().setValue(form.getLocalContext().getNextOfKin().getAddressIsNotNull()?form.getLocalContext().getNextOfKin().getAddress().getPhone():null);
			form.lyrSupportServices().tabPageFamily().txtMobilrPhone().setValue(form.getLocalContext().getNextOfKin().getMobile() != null?form.getLocalContext().getNextOfKin().getMobile().getCommValue():null);
			form.lyrSupportServices().tabPageFamily().txtWorkPhone().setValue(form.getLocalContext().getNextOfKin().getWorkPhoneNumber() != null?form.getLocalContext().getNextOfKin().getWorkPhoneNumber().getCommValue():null);
			form.lyrSupportServices().tabPageFamily().txtEmailAddress().setValue(form.getLocalContext().getNextOfKin().getMobile() != null?form.getLocalContext().getNextOfKin().getMobile().getCommValue():null);
			
			form.setMode(FormMode.EDIT);
		}
	}

	private boolean isMainCarerSavedPreviously(SupportNetworkFamily voSupportNetworkFamily) 
	{
		boolean bMainCarerSavedPrev = false;
		
		if (form.lyrSupportServices().tabPageFamily().chkCarer().getValue())
		{
			GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.grdFamilyRow row = null;
			for(int i= 0 ; i < form.lyrSupportServices().tabPageFamily().grdFamily().getRows().size() ; i++)
			{
				row = form.lyrSupportServices().tabPageFamily().grdFamily().getRows().get(i);
				SupportNetworkFamily voFamily = row.getValue();
				if(voFamily.getIsCurrentlyActiveFamilySupportIsNotNull() && voFamily.getIsCurrentlyActiveFamilySupport().booleanValue())
				{
					//Don't check the current vo
					if(voSupportNetworkFamily != null && voSupportNetworkFamily.equals(voFamily) == false)
					{
						if(voFamily.getIsMainCarerIsNotNull() && voFamily.getIsMainCarer().equals(Boolean.TRUE))		
						{
							bMainCarerSavedPrev = true;
							break;
						}
					}
				}
			}
		}
		return bMainCarerSavedPrev;
	}

	private boolean isEmergencyContactUsed() 
	{
		boolean bContactUsed = false;
		
		SupportNetworkEmergencyContact contact = form.lyrSupportServices().tabPageFamily().cmbEmergency().getValue();
		SupportNetworkFamily voFamily = form.lyrSupportServices().tabPageFamily().grdFamily().getValue();
		
		if(contact == null)
			return false;

		GenForm.lyrSupportServicesLayer.tabPageFamilyContainer.grdFamilyRow row = null;
		for(int i= 0 ; i < form.lyrSupportServices().tabPageFamily().grdFamily().getRows().size() ; i++)
		{
			row = form.lyrSupportServices().tabPageFamily().grdFamily().getRows().get(i);
			if(row.getValue().getIsCurrentlyActiveFamilySupport().booleanValue())
			{
				if(contact.equals(row.getValue().getEmergencyContactOrder()) && voFamily != row.getValue())	
				{
					bContactUsed = true;
				}
			}
		}
		return bContactUsed;
	}

	public boolean saveFamily(SupportNetworkFamily supportNetworkFamily) throws PresentationLogicException 
	{
		if (form.getLocalContext().getSelectedRecord() == null)
			populateBaseDischargeServices();
		
		SupportNetworkFamily voSupportFamily = null;
		if (supportNetworkFamily == null)
			voSupportFamily = populateFamilyInstanceData();
		else
			voSupportFamily = supportNetworkFamily;
		
		//WDEV-14594
		String[] errorsFamily = voSupportFamily.validate();
		if(errorsFamily != null)
		{
			engine.showErrors(errorsFamily);
			return false;
		}
		
		if(isEmergencyContactUsed())
		{
			engine.showMessage("This Emergency contact is already in use.");
			return false;
		}
		
		if (isMainCarerSavedPreviously(voSupportFamily))
		{
			engine.showMessage("A " + MAIN_CARER + " has already been saved");
			return false;
		}
		
		
		
		if (form.getLocalContext().getSelectedRecord().getSupportNetworkFamily() == null)
			form.getLocalContext().getSelectedRecord().setSupportNetworkFamily(new SupportNetworkFamilyCollection());
		
		if (form.getLocalContext().getSelectedRecord().getSupportNetworkFamily().indexOf(voSupportFamily) >= 0)
			form.getLocalContext().getSelectedRecord().getSupportNetworkFamily().set(form.getLocalContext().getSelectedRecord().getSupportNetworkFamily().indexOf(voSupportFamily), voSupportFamily);
		else
			form.getLocalContext().getSelectedRecord().getSupportNetworkFamily().add(voSupportFamily);
		
		String[] arrErrors = form.getLocalContext().getSelectedRecord().validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return false;
		}
		try 
		{
			form.getLocalContext().setSelectedRecord(domain.saveSupportServices(form.getLocalContext().getSelectedRecord()));
		} 
		catch (StaleObjectException e) 
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			openSupportServices();
			return false;
		}
		return true;
	}

	private void populateBaseDischargeServices() 
	{
		DischargeServicesAndAdviceVo vo = new DischargeServicesAndAdviceVo();
		
		vo.setPatient(form.getLocalContext().getPatientRef());
		vo.setEpisode(form.getLocalContext().getEpisodeOfCareRef());
		vo.setAttendance(form.getLocalContext().getCareContextRef());
		
		form.getLocalContext().setSelectedRecord(vo);
	}

	public void updateFamilyControlsState()
	{
		boolean isCCOspecific = ConfigFlag.GEN.SUPPORT_NETWORK_FAMILY_TYPE.getValue().equals("CCO");
		boolean isEditMode = form.getMode().equals(FormMode.EDIT);
		form.lyrSupportServices().tabPageFamily().txtEmailAddress().setEnabled(isEditMode);
		form.lyrSupportServices().tabPageFamily().chkFit().setEnabled(isEditMode);
		form.lyrSupportServices().tabPageFamily().chkAware().setEnabled(isEditMode);
		form.lyrSupportServices().tabPageFamily().chkPermission().setEnabled(isEditMode);
		
		//WDEV-16289
		form.lyrSupportServices().tabPageFamily().btnFamNew().setVisible(FormMode.VIEW.equals(form.getMode()));
		form.lyrSupportServices().tabPageFamily().btnFamNew().setEnabled(Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		form.lyrSupportServices().tabPageFamily().btnFamEdit().setVisible(FormMode.VIEW.equals(form.getMode()) && form.lyrSupportServices().tabPageFamily().grdFamily().getValue() != null);
		form.lyrSupportServices().tabPageFamily().btnFamEdit().setEnabled(form.lyrSupportServices().tabPageFamily().grdFamily().getValue() != null && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		form.lyrSupportServices().tabPageFamily().btnCopyPA().setVisible(isCCOspecific && isEditMode && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		if (isEditMode)
		{
			form.getContextMenus().hideAllSupportNetworkFamilyGridMenuItems();
			
			setInactiveBtnVisible(false);
			form.lyrSupportServices().tabPageFamily().btnReactivate().setVisible(false);
		}
		else if (form.getMode().equals(FormMode.VIEW))
		{
			setInactiveBtnVisible(enableInactivateButton(form.lyrSupportServices().tabPageFamily().grdFamily().getValue()));
						
			form.lyrSupportServices().tabPageFamily().btnReactivate().setVisible(form.lyrSupportServices().tabPageFamily().grdFamily().getValue() != null
					&& form.lyrSupportServices().tabPageFamily().grdFamily().getValue().getIsCurrentlyActiveFamilySupportIsNotNull() 
					&& !form.lyrSupportServices().tabPageFamily().grdFamily().getValue().getIsCurrentlyActiveFamilySupport().booleanValue()
					&& Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.lyrSupportServices().tabPageFamily().btnReactivate().setEnabled(form.lyrSupportServices().tabPageFamily().grdFamily().getValue() != null
					&& form.lyrSupportServices().tabPageFamily().grdFamily().getValue().getIsCurrentlyActiveFamilySupportIsNotNull() 
					&& !form.lyrSupportServices().tabPageFamily().grdFamily().getValue().getIsCurrentlyActiveFamilySupport().booleanValue()
					&& Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			
			if (form.getLocalContext().getPatientRefIsNotNull())
			{
				try
				{
					Patient pat = domain.getPatient(form.getLocalContext().getPatientRef());
					form.getContextMenus().getSupportNetworkFamilyGridNewFromNextofkinItem().setVisible(pat.getNokIsNotNull() && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
					form.getLocalContext().setNextOfKin(pat.getNok());
				}
				catch ( StaleObjectException se)
				{
					engine.showMessage(se.getMessage());
				}
			}
			else
				form.getContextMenus().getSupportNetworkFamilyGridNewFromNextofkinItem().setVisible(false);
						
			form.getContextMenus().getSupportNetworkFamilyGridNewItem().setVisible(true && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.getContextMenus().getSupportNetworkFamilyGridUpdateItem().setVisible(form.lyrSupportServices().tabPageFamily().grdFamily().getSelectedRow() != null && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.getContextMenus().getSupportNetworkFamilyGridCOPY_ALL_PREVIOUS_FAMILYItem().setVisible(form.getLocalContext().getSelectedRecord() == null 
				&& form.getLocalContext().getPreviousSupportServiceRecordExistsIsNotNull()
				&& form.getLocalContext().getPreviousSupportServiceRecordExists()
				&& Boolean.TRUE.equals(form.getLocalContext().getisEnabled()) );
		}
		
	}

	public void updateProfessionalControlsState()
	{
		if (form.getMode().equals(FormMode.EDIT))
		{
			form.getContextMenus().Emergency.hideAllSupportNetworkProfessionalMenuItems();
			
			form.lyrSupportServices().tabPageProf().btnInactivateProfessional().setVisible(false);
			form.lyrSupportServices().tabPageProf().btnInactivateProfessional().setEnabled(false);
		}
		else if (form.getMode().equals(FormMode.VIEW))
		{
			form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(false);
			form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(false);
			form.lyrSupportServices().tabPageProf().txtHcpName().setEnabled(false);
			form.lyrSupportServices().tabPageProf().txtLocation().setEnabled(false);
			
			form.lyrSupportServices().tabPageProf().btnInactivateProfessional().setVisible(true && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.lyrSupportServices().tabPageProf().btnInactivateProfessional().setEnabled(form.lyrSupportServices().tabPageProf().grdProfessional().getSelectedRow() != null 
					&& form.lyrSupportServices().tabPageProf().grdProfessional().getValue().getIsCurrActiveProfSupp().booleanValue());
			
			form.getContextMenus().Emergency.getSupportNetworkProfessionalADDItem().setVisible(true && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.getContextMenus().Emergency.getSupportNetworkProfessionalEDITItem().setVisible(form.lyrSupportServices().tabPageProf().grdProfessional().getSelectedRow() != null && Boolean.TRUE.equals(form.lyrSupportServices().tabPageProf().grdProfessional().getValue().getIsCurrActiveProfSupp()) && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.getContextMenus().Emergency.getSupportNetworkProfessionalCOPY_ALL_PREVIOUS_PROFItem().setVisible(form.getLocalContext().getSelectedRecord() == null 
				&& form.getLocalContext().getPreviousSupportServiceRecordExistsIsNotNull() && form.getLocalContext().getPreviousSupportServiceRecordExists() && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()) );
		}
		
		//WDEV-16289
		form.lyrSupportServices().tabPageProf().btnProfNew().setVisible(FormMode.VIEW.equals(form.getMode()));
		form.lyrSupportServices().tabPageProf().btnProfNew().setEnabled(Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		form.lyrSupportServices().tabPageProf().btnProfEdit().setVisible(FormMode.VIEW.equals(form.getMode()) && form.lyrSupportServices().tabPageProf().grdProfessional().getValue() != null && Boolean.TRUE.equals(form.lyrSupportServices().tabPageProf().grdProfessional().getValue().getIsCurrActiveProfSupp()));
		form.lyrSupportServices().tabPageProf().btnProfEdit().setEnabled(form.lyrSupportServices().tabPageProf().grdProfessional().getValue() != null && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		if (form.getMode().equals(FormMode.EDIT)) 
			form.lyrSupportServices().tabPageProf().chkSupplyHcp().setEnabled(form.lyrSupportServices().tabPageProf().grdProfessional().getValue() == null && !Boolean.TRUE.equals(form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().getValue()));//WDEV-14594
	}

	public void updateServicesControlsState()
	{
		if (form.getMode().equals(FormMode.EDIT))
		{
			form.getContextMenus().Emergency.hideAllSupportNetworkServicesMenuItems();
			
			form.lyrSupportServices().tabPageServices().btnInactivateService().setVisible(false);
			form.lyrSupportServices().tabPageServices().btnInactivateService().setEnabled(false);


		}
		else if (form.getMode().equals(FormMode.VIEW))
		{
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setEnabled(false);
			form.lyrSupportServices().tabPageServices().txtAreaLoc().setRequired(false);
			form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(false);

			form.lyrSupportServices().tabPageServices().btnInactivateService().setVisible(true && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.lyrSupportServices().tabPageServices().btnInactivateService().setEnabled(form.lyrSupportServices().tabPageServices().grdServices().getSelectedRow() != null 
					&& form.lyrSupportServices().tabPageServices().grdServices().getValue().getIsCurrentlyActive().booleanValue());
			
			form.getContextMenus().Emergency.getSupportNetworkServicesADDItem().setVisible(true && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
			form.getContextMenus().Emergency.getSupportNetworkServicesEDITItem().setVisible(form.lyrSupportServices().tabPageServices().grdServices().getSelectedRow() != null && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()) && Boolean.TRUE.equals(form.lyrSupportServices().tabPageServices().grdServices().getValue().getIsCurrentlyActive()));
			form.getContextMenus().Emergency.getSupportNetworkServicesCOPY_ALL_PREVIOUS_SERVItem().setVisible(form.getLocalContext().getSelectedRecord() == null 
					&& form.getLocalContext().getPreviousSupportServiceRecordExistsIsNotNull()
					&& form.getLocalContext().getPreviousSupportServiceRecordExists() 
					&& Boolean.TRUE.equals(form.getLocalContext().getisEnabled()) );
		}
		
		//WDEV-16289
		form.lyrSupportServices().tabPageServices().btnServNew().setVisible(FormMode.VIEW.equals(form.getMode()));
		form.lyrSupportServices().tabPageServices().btnServNew().setEnabled(Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		form.lyrSupportServices().tabPageServices().btnServEdit().setVisible(FormMode.VIEW.equals(form.getMode()) && form.lyrSupportServices().tabPageServices().grdServices().getValue() != null && Boolean.TRUE.equals(form.lyrSupportServices().tabPageServices().grdServices().getValue().getIsCurrentlyActive()));
		form.lyrSupportServices().tabPageServices().btnServEdit().setEnabled(form.lyrSupportServices().tabPageServices().grdServices().getValue() != null && Boolean.TRUE.equals(form.getLocalContext().getisEnabled()));
		
		if (form.getMode().equals(FormMode.EDIT))
			form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setEnabled(form.lyrSupportServices().tabPageServices().grdServices().getValue() == null && !Boolean.TRUE.equals(form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().getValue()));
	}

	protected SupportNetworkFamily populateFamilyInstanceData() 
	{
		SupportNetworkFamily vo = populateFamilyDataFromScreen(form.getLocalContext().getSelectedFamilyRecord());
		
		vo.setPatient(form.getLocalContext().getPatientRef());
		//default currently active to true
		if(vo.getIsCurrentlyActiveFamilySupport() == null)
			vo.setIsCurrentlyActiveFamilySupport(Boolean.TRUE);
		
		//set authoring information only for new records.
		if (vo.getID_SupportNetworkFamily() == null)
			vo.setAuthoringInfo(form.lyrSupportServices().tabPageFamily().customControlAuthFamily().getValue());
		
		//WDEV-12901 set Recording Information
		if(vo.getRecordingInformation()==null)
		{
			RecordingUserInformationVo voRecordingUserInformation = new RecordingUserInformationVo();
			voRecordingUserInformation.setRecordingUser(form.lyrSupportServices().tabPageFamily().cmbRecordingHCP().getValue());
			voRecordingUserInformation.setRecordingDateTime(new DateTime());
			vo.setRecordingInformation(voRecordingUserInformation);
		}
		
		return vo;
	}

	protected ims.core.vo.SupportNetworkFamily populateFamilyDataFromScreen(ims.core.vo.SupportNetworkFamily value)
	{
		if(value == null)
			value = new ims.core.vo.SupportNetworkFamily();

		value.setFitAndWell(new Boolean(form.lyrSupportServices().tabPageFamily().chkFit().getValue()));
		value.setPermissionToContact(new Boolean(form.lyrSupportServices().tabPageFamily().chkPermission().getValue()));
		value.setAwareClientPosition(new Boolean(form.lyrSupportServices().tabPageFamily().chkAware().getValue()));
		value.setCarerName(form.lyrSupportServices().tabPageFamily().txtName().getValue());
		value.setCarerAddress(form.lyrSupportServices().tabPageFamily().txtFamilyAddress().getValue());
		value.setCarerEmail(form.lyrSupportServices().tabPageFamily().txtEmailAddress().getValue());
		value.setCarerWorkPhone(form.lyrSupportServices().tabPageFamily().txtWorkPhone().getValue());
		value.setCarerHomePhone(form.lyrSupportServices().tabPageFamily().txtHomePhone().getValue());
		value.setIsMainCarer(new Boolean(form.lyrSupportServices().tabPageFamily().chkCarer().getValue()));
		value.setEmergencyContactOrder(form.lyrSupportServices().tabPageFamily().cmbEmergency().getValue());
		value.setCarerMobilePhone(form.lyrSupportServices().tabPageFamily().txtMobilrPhone().getValue());
		value.setCarerRelationship(form.lyrSupportServices().tabPageFamily().cmbRelationship().getValue());

		return value;
	}

	protected void populateFamilyInstanceControls(SupportNetworkFamily value) 
	{
		clearFamilyInstanceControls();

		if(value.getFitAndWellIsNotNull())
			form.lyrSupportServices().tabPageFamily().chkFit().setValue(value.getFitAndWell().booleanValue());
		if(value.getPermissionToContactIsNotNull())
			form.lyrSupportServices().tabPageFamily().chkPermission().setValue(value.getPermissionToContact().booleanValue());
		if(value.getAwareClientPositionIsNotNull())
			form.lyrSupportServices().tabPageFamily().chkAware().setValue(value.getAwareClientPosition().booleanValue());
		form.lyrSupportServices().tabPageFamily().txtName().setValue(value.getCarerNameIsNotNull() ? value.getCarerName(): null);
		form.lyrSupportServices().tabPageFamily().txtFamilyAddress().setValue(value.getCarerAddressIsNotNull() ? value.getCarerAddress(): null);
		form.lyrSupportServices().tabPageFamily().txtEmailAddress().setValue(value.getCarerEmailIsNotNull() ? value.getCarerEmail(): null);
		form.lyrSupportServices().tabPageFamily().txtWorkPhone().setValue(value.getCarerWorkPhoneIsNotNull() ? value.getCarerWorkPhone(): null);
		form.lyrSupportServices().tabPageFamily().txtHomePhone().setValue(value.getCarerHomePhoneIsNotNull() ? value.getCarerHomePhone(): null);
		if(value.getIsMainCarerIsNotNull())
			form.lyrSupportServices().tabPageFamily().chkCarer().setValue(value.getIsMainCarer().booleanValue());
		form.lyrSupportServices().tabPageFamily().cmbEmergency().setValue(value.getEmergencyContactOrderIsNotNull() ? value.getEmergencyContactOrder() : null);
		form.lyrSupportServices().tabPageFamily().txtMobilrPhone().setValue(value.getCarerMobilePhoneIsNotNull() ? value.getCarerMobilePhone(): null);
		form.lyrSupportServices().tabPageFamily().cmbRelationship().setValue(value.getCarerRelationshipIsNotNull() ? value.getCarerRelationship() : null);

		form.lyrSupportServices().tabPageFamily().customControlAuthFamily().setValue(value.getAuthoringInfo());			

		if(value.getRecordingInformationIsNotNull())
		{
			MemberOfStaffLiteVo mos = value.getRecordingInformation().getRecordingUser();
			if(mos!=null)
			{
				form.lyrSupportServices().tabPageFamily().cmbRecordingHCP().newRow(mos, mos.toString());
				form.lyrSupportServices().tabPageFamily().cmbRecordingHCP().setValue(mos);	
			}
			form.lyrSupportServices().tabPageFamily().dtimRecordingDateTime().setValue(value.getRecordingInformation().getRecordingDateTime());
		}
	}

	private boolean enableInactivateButton(ims.core.vo.SupportNetworkFamily voSupNet)
	{
		if (voSupNet == null || voSupNet.getIsCurrentlyActiveFamilySupport() == null)
			return false;

		return voSupNet.getIsCurrentlyActiveFamilySupport().booleanValue() && form.getMode().equals(FormMode.VIEW);
	}

	private void setInactiveBtnVisible(boolean value)
	{
		form.lyrSupportServices().tabPageFamily().btnInactive().setVisible(value);
		form.lyrSupportServices().tabPageFamily().btnInactive().setEnabled(value);
	}

	@Override
	protected void onRadioButtongroupFamilyFilterValueChanged() throws PresentationLogicException 
	{
		form.lyrSupportServices().tabPageFamily().grdFamily().setValue(null);
		clearFamilyInstanceControls();
		listSupportNetworkFamily();
		form.setMode(FormMode.VIEW);
	}

	@Override
	protected void onlyrSupportServicesTabChanged(LayerBridge tab) 
	{
		if (tab.equals(form.lyrSupportServices().tabPageProf()))
			openProfessional();
		else if (tab.equals(form.lyrSupportServices().tabPageServices()))
			openServices();
		else if (tab.equals(form.lyrSupportServices().tabPageFamily()))
			openFamily();
		
		
	}
	public void setEnabled(Boolean value)
	{
		form.getLocalContext().setisEnabled(value);
		updateProfessionalControlsState();
		updateFamilyControlsState();
		updateServicesControlsState();
		
	}


	public void initialize(CareContextRefVo careContextRef,	EpisodeOfCareRefVo episodeRef, PatientRefVo patientRef) 
	{
		if (form.getMode().equals(FormMode.VIEW))
		{
			form.getLocalContext().setCareContextRef(careContextRef);
			form.getLocalContext().setEpisodeOfCareRef(episodeRef);
			form.getLocalContext().setPatientRef(patientRef);
			form.getLocalContext().setSelectedRecord(null);
			
			if (! form.getLocalContext().getCareContextRefIsNotNull()
				&& form.getLocalContext().getCareContextRef().equals(careContextRef))
			{
				//Different Carecontext to last one 0- and not a refresh of the screen.
				form.getLocalContext().setSelectedFamilyRecord(null);
				form.getLocalContext().setSelectedSupportNetworkProfessional(null);
				form.getLocalContext().setSelectedSupportNetworkService(null);
			}

			form.getLocalContext().setPreviousSupportServiceRecordExists(domain.checkForAPreviousSupportService(form.getLocalContext().getPatientRef()));

			initializeProfessionalTab();
			initializeServicesTab();
			initializeFamilyTab();
			
			openSupportServices();
		}
	}

	private void initializeServicesTab() 
	{
		form.lyrSupportServices().tabPageServices().grdServices().getRows().clear();
		clearServiceDetails();
		
		if (form.lyrSupportServices().tabPageServices().grpServiceFilter().getValue().equals(GenForm.lyrSupportServicesLayer.tabPageServicesContainer.grpServiceFilterEnumeration.None))
			form.lyrSupportServices().tabPageServices().grpServiceFilter().setValue(GenForm.lyrSupportServicesLayer.tabPageServicesContainer.grpServiceFilterEnumeration.rdoActiveServices);

		setServicesNoneAtPresent();

		loadServiceCombo();
		
		form.setMode(FormMode.VIEW);
		updateServicesControlsState();

	}

	private void setServicesNoneAtPresent()
	{
		PatientNoSupportNetworkServicesInfoVo voPatientNoSupportNetworkServicesInfo = domain.getPatientNoSupportNetworkServicesInfo(form.getLocalContext().getPatientRef());
		form.getLocalContext().setPatientNoSupportNetworkServicesInfo(voPatientNoSupportNetworkServicesInfo);

		if(voPatientNoSupportNetworkServicesInfo != null && 
				voPatientNoSupportNetworkServicesInfo.getSupportNetworkServiceStatusIsNotNull() && 
					voPatientNoSupportNetworkServicesInfo.getSupportNetworkServiceStatus().equals(PatientSupportNetworkStatus.NONEATPRESENT))						
		{			
			form.lyrSupportServices().tabPageServices().lblNoneAtPresentSer().setVisible(true);			
			form.lyrSupportServices().tabPageServices().lblNoneAtPresentSer().setTooltip(voPatientNoSupportNetworkServicesInfo.getAuthoringInformationIsNotNull()? voPatientNoSupportNetworkServicesInfo.getAuthoringInformation().toString("<br>") : "");
		}
		else
			form.lyrSupportServices().tabPageServices().lblNoneAtPresentSer().setVisible(false);
	}

	private void initializeProfessionalTab() 
	{
		form.lyrSupportServices().tabPageProf().grdProfessional().getRows().clear();
		clearProfDetails();
		clearProfessionalReadOnlyDetails();
		
		if (form.lyrSupportServices().tabPageProf().grpProfFilter().getValue().equals(GenForm.lyrSupportServicesLayer.tabPageProfContainer.grpProfFilterEnumeration.None))
			form.lyrSupportServices().tabPageProf().grpProfFilter().setValue(GenForm.lyrSupportServicesLayer.tabPageProfContainer.grpProfFilterEnumeration.rdoActiveProf);

		loadProfessionCombo();

		if (form.getMode().equals(FormMode.EDIT))
				form.lyrSupportServices().tabPageProf().chkSupplyHcp().setEnabled(false);

		form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(false);
		form.lyrSupportServices().tabPageProf().qmbHcpName().setVisible(true);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(false);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setVisible(true);

		form.lyrSupportServices().tabPageProf().txtHcpName().setVisible(false);
		form.lyrSupportServices().tabPageProf().txtLocation().setVisible(false);
	
		setProfessionalNoneAtPresent();
	
		form.setMode(FormMode.VIEW);
		updateProfessionalControlsState();
	}

	private void clearProfessionalReadOnlyDetails()
	{
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().clear();
		form.lyrSupportServices().tabPageProf().txtAddressPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtWorkPh().setValue(null);
		form.lyrSupportServices().tabPageProf().txtEmailPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtMobilePhPro().setValue(null);
	}

	private void clearServicesReadOnlyDetails()
	{
		form.lyrSupportServices().tabPageServices().txtContactPerson().setValue(null);
		form.lyrSupportServices().tabPageServices().txtPhoneNoService().setValue(null);
		form.lyrSupportServices().tabPageServices().txtAddressService().setValue(null);
	}

	@Override
	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException 
	{
		if (formName.equals(form.getForms().Core.YesNoDialog) && result.equals(DialogResult.YES))
		{
			if (form.lyrSupportServices().tabPageFamily().isVisible())
			{
				saveFamily(setRecordActive());
				openFamily();
			}
			else if (form.lyrSupportServices().tabPageProf().isVisible())
			{
				SupportNetworkProfessionalVo voProf = form.getLocalContext().getSelectedSupportNetworkProfessional();
				voProf.setIsCurrActiveProfSupp(Boolean.FALSE);
				form.getLocalContext().setSelectedSupportNetworkProfessional(voProf);
				if (saveProfessional(voProf))
				{
					openProfessional();
				}
			}
			else if (form.lyrSupportServices().tabPageServices().isVisible())
			{
				SupportNetworkServicesVo voService = form.getLocalContext().getSelectedSupportNetworkService();
				voService.setIsCurrentlyActive(Boolean.FALSE);
				form.getLocalContext().setSelectedSupportNetworkService(voService);
				if (saveService(voService))
				{
					openServices();
				}
			}
			
			//WDEV-17337
			form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.SAVE);
			form.fireCustomControlValueChanged();
		}
		else //WDEV-17337
		{
			form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.CANCEL);
			form.fireCustomControlValueChanged();
		}
		
	}
	
	private void openServices() 
	{
		clearServiceDetails();
		
		listSupportNetworkServices();
		
		setServicesNoneAtPresent();
		
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setVisible(false);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setVisible(true);

		if (form.getLocalContext().getSelectedSupportNetworkServiceIsNotNull())
		{
			grdServicesRow row = form.lyrSupportServices().tabPageServices().grdServices().getRowByValue(form.getLocalContext().getSelectedSupportNetworkService());
			if (row != null && row.getValue() != null)
			{
				form.getLocalContext().setSelectedSupportNetworkService(row.getValue());
				form.lyrSupportServices().tabPageServices().grdServices().setValue(form.getLocalContext().getSelectedSupportNetworkService());
				populateServicesInstanceControls(form.lyrSupportServices().tabPageServices().grdServices().getValue());
			}
			else
				clearProfDetails();
		}
		form.setMode(FormMode.VIEW);
		updateServicesControlsState();
	}

	private void listSupportNetworkProfessional()
	{
		//WDEV-14594
		form.getLocalContext().setSelectedRecord(domain.getSupportServices(form.getLocalContext().getSelectedRecord(), form.getLocalContext().getCareContextRef()));
		
		SupportNetworkProfessionalVoCollection voColl = form.getLocalContext().getSelectedRecord() != null ? form.getLocalContext().getSelectedRecord().getSupportNetworkProfessionals() : null;
		if(voColl == null)
			return;

		SupportNetworkProfessionalVo voProf = null;
		GenForm.lyrSupportServicesLayer.tabPageProfContainer.grdProfessionalRow row = null;

		form.lyrSupportServices().tabPageProf().grdProfessional().getRows().clear();

		boolean bActiveProfessionals = false;
		for (int i = 0; i < voColl.size(); i++)
		{
			voProf = voColl.get(i);
			
			if(form.lyrSupportServices().tabPageProf().grpProfFilter().getValue().equals(GenForm.lyrSupportServicesLayer.tabPageProfContainer.grpProfFilterEnumeration.rdoActiveProf)
				&& voProf.getIsCurrActiveProfSuppIsNotNull()
				&& voProf.getIsCurrActiveProfSupp().equals(Boolean.FALSE))
				continue;

			row = form.lyrSupportServices().tabPageProf().grdProfessional().getRows().newRow();

			if (voProf.getMOSIsNotNull())
			{
				row.setColName(voProf.getMOS().toString());
				row.setTooltipForColName(voProf.getMOS().toString());
			}
			else if (voProf.getSuppliedProfessionalIsNotNull())
			{
				row.setColName(voProf.getSuppliedProfessional().getName());
				row.setTooltipForColName(voProf.getSuppliedProfessional().getName());
				row.setColWorkPhone(voProf.getSuppliedProfessional().getWorkPhone());
				row.setTooltipForColWorkPhone(voProf.getSuppliedProfessional().getWorkPhone());
			}

			if (voProf.getHcpSubTypeIsNotNull())
			{
				row.setColProfessionService(voProf.getHcpSubType().getText());
				row.setTooltipForColProfessionService(voProf.getHcpSubType().getText());
			}

			if (voProf.getCurrentLocationIsNotNull() && voProf.getCurrentLocation().getAddressIsNotNull())
			{
				row.setColWorkPhone(voProf.getCurrentLocation().getAddress().getPhone());
				row.setTooltipForColWorkPhone(voProf.getCurrentLocation().getAddress().getPhone());
			}

			if (voProf.getIsCurrActiveProfSupp().booleanValue())
			{
				row.setColIsActive(form.getImages().Core.AnswerBox_Yes);
				bActiveProfessionals = true;
			}
			else
			{
				row.setColIsActive(form.getImages().Core.AnswerBox_No);
				row.setBackColor(Color.LightGray);
			}

			row.setValue(voProf);
		}
		
		form.getLocalContext().setActiveProfessionals(bActiveProfessionals);

		SupportNetworkProfessionalVo voSupportNetworkProfessional = form.getLocalContext().getSelectedSupportNetworkProfessional();
		if (voSupportNetworkProfessional != null && form.lyrSupportServices().tabPageProf().grdProfessional().getRowByValue(voSupportNetworkProfessional) != null)
		{
			form.lyrSupportServices().tabPageProf().grdProfessional().setValue(voSupportNetworkProfessional);
			grdProSelectionChanged();
		}
	}

	private void loadProfessionCombo()
	{
		HcpDisTypeCollection coll = LookupHelper.getHcpDisType(domain.getLookupService());
		TreeNode[] rootNodes = coll.getRootNodes();
		if (rootNodes != null)
		{
			for (int i = 0; i < rootNodes.length; i++)
			{
				HcpDisType lkParent = (HcpDisType) rootNodes[i];
				if (lkParent.isActive() == true)
					form.lyrSupportServices().tabPageProf().cmbProfessional().newRow(lkParent, lkParent.getText());
			}
		}
	}

	private void loadServiceCombo()
	{
		ServiceCategoryCollection excludedColl = new ServiceCategoryCollection();
		excludedColl.add(ServiceCategory.PATHOLOGY_DISCIPLINE);
		excludedColl.add(ServiceCategory.RADIOLOGY_MODALITY);

		ServiceVoCollection voCollService = domain.listService(excludedColl);
		form.lyrSupportServices().tabPageServices().cmbService().clear();

		for (int i = 0; i < voCollService.size(); i++)
			form.lyrSupportServices().tabPageServices().cmbService().newRow(voCollService.get(i), voCollService.get(i).getServiceName());
	}

	private void openProfessional() 
	{
		clearProfDetails();
		clearProfessionalReadOnlyDetails();
		defaultHCPandLocationControlState();
		
		setProfessionalNoneAtPresent();

		listSupportNetworkProfessional();

		if (form.getLocalContext().getSelectedSupportNetworkProfessionalIsNotNull())
		{
			grdProfessionalRow row = form.lyrSupportServices().tabPageProf().grdProfessional().getRowByValue(form.getLocalContext().getSelectedSupportNetworkProfessional());
			if (row != null && row.getValue() != null)
			{
				form.getLocalContext().setSelectedSupportNetworkProfessional(row.getValue());
				form.lyrSupportServices().tabPageProf().grdProfessional().setValue(form.getLocalContext().getSelectedSupportNetworkProfessional());
				populateProfessionalInstanceControl(form.lyrSupportServices().tabPageProf().grdProfessional().getValue());
			}
			else
				clearProfDetails();
		}
		form.setMode(FormMode.VIEW);
		updateProfessionalControlsState();
	}

	private void setProfessionalNoneAtPresent()
	{
		PatientNoSupportNetworkStatusInfoVo  voPatientNoSupportNetworkStatusInfo = domain.getPatientNoSupportNetworkStatusInfo(form.getLocalContext().getPatientRef());
		form.getLocalContext().setPatientNoSupportNetworkStatusInfo(voPatientNoSupportNetworkStatusInfo);
		if(voPatientNoSupportNetworkStatusInfo!=null 
			&& (voPatientNoSupportNetworkStatusInfo.getSupportNetworkStatusIsNotNull() 
					&& voPatientNoSupportNetworkStatusInfo.getSupportNetworkStatus().equals(PatientSupportNetworkStatus.NONEATPRESENT)))
			form.lyrSupportServices().tabPageProf().lblNoneAtPresentPro().setVisible(true);
		else
			form.lyrSupportServices().tabPageProf().lblNoneAtPresentPro().setVisible(false);
	}

	private void populateProfessionalInstanceControl(SupportNetworkProfessionalVo voProf)
	{
		clearProfDetails();
		// profession
		if (voProf.getProfessionIsNotNull())
		{
			form.lyrSupportServices().tabPageProf().cmbProfessional().newRow(voProf.getProfession(), voProf.getProfession().getText());
			form.lyrSupportServices().tabPageProf().cmbProfessional().setValue(voProf.getProfession());
		}

		if (voProf.getHcpSubTypeIsNotNull())
		{
			// hcp type
			form.lyrSupportServices().tabPageProf().cmbHcpSubType().newRow(voProf.getHcpSubType(), voProf.getHcpSubType().getText());
			form.lyrSupportServices().tabPageProf().cmbHcpSubType().setValue(voProf.getHcpSubType());
		}

		if ((voProf.getSuppliedProfessional() == null) && (voProf.getMOSIsNotNull()))
		{
			form.lyrSupportServices().tabPageProf().chkSupplyHcp().setValue(false);
			
			form.lyrSupportServices().tabPageProf().qmbHcpName().setValue(voProf.getMOS().getHcp());
			if (form.lyrSupportServices().tabPageProf().qmbHcpName().getValue() == null
				&& voProf.getMOS().getHcpIsNotNull()
				&& voProf.getMOS().getHcp().getName() != null)
			{
				form.lyrSupportServices().tabPageProf().qmbHcpName().newRow(voProf.getMOS().getHcp(), voProf.getMOS().getHcp().getName().toString());
				form.lyrSupportServices().tabPageProf().qmbHcpName().setValue(voProf.getMOS().getHcp());
			}
				
			form.lyrSupportServices().tabPageProf().txtEmailPro().setValue(voProf.getMOS().getEmailAddress());
			form.lyrSupportServices().tabPageProf().txtMobilePhPro().setValue(voProf.getMOS().getMobile());

			form.getGlobalContext().COE.setSupportNetworkSelectedLocation(voProf.getCurrentLocation());
			
			form.lyrSupportServices().tabPageProf().txtHcpName().setEnabled(false);
			form.lyrSupportServices().tabPageProf().txtHcpName().setVisible(false);
			form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(true);
			form.lyrSupportServices().tabPageProf().qmbHcpName().setVisible(true);
			form.lyrSupportServices().tabPageProf().txtLocation().setVisible(false);
			form.lyrSupportServices().tabPageProf().cmbLocationHcp().setVisible(true);

			if (voProf.getCurrentLocationIsNotNull())
			{
				form.lyrSupportServices().tabPageProf().cmbLocationHcp().newRow(voProf.getCurrentLocation(), voProf.getCurrentLocation().getName(), Color.Black);
				form.lyrSupportServices().tabPageProf().cmbLocationHcp().setValue(voProf.getCurrentLocation());
				showLocationProf();
			}
		}
		else if (voProf.getSuppliedProfessionalIsNotNull())
		{
			form.lyrSupportServices().tabPageProf().chkSupplyHcp().setValue(true);

			form.lyrSupportServices().tabPageProf().txtHcpName().setValue(voProf.getSuppliedProfessional().getName());
			form.lyrSupportServices().tabPageProf().txtLocation().setValue(voProf.getSuppliedProfessional().getServiceLocation());
			form.lyrSupportServices().tabPageProf().txtAddressPro().setValue(voProf.getSuppliedProfessional().getAddress());
			form.lyrSupportServices().tabPageProf().txtWorkPh().setValue(voProf.getSuppliedProfessional().getWorkPhone());
			form.lyrSupportServices().tabPageProf().txtMobilePhPro().setValue(voProf.getSuppliedProfessional().getMobilePhone());
			form.lyrSupportServices().tabPageProf().txtEmailPro().setValue(voProf.getSuppliedProfessional().getEmailAddress());

			form.lyrSupportServices().tabPageProf().txtHcpName().setEnabled(true);
			form.lyrSupportServices().tabPageProf().txtHcpName().setVisible(true);
			form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(false);
			form.lyrSupportServices().tabPageProf().qmbHcpName().setVisible(false);
			form.lyrSupportServices().tabPageProf().txtLocation().setVisible(true);
			form.lyrSupportServices().tabPageProf().cmbLocationHcp().setVisible(false);
		}

		form.lyrSupportServices().tabPageProf().customControlAuth().setValue(voProf.getAuthorngInfo());
	}

	private void showLocationProf()
	{
		setProfessionAddress(form.lyrSupportServices().tabPageProf().cmbLocationHcp().getValue());
		form.getGlobalContext().COE.setSupportNetworkSelectedLocation(form.lyrSupportServices().tabPageProf().cmbLocationHcp().getValue());
	}

	private boolean saveService(SupportNetworkServicesVo supportNetworkServices) 
	{
		if (form.getLocalContext().getSelectedRecord() == null)
			populateBaseDischargeServices();
		
		ArrayList<String> screenErrors = new ArrayList<String>();
		
		if (form.lyrSupportServices().tabPageServices().cmbService().getValue() == null)
			screenErrors.add("Please select a Service Type");

		if ((!form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue()) && form.lyrSupportServices().tabPageServices().cmbLocationServices().getValue() == null)
			screenErrors.add("Please select a Location");
		
		if ((form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue()) && form.lyrSupportServices().tabPageServices().txtAreaLoc().getValue() == null)
			screenErrors.add("Please state a Location");

		String[] sScreenErrors = screenErrors(screenErrors);
		if(sScreenErrors.length > 0)
		{
			engine.showErrors(sScreenErrors);
			return false;
		}
		
		SupportNetworkServicesVo voSupportServices = null;
		if (supportNetworkServices == null)
			voSupportServices = populateServicesInstanceData();
		else
			voSupportServices = supportNetworkServices;
		
		//WDEV-14594
		String[] arrErrorsProf = voSupportServices.validate();
		if(arrErrorsProf != null)
		{
			engine.showErrors(arrErrorsProf);
			return false;
		}
		
		
		if (form.getLocalContext().getSelectedRecord().getSupportNetworkServices() == null)
			form.getLocalContext().getSelectedRecord().setSupportNetworkServices(new SupportNetworkServicesVoCollection());
		
		if (form.getLocalContext().getSelectedRecord().getSupportNetworkServices().indexOf(voSupportServices) >= 0)
			form.getLocalContext().getSelectedRecord().getSupportNetworkServices().set(form.getLocalContext().getSelectedRecord().getSupportNetworkServices().indexOf(voSupportServices), voSupportServices);
		else
			form.getLocalContext().getSelectedRecord().getSupportNetworkServices().add(voSupportServices);
		
		String[] arrErrors = form.getLocalContext().getSelectedRecord().validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return false;
		}
		try 
		{
			form.getLocalContext().setSelectedRecord(domain.saveSupportServices(form.getLocalContext().getSelectedRecord()));
		} 
		catch (StaleObjectException e) 
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			openSupportServices();
			return false;
		}

		savePatientNoSupportNetworkServicesInfo(false);

		return true;
	}

	private SupportNetworkServicesVo populateServicesInstanceData()
	{	
		SupportNetworkServicesVo voService = form.getLocalContext().getSelectedSupportNetworkService();

		if(voService.getIsCurrentlyActive() == null)
			voService.setIsCurrentlyActive(Boolean.TRUE);

		voService.setFrequencyOfService(form.lyrSupportServices().tabPageServices().txtFrequency().getValue());
		voService.setComments(form.lyrSupportServices().tabPageServices().txtCommentsService().getValue());

		if (form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().getValue())
		{
			SuppNetworkServiceProfessionDetailVo voServiceProf = null;
			if (voService.getSuppliedService() == null)
				voServiceProf = new SuppNetworkServiceProfessionDetailVo();
			else
				voServiceProf = voService.getSuppliedService();
					
			voServiceProf.setAddress(form.lyrSupportServices().tabPageServices().txtAddressService().getValue());
			voServiceProf.setName(form.lyrSupportServices().tabPageServices().txtContactPerson().getValue());
			voServiceProf.setServiceLocation(form.lyrSupportServices().tabPageServices().txtAreaLoc().getValue());
			voServiceProf.setWorkPhone(form.lyrSupportServices().tabPageServices().txtPhoneNoService().getValue());
			// supplied area/location
			voService.setSuppliedService(voServiceProf);
		}
		else
		{
			voService.setLocationService(form.lyrSupportServices().tabPageServices().cmbLocationServices().getValue());
			voService.setSuppliedService(null);
		}
		voService.setAuthoringInfo(form.lyrSupportServices().tabPageServices().customControlAuthSer().getValue());
		voService.setService(form.lyrSupportServices().tabPageServices().cmbService().getValue());
		
		return voService;
	}
	
	private SupportNetworkProfessionalVo populateProfessionalInstanceData()
	{
		SupportNetworkProfessionalVo voProf = form.getLocalContext().getSelectedSupportNetworkProfessional();

		if(voProf.getIsCurrActiveProfSupp()==null)
			voProf.setIsCurrActiveProfSupp(Boolean.TRUE);

		// Professional details
		if (form.lyrSupportServices().tabPageProf().chkSupplyHcp().getValue())
		{
			voProf.setProfession(form.lyrSupportServices().tabPageProf().cmbProfessional().getValue());
			voProf.setHcpSubType(form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue());
			voProf.setAuthorngInfo(form.lyrSupportServices().tabPageProf().customControlAuth().getValue());
				
			SuppNetworkServiceProfessionDetailVo voNetProfDetail = null;
			if (voProf.getSuppliedProfessional() == null)
				voNetProfDetail = new SuppNetworkServiceProfessionDetailVo();
			else
				voNetProfDetail = voProf.getSuppliedProfessional();
				
			voNetProfDetail.setAddress(form.lyrSupportServices().tabPageProf().txtAddressPro().getValue());
			voNetProfDetail.setEmailAddress(form.lyrSupportServices().tabPageProf().txtEmailPro().getValue());
			voNetProfDetail.setMobilePhone(form.lyrSupportServices().tabPageProf().txtMobilePhPro().getValue());
			voNetProfDetail.setName(form.lyrSupportServices().tabPageProf().txtHcpName().getValue());
			voNetProfDetail.setServiceLocation(form.lyrSupportServices().tabPageProf().txtLocation().getValue());
			voNetProfDetail.setWorkPhone(form.lyrSupportServices().tabPageProf().txtWorkPh().getValue());
			voProf.setSuppliedProfessional(voNetProfDetail);
				
			voProf.setMOS(null);
			voProf.setCurrentLocation(null);
		}
		else
		{
			voProf.setProfession(form.lyrSupportServices().tabPageProf().cmbProfessional().getValue());
			voProf.setHcpSubType(form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue());
			voProf.setAuthorngInfo(form.lyrSupportServices().tabPageProf().customControlAuth().getValue());

			MemberOfStaffShortVo voMOSShort = new MemberOfStaffShortVo();

			if (form.getLocalContext().getvoMemberOfStaffShort() != null)
				voMOSShort = form.getLocalContext().getvoMemberOfStaffShort();
			else
			{
				Hcp voHCP = domain.getHCP((HcpRefVo)form.lyrSupportServices().tabPageProf().qmbHcpName().getValue());
				voMOSShort =voHCP.getMos();
			}
			voProf.setMOS(voMOSShort.countFieldsWithValue() > 0 ? voMOSShort : null);
			voProf.setSuppliedProfessional(null);
			voProf.setCurrentLocation(form.lyrSupportServices().tabPageProf().cmbLocationHcp().getValue());
		}

		return voProf;
	}

	private boolean saveProfessional(SupportNetworkProfessionalVo supportNetworkProf) 
	{
		if (form.getLocalContext().getSelectedRecord() == null)
			populateBaseDischargeServices();
		
		ArrayList<String> screenErrors = new ArrayList<String>();

		if (form.lyrSupportServices().tabPageProf().cmbProfessional().getValue() == null)
			screenErrors.add("Profession is mandatory");

		if (form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue() == null)
			screenErrors.add("Type is mandatory");

		if (form.lyrSupportServices().tabPageProf().qmbHcpName().isEnabled() && (!form.lyrSupportServices().tabPageProf().chkSupplyHcp().getValue()) && (form.lyrSupportServices().tabPageProf().qmbHcpName().getValue() == null) )
			screenErrors.add("HCP Name is mandatory");
		else if (form.lyrSupportServices().tabPageProf().txtHcpName().isEnabled() && (form.lyrSupportServices().tabPageProf().chkSupplyHcp().getValue()) && (form.lyrSupportServices().tabPageProf().txtHcpName().getValue() == null))
			screenErrors.add("HCP Name is mandatory");

		if (form.lyrSupportServices().tabPageProf().customControlAuth().getValue()==null)
		{
			screenErrors.add("Authoring HCP and Date/Time are mandatory");
		}
		
		String[] sScreenErrors = screenErrors(screenErrors);
		if(sScreenErrors.length > 0)
		{
			engine.showErrors(sScreenErrors);
			return false;
		}

		SupportNetworkProfessionalVo voSupportProfessional = null;
		if (supportNetworkProf == null)
			voSupportProfessional = populateProfessionalInstanceData();
		else
			voSupportProfessional = supportNetworkProf;
		
		//WDEV-14594
		String[] arrErrorsProf = voSupportProfessional.validate();
		if(arrErrorsProf != null)
		{
			engine.showErrors(arrErrorsProf);
			return false;
		}
		
		if (form.getLocalContext().getSelectedRecord().getSupportNetworkProfessionals() == null)
			form.getLocalContext().getSelectedRecord().setSupportNetworkProfessionals(new SupportNetworkProfessionalVoCollection());
		
		if (form.getLocalContext().getSelectedRecord().getSupportNetworkProfessionals().indexOf(voSupportProfessional) >= 0)
			form.getLocalContext().getSelectedRecord().getSupportNetworkProfessionals().set(form.getLocalContext().getSelectedRecord().getSupportNetworkProfessionals().indexOf(voSupportProfessional), voSupportProfessional);
		else
			form.getLocalContext().getSelectedRecord().getSupportNetworkProfessionals().add(voSupportProfessional);
		
		
		String[] arrErrors = form.getLocalContext().getSelectedRecord().validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return false;
		}

		try 
		{
			form.getLocalContext().setSelectedRecord(domain.saveSupportServices(form.getLocalContext().getSelectedRecord()));
		} 
		catch (StaleObjectException e) 
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			openSupportServices();
			return false;
		}
		
		savePatientNoSupportNetworkStatusInfo(false);

		return true;
	}

	private String[] screenErrors(ArrayList<String> screenErrors) 
	{
		String[] arrAllErrors = null;
		
		arrAllErrors = new String[screenErrors.size()];		
			
		for(int i=0;i<screenErrors.size();i++)
			arrAllErrors[i] = (String)screenErrors.get(i);	
				
		return arrAllErrors;
	}

	private SupportNetworkFamily setRecordActive() 
	{
		SupportNetworkFamily voFamily = form.getLocalContext().getSelectedFamilyRecord();
		
		voFamily.setInactivatingUser(null);	
		voFamily.setInactivatingDateTime(null);
		
		if(voFamily.getIsCurrentlyActiveFamilySupportIsNotNull() && voFamily.getIsCurrentlyActiveFamilySupport().equals(Boolean.TRUE)) //if its true,goes to false (inactivate)
		{
			voFamily.setIsCurrentlyActiveFamilySupport(Boolean.FALSE);	//if its false already,goes to true (reactivate)
			
			Object mos = domain.getMosUser();
			if(mos instanceof MemberOfStaffShortVo)
			{
				voFamily.setInactivatingUser((MemberOfStaffLiteVo) mos);
			}
			
			voFamily.setInactivatingDateTime(new DateTime());	
		}
		else if(voFamily.getIsCurrentlyActiveFamilySupportIsNotNull() && voFamily.getIsCurrentlyActiveFamilySupport().equals(Boolean.FALSE)) //if its true,goes to false (inactivate)
			voFamily.setIsCurrentlyActiveFamilySupport(Boolean.TRUE);
		else if(voFamily.getIsCurrentlyActiveFamilySupport() == null)
			voFamily.setIsCurrentlyActiveFamilySupport(Boolean.TRUE);
		
		return voFamily;
	}

	@Override
	protected void onFormModeChanged() 
	{
		boolean isCCOspecific = ConfigFlag.GEN.SUPPORT_NETWORK_FAMILY_TYPE.getValue().equals("CCO");
		form.lyrSupportServices().tabPageFamily().txtEmailAddress().setEnabled(!isCCOspecific && form.getMode().equals(FormMode.EDIT));
		form.lyrSupportServices().tabPageFamily().chkFit().setEnabled(isCCOspecific  && form.getMode().equals(FormMode.EDIT));
		form.lyrSupportServices().tabPageFamily().chkAware().setEnabled(isCCOspecific  && form.getMode().equals(FormMode.EDIT));
		form.lyrSupportServices().tabPageFamily().chkPermission().setEnabled(isCCOspecific  && form.getMode().equals(FormMode.EDIT));
		
		if (form.getMode().equals(FormMode.EDIT))
		{
			form.lyrSupportServices().tabPageFamily().setEnabled(form.lyrSupportServices().tabPageFamily().isVisible());
			form.lyrSupportServices().tabPageProf().setEnabled(form.lyrSupportServices().tabPageProf().isVisible());
			form.lyrSupportServices().tabPageServices().setEnabled(form.lyrSupportServices().tabPageServices().isVisible());
			form.lyrSupportServices().tabPageFamily().setHeaderEnabled(form.lyrSupportServices().tabPageFamily().isVisible());
			form.lyrSupportServices().tabPageProf().setHeaderEnabled(form.lyrSupportServices().tabPageProf().isVisible());
			form.lyrSupportServices().tabPageServices().setHeaderEnabled(form.lyrSupportServices().tabPageServices().isVisible());

			if (form.lyrSupportServices().tabPageProf().isVisible())
				form.lyrSupportServices().tabPageProf().chkSupplyHcp().setVisible(form.lyrSupportServices().tabPageProf().isVisible());
			
			if (form.lyrSupportServices().tabPageServices().isVisible())
				form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setVisible(form.lyrSupportServices().tabPageServices().isVisible());
			
			form.fireCustomControlValueChanged();
		}
		else
		{
			form.lyrSupportServices().tabPageFamily().setEnabled(true);
			form.lyrSupportServices().tabPageProf().setEnabled(true);
			form.lyrSupportServices().tabPageServices().setEnabled(true);
			form.lyrSupportServices().tabPageFamily().setHeaderEnabled(true);
			form.lyrSupportServices().tabPageProf().setHeaderEnabled(true);
			form.lyrSupportServices().tabPageServices().setHeaderEnabled(true);
		
			if (form.lyrSupportServices().tabPageProf().isVisible())
				form.lyrSupportServices().tabPageProf().customControlAuth().setIsRequiredPropertyToControls(false);

			if (form.lyrSupportServices().tabPageServices().isVisible())
				form.lyrSupportServices().tabPageServices().customControlAuthSer().setIsRequiredPropertyToControls(false);

			if (form.lyrSupportServices().tabPageFamily().isVisible())
				form.lyrSupportServices().tabPageFamily().customControlAuthFamily().setIsRequiredPropertyToControls(false);

		}
	}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	private void clearProfDetails()
	{
		form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().setValue(false);
		form.lyrSupportServices().tabPageProf().cmbProfessional().setValue(null);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().clear();
		form.lyrSupportServices().tabPageProf().qmbHcpName().setValue(null);
		form.lyrSupportServices().tabPageProf().cmbHcpSubType().clear();
		form.lyrSupportServices().tabPageProf().txtHcpName().setValue(null);
		form.lyrSupportServices().tabPageProf().chkSupplyHcp().setValue(false);
		form.lyrSupportServices().tabPageProf().txtAddressPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtEmailPro().setValue(null);
		form.lyrSupportServices().tabPageProf().txtMobilePhPro().setValue(null);
		form.lyrSupportServices().tabPageProf().customControlAuth().setValue(null);
		form.lyrSupportServices().tabPageProf().txtWorkPh().setValue(null);
		form.lyrSupportServices().tabPageProf().txtLocation().setValue(null);
		form.getGlobalContext().COE.setSupportNetworkSelectedLocation(null);
		
	}

	
	private void clearServiceDetails()
	{
		form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().setValue(false);
		form.lyrSupportServices().tabPageServices().cmbService().setValue(null);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setValue(null);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().clear();
		form.lyrSupportServices().tabPageServices().txtAreaLoc().setValue(null);
		form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setValue(false);
		form.lyrSupportServices().tabPageServices().txtFrequency().setValue(null);
		form.lyrSupportServices().tabPageServices().txtContactPerson().setValue(null);
		form.lyrSupportServices().tabPageServices().txtPhoneNoService().setValue(null);
		form.lyrSupportServices().tabPageServices().txtAddressService().setValue(null);
		form.lyrSupportServices().tabPageServices().txtCommentsService().setValue(null);
		form.lyrSupportServices().tabPageServices().customControlAuthSer().setValue(null);
	}

	private void newProfessionalInstance()
	{
		form.lyrSupportServices().tabPageProf().btnInactivateProfessional().setVisible(false);

		form.setMode(FormMode.EDIT);
		form.getContextMenus().Emergency.hideAllSupportNetworkProfessionalMenuItems();

		clearProfDetails();
		
		//WDEV-14594
		form.lyrSupportServices().tabPageProf().cmbHcpSubType().clear();
		form.lyrSupportServices().tabPageProf().qmbHcpName().clear();

		form.lyrSupportServices().tabPageProf().customControlAuth().setIsRequiredPropertyToControls(Boolean.TRUE);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().clear();
		
		SupportNetworkProfessionalVo voProf = new SupportNetworkProfessionalVo();

		form.lyrSupportServices().tabPageProf().customControlAuth().initializeComponent();
		form.getLocalContext().setSelectedSupportNetworkProfessional(voProf);
		form.lyrSupportServices().tabPageProf().grdProfessional().setValue(null);

		defaultHCPandLocationControlState();
		form.lyrSupportServices().tabPageProf().chkSupplyHcp().setEnabled(true);
		form.lyrSupportServices().tabPageProf().cmbProfessional().setEnabled(true);
		form.lyrSupportServices().tabPageProf().cmbHcpSubType().setEnabled(true);
		form.lyrSupportServices().tabPageProf().cmbHcpSubType().setVisible(true);

		form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().setVisible(true);
		if (form.getLocalContext().getPatientNoSupportNetworkStatusInfoIsNotNull())
		{
			form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().setValue(false);
			form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().setVisible(false);
		}

		enableAuthoringHCPCustomControls();
		form.lyrSupportServices().tabPageServices().txtFrequency().setEnabled(true);
		form.lyrSupportServices().tabPageServices().txtCommentsService().setEnabled(true	);		
	}
	
	private void defaultHCPandLocationControlState()
	{
		form.lyrSupportServices().tabPageProf().txtHcpName().setVisible(false);
		form.lyrSupportServices().tabPageProf().qmbHcpName().setVisible(true);
		//WDEV-14594
		//form.lyrSupportServices().tabPageProf().qmbHcpName().setEnabled(form.getMode().equals(FormMode.EDIT));

		form.lyrSupportServices().tabPageProf().txtLocation().setVisible(false);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setEnabled(form.getMode().equals(FormMode.EDIT));
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().setVisible(true);
	}

	private void newServicesInstance()
	{
		form.lyrSupportServices().tabPageServices().btnInactivateService().setVisible(false);

		form.setMode(FormMode.EDIT);
		form.getContextMenus().Emergency.hideAllSupportNetworkServicesMenuItems();

		clearServiceDetails();

		SupportNetworkServicesVo voService = new SupportNetworkServicesVo();

		form.lyrSupportServices().tabPageServices().customControlAuthSer().initializeComponent();
		form.lyrSupportServices().tabPageServices().customControlAuthSer().setIsRequiredPropertyToControls(Boolean.TRUE);

		form.getLocalContext().setSelectedSupportNetworkService(voService);
		form.lyrSupportServices().tabPageServices().grdServices().setValue(null);

		form.lyrSupportServices().tabPageServices().chkSupplyServiceDetail().setEnabled(true);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setEnabled(true);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setRequired(true);
		form.lyrSupportServices().tabPageServices().cmbService().setEnabled(true);

		form.lyrSupportServices().tabPageServices().txtAreaLoc().setVisible(false);
		form.lyrSupportServices().tabPageServices().cmbLocationServices().setVisible(true);
			
		form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().setVisible(true);
		if (form.getLocalContext().getPatientNoSupportNetworkServicesInfoIsNotNull())
		{
			form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().setValue(false);
			form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().setVisible(false);
		}

		enableAuthoringHCPCustomControls();
		form.lyrSupportServices().tabPageServices().txtFrequency().setEnabled(true);
		form.lyrSupportServices().tabPageServices().txtCommentsService().setEnabled(true);		
	}

	@Override
	protected void onBtnInactivateProfessionalClick() throws PresentationLogicException 
	{
		form.getGlobalContext().Core.setHideCancelButton(Boolean.TRUE);
		form.getGlobalContext().Core.setYesNoDialogMessage("Are you sure you wish to inactivate this record");
		engine.open(form.getForms().Core.YesNoDialog);
	}

	@Override
	protected void onBtnInactivateServiceClick() throws PresentationLogicException 
	{
		form.getGlobalContext().Core.setHideCancelButton(Boolean.TRUE);
		form.getGlobalContext().Core.setYesNoDialogMessage("Are you sure you wish to inactivate this record");
		engine.open(form.getForms().Core.YesNoDialog);
	}

	@Override
	protected void onBtnCancelProfessionalClick() throws PresentationLogicException 
	{
		//WDEV-17337
		form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.CANCEL);
		form.fireCustomControlValueChanged();
		
		form.setMode(FormMode.VIEW);
		openProfessional();
	}

	@Override
	protected void onBtnSaveProfessionalClick() throws PresentationLogicException 
	{
		//WDEV-17337
		form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.SAVE);
		form.fireCustomControlValueChanged();
		
		if(form.lyrSupportServices().tabPageProf().chkNoneAtPresentPro().getValue())
		{
			savePatientNoSupportNetworkStatusInfo(true);
			openProfessional();
			return;
		}

		if (saveProfessional(null))
			openProfessional();
	}

	private void savePatientNoSupportNetworkStatusInfo(boolean bNonePresent) 
	{
		PatientNoSupportNetworkStatusInfoVo voPatientNoSupportNetworkStatusInfo = form.getLocalContext().getPatientNoSupportNetworkStatusInfo();
		
		if(voPatientNoSupportNetworkStatusInfo==null)
			voPatientNoSupportNetworkStatusInfo = new PatientNoSupportNetworkStatusInfoVo();
			
		voPatientNoSupportNetworkStatusInfo.setPatient(form.getLocalContext().getPatientRef());
		
		if(bNonePresent)			
			voPatientNoSupportNetworkStatusInfo.setSupportNetworkStatus(PatientSupportNetworkStatus.NONEATPRESENT);
		else
			voPatientNoSupportNetworkStatusInfo.setSupportNetworkStatus(PatientSupportNetworkStatus.HASSUPPORT);
		
		AuthoringInformationVo vo = new AuthoringInformationVo();
		vo.setAuthoringHcp((HcpLiteVo) domain.getHcpLiteUser());
		vo.setAuthoringDateTime(new DateTime());
		voPatientNoSupportNetworkStatusInfo.setAuthoringInformation(vo);
		
		try
		{
			voPatientNoSupportNetworkStatusInfo = domain.savePatientNoSupportNetworkStatusInfo(voPatientNoSupportNetworkStatusInfo);
			form.getLocalContext().setPatientNoSupportNetworkStatusInfo(voPatientNoSupportNetworkStatusInfo);
		} 
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		catch (UniqueKeyViolationException e)
		{
			engine.showMessage(e.getMessage());
		}
		catch (UnqViolationUncheckedException e)
		{
			openProfessional();
		}
		catch (DomainInterfaceException e)
		{
			engine.showMessage(e.getMessage());
		}	
	}

	@Override
	protected void onBtnCancelServicesClick() throws PresentationLogicException 
	{
		//WDEV-17337
		form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.CANCEL);
		form.fireCustomControlValueChanged();
		
		form.setMode(FormMode.VIEW);
		openServices();
	}

	private void savePatientNoSupportNetworkServicesInfo(boolean bNonePresent) 
	{
		PatientNoSupportNetworkServicesInfoVo voPatientNoSupportNetworkServicesInfo = form.getLocalContext().getPatientNoSupportNetworkServicesInfo();
		
		if(voPatientNoSupportNetworkServicesInfo==null)
			voPatientNoSupportNetworkServicesInfo = new PatientNoSupportNetworkServicesInfoVo();
			
		voPatientNoSupportNetworkServicesInfo.setPatient(form.getLocalContext().getPatientRef());
		
		if(bNonePresent)
			voPatientNoSupportNetworkServicesInfo.setSupportNetworkServiceStatus(PatientSupportNetworkStatus.NONEATPRESENT);
		else
			voPatientNoSupportNetworkServicesInfo.setSupportNetworkServiceStatus(PatientSupportNetworkStatus.HASSUPPORT);
		
		AuthoringInformationVo vo = new AuthoringInformationVo();
		vo.setAuthoringHcp((HcpLiteVo) domain.getHcpLiteUser());
		vo.setAuthoringDateTime(new DateTime());
		voPatientNoSupportNetworkServicesInfo.setAuthoringInformation(vo);
		
		try
		{
			voPatientNoSupportNetworkServicesInfo = domain.savePatientNoSupportNetworkServicesInfo(voPatientNoSupportNetworkServicesInfo);
			form.getLocalContext().setPatientNoSupportNetworkServicesInfo(voPatientNoSupportNetworkServicesInfo);
		} 
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		catch (UniqueKeyViolationException e)
		{
			engine.showMessage(e.getMessage());
		}
		catch (UnqViolationUncheckedException e)
		{
			openServices();
		}
		catch (DomainInterfaceException e)
		{
			engine.showMessage(e.getMessage());
		}	
	}

	@Override
	protected void onBtnSaveServicesClick() throws PresentationLogicException 
	{
		//WDEV-17337
		form.getLocalContext().setSelectedEvent(EdAssessment_CustomControlsEvents.SAVE);
		form.fireCustomControlValueChanged();
		
		if(form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().isVisible() 
			&& form.lyrSupportServices().tabPageServices().chkNoneAtPresentSer().getValue())
		{
			savePatientNoSupportNetworkServicesInfo(true);
			openServices();
			return;
		}
		
		if (saveService(null))
			openServices();
	}

	@Override
	protected void onQmbHcpNameValueChanged() throws PresentationLogicException 
	{
		form.getGlobalContext().COE.setSupportNetworkSelectedLocation(null);
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().clear();
		loadLocationsForMos(false);
	}

	private boolean isOtherDiscipline(HcpDisType disType)
	{
		return disType != null && disType.equals(HcpDisType.OTHER);
	}

	private boolean isHcpType(Hcp voHcpResult)
	{
		if (voHcpResult == null)
			return false;
		HcpDisType hcpType = form.lyrSupportServices().tabPageProf().cmbProfessional().getValue();
		HcpDisType hcpSubType = form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue();
		// Don't check "Other Discipline"
		if (hcpType != null && isOtherDiscipline(hcpType) == false)
		{
			if (hcpSubType != null && voHcpResult != null && voHcpResult.getID_HcpIsNotNull())
			{
				HcpFilter filter = new HcpFilter();
				filter.setID_Hcp(voHcpResult.getID_Hcp());
				Hcp voHcp = domain.getHcp(filter);
				if (voHcp != null)
				{
					if (voHcp instanceof NurseVo)
					{
						if (hcpSubType.equals(((NurseVo) voHcp).getNurseType()))
							return true;
					}
					if (voHcp instanceof MedicVo)
					{
						if (hcpSubType.equals(((MedicVo) voHcp).getMedicType()))
							return true;
					}
					if (voHcp instanceof TherapistVo)
					{
						if (hcpSubType.equals(((TherapistVo) voHcp).getTherapistType()))
							return true;
					}

					return false;
				}
			}
		}

		return true;
	}

	@Override
	protected void onQmbHcpNameTextSubmited(String value) throws PresentationLogicException 
	{
		form.lyrSupportServices().tabPageProf().qmbHcpName().clear();
		form.lyrSupportServices().tabPageProf().cmbLocationHcp().clear(); //WDEV-17750
		
		MemberOfStaffShortVo filter = new MemberOfStaffShortVo();
		PersonName name = new PersonName();
		name.setSurname(value);

		Hcp voHcp = new Hcp();
		HcpDisType disType = form.lyrSupportServices().tabPageProf().cmbProfessional().getValue();
		if (isOtherDiscipline(disType))
			disType = form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue();
		voHcp.setHcpType(disType);
		voHcp.setQueryName(name);
		filter.setName(name);
		filter.setIsActive(Boolean.TRUE);
		filter.setHcp(voHcp);

		MemberOfStaffShortVoCollection mosColl = domain.listMembersOfStaffWithPrimaryLocations(filter,form.lyrSupportServices().tabPageProf().cmbHcpSubType().getValue());	

		for (int i = 0; i < mosColl.size(); i++)
		{
			MemberOfStaffShortVo voMOSResult = new MemberOfStaffShortVo();
			Hcp voHcpResult = new Hcp();

			voMOSResult = mosColl.get(i);
			voHcpResult = voMOSResult.getHcp();
			if (isHcpType(voHcpResult))
				form.lyrSupportServices().tabPageProf().qmbHcpName().newRow(voHcpResult, voHcpResult.getName().toString());
		}
		int size = form.lyrSupportServices().tabPageProf().qmbHcpName().getValues().size();
		if (size == 1)
		{
			Hcp voHcpResult = (Hcp) form.lyrSupportServices().tabPageProf().qmbHcpName().getValues().get(0);
			form.lyrSupportServices().tabPageProf().qmbHcpName().setValue(voHcpResult);
			onQmbHcpNameValueChanged();
		}
		else if (size > 1)
		{
			form.lyrSupportServices().tabPageProf().qmbHcpName().showOpened();
		}
	}

	@Override
	protected void onBtnProfEditClick() throws PresentationLogicException
	{
		updateProfessionalInstance();
	}

	@Override
	protected void onBtnProfNewClick() throws PresentationLogicException
	{
		newProfessionalInstance();
	}

	@Override
	protected void onBtnServEditClick() throws PresentationLogicException
	{
		updateServicesInstance();
	}

	@Override
	protected void onBtnServNewClick() throws PresentationLogicException
	{
		newServicesInstance();
	}

	@Override
	protected void onBtnFamNewClick() throws PresentationLogicException
	{
		newFamilyInstance();
	}

	@Override
	protected void onBtnFamEditClick() throws PresentationLogicException
	{
		updateFamilyInstance();
	}

	//WDEV-17337
	public EdAssessment_CustomControlsEvents getSelectedEvent()
	{
		return form.getLocalContext().getSelectedEvent();
	}
	
	//WDEV-17337
	public void resetSelectedEvent()
	{
		form.getLocalContext().setSelectedEvent(null);
	}
}
