//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 4785.23502)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.emergency.forms.edassessmentdialog;

import ims.configuration.gen.ConfigFlag;
import ims.emergency.vo.TrackingForClinicianWorklistAndTriageVo;
import ims.emergency.vo.enums.EDAssessmentComponent;
import ims.framework.controls.Timer;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.FormOpenException;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		initializeTimer();//WDEV-17337
		form.btnClose().setImage(form.getImages().Emergency.CORECTNOTE16);
		if (args != null && args.length == 2 && args[0] != null && args[1] != null && args[0] instanceof Integer && args[1] instanceof TrackingForClinicianWorklistAndTriageVo )
		{
			form.ccNewTriagecc().initialization((Integer)args[0], (TrackingForClinicianWorklistAndTriageVo)args[1],null);
						
		}
		else if (args != null && args.length == 1 && args[0] != null && args[0] instanceof Integer)
		{
			
			form.ccNewTriagecc().initialization((Integer)args[0], null,null);
			
		}
		else 
		{
			
			throw new FormOpenException("Error: The Dialog is not opened properly");
			
		}
		
	}
	
	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getTimers().gettimerEdAttendanceDetails().setEnabled(false);//WDEV-17337
		engine.close(DialogResult.CANCEL);
	}
	
	protected void onCcNewTriageccValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		//WDEV-17337
		if (form.ccNewTriagecc().getSelectedEvent()!=null )
		{
			form.getTimers().gettimerEdAttendanceDetails().setEnabled(EDAssessmentComponent.START_TIMER.equals(form.ccNewTriagecc().getSelectedEvent()));//WDEV-17337
			form.ccNewTriagecc().clearSelectedEvent();
		}
	}
	
	//WDEV-17337
	@Override
	protected void onTimer(Timer timer) throws PresentationLogicException
	{
		form.ccNewTriagecc().refreshOtherDetails();
		
	}
	//WDEV-17337
	private void initializeTimer()
	{	
		if(ConfigFlag.UI.ED_ATTENDANCE_DETAILS_TIMER_INTERVAL.getValue() > 0)
		{
			form.getTimers().gettimerEdAttendanceDetails().setInterval(ConfigFlag.UI.ED_ATTENDANCE_DETAILS_TIMER_INTERVAL.getValue());
			form.getTimers().gettimerEdAttendanceDetails().setEnabled(true);
		}
	}
}
