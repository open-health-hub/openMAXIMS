//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.forms.emergencyattendancedetailscc;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbDepartmentTypeLookup();
	abstract protected void defaultcmbDepartmentTypeLookupValue();
	abstract protected void bindcmbInterpreterRequiredLookup();
	abstract protected void defaultcmbInterpreterRequiredLookupValue();
	abstract protected void bindcmbPatPrefLanguageLookup();
	abstract protected void defaultcmbPatPrefLanguageLookupValue();
	abstract protected void bindcmbEDConsultantLookup();
	abstract protected void defaultcmbEDConsultantLookupValue();
	abstract protected void bindcmbAttendanceTypeLookup();
	abstract protected void defaultcmbAttendanceTypeLookupValue();
	abstract protected void bindcmbUrgencyLevelLookup();
	abstract protected void defaultcmbUrgencyLevelLookupValue();
	abstract protected void bindcmbTriageCategoryLookup();
	abstract protected void defaultcmbTriageCategoryLookupValue();
	abstract protected void bindcmbOccupationStatusLookup();
	abstract protected void defaultcmbOccupationStatusLookupValue();
	abstract protected void bindcmbOcupationLookup();
	abstract protected void defaultcmbOcupationLookupValue();
	abstract protected void bindcmbSchoolLookup();
	abstract protected void defaultcmbSchoolLookupValue();
	abstract protected void bindcmbIncidentLocationLookup();
	abstract protected void defaultcmbIncidentLocationLookupValue();
	abstract protected void bindcmbAccompaniedByLookup();
	abstract protected void defaultcmbAccompaniedByLookupValue();
	abstract protected void bindcmbModeOfArrivalLookup();
	abstract protected void defaultcmbModeOfArrivalLookupValue();
	abstract protected void bindcmbSourceOfReferralLookup();
	abstract protected void defaultcmbSourceOfReferralLookupValue();
	abstract protected void bindcmbPresComplaintLookup();
	abstract protected void defaultcmbPresComplaintLookupValue();
	abstract protected void bindcmbPatientCategoryLookup();
	abstract protected void defaultcmbPatientCategoryLookupValue();
	abstract protected void bindcmbOutcomeLookup();
	abstract protected void defaultcmbOutcomeLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSkippedTriageClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbDepartmentTypeValueSet(Object value);
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbInterpreterRequiredValueSet(Object value);
	abstract protected void oncmbPatPrefLanguageValueSet(Object value);
	abstract protected void onBtnSpecialInterestClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbEDConsultantValueSet(Object value);
	abstract protected void oncmbAttendanceTypeValueSet(Object value);
	abstract protected void oncmbUrgencyLevelValueSet(Object value);
	abstract protected void onBtnTIIGClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTriageCategoryValueSet(Object value);
	abstract protected void oncmbOccupationStatusValueSet(Object value);
	abstract protected void oncmbOcupationValueSet(Object value);
	abstract protected void oncmbSchoolValueSet(Object value);
	abstract protected void oncmbIncidentLocationValueSet(Object value);
	abstract protected void onCmbIncidentLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbLocDetailsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbReferralGPClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtimArrivalValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbAccompaniedByValueSet(Object value);
	abstract protected void oncmbModeOfArrivalValueSet(Object value);
	abstract protected void onCmbModeOfArrivalValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSourceOfReferralValueSet(Object value);
	abstract protected void onCmbSourceOfReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPresComplaintValueSet(Object value);
	abstract protected void onCmbPresComplaintValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPatientCategoryValueSet(Object value);
	abstract protected void onCmbPatientCategoryValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroupCategoryValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbOutcomeValueSet(Object value);
	abstract protected void onBtnRTAClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnRTA1Click() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnSkippedTriage().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSkippedTriageClick();
			}
		});
		this.form.cmbDepartmentType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDepartmentTypeValueSet(value);
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.cmbInterpreterRequired().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbInterpreterRequiredValueSet(value);
			}
		});
		this.form.cmbPatPrefLanguage().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatPrefLanguageValueSet(value);
			}
		});
		this.form.btnSpecialInterest().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSpecialInterestClick();
			}
		});
		this.form.cmbEDConsultant().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbEDConsultantValueSet(value);
			}
		});
		this.form.cmbAttendanceType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAttendanceTypeValueSet(value);
			}
		});
		this.form.cmbUrgencyLevel().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUrgencyLevelValueSet(value);
			}
		});
		this.form.btnTIIG().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnTIIGClick();
			}
		});
		this.form.cmbTriageCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTriageCategoryValueSet(value);
			}
		});
		this.form.cmbOccupationStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOccupationStatusValueSet(value);
			}
		});
		this.form.cmbOcupation().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOcupationValueSet(value);
			}
		});
		this.form.cmbSchool().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSchoolValueSet(value);
			}
		});
		this.form.cmbIncidentLocation().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbIncidentLocationValueSet(value);
			}
		});
		this.form.cmbIncidentLocation().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbIncidentLocationValueChanged();
			}
		});
		this.form.imbLocDetails().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbLocDetailsClick();
			}
		});
		this.form.imbReferralGP().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbReferralGPClick();
			}
		});
		this.form.dtimArrival().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtimArrivalValueChanged();
			}
		});
		this.form.cmbAccompaniedBy().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbAccompaniedByValueSet(value);
			}
		});
		this.form.cmbModeOfArrival().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbModeOfArrivalValueSet(value);
			}
		});
		this.form.cmbModeOfArrival().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbModeOfArrivalValueChanged();
			}
		});
		this.form.cmbSourceOfReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfReferralValueSet(value);
			}
		});
		this.form.cmbSourceOfReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSourceOfReferralValueChanged();
			}
		});
		this.form.cmbPresComplaint().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPresComplaintValueSet(value);
			}
		});
		this.form.cmbPresComplaint().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbPresComplaintValueChanged();
			}
		});
		this.form.cmbPatientCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatientCategoryValueSet(value);
			}
		});
		this.form.cmbPatientCategory().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbPatientCategoryValueChanged();
			}
		});
		this.form.GroupCategory().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupCategoryValueChanged();
			}
		});
		this.form.cmbOutcome().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbOutcomeValueSet(value);
			}
		});
		this.form.btnRTA().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnRTAClick();
			}
		});
		this.form.btnRTA1().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnRTA1Click();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbDepartmentTypeLookup();
		bindcmbInterpreterRequiredLookup();
		bindcmbPatPrefLanguageLookup();
		bindcmbEDConsultantLookup();
		bindcmbAttendanceTypeLookup();
		bindcmbUrgencyLevelLookup();
		bindcmbTriageCategoryLookup();
		bindcmbOccupationStatusLookup();
		bindcmbOcupationLookup();
		bindcmbSchoolLookup();
		bindcmbIncidentLocationLookup();
		bindcmbAccompaniedByLookup();
		bindcmbModeOfArrivalLookup();
		bindcmbSourceOfReferralLookup();
		bindcmbPresComplaintLookup();
		bindcmbPatientCategoryLookup();
		bindcmbOutcomeLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbDepartmentTypeLookup();
		bindcmbInterpreterRequiredLookup();
		bindcmbPatPrefLanguageLookup();
		bindcmbEDConsultantLookup();
		bindcmbAttendanceTypeLookup();
		bindcmbUrgencyLevelLookup();
		bindcmbTriageCategoryLookup();
		bindcmbOccupationStatusLookup();
		bindcmbOcupationLookup();
		bindcmbSchoolLookup();
		bindcmbIncidentLocationLookup();
		bindcmbAccompaniedByLookup();
		bindcmbModeOfArrivalLookup();
		bindcmbSourceOfReferralLookup();
		bindcmbPresComplaintLookup();
		bindcmbPatientCategoryLookup();
		bindcmbOutcomeLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbDepartmentTypeLookupValue();
		defaultcmbInterpreterRequiredLookupValue();
		defaultcmbPatPrefLanguageLookupValue();
		defaultcmbEDConsultantLookupValue();
		defaultcmbAttendanceTypeLookupValue();
		defaultcmbUrgencyLevelLookupValue();
		defaultcmbTriageCategoryLookupValue();
		defaultcmbOccupationStatusLookupValue();
		defaultcmbOcupationLookupValue();
		defaultcmbSchoolLookupValue();
		defaultcmbIncidentLocationLookupValue();
		defaultcmbAccompaniedByLookupValue();
		defaultcmbModeOfArrivalLookupValue();
		defaultcmbSourceOfReferralLookupValue();
		defaultcmbPresComplaintLookupValue();
		defaultcmbPatientCategoryLookupValue();
		defaultcmbOutcomeLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
