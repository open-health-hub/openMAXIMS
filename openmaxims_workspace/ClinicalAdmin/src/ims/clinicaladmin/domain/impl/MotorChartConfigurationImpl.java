//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.71 build 3631.21133)
// Copyright (C) 1995-2009 IMS MAXIMS. All rights reserved.

package ims.clinicaladmin.domain.impl;

import ims.clinicaladmin.domain.base.impl.BaseMotorChartConfigurationImpl;
import ims.core.clinical.domain.objects.MotorChartAreaDetail;
import ims.core.clinical.vo.MotorChartAreaDetailRefVo;
import ims.core.vo.MotorChartAreaDetailVo;
import ims.core.vo.domain.MotorChartAreaDetailVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.DomainRuntimeException;

public class MotorChartConfigurationImpl extends BaseMotorChartConfigurationImpl
{

	private static final long serialVersionUID = 1L;

	public ims.core.vo.MotorChartAreaDetailVoCollection listConfiguration() throws ims.domain.exceptions.DomainInterfaceException
	{
		String hqlQuery = "from MotorChartAreaDetail as mc";
		
		return MotorChartAreaDetailVoAssembler.createMotorChartAreaDetailVoCollectionFromMotorChartAreaDetail(getDomainFactory().find(hqlQuery));
	}

	public ims.core.vo.MotorChartAreaDetailVoCollection saveConfiguration(ims.core.vo.MotorChartAreaDetailVoCollection configuration) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException
	{
		if (configuration == null)
			throw new DomainInterfaceException("Configuration is empty");
		
		if (!configuration.isValidated())
			throw new DomainRuntimeException("Motor Chart Area Configuration not validated");
		
		DomainFactory domainFactory = getDomainFactory();
		
		for (int i = 0; i < configuration.size(); i++)
		{
			domainFactory.save(MotorChartAreaDetailVoAssembler.extractMotorChartAreaDetail(domainFactory, configuration.get(i)));
		}
	
		return configuration;
	}

	public MotorChartAreaDetailVo getMotorChartArea(MotorChartAreaDetailRefVo motorChartArea) throws DomainInterfaceException
	{
		if (motorChartArea == null || !motorChartArea.getID_MotorChartAreaDetailIsNotNull())
			return null;
		
		return MotorChartAreaDetailVoAssembler.create((MotorChartAreaDetail) getDomainFactory().getDomainObject(MotorChartAreaDetail.class, motorChartArea.getID_MotorChartAreaDetail()));
	}
}
