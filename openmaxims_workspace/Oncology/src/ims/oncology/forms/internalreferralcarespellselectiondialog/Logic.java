//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.71 build 3917.16721)
// Copyright (C) 1995-2010 IMS MAXIMS. All rights reserved.

package ims.oncology.forms.internalreferralcarespellselectiondialog;

import ims.core.vo.EpisodeofCareShortVoCollection;
import ims.framework.enumerations.DialogResult;
import ims.oncology.forms.internalreferralcarespellselectiondialog.GenForm.grdCareSpellsRow;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Oncology.setEpisodeOfCareDate(null);
		form.getGlobalContext().Clinical.PatientSummary.setEpisodeOfCare(null);

		form.btnSave().setEnabled(false);
		
		open();
	}

	private void open() 
	{
		EpisodeofCareShortVoCollection voColl = domain.listEpisodeOfCare(form.getGlobalContext().Core.getPatientShort());
		for(int i = 0 ; voColl != null && i < voColl.size() ; i++)
		{
			grdCareSpellsRow row = form.grdCareSpells().getRows().newRow();
			
			row.setColDate(voColl.get(i).getStartDateIsNotNull() ? voColl.get(i).getStartDate().toString() : "");
			row.setColSpec(voColl.get(i).getSpecialtyIsNotNull() ? voColl.get(i).getSpecialty().getText() : "");
			row.setColHCP(voColl.get(i).getResponsibleHCPIsNotNull() ? voColl.get(i).getResponsibleHCP().getName().toString() : "");
			row.setColEndDate(voColl.get(i).getEndDateIsNotNull() ? voColl.get(i).getEndDate().toString() : "");
			
			row.setValue(voColl.get(i));
		}
	}

	@Override
	protected void onGrdCareSpellsSelectionChanged()
	{
		form.btnSave().setEnabled(true);
	}
	
	@Override
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Oncology.setEpisodeOfCareDate(form.grdCareSpells().getValue().getStartDate());
		form.getGlobalContext().Clinical.PatientSummary.setEpisodeOfCare(form.grdCareSpells().getValue());
		
		engine.close(DialogResult.OK);
	}
	
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Oncology.setEpisodeOfCareDate(null);
		form.getGlobalContext().Clinical.PatientSummary.setEpisodeOfCare(null);

		engine.close(DialogResult.CANCEL);
	}
}
