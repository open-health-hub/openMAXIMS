//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.oncology.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseTumourDetailsImpl extends DomainImpl implements ims.oncology.domain.TumourDetails, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistPrimaryTumours(ims.core.admin.vo.EpisodeOfCareRefVo voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTumourDetails(ims.oncology.vo.PrimaryTumourDetailsRefVo tumourDetails)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveTumourDetails(ims.oncology.vo.PrimaryTumourDetailsVo tumourDetails, ims.oncology.vo.PrimaryTumourDetailsRefVo currentEditableRecord)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientDiagnosis(ims.core.clinical.vo.PatientDiagnosisRefVo diagnosis)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTumourGroups(ims.oncology.configuration.vo.TNMStagingClassificationVersionRefVo version, ims.core.vo.lookups.Specialty speciality)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTumourGroupList(ims.oncology.configuration.vo.TumourGroupRefVo voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTumourSiteList(ims.oncology.configuration.vo.TumourSiteRefVo voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetUserAssessment(ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationEpisodeOfCare(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo, Boolean isCancerDiagnosis)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistTumourGroupForSpecialty(ims.core.vo.lookups.Specialty specialty)
	{
	}

	@SuppressWarnings("unused")
	public void validatecountForGroupsConfiguredForEpisodeOfCareSpecialty(ims.core.vo.lookups.Specialty specialty)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOverall(ims.oncology.configuration.vo.TumourGroupRefVo group, ims.clinicaladmin.vo.TumourSiteListForPrimaryTumourDetailsVo site, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo tnmTypeT, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo tnmTypeN, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo tnmTypeM, ims.oncology.configuration.vo.TumourHistologyRefVo histology, ims.oncology.configuration.vo.HistopathologicGradeRefVo differentation, Boolean over45, ims.oncology.configuration.vo.TumourSerumMarkerRefVo serum)
	{
		if(tnmTypeT == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'tnmTypeT' of type 'ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo' cannot be null.");
		if(tnmTypeN == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'tnmTypeN' of type 'ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo' cannot be null.");
		if(tnmTypeM == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'tnmTypeM' of type 'ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.oncology.vo.PrimaryTumourDetailsVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOverallSiteSpecific(ims.oncology.configuration.vo.TumourGroupRefVo group, ims.clinicaladmin.vo.TumourSiteListForPrimaryTumourDetailsVo site, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo tnmTypeT, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo tnmTypeN, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo tnmTypeM)
	{
		if(tnmTypeT == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'tnmTypeT' of type 'ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo' cannot be null.");
		if(tnmTypeN == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'tnmTypeN' of type 'ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo' cannot be null.");
		if(tnmTypeM == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'tnmTypeM' of type 'ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetStagingClasificationCollection(ims.oncology.vo.TumourGroupClassificationVoCollection voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPrimaryTumourToSetAsNotCurrent(ims.core.admin.vo.EpisodeOfCareRefVo voEpisodeOfCareRef, ims.oncology.vo.PrimaryTumourDetailsRefVo voRefOfRecordToExclude)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePrimaryTumourToSetAsNotCurrent(ims.oncology.vo.PrimaryTumourDetailsWithIsCurrentVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOverallPrognostic(ims.oncology.configuration.vo.TumourGroupRefVo group, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo valueT, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo valueN, ims.oncology.configuration.vo.TumourGroupSiteTNMValueRefVo valueM, ims.oncology.configuration.vo.TumourHistologyRefVo histologyType, ims.oncology.configuration.vo.HistopathologicGradeRefVo histopathologicGrade, ims.oncology.configuration.vo.PrognosticLocationConfigRefVo location, ims.oncology.configuration.vo.PrognosticRiskConfigurationRefVo risk, ims.oncology.configuration.vo.PSAConfigRefVo psa, ims.oncology.configuration.vo.GleasonConfigRefVo gleason)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPIDDiagnosisInfo(ims.core.admin.vo.CareContextRefVo careContextRefVo, ims.core.admin.vo.EpisodeOfCareRefVo episodeRefVo)
	{
	}
}
