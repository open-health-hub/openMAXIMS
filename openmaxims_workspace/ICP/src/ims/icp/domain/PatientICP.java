//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.icp.domain;

// Generated from form domain impl
public interface PatientICP extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	/**
	* createPatientICP() will be kicked off by a rule
	*/
	public void createPatientICP(ims.core.clinical.vo.PatientProcedureRefVo patProc) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* listActions
	*/
	public ims.icp.vo.PatientICPActionLiteVoCollection listActions(ims.icps.instantiation.vo.PatientICPRefVo patientICPRef);

	// Generated from form domain interface definition
	/**
	* addActionStatus
	*/
	public void addActionStatus(ims.icps.instantiation.vo.PatientICPActionRefVo actionRef, ims.icp.vo.lookups.ICPActionStatus status) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.assessment.vo.UserAssessmentVo getStructuredAssessment(ims.assessment.configuration.vo.UserAssessmentRefVo assessmentRef);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentVo getPatientAssessment(ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentVo savePatientAssessment(ims.assessment.vo.PatientAssessmentVo patientAssessment) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentListVoCollection listPatientAssessments(ims.core.admin.vo.CareContextRefVo careContext, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentListVoCollection listPatientAssessments(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentVo getPatientAssessment(ims.assessment.instantiation.vo.PatientAssessmentRefVo patientAssessment);

	// Generated from form domain interface definition
	public ims.assessment.vo.GraphicAssessmentVo getGraphicalAssessment(ims.assessment.configuration.vo.GraphicAssessmentRefVo assessmentRef);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentListVoCollection listPatientAssessments(ims.core.admin.vo.CareContextRefVo careContext, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentListVoCollection listPatientAssessments(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment);

	// Generated from form domain interface definition
	public ims.assessment.vo.PatientAssessmentVo getPatientAssessment(ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicAssessment);

	// Generated from form domain interface definition
	/**
	* get Last Structured Assessment
	*/
	public ims.assessment.vo.PatientAssessmentListVo getLastStructuredAssessment(ims.core.vo.lookups.UserDefinedAssessmentType type, ims.core.admin.vo.CareContextRefVo careContext);

	// Generated from form domain interface definition
	/**
	* get Clinical Contact Short
	*/
	public ims.core.vo.ClinicalContactShortVo getClinicalContactShort(ims.core.admin.vo.ClinicalContactRefVo clinicacalContactRefVo);

	// Generated from form domain interface definition
	/**
	* get Care Context Short
	*/
	public ims.core.vo.CareContextShortVo getCareContextShort(ims.core.admin.vo.CareContextRefVo voCareContextRef);

	// Generated from form domain interface definition
	/**
	* getCareContextShortFromPatientICP
	*/
	public ims.core.vo.CareContextShortVo getCareContextShortFromPatientICP(ims.icps.instantiation.vo.PatientICPRefVo patientICP) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	/**
	* getPatientICPShort
	*/
	public ims.icp.vo.PatientICPShortVo getPatientICPShort(ims.icps.instantiation.vo.PatientICPRefVo patientICPRef) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.icp.vo.ICPConfigurationDisplayVo getConfigurationICP(ims.icps.configuration.vo.ICPRefVo icpRef) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	/**
	* getCurrentUserDiscipline
	*/
	public ims.core.vo.lookups.HcpDisType getCurrentUserDiscipline();

	// Generated from form domain interface definition
	/**
	* getLinkedReportName
	*/
	public String getLinkedReportName(ims.vo.ValueObjectRef ref);

	// Generated from form domain interface definition
	/**
	* getICPInfo
	*/
	public ims.icp.vo.ICPLiteVo getICPInfo(ims.icps.instantiation.vo.PatientICPRefVo patientICPRef) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralVo getCatsReferralRefVoForCareContext(ims.core.admin.vo.CareContextRefVo voCarecontext) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.icp.vo.PatientICPActionFullVo getPatientICPActionFull(ims.icps.instantiation.vo.PatientICPActionRefVo patientICPActionRef);

	// Generated from form domain interface definition
	public ims.icp.vo.PatientICPActionFullVoCollection getLinkedPatientICPActions(ims.icp.vo.PatientICPActionFullVo patientAction);

	// Generated from form domain interface definition
	/**
	* addActionStatus
	*/
	public void addActionStatus(ims.icps.instantiation.vo.PatientICPActionRefVo actionRef, ims.icp.vo.lookups.ICPActionStatus status, Boolean hasCountersigningRight) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.icp.vo.PatientICPViewVo getPatientICPViewVo(ims.icps.instantiation.vo.PatientICPRefVo patICPRef);

	// Generated from form domain interface definition
	public ims.icp.vo.PatientICPActionLiteVo getPatientICPActionLiteVo(ims.icps.instantiation.vo.PatientICPActionRefVo ref);

	// Generated from form domain interface definition
	public Boolean isICPCompleted(ims.icps.instantiation.vo.PatientICPRefVo patICP);

	// Generated from form domain interface definition
	/**
	* Function used to inactivate selected Stage or Phase.
	*/
	public ims.icps.instantiation.vo.PatientICPRefVo inactivateStagePhase(ims.icps.instantiation.vo.PatientICPRefVo patientICP, ims.vo.ValueObject stagePhaseHolder) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;
}
