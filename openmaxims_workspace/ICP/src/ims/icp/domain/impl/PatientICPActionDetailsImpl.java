//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 4342.23748)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.icp.domain.impl;

import java.util.ArrayList;

import ims.icp.domain.base.impl.BasePatientICPActionDetailsImpl;
import ims.icp.vo.PatientICPActionLiteVo;
import ims.icp.vo.PatientICPActionLiteVoCollection;
import ims.icp.vo.PatientICP_CompletionInfoVo;
import ims.icp.vo.domain.PatientICPActionLiteVoAssembler;
import ims.icp.vo.domain.PatientICP_CompletionInfoVoAssembler;
import ims.icps.instantiation.domain.objects.PatientICP;
import ims.icps.instantiation.domain.objects.PatientICPAction;
import ims.icps.instantiation.vo.PatientICPActionRefVo;
import ims.icps.instantiation.vo.PatientICPRefVo;

public class PatientICPActionDetailsImpl extends BasePatientICPActionDetailsImpl
{

	private static final long serialVersionUID = 1L;

	public PatientICP_CompletionInfoVo getPatientICP(PatientICPRefVo patientICP)
	{
		if (patientICP == null || patientICP.getID_PatientICP() == null)
			return null;
		
		return PatientICP_CompletionInfoVoAssembler.create((PatientICP) getDomainFactory().getDomainObject(PatientICP.class, patientICP.getID_PatientICP()));
	}


	public PatientICPActionLiteVoCollection getLinkedActions(PatientICPRefVo patientICP, PatientICPActionRefVo patientICPAction)
	{
		if (patientICPAction == null || patientICPAction.getID_PatientICPAction() == null)
			return null;
		
		StringBuilder hqlString = new StringBuilder();
		
		hqlString.append("SELECT patientAction FROM PatientICPAction AS patientAction, PatientICPAction AS givenAction LEFT JOIN givenAction.action AS action LEFT JOIN action.clinicalDetailActions AS linkedAction");
		hqlString.append(" WHERE patientAction.iCP.id = :ICP_ID AND patientAction.action.id = linkedAction.id AND givenAction.id = :GIVEN_ID order by patientAction.action.name");
		
		ArrayList<String> paramNames = new ArrayList<String>();
		ArrayList<Object> paramValues = new ArrayList<Object>();
		
		paramNames.add("ICP_ID");
		paramValues.add(patientICP.getID_PatientICP());
		
		paramNames.add("GIVEN_ID");
		paramValues.add(patientICPAction.getID_PatientICPAction());
		
		return PatientICPActionLiteVoAssembler.createPatientICPActionLiteVoCollectionFromPatientICPAction(getDomainFactory().find(hqlString.toString(), paramNames, paramValues));
	}


	public PatientICPActionLiteVo getPatietICPAction(PatientICPActionRefVo action)
	{
		if (action == null || action.getID_PatientICPAction() == null)
			return null;
		
		return PatientICPActionLiteVoAssembler.create((PatientICPAction) getDomainFactory().getDomainObject(PatientICPAction.class, action.getID_PatientICPAction()));
	}
}
