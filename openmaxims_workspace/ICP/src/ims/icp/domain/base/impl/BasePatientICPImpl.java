//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.icp.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BasePatientICPImpl extends DomainImpl implements ims.icp.domain.PatientICP, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatecreatePatientICP(ims.core.clinical.vo.PatientProcedureRefVo patProc)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActions(ims.icps.instantiation.vo.PatientICPRefVo patientICPRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddActionStatus(ims.icps.instantiation.vo.PatientICPActionRefVo actionRef, ims.icp.vo.lookups.ICPActionStatus status)
	{
	}

	@SuppressWarnings("unused")
	public void validategetStructuredAssessment(ims.assessment.configuration.vo.UserAssessmentRefVo assessmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessment(ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientAssessment(ims.assessment.vo.PatientAssessmentVo patientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.CareContextRefVo careContext, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.assessment.configuration.vo.UserAssessmentRefVo userAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessment(ims.assessment.instantiation.vo.PatientAssessmentRefVo patientAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetGraphicalAssessment(ims.assessment.configuration.vo.GraphicAssessmentRefVo assessmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.CareContextRefVo careContext, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientAssessments(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCare, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicalAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientAssessment(ims.core.admin.vo.ClinicalContactRefVo clinicalContact, ims.assessment.configuration.vo.GraphicAssessmentRefVo graphicAssessment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLastStructuredAssessment(ims.core.vo.lookups.UserDefinedAssessmentType type, ims.core.admin.vo.CareContextRefVo careContext)
	{
	}

	@SuppressWarnings("unused")
	public void validategetClinicalContactShort(ims.core.admin.vo.ClinicalContactRefVo clinicacalContactRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextShort(ims.core.admin.vo.CareContextRefVo voCareContextRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextShortFromPatientICP(ims.icps.instantiation.vo.PatientICPRefVo patientICP)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientICPShort(ims.icps.instantiation.vo.PatientICPRefVo patientICPRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetConfigurationICP(ims.icps.configuration.vo.ICPRefVo icpRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLinkedReportName(ims.vo.ValueObjectRef ref)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICPInfo(ims.icps.instantiation.vo.PatientICPRefVo patientICPRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralRefVoForCareContext(ims.core.admin.vo.CareContextRefVo voCarecontext)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientICPActionFull(ims.icps.instantiation.vo.PatientICPActionRefVo patientICPActionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLinkedPatientICPActions(ims.icp.vo.PatientICPActionFullVo patientAction)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddActionStatus(ims.icps.instantiation.vo.PatientICPActionRefVo actionRef, ims.icp.vo.lookups.ICPActionStatus status, Boolean hasCountersigningRight)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientICPViewVo(ims.icps.instantiation.vo.PatientICPRefVo patICPRef)
	{
		if(patICPRef == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'patICPRef' of type 'ims.icps.instantiation.vo.PatientICPRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPatientICPActionLiteVo(ims.icps.instantiation.vo.PatientICPActionRefVo ref)
	{
		if(ref == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'ref' of type 'ims.icps.instantiation.vo.PatientICPActionRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validateisICPCompleted(ims.icps.instantiation.vo.PatientICPRefVo patICP)
	{
		if(patICP == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'patICP' of type 'ims.icps.instantiation.vo.PatientICPRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validateinactivateStagePhase(ims.icps.instantiation.vo.PatientICPRefVo patientICP, ims.vo.ValueObject stagePhaseHolder)
	{
	}
}
