//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.icp.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseICPConfigImpl extends DomainImpl implements ims.icp.domain.ICPConfig, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	public final boolean isMethodTransactional(String methodName)
	{
		if(methodName.equals("inactivateItem"))
			return true;
		return false;
	}
	@SuppressWarnings("unused")
	public void validategetDisplayICP(ims.icps.configuration.vo.ICPRefVo icp)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistICP(String name, ims.core.vo.lookups.PreActiveActiveInactiveStatus status, ims.core.vo.lookups.ICPCategoryType category, ims.core.vo.lookups.Specialty specialty, ims.core.resource.people.vo.MemberOfStaffRefVo contactPerson, ims.framework.utils.Date creationDate)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistStages(ims.icps.configuration.vo.ICPRefVo icp)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPhases(ims.icps.configuration.vo.ICPStageRefVo icpStage)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActions(ims.icps.configuration.vo.ICPPhaseRefVo phase)
	{
	}

	@SuppressWarnings("unused")
	public void validategetItem(java.lang.Object item)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICP(ims.icps.configuration.vo.ICPRefVo icpRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetFullICP(ims.icps.configuration.vo.ICPRefVo icp)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICPStage(ims.icps.configuration.vo.ICPStageRefVo icpStageRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICPStageFull(ims.icps.configuration.vo.ICPStageRefVo stage)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICPPhase(ims.icps.configuration.vo.ICPPhaseRefVo icpPhaseRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICPPhaseFull(ims.icps.configuration.vo.ICPPhaseRefVo phase)
	{
	}

	@SuppressWarnings("unused")
	public void validategetICPAction(ims.icps.configuration.vo.ICPActionRefVo icpActionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(java.lang.Object item)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveICP(ims.icp.vo.ICPVo icp)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveFullICP(ims.icp.vo.ICPFullVo fullICP)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddStage(ims.icp.vo.ICPStageVo stage, ims.icp.vo.ICPShortVo icp)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddClonedStage(ims.icp.vo.ICPStageFullVo stage, ims.icp.vo.ICPShortVo icp)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveICPStage(ims.icp.vo.ICPStageVo icpStage)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddPhase(ims.icp.vo.ICPPhaseVo phase, ims.icp.vo.ICPStageShortVo stage)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddClonedPhase(ims.icp.vo.ICPPhaseFullVo phase, ims.icp.vo.ICPStageShortVo stage)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveICPPhase(ims.icp.vo.ICPPhaseVo icpPhase)
	{
	}

	@SuppressWarnings("unused")
	public void validateaddAction(ims.icp.vo.ICPActionShortVo action, ims.icp.vo.ICPPhaseShortVo phase)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveICPAction(ims.icp.vo.ICPActionShortVo icpAction)
	{
	}

	@SuppressWarnings("unused")
	public void validateinactivateItem(java.lang.Object item)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.icp.vo.ICPStageLiteVo stage1, ims.icp.vo.ICPStageLiteVo stage2)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.icp.vo.ICPPhaseLiteVo phase1, ims.icp.vo.ICPPhaseLiteVo phase2)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.icp.vo.ICPActionLiteVo action1, ims.icp.vo.ICPActionLiteVo action2)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedures(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistContactPersons(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosis(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProblems(String name)
	{
	}
}
