//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.icp.domain;

// Generated from form domain impl
public interface ICPConfig extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.icp.vo.ICPConfigurationDisplayVo getDisplayICP(ims.icps.configuration.vo.ICPRefVo icp);

	// Generated from form domain interface definition
	/**
	* Find ICPs based on criteria.
	*/
	public ims.icp.vo.ICPLiteVoCollection listICP(String name, ims.core.vo.lookups.PreActiveActiveInactiveStatus status, ims.core.vo.lookups.ICPCategoryType category, ims.core.vo.lookups.Specialty specialty, ims.core.resource.people.vo.MemberOfStaffRefVo contactPerson, ims.framework.utils.Date creationDate);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPStageLiteVoCollection listStages(ims.icps.configuration.vo.ICPRefVo icp);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPPhaseLiteVoCollection listPhases(ims.icps.configuration.vo.ICPStageRefVo icpStage);

	// Generated from form domain interface definition
	/**
	* Function used for listing ICP Action Lite collection
	*/
	public ims.icp.vo.ICPActionLiteVoCollection listActions(ims.icps.configuration.vo.ICPPhaseRefVo phase);

	// Generated from form domain interface definition
	public java.lang.Object getItem(java.lang.Object item);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPVo getICP(ims.icps.configuration.vo.ICPRefVo icpRef);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPFullVo getFullICP(ims.icps.configuration.vo.ICPRefVo icp);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPStageVo getICPStage(ims.icps.configuration.vo.ICPStageRefVo icpStageRef);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPStageFullVo getICPStageFull(ims.icps.configuration.vo.ICPStageRefVo stage);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPPhaseVo getICPPhase(ims.icps.configuration.vo.ICPPhaseRefVo icpPhaseRef);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPPhaseFullVo getICPPhaseFull(ims.icps.configuration.vo.ICPPhaseRefVo phase);

	// Generated from form domain interface definition
	public ims.icp.vo.ICPActionShortVo getICPAction(ims.icps.configuration.vo.ICPActionRefVo icpActionRef);

	// Generated from form domain interface definition
	/**
	* Function used to save an item (ICP, ICP Stage, ICP Phase, ICP Action)
	*/
	public java.lang.Object save(java.lang.Object item) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save an ICP
	*/
	public ims.icp.vo.ICPVo saveICP(ims.icp.vo.ICPVo icp) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save a full ICP VO - use only for cloning. VERY HIGH DATA / TIME consuming. ATTENTION WHEN USING.
	*/
	public ims.icp.vo.ICPVo saveFullICP(ims.icp.vo.ICPFullVo fullICP) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to add an ICP Stage to an ICP
	*/
	public ims.icp.vo.ICPStageVo addStage(ims.icp.vo.ICPStageVo stage, ims.icp.vo.ICPShortVo icp) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	public ims.icp.vo.ICPStageVo addClonedStage(ims.icp.vo.ICPStageFullVo stage, ims.icp.vo.ICPShortVo icp) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save an ICP Stage
	*/
	public ims.icp.vo.ICPStageVo saveICPStage(ims.icp.vo.ICPStageVo icpStage) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to add an ICP Phase to an ICP Stage
	*/
	public ims.icp.vo.ICPPhaseVo addPhase(ims.icp.vo.ICPPhaseVo phase, ims.icp.vo.ICPStageShortVo stage) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	public ims.icp.vo.ICPPhaseVo addClonedPhase(ims.icp.vo.ICPPhaseFullVo phase, ims.icp.vo.ICPStageShortVo stage) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save an ICP Phase
	*/
	public ims.icp.vo.ICPPhaseVo saveICPPhase(ims.icp.vo.ICPPhaseVo icpPhase) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used add an ICP Action to an ICP Phase
	*/
	public ims.icp.vo.ICPActionShortVo addAction(ims.icp.vo.ICPActionShortVo action, ims.icp.vo.ICPPhaseShortVo phase) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save ICP Action
	*/
	public ims.icp.vo.ICPActionShortVo saveICPAction(ims.icp.vo.ICPActionShortVo icpAction) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to inactivate items
	*/
	public java.lang.Object inactivateItem(java.lang.Object item) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save 2 ICPStages - when moving down or up a stage. Returns first parameter after saving
	*/
	public ims.icp.vo.ICPStageLiteVo save(ims.icp.vo.ICPStageLiteVo stage1, ims.icp.vo.ICPStageLiteVo stage2) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save 2 ICP Phases - used when moving up or down an ICP Phase
	*/
	public ims.icp.vo.ICPPhaseLiteVo save(ims.icp.vo.ICPPhaseLiteVo phase1, ims.icp.vo.ICPPhaseLiteVo phase2) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to save 2 ICP Action - used when moving up or down an ICP Action
	*/
	public ims.icp.vo.ICPActionLiteVo save(ims.icp.vo.ICPActionLiteVo action1, ims.icp.vo.ICPActionLiteVo action2) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Function used to retrieve the procedures from database.
	*/
	public ims.core.vo.ProcedureLiteVoCollection listProcedures(String name);

	// Generated from form domain interface definition
	/**
	* List all the members of staff matching the criteria.
	*/
	public ims.core.vo.MemberOfStaffLiteVoCollection listContactPersons(String name);

	// Generated from form domain interface definition
	/**
	* Retrieve all diagnosis from database.
	*/
	public ims.core.vo.DiagLiteVoCollection listDiagnosis(String name);

	// Generated from form domain interface definition
	public ims.clinical.vo.ClinicalProblemShortVoCollection listProblems(String name);
}
