//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.icp.forms.icpconfig;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode, ims.framework.interfaces.IClearInfo
{
	abstract protected void bindcmbSpecialityLookup();
	abstract protected void defaultcmbSpecialityLookupValue();
	abstract protected void bindcmbCategoryLookup();
	abstract protected void defaultcmbCategoryLookupValue();
	abstract protected void bindcmbStatusLookup();
	abstract protected void defaultcmbStatusLookupValue();
	abstract protected void bindcmbICPStatusLookup();
	abstract protected void defaultcmbICPStatusLookupValue();
	abstract protected void bindcmbICPCategoryLookup();
	abstract protected void defaultcmbICPCategoryLookupValue();
	abstract protected void bindcmbICPSpecialtyLookup();
	abstract protected void defaultcmbICPSpecialtyLookupValue();
	abstract protected void bindgrdStageRulescolCategoryLookup();
	abstract protected void bindcmbStageStatusLookup();
	abstract protected void defaultcmbStageStatusLookupValue();
	abstract protected void bindcmbPhaseStatusLookup();
	abstract protected void defaultcmbPhaseStatusLookupValue();
	abstract protected void bindgrdPhaseRulescolCategoryLookup();
	abstract protected void bindchklistActionDisciplineLookup();
	abstract protected void bindcmbActionLinkedTypeLookup();
	abstract protected void defaultcmbActionLinkedTypeLookupValue();
	abstract protected void bindcmbActionStatusLookup();
	abstract protected void defaultcmbActionStatusLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbContactPersonTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSpecialityValueSet(Object value);
	abstract protected void oncmbCategoryValueSet(Object value);
	abstract protected void oncmbStatusValueSet(Object value);
	abstract protected void onImbFindClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTreICPListTreeViewNodeExpandCollapse(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTreICPListTreeViewSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTreICPListTreeViewSelectionChanged(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbICPProblemTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdICPProceduresSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdICPProceduresSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdICPProceduresMutableComboBoxSelected(int column, GenForm.ctnConfigurationContainer.lyrICPTabsLayer.ICPContainer.grdICPProceduresRow row, Object value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdICPProceduresGridQueryComboBoxTextSubmited(int column, GenForm.ctnConfigurationContainer.lyrICPTabsLayer.ICPContainer.grdICPProceduresRow row, String text) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbICPStatusValueSet(Object value);
	abstract protected void oncmbICPCategoryValueSet(Object value);
	abstract protected void onQmbICPContactPersonTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbICPSpecialtyValueSet(Object value);
	abstract protected void onQmbICPDiagnosisTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdStageRulesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdStageRulesSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbStageStatusValueSet(Object value);
	abstract protected void oncmbPhaseStatusValueSet(Object value);
	abstract protected void onGrdPhaseRulesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPhaseRulesSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPhaseGoalsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPhaseGoalsSelectionCleared() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnLinkActionsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnActionBrowseLinkClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbActionLinkedTypeValueSet(Object value);
	abstract protected void onCmbActionLinkedTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbActionStatusValueSet(Object value);
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.qmbContactPerson().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbContactPersonTextSubmited(value);
			}
		});
		this.form.cmbSpeciality().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSpecialityValueSet(value);
			}
		});
		this.form.cmbCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCategoryValueSet(value);
			}
		});
		this.form.cmbStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStatusValueSet(value);
			}
		});
		this.form.imbFind().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbFindClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.treICPList().setTreeViewNodeExpandedCollapsedEvent(new TreeViewNodeExpandedCollapsed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException
			{
				onTreICPListTreeViewNodeExpandCollapse(node);
			}
		});
		this.form.treICPList().setTreeViewSelectionClearedEvent(new TreeViewSelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onTreICPListTreeViewSelectionCleared();
			}
		});
		this.form.treICPList().setTreeViewSelectionChangedEvent(new TreeViewSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException
			{
				onTreICPListTreeViewSelectionChanged(node);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrICPTabsICPActivated();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Stage().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrICPTabsStageActivated();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Phase().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrICPTabsPhaseActivated();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Action().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrICPTabsActionActivated();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().qmbICPProblem().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbICPProblemTextSubmited(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().grdICPProcedures().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdICPProceduresSelectionChanged();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().grdICPProcedures().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdICPProceduresSelectionCleared();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().grdICPProcedures().setGridMutableComboBoxSelectedEvent(new GridMutableComboBoxSelected()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, Object value) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdICPProceduresMutableComboBoxSelected(column, new GenForm.ctnConfigurationContainer.lyrICPTabsLayer.ICPContainer.grdICPProceduresRow(row), value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().grdICPProcedures().setGridQueryComboBoxTextSubmitedEvent(new GridQueryComboBoxTextSubmited()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column, ims.framework.controls.GridRow row, String text) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdICPProceduresGridQueryComboBoxTextSubmited(column, new GenForm.ctnConfigurationContainer.lyrICPTabsLayer.ICPContainer.grdICPProceduresRow(row), text);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().cmbICPStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbICPStatusValueSet(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().cmbICPCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbICPCategoryValueSet(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().qmbICPContactPerson().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbICPContactPersonTextSubmited(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().cmbICPSpecialty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbICPSpecialtyValueSet(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().ICP().qmbICPDiagnosis().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbICPDiagnosisTextSubmited(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Stage().grdStageRules().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdStageRulesSelectionChanged();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Stage().grdStageRules().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdStageRulesSelectionCleared();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Stage().cmbStageStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStageStatusValueSet(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Phase().cmbPhaseStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPhaseStatusValueSet(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Phase().grdPhaseRules().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPhaseRulesSelectionChanged();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Phase().grdPhaseRules().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPhaseRulesSelectionCleared();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Phase().grdPhaseGoals().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPhaseGoalsSelectionChanged();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Phase().grdPhaseGoals().setSelectionClearedEvent(new SelectionCleared()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPhaseGoalsSelectionCleared();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Action().btnLinkActions().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnLinkActionsClick();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Action().btnActionBrowseLink().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnActionBrowseLinkClick();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Action().cmbActionLinkedType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbActionLinkedTypeValueSet(value);
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Action().cmbActionLinkedType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbActionLinkedTypeValueChanged();
			}
		});
		this.form.ctnConfiguration().lyrICPTabs().Action().cmbActionStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbActionStatusValueSet(value);
			}
		});
		this.form.imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuNEWICPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.NEWICP, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuEDITICPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.EDITICP, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuCLONEICPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.CLONEICP, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuADDSTAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.ADDSTAGE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuEDITSTAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.EDITSTAGE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuCLONESTAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.CLONESTAGE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuREMOVESTAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.REMOVESTAGE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuADDPHASEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.ADDPHASE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuEDITPHASEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.EDITPHASE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuCLONEPHASEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.CLONEPHASE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuREMOVEPHASEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.REMOVEPHASE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuADDACTIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.ADDACTION, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuEDITACTIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.EDITACTION, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuREMOVEACTIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.REMOVEACTION, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuADDEXISTINGSTAGEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.ADDEXISTINGSTAGE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuADDEXISTINGPHASEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.ADDEXISTINGPHASE, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuADDEXISTINGACTIONItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.ADDEXISTINGACTION, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuREMOVEICPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.REMOVEICP, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuMOVEUPItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.MOVEUP, sender);
			}
		});
		this.form.getContextMenus().ICP.getIcpMenuMOVEDOWNItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.IcpMenu.MOVEDOWN, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPConfigurationProceduresAddProcedureItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPConfigurationProcedures.AddProcedure, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPConfigurationProceduresRemoveProcedureItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPConfigurationProcedures.RemoveProcedure, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPSearchStageRulesAddItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPSearchStageRules.Add, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPSearchStageRulesEditItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPSearchStageRules.Edit, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPSearchStageRulesCloneItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPSearchStageRules.Clone, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPSearchStageRulesRemoveItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPSearchStageRules.Remove, sender);
			}
		});
		this.form.getContextMenus().ICP.getICPSearchStageRulesRemoveAllItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.ICPSearchStageRules.RemoveAll, sender);
			}
		});
		this.form.getContextMenus().ICP.getPhaseGoalsADDGOALItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.PhaseGoals.ADDGOAL, sender);
			}
		});
		this.form.getContextMenus().ICP.getPhaseGoalsEDITGOALItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.ICPNamespace.PhaseGoals.EDITGOAL, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbSpecialityLookup();
		bindcmbCategoryLookup();
		bindcmbStatusLookup();
		bindcmbICPStatusLookup();
		bindcmbICPCategoryLookup();
		bindcmbICPSpecialtyLookup();
		bindgrdStageRulescolCategoryLookup();
		bindcmbStageStatusLookup();
		bindcmbPhaseStatusLookup();
		bindgrdPhaseRulescolCategoryLookup();
		bindchklistActionDisciplineLookup();
		bindcmbActionLinkedTypeLookup();
		bindcmbActionStatusLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbSpecialityLookup();
		bindcmbCategoryLookup();
		bindcmbStatusLookup();
		bindcmbICPStatusLookup();
		bindcmbICPCategoryLookup();
		bindcmbICPSpecialtyLookup();
		bindgrdStageRulescolCategoryLookup();
		bindcmbStageStatusLookup();
		bindcmbPhaseStatusLookup();
		bindgrdPhaseRulescolCategoryLookup();
		bindchklistActionDisciplineLookup();
		bindcmbActionLinkedTypeLookup();
		bindcmbActionStatusLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbSpecialityLookupValue();
		defaultcmbCategoryLookupValue();
		defaultcmbStatusLookupValue();
		defaultcmbICPStatusLookupValue();
		defaultcmbICPCategoryLookupValue();
		defaultcmbICPSpecialtyLookupValue();
		defaultcmbStageStatusLookupValue();
		defaultcmbPhaseStatusLookupValue();
		defaultcmbActionLinkedTypeLookupValue();
		defaultcmbActionStatusLookupValue();
	}
	private void onlyrICPTabsICPActivated()
	{
		this.form.ctnConfiguration().lyrICPTabs().showICP();
	}
	private void onlyrICPTabsStageActivated()
	{
		this.form.ctnConfiguration().lyrICPTabs().showStage();
	}
	private void onlyrICPTabsPhaseActivated()
	{
		this.form.ctnConfiguration().lyrICPTabs().showPhase();
	}
	private void onlyrICPTabsActionActivated()
	{
		this.form.ctnConfiguration().lyrICPTabs().showAction();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	public abstract void clearContextInformation();
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
