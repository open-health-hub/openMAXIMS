//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pathways.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BasePatientJourneyImpl extends DomainImpl implements ims.pathways.domain.PatientJourney, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistReferrals(ims.core.patient.vo.PatientRefVo patient)
	{
		if(patient == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'patient' of type 'ims.core.patient.vo.PatientRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistPatientJourneyShortByReferral(ims.core.admin.vo.ReferralRefVo referral)
	{
		if(referral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'referral' of type 'ims.core.admin.vo.ReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPatientJourney(ims.pathways.vo.PatientPathwayJourneyRefVo journey, ims.pathways.configuration.vo.PathwayRefVo pathway)
	{
		if(journey == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'journey' of type 'ims.pathways.vo.PatientPathwayJourneyRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistPatientJourney(ims.core.admin.vo.ReferralRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientJourneyShortByPathway(ims.pathways.configuration.vo.PathwayRefVo voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPathwayLite(ims.pathways.configuration.vo.PathwayRefVo voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientJourneyTarget(ims.pathways.vo.PatientJourneyTargetRefVo journeyTarget)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistCurrentPathwayJourneyTargets(ims.pathways.vo.PatientPathwayJourneyRefVo journey, ims.pathways.configuration.vo.PathwayRefVo pathway)
	{
		if(journey == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'journey' of type 'ims.pathways.vo.PatientPathwayJourneyRefVo' cannot be null.");
		if(pathway == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'pathway' of type 'ims.pathways.configuration.vo.PathwayRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetReferralByJourney(ims.pathways.vo.PatientPathwayJourneyRefVo journey)
	{
		if(journey == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'journey' of type 'ims.pathways.vo.PatientPathwayJourneyRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.pathways.vo.PatientJourneyJourneyTargetInterfaceVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientPathwayJourney(ims.pathways.vo.PatientPathwayJourneyRefVo voRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetClinicName(String clinicCode)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistReferralWithPathways(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferralFromSelectedCatsReferral(Integer catsReferralID)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistRTTStatusHistory(Integer referralID)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCancerPathway(ims.pathways.vo.PatientPathwayJourneyRefVo journey, ims.framework.utils.Date cancerPathwayDate)
	{
		if(journey == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'journey' of type 'ims.pathways.vo.PatientPathwayJourneyRefVo' cannot be null.");
		if(cancerPathwayDate == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'cancerPathwayDate' of type 'ims.framework.utils.Date' cannot be null.");
	}
}
