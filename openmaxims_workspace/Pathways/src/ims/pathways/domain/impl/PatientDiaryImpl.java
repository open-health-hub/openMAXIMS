//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.60 build 2876.30621)
// Copyright (C) 1995-2007 IMS MAXIMS plc. All rights reserved.

package ims.pathways.domain.impl;

import ims.pathways.domain.base.impl.BasePatientDiaryImpl;
import ims.pathways.vo.domain.PatientEventLiteVoAssembler;
import ims.pathways.vo.lookups.EventStatus;

public class PatientDiaryImpl extends BasePatientDiaryImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* listPatientEvent
	*/
	public ims.pathways.vo.PatientEventLiteVoCollection listPatientEventByPatient(ims.core.patient.vo.PatientRefVo patient)
	{
		return PatientEventLiteVoAssembler.createPatientEventLiteVoCollectionFromPatientEvent(getDomainFactory().find("from PatientEvent pe where pe.patient.id = " + patient.getID_Patient() + " and pe.eventStatus.id <> " + EventStatus.RIE.getID() + " and pe.event.patientDiaryImpact = 1 "));	//WDEV-13008
	}
}
