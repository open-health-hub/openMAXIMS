//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.spinalinjuries.forms.medadmissumm;

public abstract class BaseLogic extends Handlers
{
	public final Class getDomainInterface() throws ClassNotFoundException
	{
		return ims.spinalinjuries.domain.MedAdmisSumm.class;
	}
	public final void setContext(ims.framework.UIEngine engine, GenForm form, ims.spinalinjuries.domain.MedAdmisSumm domain)
	{
		setContext(engine, form);
		this.domain = domain;
	}
	protected void clearScreen()
	{
		this.form.txtDurSinceInjury().setValue("");
		this.form.dteInjury().setValue(null);
		this.form.txtOverallLevel().setValue("");
		this.form.txtCompleteIncomp().setValue("");
		this.form.txtAsiaGrade().setValue("");
		this.form.txtFrankel().setValue("");
		this.form.txtAsiaScore().setValue("");
		this.form.txtModeofInjury().setValue("");
		this.form.txtSpineSyndrome().setValue("");
		this.form.txtLevelofInjury().setValue("");
		this.form.txtCauseOfInjury().setValue("");
		this.form.txtMechofInjury().setValue("");
	}
	protected void populateScreenFromData(ims.generalmedical.vo.AdmisSummary value)
	{
		clearScreen();
		if(value == null)
			return;

		this.form.txtDurSinceInjury().setValue(value.getDurationSinceInjuryIsNotNull() ? value.getDurationSinceInjury(): null);
		this.form.dteInjury().setValue(value.getDateOfInjuryIsNotNull() ? value.getDateOfInjury() : null);
		this.form.txtOverallLevel().setValue(value.getOverallNeuroIsNotNull() ? value.getOverallNeuro(): null);
		this.form.txtCompleteIncomp().setValue(value.getCompleteIncompleteIsNotNull() ? value.getCompleteIncomplete(): null);
		this.form.txtAsiaGrade().setValue(value.getAsiaGradeIsNotNull() ? value.getAsiaGrade(): null);
		this.form.txtFrankel().setValue(value.getFrankleGradeIsNotNull() ? value.getFrankleGrade(): null);
		this.form.txtAsiaScore().setValue(value.getAsiaScoreIsNotNull() ? value.getAsiaScore(): null);
		this.form.txtModeofInjury().setValue(value.getModeOfInjuryIsNotNull() ? value.getModeOfInjury(): null);
		this.form.txtSpineSyndrome().setValue(value.getSpineSyndromeIsNotNull() ? value.getSpineSyndrome(): null);
		this.form.txtLevelofInjury().setValue(value.getLevelOfInjuryIsNotNull() ? value.getLevelOfInjury(): null);
		this.form.txtCauseOfInjury().setValue(value.getCauseOfInjuryIsNotNull() ? value.getCauseOfInjury(): null);
		this.form.txtMechofInjury().setValue(value.getMechanismOfInjuryIsNotNull() ? value.getMechanismOfInjury(): null);
	}
	protected ims.generalmedical.vo.AdmisSummary populateDataFromScreen(ims.generalmedical.vo.AdmisSummary value)
	{
		if(value == null)
			value = new ims.generalmedical.vo.AdmisSummary();

		value.setDurationSinceInjury(this.form.txtDurSinceInjury().getValue());
		value.setDateOfInjury(this.form.dteInjury().getValue());
		value.setOverallNeuro(this.form.txtOverallLevel().getValue());
		value.setCompleteIncomplete(this.form.txtCompleteIncomp().getValue());
		value.setAsiaGrade(this.form.txtAsiaGrade().getValue());
		value.setFrankleGrade(this.form.txtFrankel().getValue());
		value.setAsiaScore(this.form.txtAsiaScore().getValue());
		value.setModeOfInjury(this.form.txtModeofInjury().getValue());
		value.setSpineSyndrome(this.form.txtSpineSyndrome().getValue());
		value.setLevelOfInjury(this.form.txtLevelofInjury().getValue());
		value.setCauseOfInjury(this.form.txtCauseOfInjury().getValue());
		value.setMechanismOfInjury(this.form.txtMechofInjury().getValue());

		return value;
	}
	protected ims.generalmedical.vo.AdmisSummary populateDataFromScreen()
	{
		return populateDataFromScreen(new ims.generalmedical.vo.AdmisSummary());
	}
	public final void free()
	{
		super.free();
		domain = null;
	}
	
	protected ims.spinalinjuries.domain.MedAdmisSumm domain;
}
