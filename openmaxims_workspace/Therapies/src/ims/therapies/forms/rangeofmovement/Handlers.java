//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.therapies.forms.rangeofmovement;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbCentralActionLookup();
	abstract protected void defaultcmbCentralActionLookupValue();
	abstract protected void bindcmbRangeLookup();
	abstract protected void defaultcmbRangeLookupValue();
	abstract protected void bindcmbCentralMovementLookup();
	abstract protected void defaultcmbCentralMovementLookupValue();
	abstract protected void bindcmbCentralLimitedLookup();
	abstract protected void defaultcmbCentralLimitedLookupValue();
	abstract protected void bindcmbPeripheralActionLookup();
	abstract protected void defaultcmbPeripheralActionLookupValue();
	abstract protected void bindcmbPeripheralMovementLookup();
	abstract protected void defaultcmbPeripheralMovementLookupValue();
	abstract protected void bindcmbPeripheralLimitedLookup();
	abstract protected void defaultcmbPeripheralLimitedLookupValue();
	abstract protected void bindcmbLateralityLookup();
	abstract protected void defaultcmbLateralityLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRecbr1ValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPeripheralSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdCentralSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbAuthoringCPTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbCentralActionValueSet(Object value);
	abstract protected void OnBtnCentralAddApplyClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCentralClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbRangeValueSet(Object value);
	abstract protected void oncmbCentralMovementValueSet(Object value);
	abstract protected void onCmbCentralAreaValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbCentralLimitedValueSet(Object value);
	abstract protected void oncmbPeripheralActionValueSet(Object value);
	abstract protected void onBtnPeripheralAddApplyClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPeripheralClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPeripheralMovementValueSet(Object value);
	abstract protected void onCmbPeripheralAreaValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPeripheralLimitedValueSet(Object value);
	abstract protected void oncmbLateralityValueSet(Object value);
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.recbr1().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRecbr1ValueChanged();
			}
		});
		this.form.grdPeripheral().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPeripheralSelectionChanged();
			}
		});
		this.form.grdCentral().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdCentralSelectionChanged();
			}
		});
		this.form.lyrDetails().tabEmpty().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabEmptyActivated();
			}
		});
		this.form.lyrDetails().tabHeader().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabHeaderActivated();
			}
		});
		this.form.lyrDetails().tabCentral().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabCentralActivated();
			}
		});
		this.form.lyrDetails().tabPeripheral().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabPeripheralActivated();
			}
		});
		this.form.lyrDetails().tabHeader().qmbAuthoringCP().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbAuthoringCPTextSubmited(value);
			}
		});
		this.form.lyrDetails().tabCentral().cmbCentralAction().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCentralActionValueSet(value);
			}
		});
		this.form.lyrDetails().tabCentral().btnCentralAddApply().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				OnBtnCentralAddApplyClick();
			}
		});
		this.form.lyrDetails().tabCentral().btnCentralClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCentralClearClick();
			}
		});
		this.form.lyrDetails().tabCentral().cmbRange().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbRangeValueSet(value);
			}
		});
		this.form.lyrDetails().tabCentral().cmbCentralMovement().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCentralMovementValueSet(value);
			}
		});
		this.form.lyrDetails().tabCentral().cmbCentralArea().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbCentralAreaValueChanged();
			}
		});
		this.form.lyrDetails().tabCentral().cmbCentralLimited().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCentralLimitedValueSet(value);
			}
		});
		this.form.lyrDetails().tabPeripheral().cmbPeripheralAction().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPeripheralActionValueSet(value);
			}
		});
		this.form.lyrDetails().tabPeripheral().btnPeripheralAddApply().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPeripheralAddApplyClick();
			}
		});
		this.form.lyrDetails().tabPeripheral().btnPeripheralClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPeripheralClearClick();
			}
		});
		this.form.lyrDetails().tabPeripheral().cmbPeripheralMovement().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPeripheralMovementValueSet(value);
			}
		});
		this.form.lyrDetails().tabPeripheral().cmbPeripheralArea().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbPeripheralAreaValueChanged();
			}
		});
		this.form.lyrDetails().tabPeripheral().cmbPeripheralLimited().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPeripheralLimitedValueSet(value);
			}
		});
		this.form.lyrDetails().tabPeripheral().cmbLaterality().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLateralityValueSet(value);
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.getContextMenus().getRangeOfMovementPeripheralAddJointItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementPeripheral.AddJoint, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementPeripheralAddDetailItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementPeripheral.AddDetail, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementPeripheralEditItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementPeripheral.Edit, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementPeripheralREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementPeripheral.REMOVE, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementCentralADDJointItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementCentral.ADDJoint, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementCentralADDdetailsItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementCentral.ADDdetails, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementCentralUpdateItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementCentral.Update, sender);
			}
		});
		this.form.getContextMenus().getRangeOfMovementCentralREMOVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.RangeOfMovementCentral.REMOVE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbCentralActionLookup();
		bindcmbRangeLookup();
		bindcmbCentralLimitedLookup();
		bindcmbPeripheralActionLookup();
		bindcmbPeripheralLimitedLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbCentralActionLookup();
		bindcmbRangeLookup();
		bindcmbCentralMovementLookup();
		bindcmbCentralLimitedLookup();
		bindcmbPeripheralActionLookup();
		bindcmbPeripheralMovementLookup();
		bindcmbPeripheralLimitedLookup();
		bindcmbLateralityLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbCentralActionLookupValue();
		defaultcmbRangeLookupValue();
		defaultcmbCentralMovementLookupValue();
		defaultcmbCentralLimitedLookupValue();
		defaultcmbPeripheralActionLookupValue();
		defaultcmbPeripheralMovementLookupValue();
		defaultcmbPeripheralLimitedLookupValue();
		defaultcmbLateralityLookupValue();
	}
	private void onlyrDetailstabEmptyActivated()
	{
		this.form.lyrDetails().showtabEmpty();
	}
	private void onlyrDetailstabHeaderActivated()
	{
		this.form.lyrDetails().showtabHeader();
	}
	private void onlyrDetailstabCentralActivated()
	{
		this.form.lyrDetails().showtabCentral();
	}
	private void onlyrDetailstabPeripheralActivated()
	{
		this.form.lyrDetails().showtabPeripheral();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
