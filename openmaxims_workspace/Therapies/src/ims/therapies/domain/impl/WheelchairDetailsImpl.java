//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Peter Martin using IMS Development Environment (version 1.43 build 2232.25589)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.therapies.domain.impl;

import java.util.ArrayList;
import java.util.List;

import ims.admin.domain.HcpAdmin;
import ims.admin.domain.impl.HcpAdminImpl;
import ims.core.vo.Hcp;
import ims.core.vo.HcpCollection;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.exceptions.StaleObjectException;
import ims.therapies.domain.base.impl.BaseWheelchairDetailsImpl;
import ims.therapies.mobilitytransfers.domain.objects.WheelchairDetails;
import ims.therapies.vo.WheelchairDetailsVo;
import ims.therapies.vo.WheelchairDetailsVoCollection;
import ims.therapies.vo.domain.WheelchairDetailsVoAssembler;

public class WheelchairDetailsImpl extends BaseWheelchairDetailsImpl
{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public WheelchairDetailsVoCollection listByPatient(Integer idPatient) {
		DomainFactory factory = getDomainFactory();
		StringBuffer hql = new StringBuffer(" ");
		String query = "from WheelchairDetails w ";
		ArrayList markers = new ArrayList();
		ArrayList values = new ArrayList();
		String andStr = " ";
		
		if (idPatient != null)
		{
			hql.append(andStr + " w.careContext.episodeOfCare.careSpell.patient.id = :id_Patient");
			markers.add("id_Patient");
			values.add(idPatient);			
			andStr = " and ";
		}
		
		if (markers.size() > 0) query += " where ";
		query += hql.toString();
		

		List details = factory.find(query, markers, values);	
		WheelchairDetailsVoCollection collWheelchairDetails = WheelchairDetailsVoAssembler.createWheelchairDetailsVoCollectionFromWheelchairDetails(details);
		return collWheelchairDetails;
		
	}

	public WheelchairDetailsVo save(WheelchairDetailsVo voWheelchairDetails) throws StaleObjectException {
		DomainFactory factory = getDomainFactory();	
		
		if (!voWheelchairDetails.isValidated())
		{
			throw new DomainRuntimeException("This WheelchairDetailsVo has not been validated");
		}
		
		WheelchairDetails domWheelchairDetail = WheelchairDetailsVoAssembler.extractWheelchairDetails(factory, voWheelchairDetails);
		
		
		factory.save(domWheelchairDetail);
		
	
		return WheelchairDetailsVoAssembler.create(domWheelchairDetail);
	}

	public HcpCollection listHcps(Hcp filter) {
		HcpAdmin hcpAdmin = (HcpAdmin) getDomainImpl(HcpAdminImpl.class);
		return hcpAdmin.listHCPs(filter);
	}

}
