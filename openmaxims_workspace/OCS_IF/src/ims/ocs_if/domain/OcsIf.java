//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocs_if.domain;

// Generated from form domain impl
public interface OcsIf extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.ocs_if.vo.IfOutOcsOrderVo getOrder(ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo orderRef);

	// Generated from form domain interface definition
	public ims.ocs_if.vo.IfOrderMessageVo saveOrderMessage(ims.ocs_if.vo.IfOrderMessageVo ordMsg) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.ocs_if.vo.IfOrderMessageVoCollection saveOrderMessages(ims.ocs_if.vo.IfOrderMessageVoCollection orderMsgs) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.ocs_if.vo.Hl7OutboundRegVo registerOutbound(ims.ocs_if.vo.Hl7OutboundRegVo regVo) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.ocs_if.vo.Hl7OutboundRegVo updateOutboundRegistration(ims.ocs_if.vo.Hl7OutboundRegVo regVo) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	public ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo getNextOrder();

	// Generated from form domain interface definition
	public void updateNextOrder(ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo lastOrderVo) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public void deregisterOutbound(ims.ocs_if.vo.Hl7OutboundRegVo regVo) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	/**
	* Get's the Provider System for the Sending Application
	*/
	public ims.ocrr.vo.ProviderSystemVo getProviderSystem(String sendingApplication);

	// Generated from form domain interface definition
	/**
	* Creates a history status record for the current investigation and sets the current investigation to the same status record
	*/
	public ims.ocs_if.vo.IfOrderInvestigationVo createInvestigationStatusRecord(ims.ocrr.orderingresults.vo.OrderInvestigationRefVo investigation, ims.ocs_if.vo.IfOrderInvCurrentStatusVo statusRecordVo) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.ocrr.vo.ProviderSystemVo getProviderSystem(ims.ocrr.configuration.vo.InvestigationRefVo invVo);

	// Generated from form domain interface definition
	public ims.core.vo.ServiceShortVo getService(ims.ocrr.configuration.vo.InvestigationRefVo invVo);

	// Generated from form domain interface definition
	public String getServiceMapping(ims.core.clinical.vo.ServiceRefVo service, ims.vo.LookupInstVo taxType);

	// Generated from form domain interface definition
	/**
	* This message will save the order message information, marking the order as skipped due to errors in the generation of the HL7Message
	*/
	public void saveOrderAsDiscarded(ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo order) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* Retrieves all questions for a specimen and investigation
	*/
	public ims.core.vo.GeneralQuestionAnswerVoCollection getPathologyQuestions(ims.ocrr.orderingresults.vo.OrderSpecimenRefVo specimen, ims.ocrr.orderingresults.vo.OrderInvestigationRefVo investigation, Boolean includeShared);

	// Generated from form domain interface definition
	/**
	* Gets all questions for the investigation
	*/
	public ims.core.vo.GeneralQuestionAnswerVoCollection getRadiologyQuestions(ims.ocrr.orderingresults.vo.OrderInvestigationRefVo investigation);

	// Generated from form domain interface definition
	/**
	* Gets the next Queued Event
	*/
	public ims.ocs_if.vo.QueuedEventVo getNextQueuedEvent();

	// Generated from form domain interface definition
	/**
	* If a specimen has no investigations because they were cancelled or a bug then mark the specimen as processed
	*/
	public void processSpecimenWithoutInvestigations(ims.ocrr.orderingresults.vo.OrderSpecimenRefVo specimen);
}
