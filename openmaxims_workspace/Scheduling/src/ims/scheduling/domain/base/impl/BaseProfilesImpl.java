//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseProfilesImpl extends DomainImpl implements ims.scheduling.domain.Profiles, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistProfiles(ims.core.vo.ServiceShortVo service, ims.scheduling.vo.DirectoryOfServiceVo directoryOfService, ims.core.resource.place.vo.LocationRefVo hosp, Boolean activeOnly, Boolean isOutpatient, Boolean isTheatre, String name, ims.vo.interfaces.IMos listOwner)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDOS(ims.scheduling.vo.DirectoryOfServiceVo directoryOfService)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationServices(ims.core.vo.LocShortVo locShort)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistHcpLite(ims.core.vo.HcpFilter filter)
	{
		if(filter == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'filter' of type 'ims.core.vo.HcpFilter' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesaveGenericProfile(ims.scheduling.vo.Sch_ProfileGenericVo profile, ims.scheduling.vo.ProfileTemplateVoCollection templates)
	{
	}

	@SuppressWarnings("unused")
	public void validategetGenericProfileDetails(ims.scheduling.vo.ProfileShortVo profileShort)
	{
	}

	@SuppressWarnings("unused")
	public void validategetProfileDetails(ims.scheduling.vo.ProfileShortVo profileShort)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLocationService(ims.core.resource.place.vo.LocationRefVo location, ims.core.clinical.vo.ServiceRefVo service)
	{
		if(location == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'location' of type 'ims.core.resource.place.vo.LocationRefVo' cannot be null.");
		if(service == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'service' of type 'ims.core.clinical.vo.ServiceRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistProfileTemplatesByProfile(ims.scheduling.vo.Sch_ProfileRefVo profile)
	{
		if(profile == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'profile' of type 'ims.scheduling.vo.Sch_ProfileRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistProcedureByHcpAndName(ims.core.resource.people.vo.HcpRefVoCollection hcp, String name)
	{
	}
}
