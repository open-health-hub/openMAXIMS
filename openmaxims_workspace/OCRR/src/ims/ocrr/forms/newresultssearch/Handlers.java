//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.forms.newresultssearch;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdResultsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrSearchTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onImbAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbMyAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbMyClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbMySearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbIAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbIClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbISearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbOAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbOClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbOSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbEDAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbEDClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbEDSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbPatAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbPatClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbPatSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTimer(ims.framework.controls.Timer timer) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormOpen();
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.grdResults().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdResultsSelectionChanged();
			}
		});
		this.form.lyrSearch().tabPageAll().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabPageAllActivated();
			}
		});
		this.form.lyrSearch().tabPageMyResults().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabPageMyResultsActivated();
			}
		});
		this.form.lyrSearch().tabPageInpatient().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabPageInpatientActivated();
			}
		});
		this.form.lyrSearch().tabPageOutpatient().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabPageOutpatientActivated();
			}
		});
		this.form.lyrSearch().tabPageED().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabPageEDActivated();
			}
		});
		this.form.lyrSearch().tabPagePatient().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabPagePatientActivated();
			}
		});
		this.form.lyrSearch().tabPageAll().imbAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabPageAll().imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.lyrSearch().tabPageAll().imbSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchClick();
			}
		});
		this.form.lyrSearch().tabPageMyResults().imbMyAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbMyAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabPageMyResults().imbMyClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbMyClearClick();
			}
		});
		this.form.lyrSearch().tabPageMyResults().imbMySearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbMySearchClick();
			}
		});
		this.form.lyrSearch().tabPageInpatient().imbIAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbIAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabPageInpatient().imbIClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbIClearClick();
			}
		});
		this.form.lyrSearch().tabPageInpatient().imbISearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbISearchClick();
			}
		});
		this.form.lyrSearch().tabPageOutpatient().imbOAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbOAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabPageOutpatient().imbOClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbOClearClick();
			}
		});
		this.form.lyrSearch().tabPageOutpatient().imbOSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbOSearchClick();
			}
		});
		this.form.lyrSearch().tabPageED().imbEDAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbEDAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabPageED().imbEDClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbEDClearClick();
			}
		});
		this.form.lyrSearch().tabPageED().imbEDSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbEDSearchClick();
			}
		});
		this.form.lyrSearch().tabPagePatient().imbPatAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbPatAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabPagePatient().imbPatClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbPatClearClick();
			}
		});
		this.form.lyrSearch().tabPagePatient().imbPatSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbPatSearchClick();
			}
		});
		this.form.setTimerElapsedEvent(new ims.framework.delegates.TimerElapsed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.Timer timer) throws ims.framework.exceptions.PresentationLogicException
			{
				onTimer(timer);
			}
		});
	}
	private void onlyrSearchtabPageAllActivated()
	{
		this.form.lyrSearch().showtabPageAll();
		onlyrSearchTabChanged(this.form.lyrSearch().tabPageAll());
	}
	private void onlyrSearchtabPageMyResultsActivated()
	{
		this.form.lyrSearch().showtabPageMyResults();
		onlyrSearchTabChanged(this.form.lyrSearch().tabPageMyResults());
	}
	private void onlyrSearchtabPageInpatientActivated()
	{
		this.form.lyrSearch().showtabPageInpatient();
		onlyrSearchTabChanged(this.form.lyrSearch().tabPageInpatient());
	}
	private void onlyrSearchtabPageOutpatientActivated()
	{
		this.form.lyrSearch().showtabPageOutpatient();
		onlyrSearchTabChanged(this.form.lyrSearch().tabPageOutpatient());
	}
	private void onlyrSearchtabPageEDActivated()
	{
		this.form.lyrSearch().showtabPageED();
		onlyrSearchTabChanged(this.form.lyrSearch().tabPageED());
	}
	private void onlyrSearchtabPagePatientActivated()
	{
		this.form.lyrSearch().showtabPagePatient();
		onlyrSearchTabChanged(this.form.lyrSearch().tabPagePatient());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
