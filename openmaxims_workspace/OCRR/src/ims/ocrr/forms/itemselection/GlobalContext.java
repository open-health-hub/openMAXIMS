//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.forms.itemselection;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		OCRR = new OCRRContext(context);
	}
	public final class OCRRContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private OCRRContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentInvestigationIsNotNull()
		{
			return !cx_OCRRCurrentInvestigation.getValueIsNull(context);
		}
		public ims.ocrr.vo.InvestigationVo getCurrentInvestigation()
		{
			return (ims.ocrr.vo.InvestigationVo)cx_OCRRCurrentInvestigation.getValue(context);
		}

		private ims.framework.ContextVariable cx_OCRRCurrentInvestigation = new ims.framework.ContextVariable("OCRR.CurrentInvestigation", "_cv_OCRR.CurrentInvestigation");
		public boolean getPreselectedOrderSetsIsNotNull()
		{
			return !cx_OCRRPreselectedOrderSets.getValueIsNull(context);
		}
		public ims.ocrr.vo.OrderSetShortVoCollection getPreselectedOrderSets()
		{
			return (ims.ocrr.vo.OrderSetShortVoCollection)cx_OCRRPreselectedOrderSets.getValue(context);
		}
		public void setPreselectedOrderSets(ims.ocrr.vo.OrderSetShortVoCollection value)
		{
			cx_OCRRPreselectedOrderSets.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRPreselectedOrderSets = new ims.framework.ContextVariable("OCRR.PreselectedOrderSets", "_cv_OCRR.PreselectedOrderSets");
		public boolean getPreselectedInvestigationsIsNotNull()
		{
			return !cx_OCRRPreselectedInvestigations.getValueIsNull(context);
		}
		public ims.ocrr.vo.InvestShortVoCollection getPreselectedInvestigations()
		{
			return (ims.ocrr.vo.InvestShortVoCollection)cx_OCRRPreselectedInvestigations.getValue(context);
		}
		public void setPreselectedInvestigations(ims.ocrr.vo.InvestShortVoCollection value)
		{
			cx_OCRRPreselectedInvestigations.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRPreselectedInvestigations = new ims.framework.ContextVariable("OCRR.PreselectedInvestigations", "_cv_OCRR.PreselectedInvestigations");
		public boolean getPreselectedProfilesIsNotNull()
		{
			return !cx_OCRRPreselectedProfiles.getValueIsNull(context);
		}
		public ims.ocrr.vo.InvestShortVoCollection getPreselectedProfiles()
		{
			return (ims.ocrr.vo.InvestShortVoCollection)cx_OCRRPreselectedProfiles.getValue(context);
		}
		public void setPreselectedProfiles(ims.ocrr.vo.InvestShortVoCollection value)
		{
			cx_OCRRPreselectedProfiles.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRPreselectedProfiles = new ims.framework.ContextVariable("OCRR.PreselectedProfiles", "_cv_OCRR.PreselectedProfiles");
		public boolean getProviderIsNotNull()
		{
			return !cx_OCRRProvider.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getProvider()
		{
			return (ims.core.vo.LocationLiteVo)cx_OCRRProvider.getValue(context);
		}
		public void setProvider(ims.core.vo.LocationLiteVo value)
		{
			cx_OCRRProvider.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRProvider = new ims.framework.ContextVariable("OCRR.Provider", "_cv_OCRR.Provider");
		public boolean getCategoryIsNotNull()
		{
			return !cx_OCRRCategory.getValueIsNull(context);
		}
		public ims.ocrr.vo.lookups.Category getCategory()
		{
			return (ims.ocrr.vo.lookups.Category)cx_OCRRCategory.getValue(context);
		}
		public void setCategory(ims.ocrr.vo.lookups.Category value)
		{
			cx_OCRRCategory.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRCategory = new ims.framework.ContextVariable("OCRR.Category", "_cv_OCRR.Category");
		public boolean getItemSelectionTypeIsNotNull()
		{
			return !cx_OCRRItemSelectionType.getValueIsNull(context);
		}
		public ims.ocrr.vo.lookups.ItemSelectionType getItemSelectionType()
		{
			return (ims.ocrr.vo.lookups.ItemSelectionType)cx_OCRRItemSelectionType.getValue(context);
		}
		public void setItemSelectionType(ims.ocrr.vo.lookups.ItemSelectionType value)
		{
			cx_OCRRItemSelectionType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRItemSelectionType = new ims.framework.ContextVariable("OCRR.ItemSelectionType", "_cv_OCRR.ItemSelectionType");
		public boolean getSelectedInvestigationsIsNotNull()
		{
			return !cx_OCRRSelectedInvestigations.getValueIsNull(context);
		}
		public ims.ocrr.vo.InvestShortVoCollection getSelectedInvestigations()
		{
			return (ims.ocrr.vo.InvestShortVoCollection)cx_OCRRSelectedInvestigations.getValue(context);
		}
		public void setSelectedInvestigations(ims.ocrr.vo.InvestShortVoCollection value)
		{
			cx_OCRRSelectedInvestigations.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRSelectedInvestigations = new ims.framework.ContextVariable("OCRR.SelectedInvestigations", "_cv_OCRR.SelectedInvestigations");
		public boolean getSelectedProfilesIsNotNull()
		{
			return !cx_OCRRSelectedProfiles.getValueIsNull(context);
		}
		public ims.ocrr.vo.InvestShortVoCollection getSelectedProfiles()
		{
			return (ims.ocrr.vo.InvestShortVoCollection)cx_OCRRSelectedProfiles.getValue(context);
		}
		public void setSelectedProfiles(ims.ocrr.vo.InvestShortVoCollection value)
		{
			cx_OCRRSelectedProfiles.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRSelectedProfiles = new ims.framework.ContextVariable("OCRR.SelectedProfiles", "_cv_OCRR.SelectedProfiles");
		public boolean getSelectedOrderSetsIsNotNull()
		{
			return !cx_OCRRSelectedOrderSets.getValueIsNull(context);
		}
		public ims.ocrr.vo.OrderSetShortVoCollection getSelectedOrderSets()
		{
			return (ims.ocrr.vo.OrderSetShortVoCollection)cx_OCRRSelectedOrderSets.getValue(context);
		}
		public void setSelectedOrderSets(ims.ocrr.vo.OrderSetShortVoCollection value)
		{
			cx_OCRRSelectedOrderSets.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRSelectedOrderSets = new ims.framework.ContextVariable("OCRR.SelectedOrderSets", "_cv_OCRR.SelectedOrderSets");
		public boolean getProviderServiceIsNotNull()
		{
			return !cx_OCRRProviderService.getValueIsNull(context);
		}
		public ims.core.vo.ServiceShortVo getProviderService()
		{
			return (ims.core.vo.ServiceShortVo)cx_OCRRProviderService.getValue(context);
		}
		public void setProviderService(ims.core.vo.ServiceShortVo value)
		{
			cx_OCRRProviderService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRProviderService = new ims.framework.ContextVariable("OCRR.ProviderService", "_cv_OCRR.ProviderService");

		private ims.framework.Context context;
	}

	public OCRRContext OCRR;
}
