//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ocrr.forms.ordersummarydialog;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		OCRR = new OCRRContext(context);
		Core = new CoreContext(context);
		RefMan = new RefManContext(context);
	}
	public final class OCRRContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private OCRRContext(ims.framework.Context context)
		{
			this.context = context;

			PathologyResults = new PathologyResultsContext(context);
			CentricityWebPACS = new CentricityWebPACSContext(context);
		}
		public final class PathologyResultsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private PathologyResultsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getOrderIsNotNull()
			{
				return !cx_OCRRPathologyResultsOrder.getValueIsNull(context);
			}
			public ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo getOrder()
			{
				return (ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo)cx_OCRRPathologyResultsOrder.getValue(context);
			}

			private ims.framework.ContextVariable cx_OCRRPathologyResultsOrder = new ims.framework.ContextVariable("OCRR.PathologyResults.Order", "_cv_OCRR.PathologyResults.Order");
			private ims.framework.Context context;
		}
		public final class CentricityWebPACSContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private CentricityWebPACSContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAccessionNumberIsNotNull()
			{
				return !cx_OCRRCentricityWebPACSAccessionNumber.getValueIsNull(context);
			}
			public String getAccessionNumber()
			{
				return (String)cx_OCRRCentricityWebPACSAccessionNumber.getValue(context);
			}
		public void setAccessionNumber(String value)
		{
				cx_OCRRCentricityWebPACSAccessionNumber.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_OCRRCentricityWebPACSAccessionNumber = new ims.framework.ContextVariable("OCRR.CentricityWebPACS.AccessionNumber", "_cv_OCRR.CentricityWebPACS.AccessionNumber");
			private ims.framework.Context context;
		}

		public boolean getOrderAwaitingAuthorisationIsNotNull()
		{
			return !cx_OCRROrderAwaitingAuthorisation.getValueIsNull(context);
		}
		public ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo getOrderAwaitingAuthorisation()
		{
			return (ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo)cx_OCRROrderAwaitingAuthorisation.getValue(context);
		}
		public void setOrderAwaitingAuthorisation(ims.ocrr.orderingresults.vo.OcsOrderSessionRefVo value)
		{
			cx_OCRROrderAwaitingAuthorisation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRROrderAwaitingAuthorisation = new ims.framework.ContextVariable("OCRR.OrderAwaitingAuthorisation", "_cv_OCRR.OrderAwaitingAuthorisation");
		public boolean getQuestionsNotesIsNotNull()
		{
			return !cx_OCRRQuestionsNotes.getValueIsNull(context);
		}
		public ims.vo.interfaces.IQuestionNotes getQuestionsNotes()
		{
			return (ims.vo.interfaces.IQuestionNotes)cx_OCRRQuestionsNotes.getValue(context);
		}
		public void setQuestionsNotes(ims.vo.interfaces.IQuestionNotes value)
		{
			cx_OCRRQuestionsNotes.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRQuestionsNotes = new ims.framework.ContextVariable("OCRR.QuestionsNotes", "_cv_OCRR.QuestionsNotes");
		public boolean getSelectedInvsIsNotNull()
		{
			return !cx_OCRRSelectedInvs.getValueIsNull(context);
		}
		public ims.ocrr.vo.OcsPathRadResultVoCollection getSelectedInvs()
		{
			return (ims.ocrr.vo.OcsPathRadResultVoCollection)cx_OCRRSelectedInvs.getValue(context);
		}
		public void setSelectedInvs(ims.ocrr.vo.OcsPathRadResultVoCollection value)
		{
			cx_OCRRSelectedInvs.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRSelectedInvs = new ims.framework.ContextVariable("OCRR.SelectedInvs", "_cv_OCRR.SelectedInvs");
		public boolean getRoleDisciplineSecurityLevelsIsNotNull()
		{
			return !cx_OCRRRoleDisciplineSecurityLevels.getValueIsNull(context);
		}
		public ims.ocrr.vo.RoleDisciplineSecurityLevelLiteGCVo getRoleDisciplineSecurityLevels()
		{
			return (ims.ocrr.vo.RoleDisciplineSecurityLevelLiteGCVo)cx_OCRRRoleDisciplineSecurityLevels.getValue(context);
		}
		public void setRoleDisciplineSecurityLevels(ims.ocrr.vo.RoleDisciplineSecurityLevelLiteGCVo value)
		{
			cx_OCRRRoleDisciplineSecurityLevels.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRRoleDisciplineSecurityLevels = new ims.framework.ContextVariable("OCRR.RoleDisciplineSecurityLevels", "_cvp_OCRR.RoleDisciplineSecurityLevels");
		public boolean getOrderInvestigationToAmendIsNotNull()
		{
			return !cx_OCRROrderInvestigationToAmend.getValueIsNull(context);
		}
		public ims.ocrr.vo.OrderInvestigationLiteVo getOrderInvestigationToAmend()
		{
			return (ims.ocrr.vo.OrderInvestigationLiteVo)cx_OCRROrderInvestigationToAmend.getValue(context);
		}
		public void setOrderInvestigationToAmend(ims.ocrr.vo.OrderInvestigationLiteVo value)
		{
			cx_OCRROrderInvestigationToAmend.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRROrderInvestigationToAmend = new ims.framework.ContextVariable("OCRR.OrderInvestigationToAmend", "_cv_OCRR.OrderInvestigationToAmend");
		public boolean getInvestigationStatusChangeReasonIsNotNull()
		{
			return !cx_OCRRInvestigationStatusChangeReason.getValueIsNull(context);
		}
		public ims.ocrr.vo.lookups.InvestigationStatusChangeReason getInvestigationStatusChangeReason()
		{
			return (ims.ocrr.vo.lookups.InvestigationStatusChangeReason)cx_OCRRInvestigationStatusChangeReason.getValue(context);
		}
		public void setInvestigationStatusChangeReason(ims.ocrr.vo.lookups.InvestigationStatusChangeReason value)
		{
			cx_OCRRInvestigationStatusChangeReason.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRInvestigationStatusChangeReason = new ims.framework.ContextVariable("OCRR.InvestigationStatusChangeReason", "_cv_OCRR.InvestigationStatusChangeReason");
		public boolean getInvestigationCancelCommentIsNotNull()
		{
			return !cx_OCRRInvestigationCancelComment.getValueIsNull(context);
		}
		public String getInvestigationCancelComment()
		{
			return (String)cx_OCRRInvestigationCancelComment.getValue(context);
		}
		public void setInvestigationCancelComment(String value)
		{
			cx_OCRRInvestigationCancelComment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRInvestigationCancelComment = new ims.framework.ContextVariable("OCRR.InvestigationCancelComment", "_cv_OCRR.InvestigationCancelComment");
		public boolean getRejectedInvestigationsIsNotNull()
		{
			return !cx_OCRRRejectedInvestigations.getValueIsNull(context);
		}
		public ims.ocrr.vo.OrderInvestigationListVoCollection getRejectedInvestigations()
		{
			return (ims.ocrr.vo.OrderInvestigationListVoCollection)cx_OCRRRejectedInvestigations.getValue(context);
		}
		public void setRejectedInvestigations(ims.ocrr.vo.OrderInvestigationListVoCollection value)
		{
			cx_OCRRRejectedInvestigations.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OCRRRejectedInvestigations = new ims.framework.ContextVariable("OCRR.RejectedInvestigations", "_cv_OCRR.RejectedInvestigations");

		public PathologyResultsContext PathologyResults;
		public CentricityWebPACSContext CentricityWebPACS;
		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getItemsIsNotNull()
		{
			return !cx_CoreItems.getValueIsNull(context);
		}
		public ims.admin.vo.SelectItemVoCollection getItems()
		{
			return (ims.admin.vo.SelectItemVoCollection)cx_CoreItems.getValue(context);
		}
		public void setItems(ims.admin.vo.SelectItemVoCollection value)
		{
			cx_CoreItems.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreItems = new ims.framework.ContextVariable("Core.Items", "_cv_Core.Items");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");

		private ims.framework.Context context;
	}

	public OCRRContext OCRR;
	public CoreContext Core;
	public RefManContext RefMan;
}
