//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Marius Mihalec using IMS Development Environment (version 1.30 build 2043.20884)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.ocrr.domain.impl;

import java.util.ArrayList;
import ims.core.vo.domain.LocSiteShortVoAssembler;
import ims.core.vo.lookups.LocationType;
import ims.domain.DomainFactory;
import ims.domain.impl.DomainImpl;
import ims.ocrr.vo.domain.OrderEntryTemplateShortVoAssembler;

public class OrderEntryTemplateListImpl extends DomainImpl implements ims.ocrr.domain.OrderEntryTemplateList, ims.domain.impl.Transactional
{
	/**
	* lists order entry templates
	*/
	public ims.ocrr.vo.OrderEntryTemplateShortVoCollection listOrderEntryTemplates(ims.ocrr.vo.OrderEntryTemplateListSearchCriteriaVo searchCriteria)
	{
		DomainFactory factory = getDomainFactory();
		
		String hql = " from OrderEntryTemplate oet "; 
		StringBuffer condStr = new StringBuffer();
		String andStr = " ";
		
		ArrayList markers = new ArrayList();
		ArrayList values = new ArrayList();
		
		if(searchCriteria != null)
		{
			if(searchCriteria.getNameIsNotNull())
			{
				condStr.append(andStr + " upper(oet.formName) like :name");
	 			markers.add("name");
				values.add("%" + searchCriteria.getName().toUpperCase() + "%");
				andStr = " and ";
			}
			
			if(searchCriteria.getStatusIsNotNull())
			{
				condStr.append(andStr + " oet.activeStatus = :status");
	 			markers.add("status");
				values.add(getDomLookup(searchCriteria.getStatus()));
				andStr = " and ";
			}
			
			if(searchCriteria.getLocationIsNotNull())
			{
				hql = "select oet from OrderEntryTemplate oet join oet.templatesLocations loc "; 				
				condStr.append(andStr + " (loc.location in (:location) and loc.isActive = :active) ");
				markers.add("location");
	 			markers.add("active");
				values.add(LocSiteShortVoAssembler.extractLocSite(factory, searchCriteria.getLocation()));
				values.add(Boolean.TRUE);
				andStr = " and ";
			}
		}
		
		if(condStr.length() > 0)
		{
			hql += " where ";
			hql += condStr.toString();
		}

		return OrderEntryTemplateShortVoAssembler.createOrderEntryTemplateShortVoCollectionFromOrderEntryTemplate(factory.find(hql.toString(), markers, values));
	}
	//excluding surgeries
	public ims.core.vo.LocSiteShortVoCollection getLocations()
	{
		DomainFactory factory = getDomainFactory();		
		return LocSiteShortVoAssembler.createLocSiteShortVoCollectionFromLocSite(factory.find("from LocSite loc where loc.type != :surgery", new String[]{"surgery"}, new Object[]{getDomLookup(LocationType.SURGERY)}));
	}
}
