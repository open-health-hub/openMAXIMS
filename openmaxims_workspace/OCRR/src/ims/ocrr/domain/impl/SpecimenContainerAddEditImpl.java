//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Peter Martin using IMS Development Environment (version 1.30 build 2012.21169)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.ocrr.domain.impl;

import java.util.List;

import ims.core.vo.TaxonomyMap;
import ims.core.vo.domain.TaxonomyMapAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.impl.DomainImpl;
import ims.ocrr.configuration.domain.objects.PathSpecimenContainer;
import ims.ocrr.vo.domain.PathSpecimenContainerVoAssembler;

public class SpecimenContainerAddEditImpl extends DomainImpl implements ims.ocrr.domain.SpecimenContainerAddEdit, ims.domain.impl.Transactional
{
	public ims.ocrr.vo.PathSpecimenContainerVo savePathSpecimenContainer(ims.ocrr.vo.PathSpecimenContainerVo pathSpecimenContainer) throws ims.domain.exceptions.StaleObjectException
	{
		if ( !pathSpecimenContainer.isValidated() )
		    throw new DomainRuntimeException("Path Specimen Container has not been validated");
		
		DomainFactory factory = getDomainFactory();
		
		PathSpecimenContainer doPathSpecimenContainer = PathSpecimenContainerVoAssembler.extractPathSpecimenContainer(factory, pathSpecimenContainer);
		doPathSpecimenContainer.getTaxonomyMap().clear();
		List lst = TaxonomyMapAssembler.extractTaxonomyMapList(factory, pathSpecimenContainer.getTaxonomyMap());
		doPathSpecimenContainer.setTaxonomyMap(lst);
		factory.save(doPathSpecimenContainer);
		return PathSpecimenContainerVoAssembler.create(doPathSpecimenContainer);
	}

	public Boolean checkDuplicateTaxonomyMapping(TaxonomyMap voTaxonomyMap) 
	{
		DomainFactory factory = getDomainFactory();

		String hql = "select t1_1.taxonomyCode from PathSpecimenContainer as p1_1 left join p1_1.taxonomyMap as t1_1 where(t1_1.taxonomyCode ='" + voTaxonomyMap.getTaxonomyCode().toString() + "')";
						 
		List duplicates = factory.find(hql);

		return duplicates.size() == 0;

	}
}
