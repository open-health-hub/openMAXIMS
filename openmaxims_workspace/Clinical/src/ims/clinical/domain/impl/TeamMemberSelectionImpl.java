//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Billy Mahon using IMS Development Environment (version 1.51 build 2463.19192)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.clinical.domain.impl;

import java.util.ArrayList;

import ims.clinical.domain.base.impl.BaseTeamMemberSelectionImpl;
import ims.core.resource.people.vo.HcpRefVo;
import ims.core.vo.ClinicalTeamVoCollection;
import ims.core.vo.domain.ClinicalTeamVoAssembler;
import ims.domain.DomainFactory;
import ims.vo.interfaces.IHcp;

public class TeamMemberSelectionImpl extends BaseTeamMemberSelectionImpl
{
	private static final long serialVersionUID = 1L;

	public ClinicalTeamVoCollection listTeamLeadsMembers(IHcp teamLead) 
	{
		DomainFactory factory = getDomainFactory();

		String hql = " from ClinicalTeam ct "; 
		StringBuffer condStr = new StringBuffer();
		String andStr = " ";
	
		ArrayList markers = new ArrayList();
		ArrayList values = new ArrayList();
	
		if(teamLead.getIHcpId()!= null)
		{
			condStr.append(andStr + " ct.leadHCP.id = :id_Hcp"); 
			markers.add("id_Hcp");
			values.add(teamLead.getIHcpId());
			andStr = " and ";

			condStr.append(andStr + " ct.isActive = :isActive");
			markers.add("isActive");
			values.add(new Boolean(true));		
			andStr = " and ";
		}	
		
		if (andStr.equals(" and "))
			hql += " where ";
	
		hql += condStr.toString();
		
		ClinicalTeamVoCollection voClinicalTeamColl = new ClinicalTeamVoCollection();
		
		voClinicalTeamColl = ClinicalTeamVoAssembler.createClinicalTeamVoCollectionFromClinicalTeam(factory.find(hql, markers, values));
		
		if(voClinicalTeamColl == null)
			return null;
		else
			return voClinicalTeamColl;
	}

	
}
