//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseDiagnosisComplicationsImpl extends DomainImpl implements ims.clinical.domain.DiagnosisComplications, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetDiagnosisVo(ims.core.clinical.vo.PatientDiagnosisRefVo patdiagrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationsContact(ims.core.admin.vo.ClinicalContactRefVo clinicalcontactrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationsPatient(ims.core.patient.vo.PatientRefVo patrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistMembersOfStaff(ims.core.vo.MemberOfStaffShortVo filter)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistMedics(ims.core.vo.HcpFilter filter)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientComplications(ims.core.patient.vo.PatientRefVo patrefvo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientDiagnoses(ims.core.patient.vo.PatientRefVo patrefvo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistContactComplications(ims.core.admin.vo.ClinicalContactRefVo clinicalcontactrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistContactDiagnoses(ims.core.admin.vo.ClinicalContactRefVo clinicalcontactrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationsCareContext(ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistCareContextComplications(ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistCareContextDiagnoses(ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationEpisodeOfCare(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistEpisodeOfCareComplications(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistEpisodeOfCareDiagnoses(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationCareSpell(ims.core.admin.vo.CareSpellRefVo careSpellRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistCareSpellDiagnoses(ims.core.admin.vo.CareSpellRefVo careSpellRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistCareSpellComplications(ims.core.admin.vo.CareSpellRefVo careSpellRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistHotListDiagnosis(String name, ims.core.vo.lookups.Specialty specialty)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationEpisodeOfCarePlusUnresolved(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo, ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveClinicalDiAssociation(ims.clinical.vo.ClinicalDIAssociationVoCollection list)
	{
	}

	@SuppressWarnings("unused")
	public void validategetDiagnosisShortVo(ims.core.clinical.vo.PatientDiagnosisRefVo patientDiagnosisRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveDiagnosisVo(ims.core.vo.PatientDiagnosisVo voDiagnosis, ims.core.vo.PatientShort patientShortVo, Boolean savePMH)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationEpisodeOfCareAndUnresolved(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo, ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validatecheckIfClinicalCDIAssociationsExist(ims.core.clinical.vo.PatientDiagnosisRefVo voPatientDiagnosis)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationsExcludeResolvedByPatient(ims.core.patient.vo.PatientRefVo voPatRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationsByPatient(ims.core.patient.vo.PatientRefVo voPatRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosisComplicationEpisodeOfCareForCancerDiagnosis(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetAppUser(ims.admin.vo.AppUserVo user)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPIDDiagnosisInfo(ims.core.admin.vo.CareContextRefVo careContextRefVo, ims.core.admin.vo.EpisodeOfCareRefVo episodeRefVo)
	{
	}
}
