//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.demoreferraldetails;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbStatusLookup();
	abstract protected void defaultcmbStatusLookupValue();
	abstract protected void bindcmbDisciplineLookup();
	abstract protected void defaultcmbDisciplineLookupValue();
	abstract protected void bindcmbSourceofReferralLookup();
	abstract protected void defaultcmbSourceofReferralLookupValue();
	abstract protected void bindcmbReasonReferralLookup();
	abstract protected void defaultcmbReasonReferralLookupValue();
	abstract protected void bindcmbSpecialtyCodeLookup();
	abstract protected void defaultcmbSpecialtyCodeLookupValue();
	abstract protected void bindcmbPriorityLookup();
	abstract protected void defaultcmbPriorityLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbLocationsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbStatusValueSet(Object value);
	abstract protected void oncmbDisciplineValueSet(Object value);
	abstract protected void oncmbSourceofReferralValueSet(Object value);
	abstract protected void onCmbSourceofReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbReasonReferralValueSet(Object value);
	abstract protected void onChkSupplyHCPDetailsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbReferredToTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbReferredByValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbReferredByTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSpecialtyCodeValueSet(Object value);
	abstract protected void oncmbPriorityValueSet(Object value);
	abstract protected void onBtnFavouritesClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnClose().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseClick();
			}
		});
		this.form.lyr().tabReferralDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrtabReferralDetailsActivated();
			}
		});
		this.form.lyr().tabAssessment().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrtabAssessmentActivated();
			}
		});
		this.form.lyr().tabReferralDetails().cmbLocations().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbLocationsValueChanged();
			}
		});
		this.form.lyr().tabReferralDetails().cmbStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbStatusValueSet(value);
			}
		});
		this.form.lyr().tabReferralDetails().cmbDiscipline().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDisciplineValueSet(value);
			}
		});
		this.form.lyr().tabReferralDetails().cmbSourceofReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceofReferralValueSet(value);
			}
		});
		this.form.lyr().tabReferralDetails().cmbSourceofReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSourceofReferralValueChanged();
			}
		});
		this.form.lyr().tabReferralDetails().cmbReasonReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReasonReferralValueSet(value);
			}
		});
		this.form.lyr().tabReferralDetails().chkSupplyHCPDetails().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSupplyHCPDetailsValueChanged();
			}
		});
		this.form.lyr().tabReferralDetails().qmbReferredTo().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbReferredToTextSubmited(value);
			}
		});
		this.form.lyr().tabReferralDetails().qmbReferredBy().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbReferredByValueChanged();
			}
		});
		this.form.lyr().tabReferralDetails().qmbReferredBy().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbReferredByTextSubmited(value);
			}
		});
		this.form.lyr().tabReferralDetails().cmbSpecialtyCode().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSpecialtyCodeValueSet(value);
			}
		});
		this.form.lyr().tabReferralDetails().cmbPriority().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPriorityValueSet(value);
			}
		});
		this.form.lyr().tabAssessment().btnFavourites().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnFavouritesClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbStatusLookup();
		bindcmbDisciplineLookup();
		bindcmbSourceofReferralLookup();
		bindcmbReasonReferralLookup();
		bindcmbSpecialtyCodeLookup();
		bindcmbPriorityLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbStatusLookup();
		bindcmbDisciplineLookup();
		bindcmbSourceofReferralLookup();
		bindcmbReasonReferralLookup();
		bindcmbSpecialtyCodeLookup();
		bindcmbPriorityLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbStatusLookupValue();
		defaultcmbDisciplineLookupValue();
		defaultcmbSourceofReferralLookupValue();
		defaultcmbReasonReferralLookupValue();
		defaultcmbSpecialtyCodeLookupValue();
		defaultcmbPriorityLookupValue();
	}
	private void onlyrtabReferralDetailsActivated()
	{
		this.form.lyr().showtabReferralDetails();
	}
	private void onlyrtabAssessmentActivated()
	{
		this.form.lyr().showtabAssessment();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
