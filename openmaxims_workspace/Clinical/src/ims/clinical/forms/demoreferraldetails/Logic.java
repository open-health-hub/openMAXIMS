//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Peter Martin using IMS Development Environment (version 1.62 build 2929.28798)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.clinical.forms.demoreferraldetails;

import ims.admin.vo.PracticeSearchCriteriaVo;
import ims.assessment.vo.GraphicAssessmentVo;
import ims.assessment.vo.PatientAssessmentDataVo;
import ims.assessment.vo.PatientAssessmentVo;
import ims.assessment.vo.UserAssessmentVo;
import ims.clinical.vo.ReferralsRecordingVo;
import ims.clinical.vo.SuppliedReferralDetailsVo;
import ims.clinical.vo.lookups.PrimaryPreceeding;
import ims.clinical.vo.lookups.ReferralSource;
import ims.core.resource.people.vo.MemberOfStaffRefVo;
import ims.core.vo.AuthoringInformationVo;
import ims.core.vo.GpShortVo;
import ims.core.vo.GpShortVoCollection;
import ims.core.vo.Hcp;
import ims.core.vo.HcpCollection;
import ims.core.vo.HcpFilter;
import ims.core.vo.HcpLiteVo;
import ims.core.vo.LocShortVo;
import ims.core.vo.LocShortVoCollection;
import ims.core.vo.MedicVo;
import ims.core.vo.MemberOfStaffShortVo;
import ims.core.vo.MemberOfStaffShortVoCollection;
import ims.core.vo.OrgLiteVo;
import ims.core.vo.OrganisationVo;
import ims.core.vo.PatientAssessmentInfoVo;
import ims.core.vo.PersonName;
import ims.core.vo.lookups.HcpDisType;
import ims.core.vo.lookups.PatientAssessmentStatusReason;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.CodingRuntimeException;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.DateTime;
import ims.clinical.vo.lookups.ReferralCategory;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		FormMode mode = FormMode.VIEW;
        if (args != null && args.length == 1)
        {
                  if (args[0] instanceof FormMode)
                              mode = (FormMode) args[0];
        }
        form.setMode(mode);
        
		initialise();
				
	}
	private void initialise() {
		form.lyr().tabReferralDetails().qmbReferredBy().setVisible(true);
		form.lyr().tabReferralDetails().cmbLocations().setVisible(true);
		form.lyr().tabReferralDetails().lblReferredBy().setVisible(true);
		form.lyr().tabReferralDetails().lblHCPName().setVisible(false);
		form.lyr().tabReferralDetails().txtHCPName().setVisible(false);
		form.lyr().tabReferralDetails().txtLocation().setVisible(false);
		if(form.getMode().equals(FormMode.EDIT)){
			form.lyr().tabReferralDetails().txtAddress().setEnabled(false);
			form.lyr().tabReferralDetails().txtWorkPhone().setEnabled(false);
			form.lyr().tabReferralDetails().txtEmail().setEnabled(false);
			form.lyr().tabReferralDetails().txtMobilePhone().setEnabled(false);
			
			form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(true);
			form.lyr().tabReferralDetails().cmbLocations().setEnabled(true);
		}
		else if(form.getMode().equals(FormMode.VIEW)){
			form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(false);
			form.lyr().tabReferralDetails().cmbLocations().setEnabled(false);
		}		
		
		open();
	}
	
	private void open() 
	{
		clearScreen();
			
		//updateContextMenus();
		ReferralsRecordingVo voRR = null;
		if(form.getGlobalContext().Clinical.getSelectedReferralRecordingVoIsNotNull())
			voRR = domain.getReferralRecording(form.getGlobalContext().Clinical.getSelectedReferralRecordingVo());//.getPrimaryPreecedingReferralRecording(form.getGlobalContext().Clinical.getSelectedReferralRecordingVo().getCareSpell());
		else if(form.getLocalContext().getSelectedReferralIsNotNull() && form.getLocalContext().getSelectedReferral().getID_ReferralsRecordingIsNotNull())
			voRR = domain.getReferralRecording(form.getLocalContext().getSelectedReferral());
		if (voRR != null)
		{
			form.getLocalContext().setSelectedReferral(voRR);

			populateScreenFromData(voRR);
		}
		
		if(form.getMode().equals(FormMode.VIEW))
		{
			form.btnNew().setEnabled(voRR == null);
			form.btnNew().setVisible(true);
			form.btnEdit().setEnabled(voRR != null);
			form.btnEdit().setVisible(true);
			
			if(engine.getFormName().equals(form.getForms().Clinical.DemoreferralDetailsDialog))
				form.btnClose().setVisible(true);
			else
				form.btnClose().setVisible(false);
				
			
		}
	}

	protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
	{
		if (form.getMode().equals(FormMode.EDIT) && formName.equals(form.getForms().Assessment.AssessmentFavourites) && result.equals(DialogResult.OK))
		{
			if ( form.getGlobalContext().Core.getSelectedGraphicAssessmentVoIsNotNull())
			{
				form.getLocalContext().setGraphicalUserAssessment(form.getGlobalContext().Core.getSelectedGraphicAssessmentVo());
				form.getLocalContext().setUserAssessmentVo(null);

				PatientAssessmentVo paVoPre = populatePatientAssessmentFromGraphicalUserAssessmentShort(form.getLocalContext().getGraphicalUserAssessment());
				//WDEV-11366
				form.lyr().tabAssessment().customControlAssessment().setPatientAssessment(paVoPre,false,PatientAssessmentInfoVo.getInstance(form.getGlobalContext().Core.getPatientShort()));
			}
			else if ( form.getGlobalContext().Core.getSelectedUserAssessmentVoIsNotNull())
			{
				form.getLocalContext().setUserAssessmentVo(form.getGlobalContext().Core.getSelectedUserAssessmentVo());
				form.getLocalContext().setGraphicalUserAssessment(null);

				if(form.getLocalContext().getUserAssessmentVo() != null)
				{
					PatientAssessmentVo paVoPre = populatePatientAssessmentFromUserAssessmentShort(form.getLocalContext().getUserAssessmentVo());
					//WDEV-11366
					form.lyr().tabAssessment().customControlAssessment().setPatientAssessment(paVoPre,false,PatientAssessmentInfoVo.getInstance(form.getGlobalContext().Core.getPatientShort()));
				}
			}
			else
			{
				form.getLocalContext().setGraphicalUserAssessment(null);
				form.getLocalContext().setUserAssessmentVo(null);
			}
			
		}
	}

	private PatientAssessmentVo populatePatientAssessmentFromGraphicalUserAssessmentShort(GraphicAssessmentVo voGA) {
		if(voGA == null)
			throw new CodingRuntimeException("No GraphicAssessmentShortVo provided");
		
		PatientAssessmentVo voPatientAssessment = new PatientAssessmentVo();
		voPatientAssessment.setCareContext(form.getGlobalContext().Core.getCurrentCareContext());
		voPatientAssessment.setClinicalContact(form.getGlobalContext().Core.getCurrentClinicalContact());
		voPatientAssessment.setStatus(PatientAssessmentStatusReason.NOTCOMMENCED);
		AuthoringInformationVo voAuthoringInformation = new AuthoringInformationVo(); 
		voAuthoringInformation.setAuthoringDateTime(new DateTime());
		if (domain.getHcpUser() != null)
		{
			Hcp hcpVo = (Hcp) domain.getHcpUser();
			HcpLiteVo liteVo = domain.getHcpLiteById(hcpVo);
			voAuthoringInformation.setAuthoringHcp(liteVo);
		}
		voPatientAssessment.setAuthoringInformation(voAuthoringInformation);
			
		//Patient Assessment Data
		PatientAssessmentDataVo voPatientAssessmentData = new PatientAssessmentDataVo();
		voPatientAssessmentData.setGraphic(voGA);
		voPatientAssessmentData.setUserAssessment(null);
		voPatientAssessment.setAssessmentData(voPatientAssessmentData);
			
		return voPatientAssessment;
	}
	protected void onFormModeChanged()
	{
		if(form.getMode().equals(FormMode.VIEW))
			form.lyr().tabAssessment().customControlAssessment().setReadOnly(Boolean.TRUE);
		else
			form.lyr().tabAssessment().customControlAssessment().setReadOnly(Boolean.FALSE);
	}
	
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{
		ReferralsRecordingVo rrVo = form.getLocalContext().getSelectedReferral();
		if (rrVo == null)
			rrVo = new ReferralsRecordingVo();
		
		rrVo = populateDataFromScreen(rrVo);

		//Top half of screen
		rrVo.setPrimaryPreceeding(PrimaryPreceeding.PRIMARY);
		rrVo.setReferralCategory(ReferralCategory.PRECEEDEDEPISODE);
		
		if (rrVo.getClinicalContact() == null)
			rrVo.setClinicalContact(form.getGlobalContext().Core.getCurrentClinicalContact());
		
		if (rrVo.getCareContext() == null)
			rrVo.setCareContext(form.getGlobalContext().Core.getCurrentCareContext());

		if (rrVo.getCareSpell() == null)
			rrVo.setCareSpell(form.getGlobalContext().Core.getCurrentCareContext().getEpisodeOfCare().getCareSpell());
		
		//Fill in the mandatory AuthoringInfo field. Dont bother getting value for AuthoringHcp......
		//it would need a domain call and is equivalent to the RecordingMOS value that is saved.
		if (rrVo.getAuthoringInfo() == null)
		{
			AuthoringInformationVo authoring = new AuthoringInformationVo();
			if (domain.getHcpUser() != null)
			{
				Hcp hcpVo = (Hcp) domain.getHcpUser();
				HcpLiteVo liteVo = domain.getHcpLiteById(hcpVo);
				authoring.setAuthoringHcp(liteVo);
			}
			authoring.setAuthoringDateTime(new DateTime());
			rrVo.setAuthoringInfo(authoring);
		}
		
		try 
		{
			String[] errors = rrVo.validate();
			if (errors != null)
			{
				engine.showErrors(errors);
				return;
			}
			
			rrVo = domain.saveReferralsRecording(rrVo);
			
			form.getLocalContext().setSelectedReferral(rrVo);
		} 
		catch (StaleObjectException e) 
		{
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		form.setMode(FormMode.VIEW);
		open();
	}
	
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.setMode(FormMode.VIEW);
		
		open();
	}
	@Override
	protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.setMode(FormMode.EDIT);
		form.lyr().showtabReferralDetails();
		
		if(!form.lyr().tabReferralDetails().chkSupplyHCPDetails().getValue()){
			form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(true);
			form.lyr().tabReferralDetails().cmbLocations().setEnabled(true);
		}
		else{
			form.lyr().tabReferralDetails().txtHCPName().setEnabled(true);
			form.lyr().tabReferralDetails().txtAddress().setEnabled(true);
			form.lyr().tabReferralDetails().txtLocation().setEnabled(true);
			form.lyr().tabReferralDetails().txtWorkPhone().setEnabled(true);
			form.lyr().tabReferralDetails().txtEmail().setEnabled(true);
			form.lyr().tabReferralDetails().txtMobilePhone().setEnabled(true);
		}

	}
	@Override
	protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.setMode(FormMode.EDIT);
		form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(true);
		form.lyr().tabReferralDetails().cmbLocations().setEnabled(true);
		
		clearScreen();
		form.lyr().showtabReferralDetails();
		form.getLocalContext().setSelectedReferral(new ReferralsRecordingVo());
//		form.customControlAuthoringInfo().initializeComponent();
		if (engine.getLoggedInUser().getMosId() != null)
		{
			MemberOfStaffRefVo voRef = new MemberOfStaffRefVo();
			voRef.setID_MemberOfStaff(engine.getLoggedInUser().getMosId());
			MemberOfStaffShortVo voMOSShort = domain.getMemberOfStaff(voRef);
			form.lyr().tabReferralDetails().txtRecordingUser().setValue(voMOSShort.getNameIsNotNull() ? (voMOSShort.getName().getTitleIsNotNull() ? voMOSShort.getName().getTitle() : "" )+ " " + voMOSShort.getName().getForename() + " " + voMOSShort.getName().getSurname() : "");
			
			form.getLocalContext().setLoggedInMOS(voMOSShort);
		}
		
		form.lyr().tabReferralDetails().dtimRecordingDate().setValue(new DateTime());//getAuthoringInfo());

		if (form.getLocalContext().getUserAssessmentVo() != null)
		{
			PatientAssessmentVo voPatientAssessmentVo = populatePatientAssessmentFromUserAssessmentShort(form.getLocalContext().getUserAssessmentVo());
			form.lyr().tabAssessment().customControlAssessment().setPatientAssessment(voPatientAssessmentVo);
		}
		
	}

	private PatientAssessmentVo populatePatientAssessmentFromUserAssessmentShort(UserAssessmentVo voUA) {
		if(voUA == null)
			throw new CodingRuntimeException("No UserAssessmentShortVo provided");
		
		PatientAssessmentVo voPatientAssessment = new PatientAssessmentVo();
		voPatientAssessment.setCareContext(form.getGlobalContext().Core.getCurrentCareContext());
		voPatientAssessment.setClinicalContact(form.getGlobalContext().Core.getCurrentClinicalContact());
		voPatientAssessment.setStatus(PatientAssessmentStatusReason.NOTCOMMENCED);
		AuthoringInformationVo voAuthoringInformation = new AuthoringInformationVo(); 
		voAuthoringInformation.setAuthoringDateTime(new DateTime());
		if (domain.getHcpUser() != null)
		{
			Hcp hcpVo = (Hcp) domain.getHcpUser();
			HcpLiteVo liteVo = domain.getHcpLiteById(hcpVo);
			voAuthoringInformation.setAuthoringHcp(liteVo);
		}
		voPatientAssessment.setAuthoringInformation(voAuthoringInformation);
		//form.lyr().tabReferralDetails().customControlAuthoringInfo().getValue());
			
		//Patient Assessment Data
		PatientAssessmentDataVo voPatientAssessmentData = new PatientAssessmentDataVo();
		voPatientAssessmentData.setGraphic(null);
		voPatientAssessmentData.setUserAssessment(voUA);
		voPatientAssessment.setAssessmentData(voPatientAssessmentData);
			
		return voPatientAssessment;
	}
	private void clearScreen() 
	{
		//form.lyr().tabReferralDetails().grdPreceedingReferrals().getRows().clear();
		
		form.lyr().tabReferralDetails().cmbSourceofReferral().setValue(null);
		form.lyr().tabReferralDetails().qmbReferredBy().setValue(null);
		form.lyr().tabReferralDetails().qmbReferredBy().clear();
		form.lyr().tabReferralDetails().cmbPriority().setValue(null);
		form.lyr().tabReferralDetails().dteDecisionToRefer().setValue(null);
		form.lyr().tabReferralDetails().dteRecieptReferral().setValue(null);
		form.lyr().tabReferralDetails().qmbReferredTo().setValue(null);
		form.lyr().tabReferralDetails().cmbSpecialtyCode().setValue(null);
		form.lyr().tabReferralDetails().cmbDiscipline().setValue(null);
		form.lyr().tabReferralDetails().txtDelayResonComments().setValue(null);
		
		form.lyr().tabAssessment().customControlAssessment().clearComponent();
	}

	private void populateScreenFromData(ReferralsRecordingVo rrVo) 
	{
		if (rrVo == null)
			return;
		
		form.lyr().tabReferralDetails().cmbSourceofReferral().setValue(rrVo.getReferralSource());
		
		if(rrVo.getSuppliedReferralDetails()==null){
			
			enableReferralDetailsControls(false);
			
			form.lyr().tabReferralDetails().chkSupplyHCPDetails().setValue(false);
			
			if (rrVo.getReferredByIsNotNull()) 
			{
				form.lyr().tabReferralDetails().qmbReferredBy().setValue(rrVo.getReferredBy());
				if (form.lyr().tabReferralDetails().qmbReferredBy().getValue() == null)
				{
					form.lyr().tabReferralDetails().qmbReferredBy().newRow(rrVo.getReferredBy(), rrVo.getReferredBy().getName().toString());
					form.lyr().tabReferralDetails().qmbReferredBy().setValue(rrVo.getReferredBy());
					
					try {
						onQmbReferredByValueChanged();
					} catch (PresentationLogicException e) {
						e.printStackTrace();
					}
				}
			}
			else if (rrVo.getReferredByGPIsNotNull()) 
			{
				form.lyr().tabReferralDetails().qmbReferredBy().setValue(rrVo.getReferredByGP());
				if (form.lyr().tabReferralDetails().qmbReferredBy().getValue() == null)
				{
					form.lyr().tabReferralDetails().qmbReferredBy().newRow(rrVo.getReferredByGP(), rrVo.getReferredByGP().getName().toString());
					form.lyr().tabReferralDetails().qmbReferredBy().setValue(rrVo.getReferredByGP());
				
					try {
						onQmbReferredByValueChanged();
					} catch (PresentationLogicException e) {
						e.printStackTrace();
					}
				}
			}
		}
		else{
			form.lyr().tabReferralDetails().chkSupplyHCPDetails().setValue(true);
			
			enableReferralDetailsControls(true);
			form.lyr().tabReferralDetails().qmbReferredBy().setVisible(false);
			form.lyr().tabReferralDetails().cmbLocations().setVisible(false);
			form.lyr().tabReferralDetails().lblReferredBy().setVisible(false);
			form.lyr().tabReferralDetails().lblHCPName().setVisible(true);
			form.lyr().tabReferralDetails().txtHCPName().setVisible(true);
			form.lyr().tabReferralDetails().txtLocation().setVisible(true);
			if(form.getMode().equals(FormMode.EDIT)){
				form.lyr().tabReferralDetails().txtAddress().setEnabled(true);
				form.lyr().tabReferralDetails().txtWorkPhone().setEnabled(true);
				form.lyr().tabReferralDetails().txtEmail().setEnabled(true);
				form.lyr().tabReferralDetails().txtMobilePhone().setEnabled(true);
				
				form.lyr().tabReferralDetails().txtHCPName().setEnabled(true);
				form.lyr().tabReferralDetails().txtLocation().setEnabled(true);
			}
			else{
				form.lyr().tabReferralDetails().txtHCPName().setEnabled(false);
				form.lyr().tabReferralDetails().txtLocation().setEnabled(false);
			}
			
			SuppliedReferralDetailsVo voSuppliedReferralDetails = rrVo.getSuppliedReferralDetails();
			if(voSuppliedReferralDetails.getNameIsNotNull())
				form.lyr().tabReferralDetails().txtHCPName().setValue(voSuppliedReferralDetails.getName());
			if(voSuppliedReferralDetails.getServiceLocationIsNotNull())
				form.lyr().tabReferralDetails().txtLocation().setValue(voSuppliedReferralDetails.getServiceLocation());
			if(voSuppliedReferralDetails.getAddressIsNotNull())
				form.lyr().tabReferralDetails().txtAddress().setValue(voSuppliedReferralDetails.getAddress());
			if(voSuppliedReferralDetails.getWorkPhoneIsNotNull())
				form.lyr().tabReferralDetails().txtWorkPhone().setValue(voSuppliedReferralDetails.getWorkPhone());
			if(voSuppliedReferralDetails.getMobilePhoneIsNotNull())
				form.lyr().tabReferralDetails().txtMobilePhone().setValue(voSuppliedReferralDetails.getMobilePhone());
			if(voSuppliedReferralDetails.getEmailAddressIsNotNull())
				form.lyr().tabReferralDetails().txtEmail().setValue(voSuppliedReferralDetails.getEmailAddress());
		}
		
		form.lyr().tabReferralDetails().cmbPriority().setValue(rrVo.getReferralPriority());
		form.lyr().tabReferralDetails().dteDecisionToRefer().setValue(rrVo.getDateSent());
		form.lyr().tabReferralDetails().dteRecieptReferral().setValue(rrVo.getDateReceived());
		if (form.lyr().tabReferralDetails().qmbReferredBy().getValue() == null && rrVo.getReferredBy() != null)
		{
			form.lyr().tabReferralDetails().qmbReferredBy().newRow(rrVo.getReferralHCP(), rrVo.getReferredBy().getName().toString());
			form.lyr().tabReferralDetails().qmbReferredBy().setValue(rrVo.getReferredBy());
			try {
				onQmbReferredByValueChanged();
			} catch (PresentationLogicException e) {
				e.printStackTrace();
			}
		}
		if (form.lyr().tabReferralDetails().qmbReferredTo().getValue() == null && rrVo.getReferralHCP() != null)
		{
			form.lyr().tabReferralDetails().qmbReferredTo().newRow(rrVo.getReferralHCP(), rrVo.getReferralHCP().getName().toString());
			form.lyr().tabReferralDetails().qmbReferredTo().setValue(rrVo.getReferralHCP());
		}
		form.lyr().tabReferralDetails().cmbSpecialtyCode().setValue(rrVo.getSpecialtyFunctionCode());
		form.lyr().tabReferralDetails().txtDelayResonComments().setValue(rrVo.getDetails());
		form.lyr().tabReferralDetails().cmbReasonReferral().setValue(rrVo.getReasonForReferral());
		form.lyr().tabReferralDetails().cmbDiscipline().setValue(rrVo.getDiscipline());
		form.lyr().tabReferralDetails().cmbStatus().setValue(rrVo.getReferralStatus());
	
		if(rrVo.getReferredtoLocationIsNotNull()){
			form.lyr().tabReferralDetails().cmbLocations().setValue((LocShortVo)rrVo.getReferredtoLocation()); 
		}
		else if(rrVo.getRefOrgaCodeIsNotNull()){
			form.lyr().tabReferralDetails().cmbLocations().setValue((OrgLiteVo)rrVo.getRefOrgaCode());
		}
	
		form.lyr().tabReferralDetails().dtimRecordingDate().setValue(rrVo.getSysInfo().getCreationDateTime());//getAuthoringInfo());
		form.lyr().tabReferralDetails().txtRecordingUser().setValue(rrVo.getRecordingMOSIsNotNull() && rrVo.getRecordingMOS().getNameIsNotNull() ? (rrVo.getRecordingMOS().getName().getTitleIsNotNull() ? rrVo.getRecordingMOS().getName().getTitle() : "" )+ " " + rrVo.getRecordingMOS().getName().getForename() + " " + rrVo.getRecordingMOS().getName().getSurname() : "");
		
						
		if (rrVo.getAssessment() != null)
		{
			form.lyr().tabAssessment().customControlAssessment().clearComponent();
			form.lyr().tabAssessment().customControlAssessment().setPatientAssessment(rrVo.getAssessment());
			/*if (form.getLocalContext().getUserAssessmentVoIsNotNull())
			{
				PatientAssessmentVo newAssessment = new PatientAssessmentVo();
				PatientAssessmentDataVo assessmentData = new PatientAssessmentDataVo();	
				UserAssessmentVo userAssessment = form.getLocalContext().getUserAssessmentVo();
				assessmentData.setUserAssessment(userAssessment);
				assessmentData.setGroupQuestionWidth(userAssessment.getGroupQuestionWidth());
				newAssessment.setAssessmentData(assessmentData);	
	
				form.lyr().tabAssessment().customControlAssessment().setPatientAssessment(newAssessment);
			}		*/
		}
			
	}

	private void enableReferralDetailsControls(boolean bEnable) {
		form.lyr().tabReferralDetails().qmbReferredBy().setVisible(true);
		form.lyr().tabReferralDetails().cmbLocations().setVisible(true);
		form.lyr().tabReferralDetails().lblReferredBy().setVisible(true);
		form.lyr().tabReferralDetails().lblHCPName().setVisible(bEnable);
		form.lyr().tabReferralDetails().txtHCPName().setVisible(bEnable);
		form.lyr().tabReferralDetails().txtLocation().setVisible(bEnable);
		if(form.getMode().equals(FormMode.EDIT)){
			form.lyr().tabReferralDetails().txtAddress().setEnabled(bEnable);
			form.lyr().tabReferralDetails().txtWorkPhone().setEnabled(false);
			form.lyr().tabReferralDetails().txtEmail().setEnabled(false);
			form.lyr().tabReferralDetails().txtMobilePhone().setEnabled(false);
			
			form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(true);
			form.lyr().tabReferralDetails().cmbLocations().setEnabled(true);
		}
		else{
			form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(false);
			form.lyr().tabReferralDetails().cmbLocations().setEnabled(false);
		}		
	}
	private ReferralsRecordingVo populateDataFromScreen(ReferralsRecordingVo rrVo) 
	{
		rrVo.setReferralSource(form.lyr().tabReferralDetails().cmbSourceofReferral().getValue());
		
		if(!form.lyr().tabReferralDetails().chkSupplyHCPDetails().getValue()){
			if (form.lyr().tabReferralDetails().qmbReferredBy().getValue() instanceof MedicVo) 
			{
				rrVo.setReferredBy((Hcp) form.lyr().tabReferralDetails().qmbReferredBy().getValue());
				rrVo.setReferredByGP(null);
			}
			else if (form.lyr().tabReferralDetails().qmbReferredBy().getValue() instanceof GpShortVo) 
			{
				rrVo.setReferredByGP((GpShortVo)form.lyr().tabReferralDetails().qmbReferredBy().getValue());
				rrVo.setReferredBy(null);
			}
			
			if(form.lyr().tabReferralDetails().cmbLocations().getValue() instanceof LocShortVo){
				rrVo.setReferredtoLocation((LocShortVo)form.lyr().tabReferralDetails().cmbLocations().getValue());
				rrVo.setRefOrgaCode(null);
			}
			else if(form.lyr().tabReferralDetails().cmbLocations().getValue() instanceof OrgLiteVo){
				rrVo.setReferredtoLocation(null);
				rrVo.setRefOrgaCode((OrgLiteVo)form.lyr().tabReferralDetails().cmbLocations().getValue());
			}
			
			rrVo.setSuppliedReferralDetails(null);
		}
		else{
			SuppliedReferralDetailsVo voSuppliedReferralDetails = new SuppliedReferralDetailsVo();
			voSuppliedReferralDetails.setName(form.lyr().tabReferralDetails().txtHCPName().getValue());
			voSuppliedReferralDetails.setServiceLocation(form.lyr().tabReferralDetails().txtLocation().getValue());
			voSuppliedReferralDetails.setAddress(form.lyr().tabReferralDetails().txtAddress().getValue());
			voSuppliedReferralDetails.setWorkPhone(form.lyr().tabReferralDetails().txtWorkPhone().getValue());
			voSuppliedReferralDetails.setMobilePhone(form.lyr().tabReferralDetails().txtMobilePhone().getValue());
			voSuppliedReferralDetails.setEmailAddress(form.lyr().tabReferralDetails().txtEmail().getValue());
			rrVo.setSuppliedReferralDetails(voSuppliedReferralDetails);
			
			rrVo.setReferredtoLocation(null);
			rrVo.setReferredByGP(null);
			rrVo.setReferredBy(null);
		}
		 
		rrVo.setReferralPriority(form.lyr().tabReferralDetails().cmbPriority().getValue());
		rrVo.setDateSent(form.lyr().tabReferralDetails().dteDecisionToRefer().getValue());
		rrVo.setDateReceived(form.lyr().tabReferralDetails().dteRecieptReferral().getValue());
		rrVo.setReferralHCP(form.lyr().tabReferralDetails().qmbReferredTo().getValue());
		//rrVo.setReferredBy(form.lyr().tabReferralDetails().qmbHCPName().getValue());
		rrVo.setSpecialtyFunctionCode(form.lyr().tabReferralDetails().cmbSpecialtyCode().getValue());
		rrVo.setReasonForReferral(form.lyr().tabReferralDetails().cmbReasonReferral().getValue());
		rrVo.setDiscipline(form.lyr().tabReferralDetails().cmbDiscipline().getValue());
		rrVo.setReferralStatus(form.lyr().tabReferralDetails().cmbStatus().getValue());
		rrVo.setDetails(form.lyr().tabReferralDetails().txtDelayResonComments().getValue());
		
		if (rrVo.getRecordingMOS() == null && form.getLocalContext().getLoggedInMOSIsNotNull())
			rrVo.setRecordingMOS(form.getLocalContext().getLoggedInMOS());

		rrVo.setAssessment(form.lyr().tabAssessment().customControlAssessment().getPatientAssessment());
		
		return rrVo;
	}

	protected void onQmbReferredByTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException
	{
		form.lyr().tabReferralDetails().qmbReferredBy().clear();
		
		if (form.lyr().tabReferralDetails().cmbSourceofReferral().getValue() != null && form.lyr().tabReferralDetails().cmbSourceofReferral().getValue().equals(ReferralSource.GPREFERRAL))
		{
			GpShortVoCollection gpColl = domain.listGPsBySurname(value);
			if(gpColl != null)
			{
				for (int i = 0; i < gpColl.size(); i++)
					form.lyr().tabReferralDetails().qmbReferredBy().newRow(gpColl.get(i), gpColl.get(i).toString());			

				if (gpColl.size() == 1)
				{
					form.lyr().tabReferralDetails().qmbReferredBy().setValue(gpColl.get(0));
					onQmbReferredByValueChanged();
				}
				else if (gpColl.size() > 1)
					form.lyr().tabReferralDetails().qmbReferredBy().showOpened();		
			}		
		}
		else
		{
			HcpFilter filter = new HcpFilter();
			PersonName name = new PersonName();
			name.setSurname(value);
			filter.setQueryName(name);
			filter.setHcpType(HcpDisType.MEDICAL);
			HcpCollection coll = domain.listHcps(filter, HcpDisType.MEDICAL);
			if(coll != null)
			{
				for (int i = 0; i < coll.size(); i++)
					form.lyr().tabReferralDetails().qmbReferredBy().newRow(coll.get(i), coll.get(i).toString());			

				if (coll.size() == 1){
					form.lyr().tabReferralDetails().qmbReferredBy().setValue(coll.get(0));
					onQmbReferredByValueChanged();
				}
				else if (coll.size() > 1)
					form.lyr().tabReferralDetails().qmbReferredBy().showOpened();		
			}		
		}
	}
	
	protected void onQmbReferringOrgTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException
	{
		if (form.lyr().tabReferralDetails().cmbSourceofReferral().getValue() != null && form.lyr().tabReferralDetails().cmbSourceofReferral().getValue().equals(ReferralSource.GPREFERRAL))
		{
			PracticeSearchCriteriaVo voGP = new PracticeSearchCriteriaVo();
			voGP.setName(value);
			voGP.setIsActive(new Boolean(true));
			
		}
		else
		{
			OrganisationVo voOrg = new OrganisationVo();
			voOrg.setName(value);
			
		}
	}
	
	@Override
	protected void onQmbReferredToTextSubmited(String value) throws PresentationLogicException 
	{
		form.lyr().tabReferralDetails().qmbReferredTo().clear();
		
		MemberOfStaffShortVo voMOS = new MemberOfStaffShortVo();
		PersonName personName = new PersonName();
		personName.setSurname(value);
		voMOS.setName(personName);
		voMOS.setIsActive(Boolean.TRUE);
		
		MemberOfStaffShortVoCollection coll = domain.listMembersOfStaff(voMOS);
		if(coll != null)
		{
			for (int i = 0; i < coll.size(); i++)
				form.lyr().tabReferralDetails().qmbReferredTo().newRow(coll.get(i), coll.get(i).toString());			

			if (coll.size() == 1)
				form.lyr().tabReferralDetails().qmbReferredTo().setValue(coll.get(0));
			else if (coll.size() > 1)
				form.lyr().tabReferralDetails().qmbReferredTo().showOpened();		
		}		
	}
	@Override
	protected void onQmbReferredByValueChanged() throws PresentationLogicException
	{
		loadLocationsForMos();
	}
	private void loadLocationsForMos() {
		
		form.lyr().tabReferralDetails().cmbLocations().clear();
		
		if(form.lyr().tabReferralDetails().qmbReferredBy().getValue() instanceof Hcp){
			Hcp voHcp = (Hcp) form.lyr().tabReferralDetails().qmbReferredBy().getValue();
	
			MemberOfStaffShortVo voMosShort = voHcp != null ? voHcp.getMos() : null;
				
			if (voMosShort != null)
			{
	
				LocShortVoCollection voLocShortVoColl = domain.listLocationsForMemberOfStaff(voHcp.getMos());
	
				if (voLocShortVoColl != null)
				{
					for (int i = 0; i < voLocShortVoColl.size(); i++)
					{
						if (voHcp.getMosIsNotNull())
						{
							form.lyr().tabReferralDetails().cmbLocations().newRow(voLocShortVoColl.get(i), voLocShortVoColl.get(i).getName());
							form.lyr().tabReferralDetails().cmbLocations().setValue(voLocShortVoColl.get(i));
						}
					}
	
				}
				
				form.lyr().tabReferralDetails().txtEmail().setValue(voMosShort.getEmailAddress());
				form.lyr().tabReferralDetails().txtMobilePhone().setValue(voMosShort.getMobile());
	
			}
		}
		else if(form.lyr().tabReferralDetails().qmbReferredBy().getValue() instanceof GpShortVo){
			GpShortVo voGpShort = (GpShortVo) form.lyr().tabReferralDetails().qmbReferredBy().getValue();
	
			for (int i = 0; i < voGpShort.getPractices().size(); i++)
			{
				form.lyr().tabReferralDetails().cmbLocations().newRow((OrgLiteVo)voGpShort.getPractices().get(i).getPractice(), voGpShort.getPractices().get(i).getPractice().getName());
				form.lyr().tabReferralDetails().cmbLocations().setValue(voGpShort.getPractices().get(i));
			}
	
			form.lyr().tabReferralDetails().txtEmail().setValue(voGpShort.getEmailAddress());
			form.lyr().tabReferralDetails().txtMobilePhone().setValue(voGpShort.getMobile());
		}
	}
	@Override
	protected void onCmbSourceofReferralValueChanged() throws PresentationLogicException 
	{
		form.lyr().tabReferralDetails().qmbReferredBy().clear();
		form.lyr().tabReferralDetails().qmbReferredBy().setValue(null);
		form.lyr().tabReferralDetails().cmbLocations().clear();
		form.lyr().tabReferralDetails().cmbLocations().setValue(null);
	}
	@Override
	protected void onChkSupplyHCPDetailsValueChanged() throws PresentationLogicException {
		boolean isHcpDetailsSupplied = form.lyr().tabReferralDetails().chkSupplyHCPDetails().getValue();
		
		form.lyr().tabReferralDetails().qmbReferredBy().setVisible(!isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().cmbLocations().setVisible(!isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().qmbReferredBy().setEnabled(!isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().cmbLocations().setEnabled(!isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().lblReferredBy().setVisible(!isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().lblHCPName().setVisible(isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().txtHCPName().setVisible(isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().txtLocation().setVisible(isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().txtHCPName().setEnabled(isHcpDetailsSupplied);
		form.lyr().tabReferralDetails().txtLocation().setEnabled(isHcpDetailsSupplied);
		if(form.getMode().equals(FormMode.EDIT)){
			form.lyr().tabReferralDetails().txtAddress().setEnabled(isHcpDetailsSupplied);
			form.lyr().tabReferralDetails().txtWorkPhone().setEnabled(isHcpDetailsSupplied);
			form.lyr().tabReferralDetails().txtEmail().setEnabled(isHcpDetailsSupplied);
			form.lyr().tabReferralDetails().txtMobilePhone().setEnabled(isHcpDetailsSupplied);
			if(!isHcpDetailsSupplied){
				form.lyr().tabReferralDetails().txtAddress().setValue("");
				form.lyr().tabReferralDetails().txtWorkPhone().setValue("");
				form.lyr().tabReferralDetails().txtEmail().setValue("");
				form.lyr().tabReferralDetails().txtMobilePhone().setValue("");				
			}
		}
		
	}
	
	@Override
	protected void onBtnFavouritesClick() throws PresentationLogicException {
		form.getGlobalContext().Core.setGraphicAssessmentsSelectable(false);
		form.getGlobalContext().Core.setStructuredAssessmentsSelectable(true);
		
		engine.open(form.getForms().Assessment.AssessmentFavourites);
		
	}
	@Override
	protected void onCmbLocationsValueChanged() throws PresentationLogicException {
		form.lyr().tabReferralDetails().txtAddress().setValue("");
		form.lyr().tabReferralDetails().txtWorkPhone().setValue("");
		
		if(form.lyr().tabReferralDetails().cmbLocations().getValue() instanceof LocShortVo){
			LocShortVo  voLoc = (LocShortVo) form.lyr().tabReferralDetails().cmbLocations().getValue();
			if (voLoc == null)
				return;
	
			if (voLoc.getAddressIsNotNull())
			{
				String strAddress = voLoc.getAddress().toDisplayStringForMultiLineTextBox();
				form.lyr().tabReferralDetails().txtAddress().setValue(strAddress);
				if(voLoc.getAddress().getPhoneIsNotNull())
					form.lyr().tabReferralDetails().txtWorkPhone().setValue(voLoc.getAddress().getPhone());
			
			}
		}
		else if(form.lyr().tabReferralDetails().cmbLocations().getValue() instanceof OrgLiteVo){
			OrgLiteVo  voOrgLite = (OrgLiteVo) form.lyr().tabReferralDetails().cmbLocations().getValue();
			if (voOrgLite == null)
				return;
	
			if (voOrgLite.getAddressIsNotNull())
			{
				String strAddress = voOrgLite.getAddress().toDisplayStringForMultiLineTextBox();
				form.lyr().tabReferralDetails().txtAddress().setValue(strAddress);
				if(voOrgLite.getAddress().getPhoneIsNotNull())
					form.lyr().tabReferralDetails().txtWorkPhone().setValue(voOrgLite.getAddress().getPhone());
			}
		}
	}
	@Override
	protected void onBtnCloseClick() throws PresentationLogicException {
		engine.close(DialogResult.OK);		
	}

}
