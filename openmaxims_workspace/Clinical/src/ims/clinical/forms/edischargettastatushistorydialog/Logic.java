//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Catalin Tomozei using IMS Development Environment (version 1.80 build 3958.21552)
// Copyright (C) 1995-2010 IMS MAXIMS. All rights reserved.

package ims.clinical.forms.edischargettastatushistorydialog;

import ims.clinical.forms.edischargettastatushistorydialog.GenForm.grdHistoryRow;
import ims.clinical.vo.TTAStatusVo;
import ims.clinical.vo.TTAStatusVoCollection;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.SortOrder;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		if (args != null && args.length > 0)
		{
			if (args[0] instanceof TTAStatusVoCollection)
			{
				populateDataFromScreen(((TTAStatusVoCollection)args[0]).sort(SortOrder.DESCENDING));			
			}			
		}
	}
	private void populateDataFromScreen(TTAStatusVoCollection ttaStatusVoCollection) 
	{
		for (int i = 0; i < ttaStatusVoCollection.size(); i++) 
		{
			TTAStatusVo status = ttaStatusVoCollection.get(i);
			grdHistoryRow row = form.grdHistory().getRows().newRow();
			row.setColDateTime(status.getStatusDateTimeIsNotNull() ? status.getStatusDateTime().toString() : null);
			row.setColUser(status.getAuthoringUserIsNotNull() ? status.getAuthoringUser().getName().toString() : null);
			row.setColStatus(status.getStatusIsNotNull() ? status.getStatus().getText() : null);
			if (status.getReasonForRejectionIsNotNull())			
				row.setColReason(status.getReasonForRejection());
			else if (status.getReasonForSuspensionIsNotNull())
				row.setColReason(status.getReasonForSuspension());
		}
	}
	@Override
	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.OK);
	}
}
