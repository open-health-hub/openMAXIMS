//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.dementiaassessmentform;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrStepsTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onCcStep1FindValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcAMTSValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloseFollowUpClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcAMTSFollowUpValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRecbrAMTSValueChanged() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormOpen(args);
			}
		});
		this.form.lyrSteps().tabPageStep1().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrStepstabPageStep1Activated();
			}
		});
		this.form.lyrSteps().tabPageStep2().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrStepstabPageStep2Activated();
			}
		});
		this.form.lyrSteps().tabPageFollowUp().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrStepstabPageFollowUpActivated();
			}
		});
		this.form.lyrSteps().tabPageStep1().setccStep1FindValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcStep1FindValueChanged();
			}
		});
		this.form.lyrSteps().tabPageStep2().btnClose().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseClick();
			}
		});
		this.form.lyrSteps().tabPageStep2().setccAMTSValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcAMTSValueChanged();
			}
		});
		this.form.lyrSteps().tabPageFollowUp().btnCloseFollowUp().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseFollowUpClick();
			}
		});
		this.form.lyrSteps().tabPageFollowUp().setccAMTSFollowUpValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcAMTSFollowUpValueChanged();
			}
		});
		this.form.lyrSteps().tabPageFollowUp().recbrAMTS().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRecbrAMTSValueChanged();
			}
		});
	}
	private void onlyrStepstabPageStep1Activated()
	{
		this.form.lyrSteps().showtabPageStep1();
		onlyrStepsTabChanged(this.form.lyrSteps().tabPageStep1());
	}
	private void onlyrStepstabPageStep2Activated()
	{
		this.form.lyrSteps().showtabPageStep2();
		onlyrStepsTabChanged(this.form.lyrSteps().tabPageStep2());
	}
	private void onlyrStepstabPageFollowUpActivated()
	{
		this.form.lyrSteps().showtabPageFollowUp();
		onlyrStepsTabChanged(this.form.lyrSteps().tabPageFollowUp());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
