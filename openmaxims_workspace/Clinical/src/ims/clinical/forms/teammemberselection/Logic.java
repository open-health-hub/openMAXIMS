//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Billy Mahon using IMS Development Environment (version 1.51 build 2463.19192)
// Copyright (C) 1995-2006 IMS MAXIMS plc. All rights reserved.

package ims.clinical.forms.teammemberselection;

import ims.clinical.forms.teammemberselection.GenForm;
import ims.core.vo.ClinicalTeamMemberVo;
import ims.core.vo.ClinicalTeamMemberVoCollection;
import ims.core.vo.ClinicalTeamVo;
import ims.core.vo.ClinicalTeamVoCollection;
import ims.core.vo.HcpLiteVo;
import ims.framework.enumerations.DialogResult;
import ims.vo.interfaces.IHcp;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException
	{
		open();
	}
	private void open() 
	{
		
		form.getLocalContext().setIHcp(form.getGlobalContext().Core.getEpisodeofCareShort().getResponsibleHCP());
		ClinicalTeamVoCollection collClinicalTeamVo = new ClinicalTeamVoCollection();
			
		collClinicalTeamVo = domain.listTeamLeadsMembers(form.getLocalContext().getIHcp());
		if(collClinicalTeamVo == null)
			return;
		
		populateScreen(collClinicalTeamVo);
	}
	private void populateScreen(ClinicalTeamVoCollection collClinicalTeamVo) 
	{
		form.cmbTeamLead().newRow(form.getLocalContext().getIHcp(), form.getLocalContext().getIHcp().toString());
		form.cmbTeamLead().setValue(form.getLocalContext().getIHcp());

		ClinicalTeamMemberVoCollection voTeamMemberColl = new ClinicalTeamMemberVoCollection();
		
		if (collClinicalTeamVo != null)
		{
			form.grdTeamMember().getRows().clear();
			GenForm.grdTeamMemberRow tempRow;
 			for (int i=0; i < collClinicalTeamVo.size(); i++)
			{
 				ClinicalTeamVo voClinicalTeam = collClinicalTeamVo.get(i);
 				
 				voTeamMemberColl = voClinicalTeam.getTeamMembers();
 				
 				for (int x=0; x < voTeamMemberColl.size(); x++)
 				{
 					ClinicalTeamMemberVo voTeamMember = voTeamMemberColl.get(x);
 					 
 					tempRow = form.grdTeamMember().getRows().newRow();
 					tempRow.setValue(voTeamMember);
 					
 					if(voTeamMember.getHCPIsNotNull())
 						tempRow.setcolTeamMember(voTeamMember.getHCP().toString());
 				} 				
			}
		}
	}
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	protected void onBtnOkClick() throws ims.framework.exceptions.PresentationLogicException
	{
		//go through list and add to vo
		GenForm.grdTeamMemberRow row;
		ClinicalTeamMemberVoCollection collTeamMemberVo = new ClinicalTeamMemberVoCollection();
		
		for(int i=0;i<form.grdTeamMember().getRows().size();i++)
		{
			row = form.grdTeamMember().getRows().get(i);
			if (row.getcolAttending() == true)
			{
				ClinicalTeamMemberVo voTeamMember = new ClinicalTeamMemberVo();					
				voTeamMember = row.getValue();
				
				collTeamMemberVo.add(voTeamMember);
			}
		}
		form.getGlobalContext().Clinical.setTeamMemberSelection(collTeamMemberVo);
		
		engine.close(DialogResult.OK);
	}
}
