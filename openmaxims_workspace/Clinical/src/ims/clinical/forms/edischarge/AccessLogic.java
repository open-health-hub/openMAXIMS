//#############################################################################
//#                                                                           #
//#  Copyright (C) <2014>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.70 build 3568.26741)
// Copyright (C) 1995-2009 IMS MAXIMS. All rights reserved.

package ims.clinical.forms.edischarge;

import ims.configuration.gen.ConfigFlag;
import ims.core.vo.lookups.ContextType;

import java.io.Serializable;

public final class AccessLogic extends BaseAccessLogic implements Serializable
{
	private static final long serialVersionUID = 1L;

	public boolean isAccessible()
	{
		if(!super.isAccessible())
			return false;

		if(! ConfigFlag.UI.ALLOW_IP_EPISODES_IN_EDISCHARGE_ONLY.getValue() )
			return true;
		else if(form.getGlobalContext().Core.getCurrentCareContextIsNotNull()
			&& form.getGlobalContext().Core.getCurrentCareContext().getContextIsNotNull()
			&& ! form.getGlobalContext().Core.getCurrentCareContext().getContext().equals(ContextType.INPATIENT)
			&& ConfigFlag.UI.ALLOW_IP_EPISODES_IN_EDISCHARGE_ONLY.getValue() )
			return false;
		
		return true;
	}
	public boolean isReadOnly()
	{
		if(super.isReadOnly())
			return true;

		// TODO: Add your conditions here.
		return false;
	}
}
